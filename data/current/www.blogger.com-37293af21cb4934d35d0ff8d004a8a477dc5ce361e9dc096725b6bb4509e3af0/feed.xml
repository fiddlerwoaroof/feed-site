<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet  href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0"><id>tag:blogger.com,1999:blog-1777990983847811806</id><updated>2022-11-14T11:18:39.884-08:00</updated><title type="text">Haskell for all</title><subtitle type="html"/><link rel="http://schemas.google.com/g/2005#feed" type="application/atom+xml" href="https://www.haskellforall.com/feeds/posts/default"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/"><link rel="hub" href="http://pubsubhubbub.appspot.com/"><link rel="next" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default?start-index=26&amp;max-results=25"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><generator version="7.00" uri="http://www.blogger.com">Blogger</generator><openSearch:totalResults>170</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-7096293096571919933</id><published>2022-10-24T05:26:00.003-07:00</published><updated>2022-10-24T05:26:45.820-07:00</updated><title type="text">How to correctly cache build-time dependencies using Nix</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:creator&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;How to correctly cache build-time dependencies using Nix&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;A guide to uploading Nix dependencies to a cache efficiently and reliably&quot; /&gt;  &lt;title&gt;caching&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       overflow-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }       h1 {         font-size: 1.8em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;       overflow-wrap: normal;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC ul {       padding-left: 1.3em;     }     #TOC &gt; ul {       padding-left: 0;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Professional Nix users often create a shared cache of Nix build products so that they can reuse build products created by continuous integration (CI). For example, CI might build Nix products for each main development branch of their project or even for every pull request and it would be nice if those build products could be shared with all developers via a cache.&lt;/p&gt;&lt;p&gt;However, uploading build products to a cache is a little non-trivial if you don’t already know the “best” solution, which is the subject of this post.&lt;/p&gt;&lt;p&gt;The solution described in this post is:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Simple&lt;/p&gt;&lt;p&gt;It only takes a few lines of Bash code because we use the Nix command-line interface idiomatically&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Efficient&lt;/p&gt;&lt;p&gt;It is very cheap to compute which build products to upload and requires no additional builds nor an exorbitant amount of disk space&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Accurate&lt;/p&gt;&lt;p&gt;It uploads the build products that most people would intuitively want to upload&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Note: Throughout this post I will be using the newer Nix command-line interface and flakes, which requires either adding this line to your &lt;code&gt;nix.conf&lt;/code&gt; file:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;extra-experimental-features = nix-command flakes&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and restarting your Nix daemon (if you have a multi-user Nix installation), or alternatively adding these flags to the beginning of all &lt;code&gt;nix&lt;/code&gt; commands throughout this post:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix &lt;span class=&quot;at&quot;&gt;--option&lt;/span&gt; extra-experimental-features &lt;span class=&quot;st&quot;&gt;&amp;#39;nix-command flakes&amp;#39;&lt;/span&gt; …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;h4 id=&quot;wrong-solution-0&quot;&gt;Wrong solution #0&lt;/h4&gt;&lt;p&gt;As a running example, suppose that our CI builds a top-level build product using a command like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix build .#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The naïve way to upload that to the cache would be:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix store sign &lt;span class=&quot;at&quot;&gt;--key-file&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${KEY_FILE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--recursive&lt;/span&gt; .#example&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix copy &lt;span class=&quot;at&quot;&gt;--to&lt;/span&gt; s3://cache.example.com .#example&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note: You will need to generate a &lt;code&gt;KEY_FILE&lt;/code&gt; using the &lt;code&gt;nix-store --generate-binary-cache-key&lt;/code&gt; command if you haven’t already. For more details, see the following documentation from the manual:&lt;/p&gt;&lt;details&gt;&lt;summary&gt;Click to expand to see the documentation &lt;/summary&gt;&lt;pre&gt;&lt;code&gt;Operation --generate-binary-cache-key&lt;br /&gt;   Synopsis&lt;br /&gt;       nix-store --generate-binary-cache-key key-name secret-key-file&lt;br /&gt;       public-key-file&lt;br /&gt;&lt;br /&gt;   Description&lt;br /&gt;       This command generates an Ed25519 key pair (http://ed25519.cr.yp.to/)&lt;br /&gt;       that can be used to create a signed binary cache. It takes three&lt;br /&gt;       mandatory parameters:&lt;br /&gt;&lt;br /&gt;       1.     A key name, such as cache.example.org-1, that is used to look up&lt;br /&gt;              keys on the client when it verifies signatures. It can be&lt;br /&gt;              anything, but it’s suggested to use the host name of your cache&lt;br /&gt;              (e.g.  cache.example.org) with a suffix denoting the number of the&lt;br /&gt;              key (to be incremented every time you need to revoke a key).&lt;br /&gt;&lt;br /&gt;       2.     The file name where the secret key is to be stored.&lt;br /&gt;&lt;br /&gt;       3.     The file name where the public key is to be stored.&lt;/code&gt;&lt;/pre&gt;&lt;/details&gt;&lt;/blockquote&gt;&lt;p&gt;That seems like a perfectly reasonable thing to do, right? However, the problem with that is that it is &lt;em&gt;incomplete&lt;/em&gt;, meaning that the cache would still be missing several useful build products that developers would expect to be there.&lt;/p&gt;&lt;p&gt;Specifically, the above command only copies the “run-time” dependencies of our build product whereas most developers expect the cache to also include “build-time” dependencies, and I’ll explain the distinction between the two.&lt;/p&gt;&lt;h4 id=&quot;run-time-vs.-build-time&quot;&gt;Run-time vs. Build-time&lt;/h4&gt;&lt;p&gt;Many paths in the &lt;code&gt;/nix/store&lt;/code&gt; are not “valid” in isolation. They typically depend on other paths within the &lt;code&gt;/nix/store&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For example, suppose that I build the GNU &lt;code&gt;hello&lt;/code&gt; package, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; nix build nixpkgs&lt;span class=&quot;op&quot;&gt;#&lt;/span&gt;hello&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I can query all of the other paths within the &lt;code&gt;/nix/store&lt;/code&gt;that the &lt;code&gt;hello&lt;/code&gt; package transitively depends on &lt;em&gt;at run-time&lt;/em&gt; using this command:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-store &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--requisites&lt;/span&gt; ./result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/jzid7pfrhv6gpiwqbx6763v0g9c3bdzb-libobjc-11.0.0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/9rb5qaba71mkgfgd8wfqg03cmi46xarg-apple-framework-CoreFoundation-11.0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/akjp4x41jjx5hzgzrschwqzr8qfsdpys-hello-2.12.1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… or I can print the same information in tree form like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-store &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--tree&lt;/span&gt; ./result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/akjp4x41jjx5hzgzrschwqzr8qfsdpys-hello-2.12.1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;└───/nix/store/9rb5qaba71mkgfgd8wfqg03cmi46xarg-apple-framework-CoreFoundation-11.0.0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;└───/nix/store/jzid7pfrhv6gpiwqbx6763v0g9c3bdzb-libobjc-11.0.0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On my macOS machine, it has two run-time dependencies (other than itself) within the &lt;code&gt;/nix/store&lt;/code&gt;: &lt;code&gt;libobjc&lt;/code&gt; and &lt;code&gt;apple-framework-CoreFoundation-11.0&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Note: there might be other run-time dependencies, because I believe Nixpkgs support for macOS requires some impure system dependencies, but I’m not an expert on this so I could be wrong.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;These are called “run-time” dependencies because we cannot run our &lt;code&gt;hello&lt;/code&gt; executable without them.&lt;/p&gt;&lt;p&gt;Nix prevents us from getting into situations where a &lt;code&gt;/nix/store&lt;/code&gt; path is missing its run-time dependencies. For example, if I were to &lt;code&gt;nix copy&lt;/code&gt; the &lt;code&gt;hello&lt;/code&gt; build product to any cache, then Nix would perform the following steps, in order:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Copy &lt;code&gt;libobjc&lt;/code&gt; to the cache&lt;/p&gt;&lt;p&gt;… since that has no dependencies&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Copy &lt;code&gt;apple-framework-CoreFoundation&lt;/code&gt; to the cache&lt;/p&gt;&lt;p&gt;… since its &lt;code&gt;libobjc&lt;/code&gt; dependency is now satisfied within the cache&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Copy &lt;code&gt;hello&lt;/code&gt; to the cache&lt;/p&gt;&lt;p&gt;… since its &lt;code&gt;apple-framework-CoreFoundation&lt;/code&gt; dependency is now satisfied within the cache&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;However, Nix also has a separate notion of “build-time” dependencies, which are dependencies that we need to in order to build the &lt;code&gt;hello&lt;/code&gt; package.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Note: The reason we’re interested in build-time dependencies for our project is that we want developers to be able to rebuild the project if they make any changes to the source code. If we were to only cache the run-time dependencies of our project that wouldn’t cache the development environment that developers need.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In order to query these dependencies I need to first get the “derivation” (&lt;code&gt;.drv&lt;/code&gt; file) for &lt;code&gt;hello&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; DERIVATION=&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;nix&lt;/span&gt; path-info &lt;span class=&quot;at&quot;&gt;--derivation&lt;/span&gt; nixpkgs#hello&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; declare &lt;span class=&quot;at&quot;&gt;-p&lt;/span&gt; DERIVATION&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;typeset&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;DERIVATION&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;=&lt;/span&gt;/nix/store/4a78f0s4p5h2sbcrrzayl5xas2i7zq1m-hello-2.12.1.drv&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can think of a derivation file as a build recipe that contains instructions for how to build the corresponding build product (the &lt;code&gt;hello&lt;/code&gt; package in this case).&lt;/p&gt;&lt;p&gt;I can query the direct dependencies of that derivation using this command:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-store &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--references&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DERIVATION}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/9krlzvny65gdc8s7kpb6lkx8cd02c25b-default-builder.sh&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/labgzlb16svs1z7z9a6f49b5zi8hb11s-bash-5.1-p16.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/cdk3pz11mvhqpphr0197wwmzhqppn7rl-stdenv-darwin.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/hwymznwkd1kgf5ldcldjl9bnc1wz2azb-hello-2.12.1.tar.gz.drv&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Many of these dependencies are themselves derivations (&lt;code&gt;.drv&lt;/code&gt; files), meaning that they represent other packages that Nix might have to build or fetch from a cache.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Note: the &lt;code&gt;.drv&lt;/code&gt; files are actually not the build-time dependencies, but rather the instructions for building them. You can convert any &lt;code&gt;.drv&lt;/code&gt; file to the matching product it is supposed to build using the same &lt;code&gt;nix build&lt;/code&gt; command, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix build /nix/store/labgzlb16svs1z7z9a6f49b5zi8hb11s-bash-5.1-p16.drv&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;Does that mean that these build-time dependencies are on our machine if we built &lt;code&gt;nixpkgs#hello&lt;/code&gt;? Not necessarily. In fact, in all likelihood the &lt;code&gt;nixpkgs#hello&lt;/code&gt; build was cached, meaning that &lt;code&gt;nix build nixpkgs#hello&lt;/code&gt; only downloaded &lt;code&gt;hello&lt;/code&gt;and its run-time dependencies and no build-time dependencies were required nor installed by Nix.&lt;/p&gt;&lt;p&gt;However, I could in principle force Nix to build the &lt;code&gt;hello&lt;/code&gt; package instead of downloading it from a cache, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix build nixpkgs#hello &lt;span class=&quot;at&quot;&gt;--rebuild&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that would download the direct build-time dependencies of the &lt;code&gt;hello&lt;/code&gt; package in order to rebuild the package.&lt;/p&gt;&lt;h4 id=&quot;wrong-solution-1&quot;&gt;Wrong solution #1&lt;/h4&gt;&lt;p&gt;By this point you might suppose that you have enough information to come up with a better set of &lt;code&gt;/nix/store&lt;/code&gt; paths to cache. Your solution might look like this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Get the derivation for the top-level build product&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Get the direct build-time dependencies of that derivation&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Build the top-level build product and its direct build-time dependencies&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Cache the top-level build product and its direct build-time dependencies&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In other words, something like this Nix code:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; DERIVATION=&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;nix&lt;/span&gt; path-info &lt;span class=&quot;at&quot;&gt;--derivation&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILD}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; DEPENDENCIES=&lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;nix-store&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--references&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DERIVATION}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix build &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILD}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DEPENDENCIES&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix store sign &lt;span class=&quot;at&quot;&gt;--key-file&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${KEY_FILE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--recursive&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILD}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DEPENDENCIES&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix copy &lt;span class=&quot;at&quot;&gt;--to&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${CACHE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILD}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DEPENDENCIES&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is better, but still not good enough!&lt;/p&gt;&lt;p&gt;The problem with this solution is that it only works well if your dependencies never change and you only modify your top-level project. If you upgrade or patch any of your direct build-time dependencies then you need to have &lt;em&gt;their&lt;/em&gt; build-time dependencies cached so that you can quickly rebuild them.&lt;/p&gt;&lt;p&gt;In fact, going two layers deep is still not enough; in practice you can’t easily anticipate in advance how deep in the build-time dependency tree you might need to patch or upgrade things. For example, you might need to patch or upgrade your compiler, which is really deep in your build-time dependency tree.&lt;/p&gt;&lt;h4 id=&quot;wrong-solution-2&quot;&gt;Wrong solution #2&lt;/h4&gt;&lt;p&gt;Okay, so maybe we can try to build and cache &lt;em&gt;all&lt;/em&gt; of our build-time dependencies?&lt;/p&gt;&lt;p&gt;Wrong again. There are way too many of them. You can query them by replacing &lt;code&gt;--references&lt;/code&gt; with &lt;code&gt;--requisites&lt;/code&gt; and you’ll a giant list of results, even for “small” packages. For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; DERIVATION=&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;nix&lt;/span&gt; path-info &lt;span class=&quot;at&quot;&gt;--derivation&lt;/span&gt; nixpkgs#hello&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-store &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--requisites&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DERIVATION}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/8djp1rizc1dblv8svnb0mpa0c3lwvc17-drop-comments.patch&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/9krlzvny65gdc8s7kpb6lkx8cd02c25b-default-builder.sh&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/3glray2y14jpk1h6i599py7jdn3j2vns-mkdir.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-7&quot;&gt;&lt;a href=&quot;#cb14-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/50ql5q0raqkcydmpi6wqvnhs9hpdgg5f-cpio.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-8&quot;&gt;&lt;a href=&quot;#cb14-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/81xahsrhpn9mbaslgi5sz7gsqra747d4-unpack-bootstrap-tools-aarch64.sh&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-9&quot;&gt;&lt;a href=&quot;#cb14-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/fzbk4fnbjqhr0l1scx5fspsx5najbrbm-bootstrap-tools.cpio.bz2.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-10&quot;&gt;&lt;a href=&quot;#cb14-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/gxzl4vmccqj89yh7kz62frkxzgdpkxmp-sh.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-11&quot;&gt;&lt;a href=&quot;#cb14-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt; 🌺 500+ derivations later 🌺 …&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-12&quot;&gt;&lt;a href=&quot;#cb14-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/i0zc5mm4vpj3lviyydb9s73j53mypkrg-nghttp2-1.49.0.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-13&quot;&gt;&lt;a href=&quot;#cb14-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/w37b5s734m53gxnzqyb5v0v98mhdfg2i-coreutils-9.1.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-14&quot;&gt;&lt;a href=&quot;#cb14-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/mmsrbggvzn6rwlx1ijw90sw3wvhzj18j-openssl-3.0.5.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-15&quot;&gt;&lt;a href=&quot;#cb14-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/n7iibs6b818v402j0yczf4mgy73sbzpv-libssh2-1.10.0.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-16&quot;&gt;&lt;a href=&quot;#cb14-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/z074ki54p77r7db3wsgxh9p18f67xnv8-curl-7.85.0.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-17&quot;&gt;&lt;a href=&quot;#cb14-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/hwymznwkd1kgf5ldcldjl9bnc1wz2azb-hello-2.12.1.tar.gz.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-18&quot;&gt;&lt;a href=&quot;#cb14-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/4a78f0s4p5h2sbcrrzayl5xas2i7zq1m-hello-2.12.1.drv&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;details&gt;&lt;summary&gt;Click to expand and see the full list of build-time dependencies &lt;/summary&gt;&lt;pre&gt;&lt;code&gt;/nix/store/8djp1rizc1dblv8svnb0mpa0c3lwvc17-drop-comments.patch&lt;br /&gt;/nix/store/9krlzvny65gdc8s7kpb6lkx8cd02c25b-default-builder.sh&lt;br /&gt;/nix/store/3glray2y14jpk1h6i599py7jdn3j2vns-mkdir.drv&lt;br /&gt;/nix/store/50ql5q0raqkcydmpi6wqvnhs9hpdgg5f-cpio.drv&lt;br /&gt;/nix/store/81xahsrhpn9mbaslgi5sz7gsqra747d4-unpack-bootstrap-tools-aarch64.sh&lt;br /&gt;/nix/store/fzbk4fnbjqhr0l1scx5fspsx5najbrbm-bootstrap-tools.cpio.bz2.drv&lt;br /&gt;/nix/store/gxzl4vmccqj89yh7kz62frkxzgdpkxmp-sh.drv&lt;br /&gt;/nix/store/pjbpvdy0gais8nc4sj3kwpniq8mgkb42-bzip2.drv&lt;br /&gt;/nix/store/7kcayxwk8khycxw1agmcyfm9vpsqpw4s-bootstrap-tools.drv&lt;br /&gt;/nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh&lt;br /&gt;/nix/store/59jmzisg8fkm9c125fw384dqq1np602l-move-docs.sh&lt;br /&gt;/nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh&lt;br /&gt;/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh&lt;br /&gt;/nix/store/ckzrg0f0bdyx8rf703nc61r3hz5yys9q-builder.sh&lt;br /&gt;/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh&lt;br /&gt;/nix/store/g8xg0i02aqwhgxwd2vnp5ax3d6lrkg1v-strip.sh&lt;br /&gt;/nix/store/jngr4r80x5jn482ckqrfh08ljrx1k86f-setup.sh&lt;br /&gt;/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh&lt;br /&gt;/nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relative.sh&lt;br /&gt;/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh&lt;br /&gt;/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epoch-to-latest.sh&lt;br /&gt;/nix/store/wlwcf1nw2b21m4gghj70hbg1v7x53ld8-reproducible-builds.sh&lt;br /&gt;/nix/store/nbxwxwqwcr9rrmxb6gb532f18102815x-bootstrap-stage0-stdenv-darwin.drv&lt;br /&gt;/nix/store/ycwm35msmsdi2qgjax1slmjffsmwy8am-write-mirror-list.sh&lt;br /&gt;/nix/store/i65va14cylqc74y80ksgnrsaixk39mmh-mirrors-list.drv&lt;br /&gt;/nix/store/lphxcbw5wqsjskipaw1fb8lcf6pm6ri6-builder.sh&lt;br /&gt;/nix/store/bgp77z9z42x35vmwyfywqaiqsmnb3ffa-patchutils-0.3.3.tar.xz.drv&lt;br /&gt;/nix/store/3lhw0v2wyzimzl96xfsk6psfmzh38irh-bash51-007.drv&lt;br /&gt;/nix/store/3p62kw9mpkcp0grhirfn46i9afhqf0c9-bash51-015.drv&lt;br /&gt;/nix/store/3za6mykjk49sr616w80lvmy5xcmbkrp3-bash51-006.drv&lt;br /&gt;/nix/store/5lv0fbn6ajwdzw04nz88cc0qqrgrvnp1-bash51-016.drv&lt;br /&gt;/nix/store/4dq81yma6drk9701h17h64zx47r7p5n8-utils.sh&lt;br /&gt;/nix/store/ds0q1li2i96dy7yp6n8zkbakz7m7d5l8-bootstrap-stage0-stdenv-darwin.drv&lt;br /&gt;/nix/store/vcbpmcxpir9nyy480vx5sxb4pm2v0dps-bootstrap-stage0-sigtool.drv&lt;br /&gt;/nix/store/5xk8j72a1dddq1gxh39amgifknwb0lvm-signing-utils.drv&lt;br /&gt;/nix/store/fmd71yqpgwrkdbidzxwmfasqp39zzf8r-CLTools_macOSNMOS_SDK.pkg.drv&lt;br /&gt;/nix/store/ijdrwgv6kv4k17qb5jvqkbs1ccqrlalb-bootstrap-stage0-pbzx.drv&lt;br /&gt;/nix/store/z727aawh6imz3hpmviqyf4zlgprfn8zf-bootstrap-stage0-cpio.drv&lt;br /&gt;/nix/store/fbhkqzn4wc69pa4rvndin5h4b8k02f5c-MacOSX-SDK-11.0.0.drv&lt;br /&gt;/nix/store/72fl7wcbnl6srm5dxb7xbnn20zr07011-libobjc-11.0.0.drv&lt;br /&gt;/nix/store/93n8xmgm6x65mh88amw15wps3h18yqn8-bootstrap-stage0-libcxx.drv&lt;br /&gt;/nix/store/cyk47lyfswsxgn7z2qnhkp0919nhdd3b-config.sub?id=6faca61810d335c7837f320733fe8e15a1431fc2.drv&lt;br /&gt;/nix/store/lmdwlh09b7g3kzga0i2hprcfxszg3ghz-config.guess?id=6faca61810d335c7837f320733fe8e15a1431fc2.drv&lt;br /&gt;/nix/store/9vh7qbpb8chmx5r5cswrix00hngy7vky-gnu-config-2021-01-25.drv&lt;br /&gt;/nix/store/2idjp2xdckqyrdk3hd8msp4cfdi6b8if-utils.bash&lt;br /&gt;/nix/store/47gspvwaxra868q4rsmva0g5nz7zac6p-add-clang-cc-cflags-before.sh&lt;br /&gt;/nix/store/797k3249lr4rx8wslf7kcsa3hv6fis3x-role.bash&lt;br /&gt;/nix/store/bybz12bxjbk94hm58zc70sc0xhj2dxif-add-darwin-ldflags-before.sh&lt;br /&gt;/nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh&lt;br /&gt;/nix/store/civvq4xh4p0mj04l7k73p1xbsq1rs9bc-darwin-install_name_tool-wrapper.sh&lt;br /&gt;/nix/store/dk3ly72kiv27srcj1mjr5n4112vx2hfk-setup-hook.sh&lt;br /&gt;/nix/store/khkfggnk4h14f2spsjcjrxlf8himd4vj-bootstrap-stage0-rewrite-tbd.drv&lt;br /&gt;/nix/store/ff3yqdllxmlp1r8mfkfgjf671r8flf8j-libSystem-11.0.0.drv&lt;br /&gt;/nix/store/gvr0mz9wfz4g0z9w6477ikywmcivk1mh-bootstrap-stage0-coreutils.drv&lt;br /&gt;/nix/store/jravmbdjn0md7cnn6rbqwf3aflw72msb-post-link-sign-hook.drv&lt;br /&gt;/nix/store/js1lic1bmif60d4mlffkpbvz5jim34n3-darwin-strip-wrapper.sh&lt;br /&gt;/nix/store/m0ww06j4y2v3jdsabrr8n0y9d4nnvqn3-bootstrap-stage0-gnugrep.drv&lt;br /&gt;/nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh&lt;br /&gt;/nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh&lt;br /&gt;/nix/store/dj5xngrf61x9isyp2r5d84h3i43wg65l-bootstrap-stage0-binutils-wrapper-.drv&lt;br /&gt;/nix/store/gn1b4gh07byi8xnahgc800jznyarqin0-bootstrap-stage0-clang.drv&lt;br /&gt;/nix/store/hc3z14jhqg35x5286hw5wmc3injg62fa-add-hardening.sh&lt;br /&gt;/nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh&lt;br /&gt;/nix/store/lck6bijpq64zjvmkwdi081v6wm2r8nyx-bootstrap-stage0-libcxxabi.drv&lt;br /&gt;/nix/store/li62b4bvg51zikbni9xadg08za340k71-cc-wrapper.sh&lt;br /&gt;/nix/store/nc4bvrgb8jxh4k1fq2zgzh4mmxqavp54-setup-hook.sh&lt;br /&gt;/nix/store/xbfsjb46np040h2aph1k76iybq9rzd7x-bootstrap-stage0-compiler-rt.drv&lt;br /&gt;/nix/store/cz1x2bgvnzi0qc39hjwm0ppdvqwkfybl-bootstrap-stage0-clang-wrapper-11.1.0.drv&lt;br /&gt;/nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh&lt;br /&gt;/nix/store/qzvw98z9qwv3vasfc9lwcq0d1sgfin6v-hook.drv&lt;br /&gt;/nix/store/vp49i9krzqf282vj6bqr6rxs96d2a1fv-apple-framework-CoreFoundation-11.0.0.drv&lt;br /&gt;/nix/store/lkjwmgmnm4f7d3iiglxglrgll1c8vdkf-bootstrap-stage1-stdenv-darwin.drv&lt;br /&gt;/nix/store/r09r8wpshjqdkx0xwkin79km812nbgp3-m4-1.4.19.tar.bz2.drv&lt;br /&gt;/nix/store/7rxh71ny4xrckw1ip50hv44mylpxpd5v-gnum4-1.4.19.drv&lt;br /&gt;/nix/store/h1s43lrwjjf98dmfhayn6cmax2h19qz9-bison-3.8.2.tar.gz.drv&lt;br /&gt;/nix/store/85f1q5rm0qzqay7fk3935h6kvzfqdcfv-http-tiny-verify-ssl-by-default.patch&lt;br /&gt;/nix/store/dm81j9qdcdr4c458pqbc9wvq9ymgzk4m-setup-hook.sh&lt;br /&gt;/nix/store/mb381gpm9k5wdl37l5ad5pp8w11qzhjg-no-sys-dirs-5.31.patch&lt;br /&gt;/nix/store/n315a3g9bcxlypqzbm36nzrrg40h6lcj-cpp-precomp.patch&lt;br /&gt;/nix/store/ppbkcbhzwzwpqaad6whhr9qgxjvj82gj-perl-5.36.0.tar.gz.drv&lt;br /&gt;/nix/store/0phjl3yzr4m1gady21l21h4brn140hjm-CVE-2022-37434.patch&lt;br /&gt;/nix/store/jw5f744vn0nv6q0ms6s5q0w0kkml2a8v-fix-configure-issue-cross.patch&lt;br /&gt;/nix/store/mg7z3nsc96864cfkx2jwda7wmpdn71dl-zlib-1.2.12.tar.gz.drv&lt;br /&gt;/nix/store/xniqbx8mh8lx06bw267g6hkfkp2c79kn-comprehensive-crc-validation-for-wrong-implementations.patch&lt;br /&gt;/nix/store/vblzwf77rk1mxxk6qjhgaqp43z36j992-zlib-1.2.12.drv&lt;br /&gt;/nix/store/x0ll5lnagy6lg7hgvqb26il3qnmsqisd-sw_vers.patch&lt;br /&gt;/nix/store/m9h3rw3jlzf8hapgiw29i5fjyzw7r9v4-perl-5.36.0.drv&lt;br /&gt;/nix/store/5nxxxmzb23y9pzp673grmfs95jrx14rx-bison-3.8.2.drv&lt;br /&gt;/nix/store/13i5k09s5g6gdkaj731rqsi1qc70khka-bootstrap-stage1-stdenv-darwin.drv&lt;br /&gt;/nix/store/jik02mkz72r2f6hhxnlhp6h5f0fi89gw-expand-response-params.c&lt;br /&gt;/nix/store/g9h3q3y44p4ycn8vdai1s9aw1f0s7icy-expand-response-params.drv&lt;br /&gt;/nix/store/734l1nlc4d2zbksafqvp5436ynp26z3g-bash51-014.drv&lt;br /&gt;/nix/store/crar8b49gsplly9x0v279bibvixmj9gc-bash51-003.drv&lt;br /&gt;/nix/store/d7i8a7c8mb0qmsb1c3rj8g38m071vmaf-bash51-004.drv&lt;br /&gt;/nix/store/gapa7v6rz1gzjsn1kckpb4fj07pmznw6-bash-5.1.tar.gz.drv&lt;br /&gt;/nix/store/ig7d802vp43ap4ga26r2vd174h2c1bk7-bash51-010.drv&lt;br /&gt;/nix/store/jj3jm1bjqnlwz4yassc9h70mwmrxy442-bash51-008.drv&lt;br /&gt;/nix/store/krhwn1440gxvry5gw4wmzk6y83fm4bdw-bash51-001.drv&lt;br /&gt;/nix/store/n92wsf556wqp4dbf0rxwx1b175m0vwyn-bash51-013.drv&lt;br /&gt;/nix/store/nkzvvyvmckwv4a8r84iwyfbivvw05nvc-bash51-009.drv&lt;br /&gt;/nix/store/nm5946y3ffkynrz67vz47ik0ygvg6byn-pgrp-pipe-5.1.patch&lt;br /&gt;/nix/store/pkd2vxq8w5fhrfk6k89hi29d5ldbbj29-bash51-005.drv&lt;br /&gt;/nix/store/q6jpdv2j5dh4nbsbmkzy6za1vfpb2l30-bash51-011.drv&lt;br /&gt;/nix/store/w8q9jdvb96sayxyi25amd27yki283zg9-bash51-002.drv&lt;br /&gt;/nix/store/wg9gacyfgldnwh3gc23nr49n4j0b58sv-bash51-012.drv&lt;br /&gt;/nix/store/4kpfa2fhfdb6r9icym3q8n3w1s8mfv6z-bash-5.1-p16.drv&lt;br /&gt;/nix/store/k9bkzj7nhqxnvbmz5vk8pmzxpmym0qa6-file-5.43.tar.gz.drv&lt;br /&gt;/nix/store/hgps4nk9p01z9zngmbnbv42pqmzg9nhg-file-5.43.drv&lt;br /&gt;/nix/store/4cmjzk8yr6i5vls5d2050p653zzdvmvp-setup-hook.sh&lt;br /&gt;/nix/store/4hcdpxjmr4nh625ry840g70xp00vdf5a-2.71-fix-race.patch&lt;br /&gt;/nix/store/kxdvjnq8cl9jd5g9jndhhl5a17h2xbih-autoconf-2.71.tar.xz.drv&lt;br /&gt;/nix/store/irpqw60zcy00lj3hjia8gr15z984x9xn-texinfo-6.8.tar.xz.drv&lt;br /&gt;/nix/store/19ndr8g629l0xzzs1x7xz4z0fbkwpgcj-xz-5.2.6.tar.bz2.drv&lt;br /&gt;/nix/store/kas3n4g0jyrz3rhl1znjcxqmpyddk8sw-xz-5.2.6.drv&lt;br /&gt;/nix/store/5pj1w63j668yqssrxb4dykpzpm1yhx9q-libiconv-50.tar.gz.drv&lt;br /&gt;/nix/store/xrvbfm0ahaiik1vlxzn3vsp5gyhksy2n-setup-hook.sh&lt;br /&gt;/nix/store/5xx3gba361rf696b27r3jfa0q7rmlyh9-libiconv-50.drv&lt;br /&gt;/nix/store/ny42y6hs4p294rvnrwbmrpwzqghw2816-gettext-setup-hook.sh&lt;br /&gt;/nix/store/p2fp6i7hjx9af1wbwr32k217wp2dxmiw-absolute-paths.diff&lt;br /&gt;/nix/store/sihz0cdcajckxnhjm8n4p652sbd5xwxd-gettext-0.21.tar.gz.drv&lt;br /&gt;/nix/store/ri729qz1iq3iqr9bdvb406izklj1fpfa-gettext-0.21.drv&lt;br /&gt;/nix/store/yl6g04fsr6p9lkvccqjjl8q1xnnmw49s-fix-glibc-2.34.patch&lt;br /&gt;/nix/store/v94cwmp6hs6dvrw6v4jmqk9jwl0ik75q-texinfo-6.8.drv&lt;br /&gt;/nix/store/ih062232k706fpydng4xlk75fpzraxmn-autoconf-2.71.drv&lt;br /&gt;/nix/store/r5kd1di71n7xk9kjvrgyy75cz0c0skay-automake-1.16.5.tar.xz.drv&lt;br /&gt;/nix/store/hqf9nllss9z0i3gmi8sv9kjcm9qhvf8q-automake-1.16.5.drv&lt;br /&gt;/nix/store/ipdgmqcfn56mhgmq3hv3yy5xj2kj2ri7-libtool-2.4.7.tar.gz.drv&lt;br /&gt;/nix/store/06nfwja5j8c36n780jvlwjv8gs2m7i3m-gettext-1.07.tar.gz.drv&lt;br /&gt;/nix/store/qf3mzpvsmkrw963xchbivcci06078n13-builder.sh&lt;br /&gt;/nix/store/j7jrmh8zz3jjcdsa050f1ja19nm07vz7-perl5.36.0-gettext-1.07.drv&lt;br /&gt;/nix/store/lac4y6zxaqqhyf4r60p3ag68k3ckifvv-help2man-1.49.2.tar.xz.drv&lt;br /&gt;/nix/store/k9223a4j2ar7j76zpjs8fmlfl9q76a76-help2man-1.49.2.drv&lt;br /&gt;/nix/store/9gns0vpn7fajyzm3w2rsdbcz9pqgfsrm-libtool-2.4.7.drv&lt;br /&gt;/nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh&lt;br /&gt;/nix/store/8byqd66k9p5zbiggz2a9frki47xqy28r-hook.drv&lt;br /&gt;/nix/store/ing5qg4q87wdvm1h455c3xn889m2bbj0-coreutils-9.1.tar.xz.drv&lt;br /&gt;/nix/store/66ayp7hm682rxhlxd061fvprrmf2zx3c-gmp-6.2.1.tar.bz2.drv&lt;br /&gt;/nix/store/h96aykl4imzhfapnmavplr49v43c8apx-6.2.1-CVE-2021-43618.patch&lt;br /&gt;/nix/store/k49s9lr0lw5zhwsz4ni4rf2643byqrak-gmp-with-cxx-6.2.1.drv&lt;br /&gt;/nix/store/jp5jbqfxjazf38w63bipqf68h7hyq4v0-coreutils-9.1.drv&lt;br /&gt;/nix/store/322332kbmj7ig7ii3cwlfjcg4mf5xgz6-grep-3.7.tar.xz.drv&lt;br /&gt;/nix/store/m2qc8a9c4yr5xmqck50fpzzwzpqggbbw-stacksize-detection.patch&lt;br /&gt;/nix/store/qk3pnajspb378zx6c8g0anj2d7z31a88-pcre-8.45.tar.bz2.drv&lt;br /&gt;/nix/store/pgzgn3knxdn335qci805a49bvlnl4ppa-pcre-8.45.drv&lt;br /&gt;/nix/store/l2bbsavfww8zv5a9ncldh83c9vsz3y01-gnugrep-3.7.drv&lt;br /&gt;/nix/store/1igs2sr5j99180z801426ivzzbikxi7q-CVE-2019-13232-2.patch.drv&lt;br /&gt;/nix/store/1k1wn8807yizgz3ghnbd4k6zsc0dzfkr-CVE-2014-9913.patch&lt;br /&gt;/nix/store/2cq4hsc1v8ylccspw8351r72s56w1fia-CVE-2015-7697.diff&lt;br /&gt;/nix/store/6np2acjv1nxcg0xzsv9a76wyrpxznkna-CVE-2014-8141.diff&lt;br /&gt;/nix/store/6zqn6w9rwkgfa6z1hpagnh5xhz2dag6m-CVE-2015-7696.diff&lt;br /&gt;/nix/store/97d26l91h0db8h0qkmhxwi5d8shrilv6-CVE-2016-9844.patch&lt;br /&gt;/nix/store/p67r2s04xw8plqs0552rc5qyj5016wxb-bzip2-1.0.8.tar.gz.drv&lt;br /&gt;/nix/store/ra4ikm6b0nxgi0sil4mk3ikkingm80x0-bzip2-1.0.6.2-autoconfiscated.patch.drv&lt;br /&gt;/nix/store/awrvprhqr5j0n6n8zqss2i5cyv25wis3-bzip2-1.0.8.drv&lt;br /&gt;/nix/store/bqwhj80hz1z49365miaqcxp4c2mzsfp3-unzip60.tar.gz.drv&lt;br /&gt;/nix/store/cciw7lgkldvx25d77cxpjhh1iw4xghd9-setup-hook.sh&lt;br /&gt;/nix/store/d9b2qrrq32jzdsdx4y33inzrra5n5z5n-CVE-2014-8140.diff&lt;br /&gt;/nix/store/ly8k93l59mlzlgnq679vcp54nqpi4sdc-06-initialize-the-symlink-flag.patch.drv&lt;br /&gt;/nix/store/mwkywhh9wvym79lzlk8gsanw5swhfb8w-CVE-2019-13232-3.patch.drv&lt;br /&gt;/nix/store/p46prhgmv7ibjh9igfkbc6zfxbbi6sk5-dont-hardcode-cc.patch&lt;br /&gt;/nix/store/p55a764pi2f4kkx3adb43bxb2dnb4z6r-CVE-2018-18384.patch&lt;br /&gt;/nix/store/pdcj2chp5c2gvm2jc3shbajfc62kbx1i-CVE-2014-9636.diff&lt;br /&gt;/nix/store/rdkdki1f24q8mqgnbsyk7gmh28c027ks-CVE-2014-8139.diff&lt;br /&gt;/nix/store/wx62rx7078a86mpimgg5gfsiisx3qk5l-CVE-2019-13232-1.patch.drv&lt;br /&gt;/nix/store/zxpjddlgb46cdynbgbgq41i6k9a40wfg-unzip-6.0.drv&lt;br /&gt;/nix/store/cnds925pfnac943p1f516pxwrbqy0gdi-source.drv&lt;br /&gt;/nix/store/2cqnhs2ds0gn7xrq0zcwbj7gsv6l5xr7-use-etc-ssl-certs-darwin.patch&lt;br /&gt;/nix/store/2yk6ab4c6j9y00g3x3cixqgi9jmgiwzd-openssl-3.0.5.tar.gz.drv&lt;br /&gt;/nix/store/6hyy4ngzkxdsg71zmryvy3xkw0ydag21-openssl-disable-kernel-detection.patch&lt;br /&gt;/nix/store/sq4h6bqjx12v9whvm65pjss25hg1538q-nix-ssl-cert-file.patch&lt;br /&gt;/nix/store/imc07k6kg26rcam012pkgxba3mj0c0xq-openssl-3.0.5.drv&lt;br /&gt;/nix/store/1ksmnsr3m6paw8gs7jp9b623agzdrqi2-add-flags.sh&lt;br /&gt;/nix/store/9whvblgb7bgnmqsv7y5xqs1w8xv9aa1d-pkg-config-wrapper.sh&lt;br /&gt;/nix/store/c4akajrb4jg50k72jw7zfbyv8z139ri0-setup-hook.sh&lt;br /&gt;/nix/store/f4bvwqvj0y3z6blvh0knz71a8yq1c45p-requires-private.patch&lt;br /&gt;/nix/store/qycyfzgf92i96ygij2b5bz27ll6mkyyw-pkg-config-0.29.2.tar.gz.drv&lt;br /&gt;/nix/store/dq5y5c22p6ixswcqaxb6s0ymvi2bwmlm-pkg-config-0.29.2.drv&lt;br /&gt;/nix/store/ssvy1s8p78q1jfy7bap0kl49sm8ad0m3-pkg-config-wrapper-0.29.2.drv&lt;br /&gt;/nix/store/xz6rbdix12jn1bd3lydd1cagnvr94yf4-sigtool-0.1.2.drv&lt;br /&gt;/nix/store/gp50m2w3aab5w1pgx9h18yky5x5jzzyq-signing-utils.drv&lt;br /&gt;/nix/store/gz78khbgfz3rh5phvq1bavdp4v0bcimn-post-link-sign-hook.drv&lt;br /&gt;/nix/store/zp333xdrvsgn3mjicwcbfiqd259ix6gd-MacOSX-SDK-11.0.0.drv&lt;br /&gt;/nix/store/x3wxdzi7f36fnb1sryr1ifgafsycasks-libSystem-11.0.0.drv&lt;br /&gt;/nix/store/v77imik30yacsdbfqkkdv0djyk1hsdgh-bootstrap-stage0-binutils-wrapper-.drv&lt;br /&gt;/nix/store/6cqn1ln7v306ymslgmvcy77pbq30pjy1-bootstrap-stage0-clang-wrapper-11.1.0.drv&lt;br /&gt;/nix/store/3inq067xw7bic7dy828bgjjzx54kav9v-install-shell-files.sh&lt;br /&gt;/nix/store/70pf3jk5jc64jc82hqck1jx6z5l42xj3-install-shell-files.drv&lt;br /&gt;/nix/store/zwlzlqvh3x2nw1421cvx2210bzz3xgfn-libev-4.33.tar.gz.drv&lt;br /&gt;/nix/store/gn80i99rcc85d7l687d1jdmcm0yl51yv-libev-4.33.drv&lt;br /&gt;/nix/store/h60a8qk9wqy8gbdvl9sf0qcnz63by9w4-nghttp2-1.49.0.tar.bz2.drv&lt;br /&gt;/nix/store/09ba5xcaaaybqdsvljh5skzzl6blmmw4-c-ares-1.18.1.tar.gz.drv&lt;br /&gt;/nix/store/l0niywhmkdqv97i8rlxzr1yqbn9k7sc1-c-ares-1.18.1.drv&lt;br /&gt;/nix/store/36rbachr8ra090v3m6s86603sfp382k4-nghttp2-1.49.0.drv&lt;br /&gt;/nix/store/fgr4mizzn2y712bqlk895lk8wpws27ir-dyld-433.5.tar.gz.drv&lt;br /&gt;/nix/store/7c2sh9fyqz113rrpx5mdnmkk8mdrhb47-dyld-433.5.drv&lt;br /&gt;/nix/store/81gwh57vnrm6qpw3gxmdmrjsp26dxi7p-find-xml-catalogs.sh&lt;br /&gt;/nix/store/1vaq58n8rvn8bbr9mcm3k30zkr63480d-hook.drv&lt;br /&gt;/nix/store/68bzcamhirzd95vsh05wilz8p8vfvyb6-expat-2.4.9.tar.xz.drv&lt;br /&gt;/nix/store/0vyw0ywxhng31zvxqia2y23ljjmzsdj6-expat-2.4.9.drv&lt;br /&gt;/nix/store/345r2zz7pgiyk91j89qlf7mhs95jrv6f-no-ldconfig.patch&lt;br /&gt;/nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh&lt;br /&gt;/nix/store/4aakllhrfd3r87a67g0hb6r37nk4ahqf-python-setup-hook.sh.drv&lt;br /&gt;/nix/store/4j7gbzbahn5by6vvck1gcpjc95k6vpz6-Python-3.10.7.tar.xz.drv&lt;br /&gt;/nix/store/9m54l1bi5814x9cqznwlga7yfs5ipi6h-nuke-refs.sh&lt;br /&gt;/nix/store/pm08hy0dzswr0wj3n7nczm5pbzzjxdh6-darwin-sign-fixup.sh&lt;br /&gt;/nix/store/4qmyys335vfbmyx2q8ii3md77yaswsim-nuke-references.drv&lt;br /&gt;/nix/store/57kclla9vza2n87xgwg1ap54d20cz6lb-fix-finding-headers-when-cross-compiling.patch&lt;br /&gt;/nix/store/aafa965mg7grhivxa01mmbqksz6c3w77-python-3.x-distutils-C++.patch&lt;br /&gt;/nix/store/cv1ynpzvjjr0s72jkbblbzz3ymr87lpi-0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch&lt;br /&gt;/nix/store/dkb2rjyj7lwmvsn4zzwx85kx8r61nk9w-darwin-libutil.patch&lt;br /&gt;/nix/store/w7hflmy5kddj6p1kvbkgag7qjs44217d-libffi-3.4.3.tar.gz.drv&lt;br /&gt;/nix/store/nv7ln6adf9vv2c81rw1rv8sarp2w3dbp-libffi-3.4.3.drv&lt;br /&gt;/nix/store/r112dk8w7zvdjipki58ch00m825li7fq-virtualenv-permissions.patch&lt;br /&gt;/nix/store/x6aiw4vay2b63slqz5byimn0alhg5b1s-darwin-tcl-tk.patch&lt;br /&gt;/nix/store/70zdg3iypjrxjyvj602ai92j36j8l4rp-python3-minimal-3.10.7.drv&lt;br /&gt;/nix/store/1qrnbw8xsww3vydd71lwfp32ylgx9i8g-make-wrapper.sh&lt;br /&gt;/nix/store/819fzxfwzp7zhhi4wy5nkapimkb1bsx5-die.sh&lt;br /&gt;/nix/store/csphakh9ck533qnjfqmrh5ybg7amwvwv-hook.drv&lt;br /&gt;/nix/store/scgakk3jkkkqfzxp5v9575163dj03c2y-hook.drv&lt;br /&gt;/nix/store/8p4sgrqajxwzcm9l02m45qvpg6ncr0h9-patchutils-0.3.3.drv&lt;br /&gt;/nix/store/baz2nahq7z7xxya1gi7in6a4msmvkbly-5b2d07a72670513e41b481a9d922c983a64027ca.patch.drv&lt;br /&gt;/nix/store/frr6f2hq56j6b4wc0bsklaqskjsagqc0-utf8-xmlErrorFuncHandler.patch&lt;br /&gt;/nix/store/vyh448kgn8qx2frx4g42f64b1akic218-libxml2-2.10.0.tar.xz.drv&lt;br /&gt;/nix/store/lyl7058saady3i75h1w0177qfzfr1zf0-ncurses-6.3-20220507.tgz.drv&lt;br /&gt;/nix/store/wy5amsi09scnbxgsbm1fzzq9963zlg9m-ncurses-6.3-p20220507.drv&lt;br /&gt;/nix/store/x1fa0bns4szjkbb7f8bsflcxmzas41h0-4ad71c2d72beef0d10cf75aa417db10d77846f75.patch.drv&lt;br /&gt;/nix/store/9gql9xbn6mfd56lxxchd0q7qzyf7cdby-libxml2-2.10.0.drv&lt;br /&gt;/nix/store/1nv6k9zyc7pj74yshdzm4bmjfv6k86l9-source.drv&lt;br /&gt;/nix/store/34qn4by9lqrri323ahm5vizv6bgsbhfn-006-darwin-always-set-runtime-c-flag.diff&lt;br /&gt;/nix/store/chhz1kdhnql7gshwrns13lawgm75an7c-adv_cmds-119.tar.gz.drv&lt;br /&gt;/nix/store/bylhfm7hj9sm4qb5n9mnsvj71xhmi6rx-flex-2.6.4.tar.gz.drv&lt;br /&gt;/nix/store/vila3sxd48ha6r4yhdbfzqlvfl1jn2bw-glibc-2.26.patch.drv&lt;br /&gt;/nix/store/lnb1468vfblvbc6lqgpigypspa4lzl68-flex-2.6.4.drv&lt;br /&gt;/nix/store/6s064qz2lzpi1ml9z4vx0ajmk7fwafv6-bsdmake-24.tar.gz.drv&lt;br /&gt;/nix/store/pps2jxig0cgkz81qwhy9gqar360mbbdb-bsdmake-24.drv&lt;br /&gt;/nix/store/x1dh5wnl7pf81iq0gx0gqj6i9vnz89vv-source.drv&lt;br /&gt;/nix/store/icl9b9dikbnwsrb5agnjmfryxyjnfp1n-adv_cmds-119.drv&lt;br /&gt;/nix/store/6wbmq1k5x7q9lchs986bjq2qf1ip7b41-ps-adv_cmds-119.drv&lt;br /&gt;/nix/store/7qslhycy1d0ag13xn4rfxfwdm8f7afb1-001-search-path.diff&lt;br /&gt;/nix/store/ar1p4gcvlqf8dwbkfrcb01srbywinaj5-check-pc-files-hook.sh&lt;br /&gt;/nix/store/ha21dnn4nw858g8d0wrkvhyvp7zmqgnz-setup-hook.sh&lt;br /&gt;/nix/store/jmif3w9zsykc13zrhw4y8pynnnxg27zn-cmake-3.24.2.tar.gz.drv&lt;br /&gt;/nix/store/k845qxmkbra9fc4628lpi0q8yjmc1sx9-005-remove-systemconfiguration-dep.diff&lt;br /&gt;/nix/store/ri7qddqm02y0w2g43zqqz8lzy2pbdgrk-002-application-services.diff&lt;br /&gt;/nix/store/rq41inv92jszcs5x62nc5cci5hapbjpw-003-libuv-application-services.diff&lt;br /&gt;/nix/store/23dflh1nkw215df7bfyy9ml3jd5ranrw-cmake-boot-3.24.2.drv&lt;br /&gt;/nix/store/c14fh88kpi7gc627s1l19gdlipfrwd59-brotli-1.0.9.drv&lt;br /&gt;/nix/store/rv3w6kch2d0l70r6h3kk2r5d8ca216hz-libobjc-11.0.0.drv&lt;br /&gt;/nix/store/f07bc31w87jm2rjk8zap5xyf92ach79p-apple-framework-CoreFoundation-11.0.0.drv&lt;br /&gt;/nix/store/k8xvsl4226pzy73ywglgx46h7scffpjq-gnu-config-2021-01-25.drv&lt;br /&gt;/nix/store/h9gslm9dppn38plwa811yr5c03s5lw9w-ICU-66108.tar.gz.drv&lt;br /&gt;/nix/store/mqvcwr74dcsqlib5crdcawk16dmdgj9h-ICU-66108.drv&lt;br /&gt;/nix/store/rkr3wamhhf9ha9n89yimjwyazvf3ar6j-hook.drv&lt;br /&gt;/nix/store/f0qv4kz20212qcnd9wsck36zk3r8isl9-curl-7.85.0.tar.bz2.drv&lt;br /&gt;/nix/store/gdqnvkbp6nnrvww108adb7nvjgrpdxzb-7.79.1-darwin-no-systemconfiguration.patch&lt;br /&gt;/nix/store/3bld52y6l8fg58gaj9b937qg6m7zbm16-krb5-1.20.tar.gz.drv&lt;br /&gt;/nix/store/3xk9ps0qz073k641b88swpa4fgx3hzwg-nix-ssl-cert-file.patch&lt;br /&gt;/nix/store/n3vnxwsnf75gz250yayipdga4ziidwpi-openssl-1.1.1q.tar.gz.drv&lt;br /&gt;/nix/store/82cq1qadbgv5d6gxb11zgkxl530wvzxj-openssl-1.1.1q.drv&lt;br /&gt;/nix/store/18vddqgdxg6xcv5iws1vv7fd152rag04-bootstrap_cmds-121.tar.gz.drv&lt;br /&gt;/nix/store/jyci5k74rnj58fkalyil3pj28x7xnr3m-bootstrap_cmds-121.drv&lt;br /&gt;/nix/store/hj7zxy2r8ib6s6fa669kr6hqdiv4l6s1-libkrb5-1.20.drv&lt;br /&gt;/nix/store/z3h1d8wp61892ydalxldvb496ar0hiz6-libssh2-1.10.0.tar.gz.drv&lt;br /&gt;/nix/store/zrh6il3gp9xa58ldg40d57kwgsvljyb1-openssl_add_support_for_libressl_3_5.patch&lt;br /&gt;/nix/store/yf97cpb80lyvqgd0lnq82c4qkx7kpb9f-libssh2-1.10.0.drv&lt;br /&gt;/nix/store/w5683845xkfzwlp8sgbax0farj5fzhpv-curl-7.85.0.drv&lt;br /&gt;/nix/store/9rkj0y4cl1sbbzndzg01crdamv4813pg-bootstrap-stage2-stdenv-darwin.drv&lt;br /&gt;/nix/store/labgzlb16svs1z7z9a6f49b5zi8hb11s-bash-5.1-p16.drv&lt;br /&gt;/nix/store/hvl8g8b6n8m8dk16bdavvpg31g8zmk96-bootstrap-stage2-stdenv-darwin.drv&lt;br /&gt;/nix/store/9lzpvga5gm5klwg28iv1hgf01g0hpfaa-hook.drv&lt;br /&gt;/nix/store/96fgzfyknjaj6fc85ai2n68qfndbps02-hook.drv&lt;br /&gt;/nix/store/6wky968nz63ndx7z6kppcada8cdj4hg8-bsdmake-24.drv&lt;br /&gt;/nix/store/0w9k3ah3f9c0j7k4vxka74pi07x01bbv-adv_cmds-119.drv&lt;br /&gt;/nix/store/2n3wbbh9sk778vkl1lsz58inmyvk2g3r-file-5.43.drv&lt;br /&gt;/nix/store/bcv1p9lpghn2l1zcw21z7401qc8fnmvr-gnu-config-2021-01-25.drv&lt;br /&gt;/nix/store/47msbw943yjc7hm6d13r9jl5cz0ih9x9-hook.drv&lt;br /&gt;/nix/store/24a06br9jvy87sbanym8hijfq4j2dsqm-no-threads.patch&lt;br /&gt;/nix/store/4a0sl25fn3ymdmaalxwvjk6a2xajy3cb-libcxxabi-11.1.0.src.tar.xz.drv&lt;br /&gt;/nix/store/ccf2fg1l77aqbw3v8hiql7a4c54dr8lh-bootstrap-stage0-clang-wrapper-11.1.0.drv&lt;br /&gt;/nix/store/bhmp58x5m3lkscnxs9zwscc4rxbz7fc4-bootstrap-stage2-stdenv-darwin.drv&lt;br /&gt;/nix/store/db7hhqin9klk8qx344r2b3dhb4xrfiq6-llvm-11.1.0.src.tar.xz.drv&lt;br /&gt;/nix/store/il3mvxijf7cc9ys09pcblff47ia93kk2-gnu-install-dirs.patch&lt;br /&gt;/nix/store/z3pj61rk5h9ffbj5anhwbp3ah2qysvqf-libcxx-11.1.0.src.tar.xz.drv&lt;br /&gt;/nix/store/fg68n6bycig5c23sw8yfn7nmgbj85v6x-libcxxabi-11.1.0.drv&lt;br /&gt;/nix/store/wjgikzdk0fcbldspzlkyh0dvd8wa2say-patchutils-0.3.3.drv&lt;br /&gt;/nix/store/3v9a47xl4w8kc8bff4daxvbg50008imh-19bc9ea480b60b607a3e303f20c7a3a2ea553369.patch.drv&lt;br /&gt;/nix/store/c9w69kl4caarcs2j84hck0icrdj9jqr6-fix-darwin-dylib-names.sh&lt;br /&gt;/nix/store/g958ikb42h89wl8rgx597l5h6k9n2cfx-fix-darwin-dylib-names-hook.drv&lt;br /&gt;/nix/store/ym4y16msxvvpbcsc0s829has6v8mxg56-gnu-install-dirs.patch&lt;br /&gt;/nix/store/hhn96pp2rk2bq1hipcr147hqfrgh80gk-libcxx-11.1.0.drv&lt;br /&gt;/nix/store/rizgpw7ndpwy12kyr03mnlhhkfwzk75a-pcre-8.45.drv&lt;br /&gt;/nix/store/m1pm94jj46gsmks3d11p44qdhqml9inm-gnugrep-3.7.drv&lt;br /&gt;/nix/store/r2mi8209hbvfhyhjcxy6qqvyawf8s4k3-expand-response-params.drv&lt;br /&gt;/nix/store/6yjiri44dy8c8lnjn0f14w8nvgs2fhf0-bootstrap-stage3-stdenv-darwin.drv&lt;br /&gt;/nix/store/dlm9y4dfkjmcqrysf37kxfhlds9r9jng-hook.drv&lt;br /&gt;/nix/store/q6x1zg4xsbzw7qv3qdcq2rny1n4pr5xk-hook.drv&lt;br /&gt;/nix/store/iraif23i0p01sx6qq6jkry21v7g84wvi-bootstrap-stage0-clang-wrapper-11.1.0.drv&lt;br /&gt;/nix/store/wpni47ni5xf8qms83in475fyn8z2ikf6-bootstrap-stage3-stdenv-darwin.drv&lt;br /&gt;/nix/store/40ri4k2mfvs5wjwry47iqv30587p1jh0-patchutils-0.3.3.drv&lt;br /&gt;/nix/store/0w90wllxcb2wyjbkxjacm0m3q2wfz702-uops-CMOV16rm-noreg.diff.drv&lt;br /&gt;/nix/store/09q0yxa6ixb030mkw96j2za7h8dpbpc7-dejagnu-1.6.3.tar.gz.drv&lt;br /&gt;/nix/store/fk7p458jm8ra2d6zf2y4nw1ykckvmnrr-tcl8.6.11-src.tar.gz.drv&lt;br /&gt;/nix/store/5z49kw0iq4qyga5zxmmhw1fh2l6jiwjz-tcl-8.6.11.drv&lt;br /&gt;/nix/store/g4c3jbhc8ag6db5py0xk2sicfy0hrpmw-tcl-package-hook.sh&lt;br /&gt;/nix/store/a1ipqs2qcpbqyfmxgk6yi3yyl2f6pd62-tcl-package-hook.drv&lt;br /&gt;/nix/store/4vq3350zc6sqnibkqpgic2d6cvi1r9hq-substitute-all.sh&lt;br /&gt;/nix/store/5241l4i852qd9imqz3jgv9rv9gv701gk-fix-cross-compilation.patch&lt;br /&gt;/nix/store/dhba38jjxia0b5snjrhvcl9dbjbdb3k0-fix-cross-compilation.patch.drv&lt;br /&gt;/nix/store/gdag5rjmiv9iwgj8gnibcvzic5f1kwbp-0001-enable-cross-compilation.patch.drv&lt;br /&gt;/nix/store/qcmyh5mgqv62zip6gkp2xjriklpbm0xv-expect5.45.4.tar.gz.drv&lt;br /&gt;/nix/store/xpdirxij63a69jk43pgajjrgmv7gaajd-hook.drv&lt;br /&gt;/nix/store/iag2icih50jb6wxn15a71jy9pix7jd15-expect-5.45.4.drv&lt;br /&gt;/nix/store/nharms54shj3rhwzw2ywk4alfrgm5k1m-dejagnu-1.6.3.drv&lt;br /&gt;/nix/store/2hc51kpv7vkbfpifjq28jbhm49wlphzw-libffi-3.4.3.drv&lt;br /&gt;/nix/store/6wv8acdd7bm7npixgr3rk86mf55fj47c-llvm-config-link-static.patch&lt;br /&gt;/nix/store/9fcwwdr92g5wzpj2wxf86f0zy5mn0h1v-zlib-1.2.12.drv&lt;br /&gt;/nix/store/9fd3xdcfv1dw93y99a18lw735fx8kvgy-gnu-install-dirs.patch&lt;br /&gt;/nix/store/g05jynqyglkf9if6y70822l2r6y3nkj5-ncurses-6.3-p20220507.drv&lt;br /&gt;/nix/store/2mys4xnihsf6r5y0sbby0y3qcn22ggjw-4ad71c2d72beef0d10cf75aa417db10d77846f75.patch.drv&lt;br /&gt;/nix/store/2nyygvchsc258gkqymnbzmh741wsizrf-libiconv-50.drv&lt;br /&gt;/nix/store/i68qy2hwsvqx3haf36smqi3n4lg1wavm-5b2d07a72670513e41b481a9d922c983a64027ca.patch.drv&lt;br /&gt;/nix/store/w8ma9ddjcfc3l3z4ng6rlwljxiw85fhv-hook.drv&lt;br /&gt;/nix/store/j4h65frq4nx4kpl06sj5c3cz2lc9fdrz-libxml2-2.10.0.drv&lt;br /&gt;/nix/store/kl8l1ci2ycc6y23vkxvjhlbz2p93zp3z-polly-11.1.0.src.tar.xz.drv&lt;br /&gt;/nix/store/n1sl525i7qanfd75l8s1bbqn32fasma0-dfaemitter-gcc-12.patch.drv&lt;br /&gt;/nix/store/qcb7ljbcrmgdf6xv0irgvdv6rivgj3md-nvptx-gcc-12.patch.drv&lt;br /&gt;/nix/store/yzac3dpyb5cyndxjl0d9nrpwqmcz18dk-b498303066a63a203d24f739b2d2e0e56dca70d1.patch.drv&lt;br /&gt;/nix/store/8vqfrpgwki8j8nk9j08g04vh1iqcm9bw-llvm-11.1.0.drv&lt;br /&gt;/nix/store/2jlsizsg3hsj6p10cm11fx9rshsjwwri-clang-tools-extra-11.1.0.src.tar.xz.drv&lt;br /&gt;/nix/store/34zhl915l308dpa7v2786z3xgbvy6398-purity.patch&lt;br /&gt;/nix/store/akc6qlr586k4r5lwmj70i0mbb8wxz709-clang-11.1.0.src.tar.xz.drv&lt;br /&gt;/nix/store/v2az1r12rfivd43pvq2s0brp60n54mqa-clang-11-12-LLVMgold-path.patch&lt;br /&gt;/nix/store/bhdlpz3fgkzcrh94rsp76m0n0gwb6fxx-clang-11-12-LLVMgold-path.patch.drv&lt;br /&gt;/nix/store/f91k74rxz9c8miqg843jf6dfq35jhpka-fix-darwin-dylib-names-hook.drv&lt;br /&gt;/nix/store/yrskcbyfm56qm4vs9dnacg8mqpqx7qwx-gnu-install-dirs.patch&lt;br /&gt;/nix/store/arqis7aqh6b9p3a90idcjnr21fp1d0c4-clang-11.1.0.drv&lt;br /&gt;/nix/store/79xln4yb0zql3j1zvc72yfi1y6333crl-disable-rpath.patch&lt;br /&gt;/nix/store/dvdql179kllliqznwkd307bvdny2h96h-source.drv&lt;br /&gt;/nix/store/5ks4wyqmh20wzz3i2yyqky7g0g8jhmsk-libtapi-1100.0.11.drv&lt;br /&gt;/nix/store/aipzgrzywrh1qgw2l3bigbnnwpyr61kn-source.drv&lt;br /&gt;/nix/store/fz56qb3cymbf2acghsqmdgjwwklc411f-install-shell-files.drv&lt;br /&gt;/nix/store/r9iy2wdkq3w0n1hbyg92c2sqg3vcbkhl-ld-ignore-rpath-link.patch&lt;br /&gt;/nix/store/3jjd65b6nyg7g30ixszjcsgb08j5mmhn-0001-Add-useless-descriptions-to-AC_DEFINE.patch&lt;br /&gt;/nix/store/f3ygraph3msfdkyrqg91j7smx1c78qnd-bzip2-1.0.8.drv&lt;br /&gt;/nix/store/j3frsgc0zsrg2pg7w9pqmxjh6qd01aqs-0002-Use-pkg-config-for-libxml2.patch&lt;br /&gt;/nix/store/y26ic2b9n1g1cng3s68753qcxd6fvqrq-xz-5.2.6.drv&lt;br /&gt;/nix/store/yqdd6m0r80c5pn3z7wc1mhn1wqmyli4i-xar-1.6.1.tar.gz.drv&lt;br /&gt;/nix/store/1m30bskfc8z8r4dhb2qv9sd7jyl92srx-xar-1.6.1.drv&lt;br /&gt;/nix/store/7vs1bbfsk0w6p6n5c4bqs3mp7q6n9lyd-source.drv&lt;br /&gt;/nix/store/paybkfdbyh40jzyv6l5ywsbaabqy1sav-pbzx-1.0.2.drv&lt;br /&gt;/nix/store/vwlpvn89jh6h45dj8q9nin0iv7rw85qb-MacOSX-SDK-11.0.0.drv&lt;br /&gt;/nix/store/vb56s92027cg2c6573dahs6830fhz9xk-libobjc-11.0.0.drv&lt;br /&gt;/nix/store/zr59kiajvksmks3vl1hja2ybix9z2zqk-ld-rpath-nonfinal.patch&lt;br /&gt;/nix/store/ldj50kzrjbzh8dzcb7mqqa5gqsmc33v9-cctools-port-949.0.1.drv&lt;br /&gt;/nix/store/0df8rz15sp4ai6md99q5qy9lf0srji5z-0001-Revert-libtool.m4-fix-nm-BSD-flag-detection.patch&lt;br /&gt;/nix/store/k1cgpjsl77c8wfaq0w7n6k1i7fvxr5p8-gas-dwarf-zero-PR29451.patch&lt;br /&gt;/nix/store/lgniihp1bk6mkd5nn9y5ikfim2ignr52-0001-libtool.m4-update-macos-version-detection-block.patch&lt;br /&gt;/nix/store/pa83jbilxjpv5d4f62l3as4wg2fri7r7-always-search-rpath.patch&lt;br /&gt;/nix/store/dqgzlxvbzq4dih9ska9k0y91sc1kv7d9-autoconf-2.69.tar.xz.drv&lt;br /&gt;/nix/store/s8wb99pw1w8yspcz26zfadsy0j1k70ww-autoconf-2.69.drv&lt;br /&gt;/nix/store/sqbhaaayam0xw3a3164ks1vvbrdhl9vq-deterministic.patch&lt;br /&gt;/nix/store/xrw086zw3xqsvy9injgil8n2qdkvkpff-0001-Revert-libtool.m4-fix-the-NM-nm-over-here-B-option-w.patch&lt;br /&gt;/nix/store/zbdl2p9amxdkr9cqjq0yv6h0mr55lm3l-binutils-2.39.tar.bz2.drv&lt;br /&gt;/nix/store/zki7kfvf2f0xdksq9hp004xz1hsxklz3-texinfo-6.8.drv&lt;br /&gt;/nix/store/q1kz46q80wj4bfc314g5p3sylpilpv0i-binutils-2.39.drv&lt;br /&gt;/nix/store/00fij0grbvf9svcxvyk5ys51qcpmk7sa-cctools-binutils-darwin-949.0.1.drv&lt;br /&gt;/nix/store/17agldwh525770zc3w11sdkpdxq8xwjy-gnu-config-2021-01-25.drv&lt;br /&gt;/nix/store/0kkx3whrs8zb85qwwvl42ax99hmk0xpz-pcre-8.45.drv&lt;br /&gt;/nix/store/3qkad2sv1xwngyn4gmx473mzrjhs2jx8-gnugrep-3.7.drv&lt;br /&gt;/nix/store/xn8bjkw4fmyr2xvk9higd54g9s7q2kdz-gmp-with-cxx-6.2.1.drv&lt;br /&gt;/nix/store/hbby7876a2qhk93hlx5ppr3jpgm1lwkl-coreutils-9.1.drv&lt;br /&gt;/nix/store/vj0ai85srlbfn0yvd6mdql2nxan24naa-post-link-sign-hook.drv&lt;br /&gt;/nix/store/vsd7hdcfnzn5n4q44flcdiaa2lv58d6d-signing-utils.drv&lt;br /&gt;/nix/store/z4gcxwcrzc0mkx0zgha8k4jr506kgns7-expand-response-params.drv&lt;br /&gt;/nix/store/vnxdn7rjmsm0naz6sgb98flh437iff1g-cctools-binutils-darwin-wrapper-949.0.1.drv&lt;br /&gt;/nix/store/5gm6pb695hmb0q26cyvmm0ish0p5yig0-clang-wrapper-11.1.0.drv&lt;br /&gt;/nix/store/2cw54rrcb7plvq6v5hxsm3sb42kq6fk5-bootstrap-stage3-stdenv-darwin.drv&lt;br /&gt;/nix/store/3ic95d8vv23cdj4vq7634zh5zcdsda1p-normalize-var.patch&lt;br /&gt;/nix/store/3m53ki7pr92hacq8mghsldg1wc4wrifm-codesign.patch&lt;br /&gt;/nix/store/706qcmh667cmjwffc4vbjs9c745c7hs0-gnu-install-dirs.patch&lt;br /&gt;/nix/store/skwzly3754w50q8mzdpadz8bsfmn6hs8-compiler-rt-11.1.0.src.tar.xz.drv&lt;br /&gt;/nix/store/y87vwjq5v1fi0d077xqrsnkqrax3p4iz-libsanitizer-no-cyclades-11.patch&lt;br /&gt;/nix/store/ylv0v02l6panidz2hkh756fz363yc68h-X86-support-extension.patch&lt;br /&gt;/nix/store/1ffkl3b9gb1qyvmz2r1633vzkhd5bxn2-compiler-rt-libc-11.1.0.drv&lt;br /&gt;/nix/store/9k3fqaqk3k7m510nn57ynd4ngx2x4rxs-clang-wrapper-11.1.0.drv&lt;br /&gt;/nix/store/mmdgxk0mpsq2lzlja8g6mrdjzxpc3wmq-hook.drv&lt;br /&gt;/nix/store/s9rdswvsx68yjwfk57vlw5a34hbjsl2v-source.drv&lt;br /&gt;/nix/store/hrp64mrc7ss3zz8gfl36jfq8fj8qwk2b-libyaml-0.2.5.drv&lt;br /&gt;/nix/store/y7wqq0qnhnhd6hr5d2hxl967fjssfrny-source.drv&lt;br /&gt;/nix/store/vy20n6yc3nd8d1yk0sqa6cah7dpyhv9s-rewrite-tbd-20201114.drv&lt;br /&gt;/nix/store/sn11j0j89hflj7snivdlxvxawvrpzp01-apple-framework-CoreFoundation-11.0.0.drv&lt;br /&gt;/nix/store/aawhsgywk753j170584pf3r6rlismpi6-bootstrap-stage4-stdenv-darwin.drv&lt;br /&gt;/nix/store/qwxrck5ibwhhhsgyblc711vnvw5rx2ib-bootstrap-stage4-stdenv-darwin.drv&lt;br /&gt;/nix/store/bs639bs7frzx60c8bh3nyzmak49zbc3k-hook.drv&lt;br /&gt;/nix/store/cfkvf8l9jw3vrvkss3c5i1ccgnp86nv6-hook.drv&lt;br /&gt;/nix/store/skm4ysx9pk4nnwx75fpk9vghzc130887-perl-5.36.0.drv&lt;br /&gt;/nix/store/ma5p31xpqrcyk0z70l14m7cklw2zkb5s-patchutils-0.3.3.drv&lt;br /&gt;/nix/store/lapsha9pivk9wvrwlrc482i2biq06gw5-CVE-2021-38185-2.patch.drv&lt;br /&gt;/nix/store/ncfbi3qgbflyph4x2ngcnz2584kykzqa-CVE-2021-38185-1.patch.drv&lt;br /&gt;/nix/store/pklid951p82izlw5f06w5yvpps1zwgxw-CVE-2021-38185-3.patch.drv&lt;br /&gt;/nix/store/sp2alvzdl09796wpg2wdf68akiha4d4g-fno-common-fix.patch.drv&lt;br /&gt;/nix/store/zmadr12vmal7mwlgy1w4w4x70lss6j73-cpio-2.13.tar.bz2.drv&lt;br /&gt;/nix/store/d54hwx5g50niakv2lpb9lkp1jjk910q1-cpio-2.13.drv&lt;br /&gt;/nix/store/4yn89klg688jxj8sidmzc84hl7ndcwkm-pkg-config-0.29.2.drv&lt;br /&gt;/nix/store/416vhsxki7508q1ijs8n415fqmvjxyky-pkg-config-wrapper-0.29.2.drv&lt;br /&gt;/nix/store/a736nzx1nigikprmk4ignqzndmz7ls0m-gettext-0.21.drv&lt;br /&gt;/nix/store/2szis9v9c9dzazajlflfdc9jl3b0pihg-gnum4-1.4.19.drv&lt;br /&gt;/nix/store/gbznai4iy45kxmlnrn56fn5m0x2rlspc-texinfo-6.8.drv&lt;br /&gt;/nix/store/f33p3mlclvl3hhnnjsnzw70bshn7criz-autoconf-2.71.drv&lt;br /&gt;/nix/store/dw19klga9vppaq2f6lzj9h7bl4c29mga-automake-1.16.5.drv&lt;br /&gt;/nix/store/hizv414b6ky026kw5f4hwgm2lbxzh08y-perl5.36.0-gettext-1.07.drv&lt;br /&gt;/nix/store/ccwg6bkak9j236lc6k0n713iyn12k996-help2man-1.49.2.drv&lt;br /&gt;/nix/store/jx8mci3vwqi9qv1wkbrfpjya00nl285j-file-5.43.drv&lt;br /&gt;/nix/store/lahdhba85rpm60wxmhxanq1dqi8sa5kb-libtool-2.4.7.drv&lt;br /&gt;/nix/store/g69zz30gq1rb85b6kdz5iidxxbwp1bda-hook.drv&lt;br /&gt;/nix/store/hb2yk99cw015si2ry1l1fygp365as523-openssl-3.0.5.drv&lt;br /&gt;/nix/store/cv65milx0bs2fk1xikgrgrhvkafkpqdk-xar-1.6.1.drv&lt;br /&gt;/nix/store/9wfpm5alc542isr7232gg4qg5njdsgdq-unzip-6.0.drv&lt;br /&gt;/nix/store/ggp35l799v2ggwsk73sz61y7wg3kpqy1-source.drv&lt;br /&gt;/nix/store/msvf870j9sr6lwzakv6m263gk0r7126z-pbzx-1.0.2.drv&lt;br /&gt;/nix/store/0b2hxys6lxyh567j82addkw2k36qjzgz-MacOSX-SDK-11.0.0.drv&lt;br /&gt;/nix/store/0c1ijhg1cq01zcrvnhg24vhm5qn47kwd-libev-4.33.drv&lt;br /&gt;/nix/store/0fqp7dz3rlrrhqjfc69wkmii3j5y0g7d-make-4.3.tar.gz.drv&lt;br /&gt;/nix/store/bqlikyzhzhsjfirhzgmps9p99mhvn9az-bison-3.8.2.drv&lt;br /&gt;/nix/store/c3kdwmns3lyigqqm6c4czisv0n226dy7-source.drv&lt;br /&gt;/nix/store/hp3krbr0v290hwgrcskls6kk545virpz-flex-2.6.4.drv&lt;br /&gt;/nix/store/mdihpwmpbkv1wg4yw03d7wy3fbs0l45w-bsdmake-24.drv&lt;br /&gt;/nix/store/ln3xll7z1avhm03k3m8cdllln7wdgrrk-adv_cmds-119.drv&lt;br /&gt;/nix/store/gs103r2mxcsjs3sw0ibvlnsv54qcw9q6-ps-adv_cmds-119.drv&lt;br /&gt;/nix/store/94y4s4a30p8qqfg8bxr9rgwkdc9m3610-cmake-boot-3.24.2.drv&lt;br /&gt;/nix/store/n91acyjrlchm0snw0w16i4683pf788ax-playtests-darwin.patch&lt;br /&gt;/nix/store/vfb2ll7c9aq63mlkkvmvfq4ibiinq5nh-source.drv&lt;br /&gt;/nix/store/vhp9nf4r8328m91l9l5c8fd9wlmb4bnd-fix-darwin-dylib-names-hook.drv&lt;br /&gt;/nix/store/0w2r0sw68fwxqqki50mqx83iz1q6clgq-zstd-1.5.2.drv&lt;br /&gt;/nix/store/4rj3r6gga5ipdfkiw9ahmrj9yr411ry6-libobjc-11.0.0.drv&lt;br /&gt;/nix/store/vc3jlishkiy0qsw95smzzzr9vcgafi56-source.drv&lt;br /&gt;/nix/store/jhs384scb8wk3sn9dw92khjpay91x9mg-libtapi-1100.0.11.drv&lt;br /&gt;/nix/store/ylsnxqqfn3gpp0wr133z4ksj2bhklrg7-source.drv&lt;br /&gt;/nix/store/z8gyza1abwd7jh3pv10r6kcrgphi2h2r-install-shell-files.drv&lt;br /&gt;/nix/store/0xwx3m2lvpw92w4j45n1772f3aimskxg-cctools-port-949.0.1.drv&lt;br /&gt;/nix/store/0y5flakfvnf813cwrr8rygf1jnk0gfnc-CVE-2019-13636.patch&lt;br /&gt;/nix/store/4r8s8hcwyvvvnpcncps09zscqkh5qapx-no-install-statedir.patch&lt;br /&gt;/nix/store/bljrd66ff2vp1zqikdfrz5x0k90kaw81-findutils-4.9.0.tar.xz.drv&lt;br /&gt;/nix/store/10zrhmiqirncfbxyac8xrjg6p8mqf30k-findutils-4.9.0.drv&lt;br /&gt;/nix/store/53d5wfhiifvxzgj847fva6q6py02m1g1-expand-response-params.drv&lt;br /&gt;/nix/store/c2yrfg597pjcl1867pyir9jiq4fw3jl4-source.drv&lt;br /&gt;/nix/store/9h8631c24qp90y7w0fvsl3c0dv8pv6pi-sigtool-0.1.2.drv&lt;br /&gt;/nix/store/anpnd9wprrqhf1fdcwy96j66vb5fcsii-signing-utils.drv&lt;br /&gt;/nix/store/5xzxmr5xpnqx0b0ar0kpy7kw0282a1jc-autoconf-2.69.drv&lt;br /&gt;/nix/store/a921f1jk651ahri5f05gca9rwdiq3rlz-binutils-2.39.drv&lt;br /&gt;/nix/store/laack7baw4rfxgvyqfrfydbn1v8zz9b6-clang-11-12-LLVMgold-path.patch.drv&lt;br /&gt;/nix/store/d7h3zix26zzgdp0rzsyb19hrif8cbzmz-clang-11.1.0.drv&lt;br /&gt;/nix/store/jxpxgb5hph4lw3s12g7lyqz0ci8a37ra-cctools-binutils-darwin-949.0.1.drv&lt;br /&gt;/nix/store/w3hhid4crxafa1j03iq4a1y30d8p0sk2-post-link-sign-hook.drv&lt;br /&gt;/nix/store/5w0k8f3ialhwr7p5g0y94zny3j74ryzn-cctools-binutils-darwin-wrapper-949.0.1.drv&lt;br /&gt;/nix/store/74fhpxplxsc5qg1c67hb5picw88flx3d-libssh2-1.10.0.drv&lt;br /&gt;/nix/store/76nc36kgrvhx8n9m8jz7ywrrqbcdkr48-gnu-config-2021-01-25.drv&lt;br /&gt;/nix/store/9wyqdma0i671db7l4m0a3qbp6jpza2vi-tar-1.34.tar.xz.drv&lt;br /&gt;/nix/store/90phqk429ip6kbi5jlm0lcg4h2xxaq2k-gnutar-1.34.drv&lt;br /&gt;/nix/store/2j0fmwgm5ybgnc8jprc4ypcxw6s4r2nv-Allow_input_files_to_be_missing_for_ed-style_patches.patch&lt;br /&gt;/nix/store/7mq3l9rhjbmpf06fwnrp51q6sy1l6g9j-patch-2.7.6.tar.xz.drv&lt;br /&gt;/nix/store/8p3z4jsrxr5ck92iasc9bc7bmapb5mmg-CVE-2018-6951.patch&lt;br /&gt;/nix/store/h2fcbw7ghgn3i4qadszdp272w4dab7ln-lzip-setup-hook.sh&lt;br /&gt;/nix/store/vvciv7wkw3z9x0bj4jszb31crk0lix8y-lzip-1.23.tar.gz.drv&lt;br /&gt;/nix/store/6gj38dbipcd2vbjcsv028jmpnn6bv1sz-lzip-1.23.drv&lt;br /&gt;/nix/store/bv0xxgk72g693vdgs3w2w3d252hlxys9-ed-1.18.tar.lz.drv&lt;br /&gt;/nix/store/lmssb21nd3zkv5gssngmk92bdf0q4h1w-ed-1.18.drv&lt;br /&gt;/nix/store/npqvgz8c8w9kpj1gdma5bbn0pdkisyzp-CVE-2018-6952.patch&lt;br /&gt;/nix/store/rxgi2l6jrgd5xmrrsbcv5cwi558lb36m-CVE-2019-13638-and-CVE-2018-20969.patch&lt;br /&gt;/nix/store/sz6rhpf50kqh75fhqwl75q6dm6fr9xyd-CVE-2018-1000156.patch&lt;br /&gt;/nix/store/aqmy225ay8m4yg51mib0bkpz3r1w2z7j-patch-2.7.6.drv&lt;br /&gt;/nix/store/2k52bklbjhhq47dn35gm833vlh06fgfn-0001-No-impure-bin-sh.patch&lt;br /&gt;/nix/store/6cc64ayl3fd2nc28ffw47cqsqi2bg1sn-0002-remove-impure-dirs.patch&lt;br /&gt;/nix/store/avhna3r651j0frjk7jhy771za84mlh4j-gnumake-4.3.drv&lt;br /&gt;/nix/store/b7mkkj1kbaxpihqh3k12s4a3viz9pdvk-hook.drv&lt;br /&gt;/nix/store/dy63w31j33lknbd95fl81f24sndlgf35-source.drv&lt;br /&gt;/nix/store/bl8jncx9dy4rr54cn8p1vwpf3wa01yyj-brotli-1.0.9.drv&lt;br /&gt;/nix/store/rp4wqqv22pjl2235ra7ag3nb7yy0b5kr-diffutils-3.8.tar.xz.drv&lt;br /&gt;/nix/store/d554acfihg4ssgij79ybd6ls0ww1p14x-diffutils-3.8.drv&lt;br /&gt;/nix/store/szfjhkhmsxfyc289vz39882d3l866888-fix-error-darwin.patch&lt;br /&gt;/nix/store/z8912zv98rl5yv104mf99j3k72xva3nr-libidn2-2.3.2.tar.gz.drv&lt;br /&gt;/nix/store/qhs49gbxssyr8im8h2xc058gh4kdndv6-libunistring-1.0.tar.gz.drv&lt;br /&gt;/nix/store/zipavm2mq94fsw09kx9mw7pi5n8xhkp4-libunistring-1.0.drv&lt;br /&gt;/nix/store/gzy4kvn6djdm9b631fcm3g76pijsvvq7-libidn2-2.3.2.drv&lt;br /&gt;/nix/store/hvp22x3rmpwfj6kcf0hj9dcv8lrkd4hs-clang-wrapper-11.1.0.drv&lt;br /&gt;/nix/store/xhmwfi4xij5ryg9x2j0n6067ki55dscr-c-ares-1.18.1.drv&lt;br /&gt;/nix/store/qpsbvsn7dl8gmlsmh474m2h9gmh8mg7i-nghttp2-1.49.0.drv&lt;br /&gt;/nix/store/lwhmzpa1py1k244hfd3l026kc7r7b6ib-sed-4.8.tar.xz.drv&lt;br /&gt;/nix/store/rvq62srcss99303nbgr94bq4av9kjv8q-gnused-4.8.drv&lt;br /&gt;/nix/store/pid9is7y02wzdplvk6jcw2n0vfdh2y32-openssl-1.1.1q.drv&lt;br /&gt;/nix/store/pz4hlrs0xa3q9knmn83v8v3wpf88iigz-bootstrap_cmds-121.drv&lt;br /&gt;/nix/store/6m3w5kmj2m73nj3pakh6kaqjs2k64p5m-libkrb5-1.20.drv&lt;br /&gt;/nix/store/sa6lxl61bh1wmr9rbpbyiq5wg2y5kbf2-curl-7.85.0.drv&lt;br /&gt;/nix/store/vff2y41m68f5garsjmjxc0xfjrvw9pfm-setup-hook.drv&lt;br /&gt;/nix/store/w99jp1rsykvc8rb09hr03c0rakw2dgzc-gzip-1.12.tar.xz.drv&lt;br /&gt;/nix/store/swj6qdzryq4ln3h172s4h45wf0ks7g4j-gzip-1.12.drv&lt;br /&gt;/nix/store/v994hjy8kmwi7g5li2lrpss92ldj0a54-ICU-66108.drv&lt;br /&gt;/nix/store/pmxi9k28qls2yr7jhfnz3qp1fjchy64m-gawk-5.1.1.tar.xz.drv&lt;br /&gt;/nix/store/x9ndmqlkrngf4jdy4zmvmal9ma7gh3z0-gawk-5.1.1.drv&lt;br /&gt;/nix/store/5pfijbmkmy5kc81yzp0lpm4gpm2aq5rk-source.drv&lt;br /&gt;/nix/store/zf7v9n0hxgb302wf08y762s0rhsbnqd2-source.drv&lt;br /&gt;/nix/store/qr3r1g7n6xppyxb88726z7yr6r246nzd-libyaml-0.2.5.drv&lt;br /&gt;/nix/store/91bfp6zivp9jq9sqq6iqq7vdpghdaffa-rewrite-tbd-20201114.drv&lt;br /&gt;/nix/store/ya29pfy418vy1l0i5symnyprdb80c8ha-apple-framework-CoreFoundation-11.0.0.drv&lt;br /&gt;/nix/store/cdk3pz11mvhqpphr0197wwmzhqppn7rl-stdenv-darwin.drv&lt;br /&gt;/nix/store/26z459l0k3znhr99dsshkzj0il8dhwxx-perl-5.36.0.drv&lt;br /&gt;/nix/store/sbcibnd6hym9c2rlbfnyhrbmlvgmsa59-stdenv-darwin.drv&lt;br /&gt;/nix/store/sr9iyw9n2awaikjzvjfgwhvvn6vimf5w-pkg-config-0.29.2.drv&lt;br /&gt;/nix/store/3zmkapnjbnajncxw7cix0lmj1fbspwa0-pkg-config-wrapper-0.29.2.drv&lt;br /&gt;/nix/store/7dlkjg6cyd8d47qwiamxi77hld2z5360-mirrors-list.drv&lt;br /&gt;/nix/store/i0zc5mm4vpj3lviyydb9s73j53mypkrg-nghttp2-1.49.0.drv&lt;br /&gt;/nix/store/w37b5s734m53gxnzqyb5v0v98mhdfg2i-coreutils-9.1.drv&lt;br /&gt;/nix/store/mmsrbggvzn6rwlx1ijw90sw3wvhzj18j-openssl-3.0.5.drv&lt;br /&gt;/nix/store/n7iibs6b818v402j0yczf4mgy73sbzpv-libssh2-1.10.0.drv&lt;br /&gt;/nix/store/z074ki54p77r7db3wsgxh9p18f67xnv8-curl-7.85.0.drv&lt;br /&gt;/nix/store/hwymznwkd1kgf5ldcldjl9bnc1wz2azb-hello-2.12.1.tar.gz.drv&lt;br /&gt;/nix/store/4a78f0s4p5h2sbcrrzayl5xas2i7zq1m-hello-2.12.1.drv&lt;/code&gt;&lt;/pre&gt;&lt;/details&gt;&lt;p&gt;The above command not only lists the build-time dependencies for the &lt;code&gt;hello&lt;/code&gt; package, but also their transitive build-time dependencies. In other words, these are all the derivations needed to build the &lt;code&gt;hello&lt;/code&gt; package “from scratch” in the absence of any cache products. We can see the complete tree of build-time dependencies like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-store &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--tree&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DERIVATION}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/4a78f0s4p5h2sbcrrzayl5xas2i7zq1m-hello-2.12.1.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;├───/nix/store/9krlzvny65gdc8s7kpb6lkx8cd02c25b-default-builder.sh&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;├───/nix/store/labgzlb16svs1z7z9a6f49b5zi8hb11s-bash-5.1-p16.drv&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   ├───/nix/store/7kcayxwk8khycxw1agmcyfm9vpsqpw4s-bootstrap-tools.drv&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/3glray2y14jpk1h6i599py7jdn3j2vns-mkdir.drv&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/50ql5q0raqkcydmpi6wqvnhs9hpdgg5f-cpio.drv&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-8&quot;&gt;&lt;a href=&quot;#cb16-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/81xahsrhpn9mbaslgi5sz7gsqra747d4-unpack-bootstrap-tools-&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-9&quot;&gt;&lt;a href=&quot;#cb16-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/fzbk4fnbjqhr0l1scx5fspsx5najbrbm-bootstrap-tools.cpio.bz&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-10&quot;&gt;&lt;a href=&quot;#cb16-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/gxzl4vmccqj89yh7kz62frkxzgdpkxmp-sh.drv&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-11&quot;&gt;&lt;a href=&quot;#cb16-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   └───/nix/store/pjbpvdy0gais8nc4sj3kwpniq8mgkb42-bzip2.drv&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-12&quot;&gt;&lt;a href=&quot;#cb16-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   ├───/nix/store/3lhw0v2wyzimzl96xfsk6psfmzh38irh-bash51-007.drv&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-13&quot;&gt;&lt;a href=&quot;#cb16-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/7kcayxwk8khycxw1agmcyfm9vpsqpw4s-bootstrap-tools.drv [..&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-14&quot;&gt;&lt;a href=&quot;#cb16-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/nbxwxwqwcr9rrmxb6gb532f18102815x-bootstrap-stage0-stdenv&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-15&quot;&gt;&lt;a href=&quot;#cb16-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/1i5y55x4b4m9qkx5dqbmr1r6bvrqbanw-multiple-outputs.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-16&quot;&gt;&lt;a href=&quot;#cb16-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/59jmzisg8fkm9c125fw384dqq1np602l-move-docs.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-17&quot;&gt;&lt;a href=&quot;#cb16-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/7kcayxwk8khycxw1agmcyfm9vpsqpw4s-bootstrap-tools.drv&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-18&quot;&gt;&lt;a href=&quot;#cb16-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/bnj8d7mvbkg3vdb07yz74yhl3g107qq5-patch-shebangs.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-19&quot;&gt;&lt;a href=&quot;#cb16-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-20&quot;&gt;&lt;a href=&quot;#cb16-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/ckzrg0f0bdyx8rf703nc61r3hz5yys9q-builder.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-21&quot;&gt;&lt;a href=&quot;#cb16-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-22&quot;&gt;&lt;a href=&quot;#cb16-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/g8xg0i02aqwhgxwd2vnp5ax3d6lrkg1v-strip.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-23&quot;&gt;&lt;a href=&quot;#cb16-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/jngr4r80x5jn482ckqrfh08ljrx1k86f-setup.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-24&quot;&gt;&lt;a href=&quot;#cb16-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-25&quot;&gt;&lt;a href=&quot;#cb16-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/kxw6q8v6isaqjm702d71n2421cxamq68-make-symlinks-relat&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-26&quot;&gt;&lt;a href=&quot;#cb16-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-27&quot;&gt;&lt;a href=&quot;#cb16-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/ngg1cv31c8c7bcm2n8ww4g06nq7s4zhm-set-source-date-epo&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-28&quot;&gt;&lt;a href=&quot;#cb16-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   └───/nix/store/wlwcf1nw2b21m4gghj70hbg1v7x53ld8-reproducible-builds&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-29&quot;&gt;&lt;a href=&quot;#cb16-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   ├───/nix/store/i65va14cylqc74y80ksgnrsaixk39mmh-mirrors-list.drv&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-30&quot;&gt;&lt;a href=&quot;#cb16-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/7kcayxwk8khycxw1agmcyfm9vpsqpw4s-bootstrap-tools.drv&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-31&quot;&gt;&lt;a href=&quot;#cb16-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   ├───/nix/store/nbxwxwqwcr9rrmxb6gb532f18102815x-bootstrap-stage0-st&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-32&quot;&gt;&lt;a href=&quot;#cb16-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   │   └───/nix/store/ycwm35msmsdi2qgjax1slmjffsmwy8am-write-mirror-list.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-33&quot;&gt;&lt;a href=&quot;#cb16-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;│&lt;/span&gt;   │   └───/nix/store/lphxcbw5wqsjskipaw1fb8lcf6pm6ri6-builder.sh&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-34&quot;&gt;&lt;a href=&quot;#cb16-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we were to build and cache all of these build-time dependencies then our local &lt;code&gt;/nix/store&lt;/code&gt; and cache would explode in size. Also, we do &lt;em&gt;not&lt;/em&gt; need to do this because there is a better solution …&lt;/p&gt;&lt;h4 id=&quot;correct-solution&quot;&gt;Correct solution&lt;/h4&gt;&lt;p&gt;The solution that provides the best value is to cache all transitive build-time dependencies &lt;em&gt;that are present within the current &lt;code&gt;/nix/store&lt;/code&gt;&lt;/em&gt; after building the top-level build product. In other words, don’t bother to predict which build-time dependencies we need; instead, empirically infer which ones to cache based on which ones Nix installed and used along the way.&lt;/p&gt;&lt;p&gt;This is not only more accurate, but it’s also more efficient: we don’t need to build or download anything new because we’re only caching things we already locally installed.&lt;/p&gt;&lt;p&gt;As a matter of fact, the &lt;code&gt;nix-store&lt;/code&gt; command already supports this use case quite well. If you consult the documentation for the &lt;code&gt;--requisites&lt;/code&gt; flag, you’ll find this gem:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;       • --requisites; -R&lt;br /&gt;         Prints out the closure (../glossary.md) of the store path paths.&lt;br /&gt;&lt;br /&gt;         This query has one option:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;         • --include-outputs Also include the existing output paths of store&lt;br /&gt;           derivations, and their closures.&lt;br /&gt;&lt;br /&gt;         This query can be used to implement various kinds of deployment. A&lt;br /&gt;         source deployment is obtained by distributing the closure of a store&lt;br /&gt;         derivation. A binary deployment is obtained by distributing the closure&lt;br /&gt;         of an output path. A cache deployment (combined source/binary&lt;br /&gt;         deployment, including binaries of build-time-only dependencies) is&lt;br /&gt;         obtained by distributing the closure of a store derivation and&lt;br /&gt;         specifying the option --include-outputs.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We’re specifically interested in a “cache deployment”, so we’re going to do exactly what the documentation says and use the &lt;code&gt;--include-outputs&lt;/code&gt; flag in conjunction with the &lt;code&gt;--requisites&lt;/code&gt; flag. In other words, the &lt;code&gt;--include-outputs&lt;/code&gt; flag was expressly created for this use case!&lt;/p&gt;&lt;p&gt;So here is the simplest, but least robust, version of the script for computing the set of build-time dependencies to cache, as a Bash array:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# Continue reading before using this code; there&amp;#39;s a more robust version later&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# Optional: Perform the build if you haven&amp;#39;t already&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix build &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILD}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-5&quot;&gt;&lt;a href=&quot;#cb18-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-6&quot;&gt;&lt;a href=&quot;#cb18-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; DERIVATION=&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;nix&lt;/span&gt; path-info &lt;span class=&quot;at&quot;&gt;--derivation&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILD}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-7&quot;&gt;&lt;a href=&quot;#cb18-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-8&quot;&gt;&lt;a href=&quot;#cb18-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; DEPENDENCIES=&lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;nix-store&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--requisites&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--include-outputs&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DERIVATION}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-9&quot;&gt;&lt;a href=&quot;#cb18-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-10&quot;&gt;&lt;a href=&quot;#cb18-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix store sign &lt;span class=&quot;at&quot;&gt;--key-file&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${KEY_FILE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--recursive&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DEPENDENCIES&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-11&quot;&gt;&lt;a href=&quot;#cb18-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-12&quot;&gt;&lt;a href=&quot;#cb18-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix copy &lt;span class=&quot;at&quot;&gt;--to&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${CACHE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DEPENDENCIES&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above code is simple and clear enough to illustrate the idea, but we’re going to make a few adjustments to make this code more robust.&lt;/p&gt;&lt;p&gt;Specifically, we’re going to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Change the code to support an array of build targets&lt;/p&gt;&lt;p&gt;i.e. &lt;code&gt;BUILDS&lt;/code&gt; instead of &lt;code&gt;BUILD&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Use &lt;code&gt;mapfile&lt;/code&gt; instead of &lt;code&gt;($(…))&lt;/code&gt; to create intermediate arrays&lt;/p&gt;&lt;p&gt;See: &lt;a href=&quot;https://www.shellcheck.net/wiki/SC2207&quot;&gt;&lt;code&gt;SC2207&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Use &lt;code&gt;xargs&lt;/code&gt; to handle command line length limits&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… which gives us:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# Optional: Perform the build if you haven&amp;#39;t already&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; echo &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILDS&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;xargs&lt;/span&gt; nix build&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-3&quot;&gt;&lt;a href=&quot;#cb19-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-4&quot;&gt;&lt;a href=&quot;#cb19-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; mapfile &lt;span class=&quot;at&quot;&gt;-t&lt;/span&gt; DERIVATIONS &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${BUILDS&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;xargs&lt;/span&gt; nix path-info &lt;span class=&quot;at&quot;&gt;--derivation&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-5&quot;&gt;&lt;a href=&quot;#cb19-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-6&quot;&gt;&lt;a href=&quot;#cb19-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; mapfile &lt;span class=&quot;at&quot;&gt;-t&lt;/span&gt; DEPENDENCIES &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;(&lt;/span&gt;&lt;span class=&quot;bu&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DERIVATIONS&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;xargs&lt;/span&gt; nix-store &lt;span class=&quot;at&quot;&gt;--query&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--requisites&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--include-outputs&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-7&quot;&gt;&lt;a href=&quot;#cb19-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-8&quot;&gt;&lt;a href=&quot;#cb19-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; echo &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DEPENDENCIES&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;xargs&lt;/span&gt; nix store sign &lt;span class=&quot;at&quot;&gt;--key-file&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${KEY_FILE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--recursive&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-9&quot;&gt;&lt;a href=&quot;#cb19-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-10&quot;&gt;&lt;a href=&quot;#cb19-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; echo &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${DEPENDENCIES&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;[@]&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;xargs&lt;/span&gt; nix copy &lt;span class=&quot;at&quot;&gt;--to&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${CACHE}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… where you:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;replace &lt;code&gt;BUILDS&lt;/code&gt; with a Bash array containing what you want to build&lt;/p&gt;&lt;p&gt;e.g. &lt;code&gt;.#example&lt;/code&gt; or &lt;code&gt;nixpkgs#hello&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;replace &lt;code&gt;CACHE&lt;/code&gt; with whatever store you use as your cache&lt;/p&gt;&lt;p&gt;e.g. &lt;code&gt;s3://cache.example.com&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;replace &lt;code&gt;KEY_FILE&lt;/code&gt; with the path to your cache signing key&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;That last script is the pedantically robust way to do this in Bash if you want to be super paranoid. The above script might not work in other shells, but hopefully this post was sufficiently clear that you can adapt the script to your needs.&lt;/p&gt;&lt;p&gt;If I made any mistakes in the above post, let me know and I can fix them.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/7096293096571919933/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/10/how-to-correctly-cache-build-time.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7096293096571919933"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7096293096571919933"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/10/how-to-correctly-cache-build-time.html" title="How to correctly cache build-time dependencies using Nix"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-5833984871945391183</id><published>2022-10-20T07:31:00.008-07:00</published><updated>2022-10-22T13:12:19.341-07:00</updated><title type="text">What does &quot;isomorphic&quot; mean (in Haskell)?</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot;&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot;&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;What does &amp;quot;isomorphic&amp;quot; mean (in Haskell)&quot;&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;An explanation of isomorphisms in the context of the Haskell programming language&quot;&gt;  &lt;title&gt;What does &quot;isomorphic&quot; mean (in Haskell)&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       overflow-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }       h1 {         font-size: 1.8em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;       overflow-wrap: normal;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC ul {       padding-left: 1.3em;     }     #TOC &gt; ul {       padding-left: 0;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { color: #008000; } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { color: #008000; font-weight: bold; } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Sometimes you’ll hear someone describe two things as being “isomorphic” to one another and I wanted to explain what that means.&lt;/p&gt;&lt;p&gt;You might have already guessed that “isomorphic” is a synonym for “equivalent”, and that would have been a pretty good guess. Really, the main difference between the two words is that “isomorphic” has a more precise and more general definition than “equivalent”.&lt;/p&gt;&lt;p&gt;In this post I will introduce a more precise definition of “isomorphic”, using Haskell code. This definition won’t be the fully general definition, but I still hope to give you some taste of how “isomorphic” can denote something more than just “equivalent”.&lt;/p&gt;&lt;h4 id=&quot;the-simple-version&quot;&gt;The simple version&lt;/h4&gt;&lt;p&gt;The simplest and least general definition of “isomorphic” (in Haskell) is:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Two types, &lt;code&gt;A&lt;/code&gt;, and &lt;code&gt;B&lt;/code&gt;, are isomorphic if there exist two functions, &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt; of the following types:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;forward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;backward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… such that the following two equations (which I will refer to as the “isomorphism laws”) are true:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;code&gt;id&lt;/code&gt; here is the identity function from Haskell’s Prelude, defined like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and &lt;code&gt;(.)&lt;/code&gt; is the function composition operator (also from Haskell’s Prelude), defined like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(.) ::&lt;/span&gt; (b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; g) x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f (g x)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;According to the above definition, the types &lt;code&gt;Bool -&amp;gt; a&lt;/code&gt; and &lt;code&gt;(a, a)&lt;/code&gt; are isomorphic, because we can define two functions:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;forward ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a, a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward function &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (function &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;, function &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;backward ::&lt;/span&gt; (a, a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward (first, second) &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; first&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward (first, second) &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; second&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and we can prove that those two functions satisfy the isomorphism laws using &lt;a href=&quot;https://www.haskellforall.com/2013/12/equational-reasoning.html&quot;&gt;equational reasoning&lt;/a&gt;.&lt;/p&gt;&lt;details&gt;&lt;summary&gt;Proof of the isomorphism laws (click to expand) &lt;/summary&gt;&lt;p&gt;Here’s the proof of the first isomorphism law:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; backward&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (f . g) = \x -&amp;gt; f (g x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … where:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- f = forward&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- g = backward&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; forward (backward x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- x = (first, second)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-12&quot;&gt;&lt;a href=&quot;#cb6-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \(first, second) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; forward (backward (first, second))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-13&quot;&gt;&lt;a href=&quot;#cb6-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-14&quot;&gt;&lt;a href=&quot;#cb6-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- forward function = (function False, function True)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-15&quot;&gt;&lt;a href=&quot;#cb6-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \(first, second) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-16&quot;&gt;&lt;a href=&quot;#cb6-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (backward (first, second) &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;, backward (first, second) &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-17&quot;&gt;&lt;a href=&quot;#cb6-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-18&quot;&gt;&lt;a href=&quot;#cb6-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- backward (first, second) False = first&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-19&quot;&gt;&lt;a href=&quot;#cb6-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- backward (first, second) True  = second&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-20&quot;&gt;&lt;a href=&quot;#cb6-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \(first, second) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (first, second)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-21&quot;&gt;&lt;a href=&quot;#cb6-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-22&quot;&gt;&lt;a href=&quot;#cb6-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- x = (first, second)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-23&quot;&gt;&lt;a href=&quot;#cb6-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-24&quot;&gt;&lt;a href=&quot;#cb6-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-25&quot;&gt;&lt;a href=&quot;#cb6-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-26&quot;&gt;&lt;a href=&quot;#cb6-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-27&quot;&gt;&lt;a href=&quot;#cb6-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- id x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-28&quot;&gt;&lt;a href=&quot;#cb6-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-29&quot;&gt;&lt;a href=&quot;#cb6-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-30&quot;&gt;&lt;a href=&quot;#cb6-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-31&quot;&gt;&lt;a href=&quot;#cb6-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-32&quot;&gt;&lt;a href=&quot;#cb6-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- η-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-33&quot;&gt;&lt;a href=&quot;#cb6-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and here is the proof of the second isomorphism law:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; forward&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (f . g) = \x -&amp;gt; f (g x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … where:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- f = backward&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- g = forward&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-9&quot;&gt;&lt;a href=&quot;#cb7-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- x = function&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-10&quot;&gt;&lt;a href=&quot;#cb7-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; backward (forward function)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-11&quot;&gt;&lt;a href=&quot;#cb7-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-12&quot;&gt;&lt;a href=&quot;#cb7-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- forward function = (function False, function True)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-13&quot;&gt;&lt;a href=&quot;#cb7-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; backward (function &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;, function &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-14&quot;&gt;&lt;a href=&quot;#cb7-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-15&quot;&gt;&lt;a href=&quot;#cb7-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- η-expand&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-16&quot;&gt;&lt;a href=&quot;#cb7-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function bool &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; backward (function &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;, function &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;) bool&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-17&quot;&gt;&lt;a href=&quot;#cb7-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-18&quot;&gt;&lt;a href=&quot;#cb7-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- There are two possible cases:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-19&quot;&gt;&lt;a href=&quot;#cb7-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-20&quot;&gt;&lt;a href=&quot;#cb7-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Case #0: bool = False&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-21&quot;&gt;&lt;a href=&quot;#cb7-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Case #1: bool = True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-22&quot;&gt;&lt;a href=&quot;#cb7-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-23&quot;&gt;&lt;a href=&quot;#cb7-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Proof for case #0: bool = False&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-24&quot;&gt;&lt;a href=&quot;#cb7-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function bool &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; backward (function &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;, function &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-25&quot;&gt;&lt;a href=&quot;#cb7-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-26&quot;&gt;&lt;a href=&quot;#cb7-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- backward (first, second) False = first&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-27&quot;&gt;&lt;a href=&quot;#cb7-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-28&quot;&gt;&lt;a href=&quot;#cb7-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- … where:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-29&quot;&gt;&lt;a href=&quot;#cb7-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-30&quot;&gt;&lt;a href=&quot;#cb7-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- first  = function False&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-31&quot;&gt;&lt;a href=&quot;#cb7-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- second = function True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-32&quot;&gt;&lt;a href=&quot;#cb7-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function bool &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; function &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-33&quot;&gt;&lt;a href=&quot;#cb7-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-34&quot;&gt;&lt;a href=&quot;#cb7-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- bool = False&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-35&quot;&gt;&lt;a href=&quot;#cb7-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-36&quot;&gt;&lt;a href=&quot;#cb7-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- … in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-37&quot;&gt;&lt;a href=&quot;#cb7-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function bool &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; function bool&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-38&quot;&gt;&lt;a href=&quot;#cb7-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-39&quot;&gt;&lt;a href=&quot;#cb7-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- η-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-40&quot;&gt;&lt;a href=&quot;#cb7-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; function&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-41&quot;&gt;&lt;a href=&quot;#cb7-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-42&quot;&gt;&lt;a href=&quot;#cb7-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- id x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-43&quot;&gt;&lt;a href=&quot;#cb7-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-44&quot;&gt;&lt;a href=&quot;#cb7-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- … in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-45&quot;&gt;&lt;a href=&quot;#cb7-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; function&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-46&quot;&gt;&lt;a href=&quot;#cb7-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-47&quot;&gt;&lt;a href=&quot;#cb7-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- η-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-48&quot;&gt;&lt;a href=&quot;#cb7-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-49&quot;&gt;&lt;a href=&quot;#cb7-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-50&quot;&gt;&lt;a href=&quot;#cb7-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Proof for case #1: bool = True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-51&quot;&gt;&lt;a href=&quot;#cb7-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function bool &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; backward (function &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;, function &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;) &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-52&quot;&gt;&lt;a href=&quot;#cb7-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-53&quot;&gt;&lt;a href=&quot;#cb7-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- backward (first, second) True = second&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-54&quot;&gt;&lt;a href=&quot;#cb7-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-55&quot;&gt;&lt;a href=&quot;#cb7-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- … where:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-56&quot;&gt;&lt;a href=&quot;#cb7-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-57&quot;&gt;&lt;a href=&quot;#cb7-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- first  = function False&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-58&quot;&gt;&lt;a href=&quot;#cb7-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- second = function True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-59&quot;&gt;&lt;a href=&quot;#cb7-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function bool &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; function &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-60&quot;&gt;&lt;a href=&quot;#cb7-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-61&quot;&gt;&lt;a href=&quot;#cb7-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- b = True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-62&quot;&gt;&lt;a href=&quot;#cb7-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-63&quot;&gt;&lt;a href=&quot;#cb7-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- … in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-64&quot;&gt;&lt;a href=&quot;#cb7-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function bool &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; function bool&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-65&quot;&gt;&lt;a href=&quot;#cb7-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-66&quot;&gt;&lt;a href=&quot;#cb7-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- η-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-67&quot;&gt;&lt;a href=&quot;#cb7-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; function&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-68&quot;&gt;&lt;a href=&quot;#cb7-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-69&quot;&gt;&lt;a href=&quot;#cb7-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- id x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-70&quot;&gt;&lt;a href=&quot;#cb7-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-71&quot;&gt;&lt;a href=&quot;#cb7-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- … in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-72&quot;&gt;&lt;a href=&quot;#cb7-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \function &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; function&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-73&quot;&gt;&lt;a href=&quot;#cb7-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-74&quot;&gt;&lt;a href=&quot;#cb7-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- η-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-75&quot;&gt;&lt;a href=&quot;#cb7-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;&lt;p&gt;We’ll use the notation &lt;code&gt;A ≅ B&lt;/code&gt; as a short-hand for “&lt;code&gt;A&lt;/code&gt; is isomorphic to &lt;code&gt;B&lt;/code&gt;”, so we can also write:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a ≅ (a, a)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Whenever we declare that two types are isomorphic we need to actually specify what the &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt;conversion functions are and prove that they satisfy isomorphism laws. The existence of &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt;functions of the correct input and output types is not enough to establish that the two types are isomorphic.&lt;/p&gt;&lt;p&gt;For example, suppose we changed the definition of &lt;code&gt;forward&lt;/code&gt; to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;forward ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a, a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward function &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (function &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;, function &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then &lt;code&gt;forward . backward&lt;/code&gt; and &lt;code&gt;backward . forward&lt;/code&gt; would still type-check and have the right type, but they would no longer be equal to &lt;code&gt;id&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;In other words, when discussing isomorphic types, it’s technically not enough that the two types are equivalent. The &lt;em&gt;way&lt;/em&gt; in which they are equivalent matters, too, if we want to be pedantic. In practice, though, if there’s only one way to implement the two conversion functions then people won’t bother to explicitly specify them.&lt;/p&gt;&lt;p&gt;The reason why this is important is because an isomorphism also gives us an explicit way to convert between the two types.  We're not just declaring that they're equivalent, but we're spelling out exactly how to transform each type into the other type, which is very useful!&lt;/p&gt;&lt;h4 id=&quot;more-examples&quot;&gt;More examples&lt;/h4&gt;&lt;p&gt;Let’s speedrun through a few more examples of isomorphic types, which all parallel the rules of arithmetic:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- 0 + a = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt; a ≅ a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- a + (b + c) = (a + b) + c&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; a (&lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; b c) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; a b) c&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-7&quot;&gt;&lt;a href=&quot;#cb10-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- 1 × a = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-8&quot;&gt;&lt;a href=&quot;#cb10-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;((), a) ≅ a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-9&quot;&gt;&lt;a href=&quot;#cb10-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-10&quot;&gt;&lt;a href=&quot;#cb10-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- a × (b × c) = (a × b) × c&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-11&quot;&gt;&lt;a href=&quot;#cb10-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(a, (b, c)) ≅ ((a, b), c)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-12&quot;&gt;&lt;a href=&quot;#cb10-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-13&quot;&gt;&lt;a href=&quot;#cb10-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- 0 × a = 0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-14&quot;&gt;&lt;a href=&quot;#cb10-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;, a) ≅ &lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-15&quot;&gt;&lt;a href=&quot;#cb10-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-16&quot;&gt;&lt;a href=&quot;#cb10-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- a × (b + c) = (a × b) + (a × c)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-17&quot;&gt;&lt;a href=&quot;#cb10-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(a, &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; b c) ≅ &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; (a, b) (a, c)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-18&quot;&gt;&lt;a href=&quot;#cb10-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-19&quot;&gt;&lt;a href=&quot;#cb10-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- a ^ 1 = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-20&quot;&gt;&lt;a href=&quot;#cb10-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;() &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a ≅ a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-21&quot;&gt;&lt;a href=&quot;#cb10-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-22&quot;&gt;&lt;a href=&quot;#cb10-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- a ^ 0 = 1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-23&quot;&gt;&lt;a href=&quot;#cb10-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a ≅ ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-24&quot;&gt;&lt;a href=&quot;#cb10-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-25&quot;&gt;&lt;a href=&quot;#cb10-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (c ^ b) ^ a = (c ^ a) ^ b&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-26&quot;&gt;&lt;a href=&quot;#cb10-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c ≅ b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-27&quot;&gt;&lt;a href=&quot;#cb10-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-28&quot;&gt;&lt;a href=&quot;#cb10-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (c ^ b) ^ a = c ^ (a × b)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-29&quot;&gt;&lt;a href=&quot;#cb10-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c ≅ (a, b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Exercise:&lt;/strong&gt; implement the &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt; functions for some of the above types and prove the isomorphism laws for each pair of functions. It will probably be very tedious to prove all of the above examples, so pick the ones that interest you the most.&lt;/p&gt;&lt;h4 id=&quot;intermediate-tricks&quot;&gt;Intermediate tricks&lt;/h4&gt;&lt;p&gt;This section will introduce some more advanced tricks for proving that two types are isomorphic.&lt;/p&gt;&lt;p&gt;First, let’s start with a few ground rules for working with all isomorphisms:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Reflexivity: &lt;code&gt;a ≅ a&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Symmetry: If &lt;code&gt;a ≅ b&lt;/code&gt; then &lt;code&gt;b ≅ a&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Transitivity: If &lt;code&gt;a ≅ b&lt;/code&gt; and &lt;code&gt;b ≅ c&lt;/code&gt; then &lt;code&gt;a ≅ c&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now let’s get into some Haskell-specific rules:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;a &lt;code&gt;newtype&lt;/code&gt; in Haskell is isomorphic to the underlying type if the &lt;code&gt;newtype&lt;/code&gt; constructor is public.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;For example, if we were to define:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Name&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; getName ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; would be isomorphic (&lt;code&gt;Name ≅ String&lt;/code&gt;), where:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;forward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getName&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;backward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Name&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Name&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One such &lt;code&gt;newtype&lt;/code&gt; that shows up pretty often when reasoning about isomorphic types is the &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Functor-Identity.html#t:Identity&quot;&gt;&lt;code&gt;Identity&lt;/code&gt;&lt;/a&gt;type constructor from &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Functor-Identity.html&quot;&gt;&lt;code&gt;Data.Functor.Identity&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; runIdentity ::&lt;/span&gt; a }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… where &lt;code&gt;Identity a ≅ a&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;To see why &lt;code&gt;Identity&lt;/code&gt; is useful, consider the following two types:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;State&lt;/span&gt; s a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;State&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; runState ::&lt;/span&gt; s &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a, s) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;StateT&lt;/span&gt; s m a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;StateT&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; runStateT ::&lt;/span&gt; s &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m (a, s) }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The latter &lt;code&gt;newtype&lt;/code&gt; is from the &lt;code&gt;transformers&lt;/code&gt;package, which is how we layer on the “state” effect within a monad transformer stack. If you don’t understand what that means, that’s okay; it’s not that relevant to the point.&lt;/p&gt;&lt;p&gt;However, the &lt;code&gt;transformers&lt;/code&gt; package doesn’t define &lt;code&gt;State&lt;/code&gt; as above. Instead, the &lt;code&gt;transformers&lt;/code&gt;package defines &lt;code&gt;State&lt;/code&gt; like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;State&lt;/span&gt; s &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;StateT&lt;/span&gt; s &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The latter &lt;code&gt;type&lt;/code&gt; synonym definition for &lt;code&gt;State&lt;/code&gt; is equivalent (“isomorphic”) to the &lt;code&gt;newtype&lt;/code&gt; definition for &lt;code&gt;State&lt;/code&gt; I provided above. In order to prove that though I’ll need to distinguish between the two &lt;code&gt;State&lt;/code&gt; type constructors, so I’ll use a numeric subscript to distinguish them:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Functor.Identity&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;State&lt;/span&gt;₀ s a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;State&lt;/span&gt;₀ {&lt;span class=&quot;ot&quot;&gt; runState ::&lt;/span&gt; s &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a, s) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;StateT&lt;/span&gt; s m a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;StateT&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; runStateT ::&lt;/span&gt; s &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m (a, s) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;State&lt;/span&gt;₁ s &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;StateT&lt;/span&gt; s &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and then we can prove that &lt;code&gt;State₀&lt;/code&gt; is isomorphic to &lt;code&gt;State₁&lt;/code&gt; like this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;State₀ s a ≅ s -&amp;gt; (a, s)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… because the &lt;code&gt;State₀&lt;/code&gt; &lt;code&gt;newtype&lt;/code&gt; is isomorphic to the underlying type&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;s -&amp;gt; (a, s) ≅ s -&amp;gt; Identity (a, s)&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… because the &lt;code&gt;Identity&lt;/code&gt; newtype is isomorphic to the underlying type&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;s -&amp;gt; Identity (a, s) ≅ StateT s Identity a&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… because the &lt;code&gt;StateT&lt;/code&gt; newtype is isomorphic to the underlying type&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;StateT s Identity a = State₁ s a&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… because of how the &lt;code&gt;State₁&lt;/code&gt; type synonym is defined.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Therefore, by transitivity, we can conclude:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;State₀ s a ≅ State₁ s a&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Okay, now let’s introduce an &lt;strong&gt;extremely useful&lt;/strong&gt; rule related to isomorphic types:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;If &lt;code&gt;f&lt;/code&gt; is a &lt;code&gt;Functor&lt;/code&gt; then &lt;code&gt;forall r . (a -&amp;gt; r) -&amp;gt; f r&lt;/code&gt; is isomorphic to &lt;code&gt;f a&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Or in other words:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Functor&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f r) ≅ f a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and here are the two conversion functions:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE RankNTypes #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;forward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Functor&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward f &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-5&quot;&gt;&lt;a href=&quot;#cb18-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-6&quot;&gt;&lt;a href=&quot;#cb18-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;backward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Functor&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f r)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-7&quot;&gt;&lt;a href=&quot;#cb18-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward fa k &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; k fa&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is essentially the &lt;a href=&quot;https://en.wikipedia.org/wiki/Yoneda_lemma&quot;&gt;Yoneda lemma&lt;/a&gt; in Haskell form, which is actually a bit tricky to prove. If you don’t believe me, try proving the isomorphism laws for the above &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt; functions and see how far you get. It’s much easier to rely on the fact that someone else already did the hard work of proving those isomorphism laws for us.&lt;/p&gt;&lt;p&gt;Here’s a concrete example of the Yoneda lemma in action. Suppose that I want to prove that there is only one implementation of the identity function, &lt;code&gt;id&lt;/code&gt;. I can do so by proving that the type of the identity function (&lt;code&gt;forall a . a -&amp;gt; a&lt;/code&gt;) is isomorphic to the &lt;code&gt;()&lt;/code&gt; type (a type inhabited by exactly one value):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) ≅ ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here’s how you prove that by chaining together several isomorphic types:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- a ≅ () -&amp;gt; a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (() &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- a ≅ Identity a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (() &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-6&quot;&gt;&lt;a href=&quot;#cb20-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- ✨ Yoneda lemma (where f = Identity) ✨&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-7&quot;&gt;&lt;a href=&quot;#cb20-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-8&quot;&gt;&lt;a href=&quot;#cb20-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… so since the &lt;code&gt;()&lt;/code&gt; type is inhabited by exactly one value (the &lt;code&gt;()&lt;/code&gt; term) and the &lt;code&gt;()&lt;/code&gt; type is isomorphic to the type of &lt;code&gt;id&lt;/code&gt;, then there is exactly one way to implement &lt;code&gt;id&lt;/code&gt; (which is &lt;code&gt;id x = x&lt;/code&gt;).&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Note: To be totally pedantic, there is exactly one way to implement &lt;code&gt;id&lt;/code&gt; “up to isomorphism”. This is how we say that there might be several syntactically different ways of implementing &lt;code&gt;id&lt;/code&gt;, such as:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-2&quot;&gt;&lt;a href=&quot;#cb21-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-3&quot;&gt;&lt;a href=&quot;#cb21-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; y &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-4&quot;&gt;&lt;a href=&quot;#cb21-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-5&quot;&gt;&lt;a href=&quot;#cb21-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-6&quot;&gt;&lt;a href=&quot;#cb21-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-7&quot;&gt;&lt;a href=&quot;#cb21-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-8&quot;&gt;&lt;a href=&quot;#cb21-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-9&quot;&gt;&lt;a href=&quot;#cb21-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    y &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but all of those ways of implementing &lt;code&gt;id&lt;/code&gt; are isomorphic to one another (in a slightly different sense that I have not covered), so there is essentially only one way of implementing &lt;code&gt;id.&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Similarly, we can prove that there are exactly two ways to implement a function of type &lt;code&gt;forall a . a -&amp;gt; a -&amp;gt; a&lt;/code&gt; by showing that such a type is isomorphic to &lt;code&gt;Bool&lt;/code&gt; (a type inhabited by exactly two values):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb22&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb22-1&quot;&gt;&lt;a href=&quot;#cb22-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-2&quot;&gt;&lt;a href=&quot;#cb22-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- a -&amp;gt; b -&amp;gt; c ≅ (a, b) -&amp;gt; c&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-3&quot;&gt;&lt;a href=&quot;#cb22-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (a, a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-4&quot;&gt;&lt;a href=&quot;#cb22-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- (a, a) ≅ Bool -&amp;gt; a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-5&quot;&gt;&lt;a href=&quot;#cb22-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-6&quot;&gt;&lt;a href=&quot;#cb22-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- a ≅ Identity a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-7&quot;&gt;&lt;a href=&quot;#cb22-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-8&quot;&gt;&lt;a href=&quot;#cb22-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- ✨ Yoneda lemma (where f = Identity) ✨&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-9&quot;&gt;&lt;a href=&quot;#cb22-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-10&quot;&gt;&lt;a href=&quot;#cb22-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and in case you’re curious, here are the only two possible ways to implement that type (up to isomorphism):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb23&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb23-1&quot;&gt;&lt;a href=&quot;#cb23-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE ExplicitForAll #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-2&quot;&gt;&lt;a href=&quot;#cb23-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-3&quot;&gt;&lt;a href=&quot;#cb23-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;false ::&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-4&quot;&gt;&lt;a href=&quot;#cb23-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;false f t &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-5&quot;&gt;&lt;a href=&quot;#cb23-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-6&quot;&gt;&lt;a href=&quot;#cb23-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;true ::&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-7&quot;&gt;&lt;a href=&quot;#cb23-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;true f t &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; t&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here’s one last example of using the Yoneda lemma to prove that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb24&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb24-1&quot;&gt;&lt;a href=&quot;#cb24-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) ≅ a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which you can prove like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb25&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb25-1&quot;&gt;&lt;a href=&quot;#cb25-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-2&quot;&gt;&lt;a href=&quot;#cb25-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Identity r ≅ r&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-3&quot;&gt;&lt;a href=&quot;#cb25-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; r)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-4&quot;&gt;&lt;a href=&quot;#cb25-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- ✨ Yoneda lemma (where f = Identity) ✨&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-5&quot;&gt;&lt;a href=&quot;#cb25-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-6&quot;&gt;&lt;a href=&quot;#cb25-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Exercise:&lt;/strong&gt; Prove that these two types are isomorphic:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb26&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb26-1&quot;&gt;&lt;a href=&quot;#cb26-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r)) ≅ a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;details&gt;&lt;summary&gt;Solution (click to expand) &lt;/summary&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb27&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb27-1&quot;&gt;&lt;a href=&quot;#cb27-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-2&quot;&gt;&lt;a href=&quot;#cb27-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- a -&amp;gt; b -&amp;gt; c ≅ b -&amp;gt; a -&amp;gt; c&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-3&quot;&gt;&lt;a href=&quot;#cb27-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-4&quot;&gt;&lt;a href=&quot;#cb27-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- r ≅ Identity r&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-5&quot;&gt;&lt;a href=&quot;#cb27-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ (&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; r) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; r)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-6&quot;&gt;&lt;a href=&quot;#cb27-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- ✨ Yoneda lemma (where f = Identity) ✨&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-7&quot;&gt;&lt;a href=&quot;#cb27-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Identity&lt;/span&gt; b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-8&quot;&gt;&lt;a href=&quot;#cb27-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Identity b ≅ b&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-9&quot;&gt;&lt;a href=&quot;#cb27-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;≅ a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;&lt;h4 id=&quot;isomorphism&quot;&gt;Isomorphism&lt;/h4&gt;&lt;p&gt;So far we’ve only used the word “isomorphic” but there is a related word we should cover: “isomorphism”.&lt;/p&gt;&lt;p&gt;In Haskell, if the types &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are “isomorphic” then an “isomorphism” between them is the corresponding pair of functions converting between them (i.e. &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;The easiest way to explain this is to actually define an isomorphism type in Haskell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb28&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb28-1&quot;&gt;&lt;a href=&quot;#cb28-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-2&quot;&gt;&lt;a href=&quot;#cb28-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    {&lt;span class=&quot;ot&quot;&gt; forward  ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-3&quot;&gt;&lt;a href=&quot;#cb28-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ,&lt;span class=&quot;ot&quot;&gt; backward ::&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-4&quot;&gt;&lt;a href=&quot;#cb28-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb29&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb29-1&quot;&gt;&lt;a href=&quot;#cb29-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;exampleIsomorphism ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; ((a, b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c) (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb29-2&quot;&gt;&lt;a href=&quot;#cb29-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;exampleIsomorphism &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;{ forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;curry&lt;/span&gt;, backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;uncurry&lt;/span&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, this is not the only way we can encode an isomorphism in Haskell. For example, the &lt;code&gt;lens&lt;/code&gt; package has an &lt;code&gt;Iso&lt;/code&gt; type which can also represent an isomorphism:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb30&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb30-1&quot;&gt;&lt;a href=&quot;#cb30-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Lens&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Iso&amp;#39;&lt;/span&gt;, iso)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-2&quot;&gt;&lt;a href=&quot;#cb30-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-3&quot;&gt;&lt;a href=&quot;#cb30-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;exampleIso ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Iso&amp;#39;&lt;/span&gt; ((a, b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c) (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-4&quot;&gt;&lt;a href=&quot;#cb30-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;exampleIso &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; iso &lt;span class=&quot;fu&quot;&gt;curry&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;uncurry&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These two types are equivalent. In fact, you might even say they are … isomorphic 👀.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb31&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb31-1&quot;&gt;&lt;a href=&quot;#cb31-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE NamedFieldPuns #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-2&quot;&gt;&lt;a href=&quot;#cb31-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-3&quot;&gt;&lt;a href=&quot;#cb31-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Lens&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;AnIso&amp;#39;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Iso&amp;#39;&lt;/span&gt;, cloneIso, iso, review, view)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-4&quot;&gt;&lt;a href=&quot;#cb31-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-5&quot;&gt;&lt;a href=&quot;#cb31-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-6&quot;&gt;&lt;a href=&quot;#cb31-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    {&lt;span class=&quot;ot&quot;&gt; forward  ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-7&quot;&gt;&lt;a href=&quot;#cb31-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ,&lt;span class=&quot;ot&quot;&gt; backward ::&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-8&quot;&gt;&lt;a href=&quot;#cb31-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-9&quot;&gt;&lt;a href=&quot;#cb31-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-10&quot;&gt;&lt;a href=&quot;#cb31-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | We have to use `AnIso&amp;#39;` here instead of `Iso&amp;#39;` for reasons I won&amp;#39;t go into&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-11&quot;&gt;&lt;a href=&quot;#cb31-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;isomorphismIsomorphism ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; a b) (&lt;span class=&quot;dt&quot;&gt;AnIso&amp;#39;&lt;/span&gt; a b)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-12&quot;&gt;&lt;a href=&quot;#cb31-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;isomorphismIsomorphism &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;{ forward, backward }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-13&quot;&gt;&lt;a href=&quot;#cb31-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-14&quot;&gt;&lt;a href=&quot;#cb31-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    forward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;AnIso&amp;#39;&lt;/span&gt; a b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-15&quot;&gt;&lt;a href=&quot;#cb31-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    forward (&lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; f b) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; iso f b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-16&quot;&gt;&lt;a href=&quot;#cb31-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-17&quot;&gt;&lt;a href=&quot;#cb31-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    backward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;AnIso&amp;#39;&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; a b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-18&quot;&gt;&lt;a href=&quot;#cb31-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    backward iso &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-19&quot;&gt;&lt;a href=&quot;#cb31-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-20&quot;&gt;&lt;a href=&quot;#cb31-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            { forward  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; view (cloneIso iso)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-21&quot;&gt;&lt;a href=&quot;#cb31-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            , backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; review (cloneIso iso)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-22&quot;&gt;&lt;a href=&quot;#cb31-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;generalized-isomorphisms&quot;&gt;Generalized isomorphisms&lt;/h4&gt;&lt;p&gt;I mentioned earlier that the isomorphism definition we began with was not the fully general definition. In this section we’ll slightly generalize the definition, while still sticking to something ergonomic to express within Haskell:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Two types, &lt;code&gt;A&lt;/code&gt;, and &lt;code&gt;B&lt;/code&gt;, are isomorphic if there exist two morphisms, &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt; of the following types:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb32&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb32-1&quot;&gt;&lt;a href=&quot;#cb32-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;forward ::&lt;/span&gt; cat &lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-2&quot;&gt;&lt;a href=&quot;#cb32-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-3&quot;&gt;&lt;a href=&quot;#cb32-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;backward ::&lt;/span&gt; cat &lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… such that &lt;code&gt;cat&lt;/code&gt; is an instance of the &lt;code&gt;Category&lt;/code&gt; type class and the following two equations (which I will refer to as the “isomorphism laws”) are true:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb33&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb33-1&quot;&gt;&lt;a href=&quot;#cb33-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb33-2&quot;&gt;&lt;a href=&quot;#cb33-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb33-3&quot;&gt;&lt;a href=&quot;#cb33-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… where &lt;code&gt;(.)&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; are the methods of the &lt;code&gt;Category&lt;/code&gt; type class and not necessarily the &lt;code&gt;(.)&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; from the Prelude.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This definition is based on the &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Control-Category.html#t:Category&quot;&gt;&lt;code&gt;Category&lt;/code&gt;&lt;/a&gt;type class from the &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Control-Category.html&quot;&gt;&lt;code&gt;Control.Category&lt;/code&gt;&lt;/a&gt;module, which is defined like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb34&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb34-1&quot;&gt;&lt;a href=&quot;#cb34-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Category&lt;/span&gt; cat &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb34-2&quot;&gt;&lt;a href=&quot;#cb34-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- | the identity morphism&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb34-3&quot;&gt;&lt;a href=&quot;#cb34-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    id ::&lt;/span&gt; cat a a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb34-4&quot;&gt;&lt;a href=&quot;#cb34-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb34-5&quot;&gt;&lt;a href=&quot;#cb34-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- | morphism composition&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb34-6&quot;&gt;&lt;a href=&quot;#cb34-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    (.) ::&lt;/span&gt; cat b c &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; cat a b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; cat a c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and all instance of the &lt;code&gt;Category&lt;/code&gt; class must satisfy the following three “category laws”:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb35&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb35-1&quot;&gt;&lt;a href=&quot;#cb35-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; g) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; h &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (g &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; h)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb35-2&quot;&gt;&lt;a href=&quot;#cb35-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb35-3&quot;&gt;&lt;a href=&quot;#cb35-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb35-4&quot;&gt;&lt;a href=&quot;#cb35-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb35-5&quot;&gt;&lt;a href=&quot;#cb35-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, you can think of the &lt;code&gt;Category&lt;/code&gt; class as generalizing our notion of functions to become “morphisms” so that we replace values of type &lt;code&gt;a -&amp;gt; b&lt;/code&gt; (functions) with values of type &lt;code&gt;cat a b&lt;/code&gt; (“morphisms”). When we generalize our notion of functions to morphisms then we can similarly generalize our notion of isomorphisms.&lt;/p&gt;&lt;p&gt;Of course, Haskell functions are one instance of this &lt;code&gt;Category&lt;/code&gt; class:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb36&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb36-1&quot;&gt;&lt;a href=&quot;#cb36-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Category&lt;/span&gt; (&lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb36-2&quot;&gt;&lt;a href=&quot;#cb36-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; Prelude.id&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb36-3&quot;&gt;&lt;a href=&quot;#cb36-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb36-4&quot;&gt;&lt;a href=&quot;#cb36-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;Prelude..&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… so if we take our more general definition of isomorphisms and replace &lt;code&gt;cat&lt;/code&gt; with &lt;code&gt;(-&amp;gt;)&lt;/code&gt; then we get back the less general definition of isomorphisms that we started with.&lt;/p&gt;&lt;p&gt;However, things other than functions can be instances of this &lt;code&gt;Category&lt;/code&gt; class, too. For example, “monadic” functions of type &lt;code&gt;Monad m =&amp;gt; a -&amp;gt; m b&lt;/code&gt; can implement &lt;code&gt;Category&lt;/code&gt;, too, if we wrap them in a newtype:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb37&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb37-1&quot;&gt;&lt;a href=&quot;#cb37-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Category&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Category&lt;/span&gt;(..))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-2&quot;&gt;&lt;a href=&quot;#cb37-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Monad&lt;/span&gt; ((&amp;lt;=&amp;lt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-3&quot;&gt;&lt;a href=&quot;#cb37-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-4&quot;&gt;&lt;a href=&quot;#cb37-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Note: This type and instance already exists in the `Control.Arrow` module&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-5&quot;&gt;&lt;a href=&quot;#cb37-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; m a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt;{&lt;span class=&quot;ot&quot;&gt; runKleisli ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m b }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-6&quot;&gt;&lt;a href=&quot;#cb37-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-7&quot;&gt;&lt;a href=&quot;#cb37-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Category&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; m) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-8&quot;&gt;&lt;a href=&quot;#cb37-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-9&quot;&gt;&lt;a href=&quot;#cb37-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb37-10&quot;&gt;&lt;a href=&quot;#cb37-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; g &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (f &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; g)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that satisfies the category laws because:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb38&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb38-1&quot;&gt;&lt;a href=&quot;#cb38-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(f &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; g) &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; h &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; (g &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; h)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb38-2&quot;&gt;&lt;a href=&quot;#cb38-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb38-3&quot;&gt;&lt;a href=&quot;#cb38-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;f &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb38-4&quot;&gt;&lt;a href=&quot;#cb38-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb38-5&quot;&gt;&lt;a href=&quot;#cb38-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Fun fact: The above category laws for the &lt;code&gt;Kleisli&lt;/code&gt; type constructor are isomorphic to the monad laws (in a different sense of the world &quot;isomorphic&quot; that I have not covered).&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Once we begin to use &lt;code&gt;Category&lt;/code&gt; instances other than functions we can begin to explore more interesting types of “morphisms” and “isomorphisms”. However, in order to do so we need to generalize our &lt;code&gt;Isomorphism&lt;/code&gt; type like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb39&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb39-1&quot;&gt;&lt;a href=&quot;#cb39-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; cat a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb39-2&quot;&gt;&lt;a href=&quot;#cb39-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    {&lt;span class=&quot;ot&quot;&gt; forward  ::&lt;/span&gt; cat a b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb39-3&quot;&gt;&lt;a href=&quot;#cb39-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ,&lt;span class=&quot;ot&quot;&gt; backward ::&lt;/span&gt; cat b a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb39-4&quot;&gt;&lt;a href=&quot;#cb39-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… so that we can store morphisms that are not necessarily functions.&lt;/p&gt;&lt;p&gt;With that generalized &lt;code&gt;Isomorphism&lt;/code&gt; type in hand we can now create a sample &lt;code&gt;Isomorphism&lt;/code&gt; in a &lt;code&gt;Kleisli&lt;/code&gt;&lt;code&gt;Category&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb40&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb40-1&quot;&gt;&lt;a href=&quot;#cb40-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt;(..))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-2&quot;&gt;&lt;a href=&quot;#cb40-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Monad.Writer&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Writer&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-3&quot;&gt;&lt;a href=&quot;#cb40-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-4&quot;&gt;&lt;a href=&quot;#cb40-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;writerIsomorphism ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Writer&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt;))) () ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-5&quot;&gt;&lt;a href=&quot;#cb40-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;writerIsomorphism &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;{ forward, backward }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-6&quot;&gt;&lt;a href=&quot;#cb40-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-7&quot;&gt;&lt;a href=&quot;#cb40-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    forward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Writer&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt;)) () ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-8&quot;&gt;&lt;a href=&quot;#cb40-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; tell (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-9&quot;&gt;&lt;a href=&quot;#cb40-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-10&quot;&gt;&lt;a href=&quot;#cb40-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    backward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Writer&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt;)) () ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb40-11&quot;&gt;&lt;a href=&quot;#cb40-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; tell (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Like before, we still require that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb41&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb41-1&quot;&gt;&lt;a href=&quot;#cb41-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb41-2&quot;&gt;&lt;a href=&quot;#cb41-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb41-3&quot;&gt;&lt;a href=&quot;#cb41-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;backward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but in this case the &lt;code&gt;(.)&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; in these two isomorphism laws will be the ones for our &lt;code&gt;Kleisli&lt;/code&gt; type instead of the ones for functions.&lt;/p&gt;&lt;details&gt;&lt;summary&gt;Proof of isomorphism laws (click to expand) &lt;/summary&gt;&lt;p&gt;I’ll skip over several steps for this proof to highlight the relevant parts:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb42&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb42-1&quot;&gt;&lt;a href=&quot;#cb42-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;forward &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; backward&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-2&quot;&gt;&lt;a href=&quot;#cb42-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-3&quot;&gt;&lt;a href=&quot;#cb42-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; tell (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; tell (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-4&quot;&gt;&lt;a href=&quot;#cb42-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-5&quot;&gt;&lt;a href=&quot;#cb42-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; ((\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; tell (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;op&quot;&gt;&amp;lt;=&amp;lt;&lt;/span&gt; (\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; tell (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-6&quot;&gt;&lt;a href=&quot;#cb42-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-7&quot;&gt;&lt;a href=&quot;#cb42-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; (\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; tell (&lt;span class=&quot;dt&quot;&gt;Sum&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-8&quot;&gt;&lt;a href=&quot;#cb42-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-9&quot;&gt;&lt;a href=&quot;#cb42-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Kleisli&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-10&quot;&gt;&lt;a href=&quot;#cb42-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb42-11&quot;&gt;&lt;a href=&quot;#cb42-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;The proof of &lt;code&gt;backward . forward = id&lt;/code&gt; is essentially the same thing, except flipped. &lt;/details&gt;&lt;p&gt;Note our &lt;code&gt;Isomorphism&lt;/code&gt; effectively says that the type &lt;code&gt;()&lt;/code&gt; is isomorphic to the type &lt;code&gt;()&lt;/code&gt; within this &lt;code&gt;Kleisli (Writer (Sum Integer))&lt;/code&gt; &lt;code&gt;Category&lt;/code&gt;, which is not a very interesting conclusion. Rather, for this &lt;code&gt;Isomorphism&lt;/code&gt; the (slightly more) interesting bit is in the “morphisms” (the &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;backward&lt;/code&gt;definitions), which are inverses of one another.&lt;/p&gt;&lt;p&gt;Here is one last example of a non-trivial &lt;code&gt;Category&lt;/code&gt;instance with an example isomorphism:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb43&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb43-1&quot;&gt;&lt;a href=&quot;#cb43-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Prelude&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;hiding&lt;/span&gt; ((.), id)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-2&quot;&gt;&lt;a href=&quot;#cb43-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-3&quot;&gt;&lt;a href=&quot;#cb43-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Note: This is not how the lens package works, but it&amp;#39;s still a useful example&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-4&quot;&gt;&lt;a href=&quot;#cb43-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt;{&lt;span class=&quot;ot&quot;&gt; view ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b,&lt;span class=&quot;ot&quot;&gt; over ::&lt;/span&gt; (b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-5&quot;&gt;&lt;a href=&quot;#cb43-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-6&quot;&gt;&lt;a href=&quot;#cb43-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Category&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-7&quot;&gt;&lt;a href=&quot;#cb43-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt;{ view &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;, over &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-8&quot;&gt;&lt;a href=&quot;#cb43-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-9&quot;&gt;&lt;a href=&quot;#cb43-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt;{ view &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; viewL, over &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; overL } &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt;{ view &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; viewR, over &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; overR } &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-10&quot;&gt;&lt;a href=&quot;#cb43-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt;{ view &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; viewL &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; viewR, over &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; overR &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; overL }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-11&quot;&gt;&lt;a href=&quot;#cb43-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-12&quot;&gt;&lt;a href=&quot;#cb43-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;lensIsomorphism ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-13&quot;&gt;&lt;a href=&quot;#cb43-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;lensIsomorphism &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;{ forward, backward }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-14&quot;&gt;&lt;a href=&quot;#cb43-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-15&quot;&gt;&lt;a href=&quot;#cb43-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    forward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-16&quot;&gt;&lt;a href=&quot;#cb43-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt;{ view &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt;, over &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \f &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-17&quot;&gt;&lt;a href=&quot;#cb43-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-18&quot;&gt;&lt;a href=&quot;#cb43-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- There is no rule that the two morphisms can&amp;#39;t be the same&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-19&quot;&gt;&lt;a href=&quot;#cb43-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    backward ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lens&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-20&quot;&gt;&lt;a href=&quot;#cb43-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; forward&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again, it’s not very interesting to say that &lt;code&gt;Bool&lt;/code&gt; is isomorphic to &lt;code&gt;Bool&lt;/code&gt;, but it is more to note that the &lt;code&gt;forward&lt;/code&gt; lens is essentially its own inverse.&lt;/p&gt;&lt;p&gt;There’s one last category I want to quickly mention, which is … &lt;code&gt;Isomorphism&lt;/code&gt;!&lt;/p&gt;&lt;p&gt;Yes, the &lt;code&gt;Isomorphism&lt;/code&gt; type we introduced is itself an instance of the &lt;code&gt;Category&lt;/code&gt; class:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb44&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb44-1&quot;&gt;&lt;a href=&quot;#cb44-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Category&lt;/span&gt; cat &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Category&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; cat) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb44-2&quot;&gt;&lt;a href=&quot;#cb44-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; forwardL backwardL &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; forwardR backwardR &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb44-3&quot;&gt;&lt;a href=&quot;#cb44-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; (forwardL &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; forwardR) (backwardR &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; backwardL)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb44-4&quot;&gt;&lt;a href=&quot;#cb44-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb44-5&quot;&gt;&lt;a href=&quot;#cb44-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You might even say that an “isomorphism” is a “morphism” in the above &lt;code&gt;Category&lt;/code&gt;. An “iso”-“morphism”, if you will (where “iso” means “same”).&lt;/p&gt;&lt;p&gt;Furthermore, we can create an example &lt;code&gt;Isomorphism&lt;/code&gt; in this &lt;code&gt;Category&lt;/code&gt; of &lt;code&gt;Isomorphism&lt;/code&gt;s:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb45&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb45-1&quot;&gt;&lt;a href=&quot;#cb45-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nestedIsomorphism ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt; (&lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;)) &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-2&quot;&gt;&lt;a href=&quot;#cb45-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nestedIsomorphism &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-3&quot;&gt;&lt;a href=&quot;#cb45-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-4&quot;&gt;&lt;a href=&quot;#cb45-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        { forward  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;{ forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-5&quot;&gt;&lt;a href=&quot;#cb45-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Isomorphism&lt;/span&gt;{ forward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;subtract&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, backward &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-6&quot;&gt;&lt;a href=&quot;#cb45-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Okay, perhaps that’s going a bit too far, but I just wanted to end this post with a cute example of how you can keep chaining these ideas together in new ways.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;In my experience, the more you train your ability to reason formally about isomorphisms the more you broaden your ability to recognize disparate things as equivalent and draw interesting connections between them.&lt;/p&gt;&lt;p&gt;For example, fluency with many common isomorphisms is a useful skill for API design because often there might be a way to take an API which is not very ergonomic and refactor it into an equivalent (isomorphic) API which is more ergonomic to use.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/5833984871945391183/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/10/what-does-isomorphic-mean-in-haskell.html#comment-form" title="2 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/5833984871945391183"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/5833984871945391183"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/10/what-does-isomorphic-mean-in-haskell.html" title="What does &quot;isomorphic&quot; mean (in Haskell)?"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-8136329259991133570</id><published>2022-09-07T06:53:00.006-07:00</published><updated>2022-09-07T08:56:33.607-07:00</updated><title type="text">nix-serve-ng: A faster, more reliable, drop-in replacement for nix-serve</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;  &lt;meta name=&quot;twitter:creator&quot; content=&quot;@GabriellaG439&quot;&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;nix-serve-ng: A faster, more reliable, drop-in replacement for nix-serve&quot;&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;An announcement post for a Haskell rewrite of nix-serve named nix-serve-ng&quot;&gt;  &lt;title&gt;nix-serve-ng&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       overflow-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }       h1 {         font-size: 1.8em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;       overflow-wrap: normal;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC ul {       padding-left: 1.3em;     }     #TOC &gt; ul {       padding-left: 0;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Our team at &lt;a href=&quot;https://www.arista.com/en/&quot;&gt;Arista Networks&lt;/a&gt;is happy to announce nix-serve-ng, a backwards-compatible Haskell   rewrite of &lt;a href=&quot;https://github.com/edolstra/nix-serve&quot;&gt;nix-serve&lt;/a&gt;  (a service for hosting a &lt;code&gt;/nix/store&lt;/code&gt; as a binary cache). It provides better reliability and performance than nix-serve (ranging from ≈ 1.5× to 32× faster). We wrote nix-serve-ng to fix scaling bottlenecks in our cache and we expect other large-scale deployments might be interested in this project, too.&lt;/p&gt;&lt;p&gt;This post will focus more on the background behind the development process and comparisons to other Nix cache implementations. If you don’t care about any of that then you can get started by following the instructions in &lt;a href=&quot;https://github.com/aristanetworks/nix-serve-ng#nix-serve-ng&quot;&gt;the repository’s &lt;code&gt;README&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&lt;h4 id=&quot;background&quot;&gt;Background&lt;/h4&gt;&lt;p&gt;Before we began this project there were at least two other open source rewrites of &lt;code&gt;nix-serve-ng&lt;/code&gt; that we could have adopted instead of &lt;code&gt;nix-serve&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/thoughtpolice/eris&quot;&gt;&lt;code&gt;eris&lt;/code&gt;&lt;/a&gt; - A Perl rewrite of &lt;code&gt;nix-serve&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Note: the original &lt;code&gt;nix-serve&lt;/code&gt; is implemented in Perl, and eris is also implemented in Perl using a different framework.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/helsinki-systems/harmonia&quot;&gt;&lt;code&gt;harmonia&lt;/code&gt;&lt;/a&gt;- A Rust rewrite of &lt;code&gt;nix-serve&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The main reason we did not go with these two alternatives is because they are not drop-in replacements for the original &lt;code&gt;nix-serve&lt;/code&gt;. We could have fixed that, but given &lt;a href=&quot;https://github.com/edolstra/nix-serve/blob/master/nix-serve.psgi&quot;&gt;how simple &lt;code&gt;nix-serve&lt;/code&gt; is&lt;/a&gt; I figured that it would be simpler to just create our own. &lt;code&gt;nix-serve-ng&lt;/code&gt; only took a couple of days for the initial version and maybe a week of follow-up fixes and performance tuning.&lt;/p&gt;&lt;p&gt;We did not evaluate the performance or reliability of &lt;code&gt;eris&lt;/code&gt; or &lt;code&gt;harmonia&lt;/code&gt; before embarking on our own &lt;code&gt;nix-serve&lt;/code&gt; replacement. However, after &lt;code&gt;nix-serve-ng&lt;/code&gt; was done we learned that it was significantly faster than the alternatives (see the &lt;a href=&quot;#performance&quot;&gt;Performance&lt;/a&gt; section below). Some of those performance differences are probably fixable, especially for &lt;code&gt;harmonia&lt;/code&gt;. That said, we are very happy with the quality of our solution.&lt;/p&gt;&lt;h4 id=&quot;backwards-compatibility&quot;&gt;Backwards compatibility&lt;/h4&gt;&lt;p&gt;One important design goal for this project is to be significantly backwards compatible with &lt;code&gt;nix-serve&lt;/code&gt;. We went to great lengths to preserve compatibility, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Naming the built executable &lt;code&gt;nix-serve&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Yes, even though the project name is &lt;code&gt;nix-serve-ng&lt;/code&gt;, the executable built by the project is named &lt;code&gt;nix-serve&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Preserving most of the original command-line options, including legacy options&lt;/p&gt;&lt;p&gt;… even though some are unused.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In most cases you can literally replace &lt;code&gt;pkgs.nix-serve&lt;/code&gt;with &lt;code&gt;pkgs.nix-serve-ng&lt;/code&gt; and it will “just work”. You can even continue to use the existing &lt;code&gt;services.nix-serve&lt;/code&gt; NixOS options.&lt;/p&gt;&lt;p&gt;The biggest compatibility regression is that &lt;code&gt;nix-serve-ng&lt;/code&gt; cannot be built on MacOS. It is extremely close to supporting MacOS save for this one bug in Haskell’s &lt;code&gt;hsc2hs&lt;/code&gt; tool: &lt;a href=&quot;https://github.com/haskell/hsc2hs/issues/26&quot;&gt;&lt;code&gt;haskell/hsc2hs&lt;/code&gt;- #26&lt;/a&gt;. We left in all of the MacOS shims so that if that bug is ever fixed then we can get MacOS support easily.&lt;/p&gt;&lt;p&gt;For more details on the exact differences compared to &lt;code&gt;nix-serve&lt;/code&gt;, see the &lt;a href=&quot;https://github.com/aristanetworks/nix-serve-ng#results&quot;&gt;Result / Backwards-compatibility&lt;/a&gt; section of the &lt;code&gt;README&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;performance&quot;&gt;Performance&lt;/h4&gt;&lt;p&gt;&lt;code&gt;nix-serve-ng&lt;/code&gt; is faster than all of the alternatives according to both our formal benchmarks and also informal testing. The &lt;a href=&quot;https://github.com/aristanetworks/nix-serve-ng#benchmarks&quot;&gt;“Benchmarks” section of our &lt;code&gt;README&lt;/code&gt;&lt;/a&gt; has the complete breakdown but the relevant part is this table:&lt;/p&gt;&lt;p&gt;Speedups (compared to &lt;code&gt;nix-serve&lt;/code&gt;):&lt;/p&gt;&lt;table&gt;&lt;colgroup&gt;&lt;col style=&quot;width: 28%&quot; /&gt;&lt;col style=&quot;width: 18%&quot; /&gt;&lt;col style=&quot;width: 18%&quot; /&gt;&lt;col style=&quot;width: 18%&quot; /&gt;&lt;col style=&quot;width: 18%&quot; /&gt;&lt;/colgroup&gt;&lt;thead&gt;&lt;tr class=&quot;header&quot;&gt;&lt;th&gt;Benchmark&lt;/th&gt;&lt;th&gt;&lt;code&gt;nix-serve&lt;/code&gt;&lt;/th&gt;&lt;th&gt;&lt;code&gt;eris&lt;/code&gt;&lt;/th&gt;&lt;th&gt;&lt;code&gt;harmonia&lt;/code&gt;&lt;/th&gt;&lt;th&gt;&lt;code&gt;nix-serve-ng&lt;/code&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;Fetch present NAR info ×10&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;td&gt;0.05&lt;/td&gt;&lt;td&gt;1.33&lt;/td&gt;&lt;td&gt;1.58&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;Fetch absent NAR info ×1&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;td&gt;0.06&lt;/td&gt;&lt;td&gt;1.53&lt;/td&gt;&lt;td&gt;1.84&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;Fetch empty NAR ×10&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;td&gt;0.67&lt;/td&gt;&lt;td&gt;0.59&lt;/td&gt;&lt;td&gt;31.80&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;even&quot;&gt;&lt;td&gt;Fetch 10 MB NAR ×10&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;td&gt;0.64&lt;/td&gt;&lt;td&gt;0.60&lt;/td&gt;&lt;td&gt;3.35&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;… which I can summarize like this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;nix-serve-ng&lt;/code&gt; is faster than all of the alternatives across all use cases&lt;/li&gt;&lt;li&gt;&lt;code&gt;eris&lt;/code&gt; is slower than the original &lt;code&gt;nix-serve&lt;/code&gt;across all use cases&lt;/li&gt;&lt;li&gt;&lt;code&gt;harmonia&lt;/code&gt; is faster than the original &lt;code&gt;nix-serve&lt;/code&gt; for NAR info lookups, but slower for fetching NARs&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These performance results were surprising for a few reasons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;I was not expecting &lt;code&gt;eris&lt;/code&gt; to be slower than the original &lt;code&gt;nix-serve&lt;/code&gt; implementation&lt;/p&gt;&lt;p&gt;… especially not NAR info lookups to be ≈ 20× slower. This is significant because NAR info lookups typically dominate a Nix cache’s performance. In my (informal) experience, the majority of a Nix cache’s time is spent addressing failed cache lookups.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;I was not expecting &lt;code&gt;harmonia&lt;/code&gt; (the Rust rewrite) to be slower than the original &lt;code&gt;nix-serve&lt;/code&gt; for fetching NARs&lt;/p&gt;&lt;p&gt;This seems like something that should be fixable. &lt;code&gt;harmonia&lt;/code&gt; will probably eventually match our performance because Rust has a high performance ceiling.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;I was not expecting a ≈ 30x speedup for &lt;code&gt;nix-serve-ng&lt;/code&gt;fetching small NARs&lt;/p&gt;&lt;p&gt;I had to triple-check that neither &lt;code&gt;nix-serve-ng&lt;/code&gt; nor the benchmark were broken when I saw this speedup.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;So I investigated these performance differences to help inform other implementations what to be mindful of.&lt;/p&gt;&lt;h4 id=&quot;performance-insights&quot;&gt;Performance insights&lt;/h4&gt;&lt;p&gt;We didn’t get these kinds of speed-ups by being completely oblivious to performance. Here are the things that we paid special attention to to keep things efficient, in order of lowest-hanging to highest-hanging fruit:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Don’t read the secret key file on every NAR fetch&lt;/p&gt;&lt;p&gt;This is a silly thing that &lt;a href=&quot;https://github.com/edolstra/nix-serve/blob/8501f2e44e7963eb1fb20146a055cfe7242a2ac4/nix-serve.psgi#L38-L40&quot;&gt;the original &lt;code&gt;nix-serve&lt;/code&gt; does&lt;/a&gt; that is the easiest thing to fix.&lt;/p&gt;&lt;p&gt;&lt;code&gt;eris&lt;/code&gt; and &lt;code&gt;harmonia&lt;/code&gt; also fix this, so this optimization is not unique to our rewrite.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;We bind directly to the Nix C++ API for fetching NARs&lt;/p&gt;&lt;p&gt;&lt;code&gt;nix-serve&lt;/code&gt;, &lt;code&gt;eris&lt;/code&gt;, and &lt;code&gt;harmonia&lt;/code&gt;all shell out to a subprocess to fetch NARs, by invoking either &lt;code&gt;nix dump-path&lt;/code&gt; or &lt;code&gt;nix-store --dump&lt;/code&gt; to do the heavy lifting. In contrast, &lt;code&gt;nix-serve-ng&lt;/code&gt; binds to the Nix C++ API for this purpose.&lt;/p&gt;&lt;p&gt;This would definitely explain some of the performance difference when fetching NARs. Creating a subprocess has a fixed overhead regardless of the size of the NAR, which explains why we see the largest performance difference when fetching tiny NARs since the overhead of creating a subprocess would dominate the response time.&lt;/p&gt;&lt;p&gt;This may also affect throughput for serving large NAR files, too, by adding unnecessary memory copies/buffering as part of streaming the subprocess output.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;We minimize memory copies when fetching NARs&lt;/p&gt;&lt;p&gt;We go to great lengths to minimize the number of intermediate buffers and copies when streaming the contents of a NAR to a client. To do this, we exploit the fact that Haskell’s foreign function interface works in both directions: Haskell code can call C++ code but also C++ code can call Haskell code. This means that we can &lt;a href=&quot;https://github.com/aristanetworks/nix-serve-ng/blob/ba2028f9d7fd2f93a04e1ca9677811f461fe6676/cbits/nix.cpp#L173-L185&quot;&gt;create a Nix C++ streaming sink from a Haskell callback function&lt;/a&gt; and this eliminates the need for intermediate buffers.&lt;/p&gt;&lt;p&gt;This likely also improves the throughput for serving NAR files. Only &lt;code&gt;nix-serve-ng&lt;/code&gt; performs this optimization (since &lt;code&gt;nix-serve-ng&lt;/code&gt; is the only one that uses the C++ API for streaming NAR contents).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Hand-write the API routing logic&lt;/p&gt;&lt;p&gt;We hand-write all of the API routing logic to prioritize and optimize the hot path (fetching NAR info).&lt;/p&gt;&lt;p&gt;For example, a really simple thing that the original &lt;code&gt;nix-serve&lt;/code&gt; does inefficiently is to check if the path matches &lt;code&gt;/nix-cache-info&lt;/code&gt; first, even though that is an extremely infrequently used path. In our API routing logic we move that check straight to the very end.&lt;/p&gt;&lt;p&gt;These optimizations likely improve the performance of NAR info requests. As far as I can tell, only &lt;code&gt;nix-serve-ng&lt;/code&gt; performs these optimizations.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I have not benchmarked the performance impact of each of these changes in isolation, though. These observations are purely based on my intuition.&lt;/p&gt;&lt;h4 id=&quot;features&quot;&gt;Features&lt;/h4&gt;&lt;p&gt;&lt;code&gt;nix-serve-ng&lt;/code&gt; is not all upsides. In particular, &lt;code&gt;nix-serve-ng&lt;/code&gt; is missing features that some of the other rewrites provide, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Greater configurability&lt;/li&gt;&lt;li&gt;Improved authentication support&lt;/li&gt;&lt;li&gt;Monitoring/diagnostics/status APIs&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Our focus was entirely on scalability, so the primary reason to use &lt;code&gt;nix-serve-ng&lt;/code&gt; is if you prioritize performance and uptime.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;We’ve been using &lt;code&gt;nix-serve-ng&lt;/code&gt; long enough internally that we feel confident endorsing its use outside our company. We run a particularly large Nix deployment internally (which is why we needed this in the first place), so we have stress tested &lt;code&gt;nix-serve-ng&lt;/code&gt; considerably under heavy and realistic usage patterns.&lt;/p&gt;&lt;p&gt;You can get started by following these &lt;a href=&quot;https://github.com/aristanetworks/nix-serve-ng/blob/main/README.md#quick-start&quot;&gt;these instructions&lt;/a&gt; and let us know if you run into any issues or difficulties.&lt;/p&gt;&lt;p&gt;Also, I want to thank &lt;a href=&quot;https://www.arista.com/en/&quot;&gt;Arista Networks&lt;/a&gt; for graciously sponsoring our team to work on and open source this project&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/8136329259991133570/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/09/nix-serve-ng-faster-more-reliable-drop.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/8136329259991133570"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/8136329259991133570"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/09/nix-serve-ng-faster-more-reliable-drop.html" title="nix-serve-ng: A faster, more reliable, drop-in replacement for nix-serve"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-906620765110929969</id><published>2022-08-29T06:16:00.006-07:00</published><updated>2022-08-29T07:20:38.728-07:00</updated><title type="text">Stop calling everything &quot;Nix&quot;</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;  &lt;meta name=&quot;twitter:creator&quot; content=&quot;@GabriellaG439&quot;&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Stop calling everything &amp;quot;Nix&amp;quot;&quot;&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;Explanation of the Nix ecosystem's abstraction layers&quot;&gt;  &lt;title&gt;nix-terminology&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       overflow-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }       h1 {         font-size: 1.8em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;       overflow-wrap: normal;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC ul {       padding-left: 1.3em;     }     #TOC &gt; ul {       padding-left: 0;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;One of my pet peeves is when people abuse the term “Nix” without qualification when trying to explain the various components of the Nix ecosystem.&lt;/p&gt;&lt;p&gt;As a concrete example, a person might say:&lt;/p&gt;&lt;p&gt;“I hate Nix’s syntax”&lt;/p&gt;&lt;p&gt;… and when you dig into this criticism you realize that they’re actually complaining about the Nixpkgs API, which is not the same thing as the syntax of the Nix expression language.&lt;/p&gt;&lt;p&gt;So one of the goals of this post is to introduce some unambiguous terminology that people can use to refer to the various abstraction layers of the Nix ecosystem in order to avoid confusion. I’ll introduce each abstraction layer from the lowest level abstractions to the highest level abstractions.&lt;/p&gt;&lt;p&gt;Another reason I explain “Nix” in terms of these abstraction layers is because this helps people consult the correct manual. The Nix ecosystem provides three manuals that you will commonly need to refer to in order to become more proficient:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The &lt;a href=&quot;https://nixos.org/manual/nix/stable/&quot;&gt;Nix manual&lt;/a&gt;&lt;/li&gt;&lt;li&gt;The &lt;a href=&quot;https://nixos.org/manual/nixpkgs/stable/&quot;&gt;Nixpkgs manual&lt;/a&gt;&lt;/li&gt;&lt;li&gt;The &lt;a href=&quot;https://nixos.org/manual/nixos/stable/&quot;&gt;NixOS manual&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and I hope by the end of this post it will be clearer which manual interests you for any given question.&lt;/p&gt;&lt;p&gt;Edit: &lt;a href=&quot;https://twitter.com/domenkozar/status/1564241948319404032&quot;&gt;Domen Kožar pointed out&lt;/a&gt; that there is an ongoing effort to standardize terminology here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/NixOS/nix.dev/issues/275&quot;&gt;&lt;code&gt;NixOS/nix.dev&lt;/code&gt;#275 - establish nomenclature&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I’ll update the post to match the agreed-upon terminology when that is complete.&lt;/p&gt;&lt;h4 id=&quot;layer-0-the-nix-store&quot;&gt;Layer #0: The Nix store&lt;/h4&gt;&lt;p&gt;I use the term “Nix store” to mean essentially everything you can manage with the &lt;code&gt;nix-store&lt;/code&gt; command-line tool.&lt;/p&gt;&lt;p&gt;That is the simplest definition, but to expand upon that, I mean the following files:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Derivations: &lt;code&gt;/nix/store/*.drv&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Build products: &lt;code&gt;/nix/store/*&lt;/code&gt; without a &lt;code&gt;.drv&lt;/code&gt; extension&lt;/li&gt;&lt;li&gt;Log files: &lt;code&gt;/nix/var/log/nix/drvs/**&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Garbage collection roots: &lt;code&gt;/nix/var/nix/gcroots/**&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and the following operations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Realizing a derivation&lt;/p&gt;&lt;p&gt;i.e. converting a &lt;code&gt;.drv&lt;/code&gt; file to the corresponding build products using &lt;code&gt;nix-store --realise&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Adding static files to the &lt;code&gt;/nix/store&lt;/code&gt;&lt;/p&gt;&lt;p&gt;i.e. &lt;code&gt;nix-store --add&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Creating GC roots for build products&lt;/p&gt;&lt;p&gt;i.e. the &lt;code&gt;--add-root&lt;/code&gt; option to &lt;code&gt;nix-store&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Garbage collecting derivations not protected by a GC root&lt;/p&gt;&lt;p&gt;i.e. &lt;code&gt;nix-store --gc&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are other things the Nix store supports (like profile management), but these are the most important operations.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CAREFULLY NOTE:&lt;/strong&gt; the “Nix store” is independent of the “Nix language” (which we’ll define below). In other words, you could replace the front-end Nix programming language with another language (e.g. Guile scheme, as Guix does). This is because the Nix derivation format (the &lt;code&gt;.drv&lt;/code&gt; files) and the &lt;code&gt;nix-store&lt;/code&gt;command-line interface are both agnostic of the Nix expression language. I have a talk which delves a bit more into this subject:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=GMQPzv3Sx58&quot;&gt;Nix: Under the hood&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;layer-1-the-nix-language&quot;&gt;Layer #1: The Nix language&lt;/h4&gt;&lt;p&gt;I use the term “Nix language” to encompass three things:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The programming language: source code we typically store in &lt;code&gt;.nix&lt;/code&gt; files&lt;/li&gt;&lt;li&gt;Instantiation: the interpretation of Nix code to generate &lt;code&gt;.drv&lt;/code&gt; files&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://nixos.wiki/wiki/Flakes&quot;&gt;Flakes&lt;/a&gt;: pure evaluation and instantiation caching&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To connect this with the previous section, the typical pipeline for converting Nix source code to a build product is:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Nix source code (*.nix)            │ Nix language&lt;br /&gt;      ↓ Instantiation              ├─────────────&lt;br /&gt;Nix derivation (/nix/store/*.drv)  │&lt;br /&gt;      ↓ Realization                │ Nix store&lt;br /&gt;Nix build product (/nix/store/*)   │&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In isolation, the Nix language is “just” a purely functional programming language with simple language constructs. For example, here is a sample Nix REPL session:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;nix-repl&amp;gt; 2 + 2&lt;br /&gt;4&lt;br /&gt;&lt;br /&gt;nix-repl&amp;gt; x = &amp;quot;world&amp;quot;   &lt;br /&gt;&lt;br /&gt;nix-repl&amp;gt; &amp;quot;Hello, &amp;quot; + x  &lt;br /&gt;&amp;quot;Hello, world&amp;quot;&lt;br /&gt;&lt;br /&gt;nix-repl&amp;gt; r = { a = 1; b = true; }&lt;br /&gt;&lt;br /&gt;nix-repl&amp;gt; if r.b then r.a else 0&lt;br /&gt;1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However, as we go up the abstraction ladder the idiomatic Nix code we’ll encounter will begin to stray from that simple functional core.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Some people will disagree with my choice to include flakes at this abstraction layer since flakes are sometimes marketed as a dependency manager (similar to &lt;code&gt;niv&lt;/code&gt;). I don’t view them in this way and I treat flakes as primarily as mechanism for purifying evaluation and caching instantiation, as outlined in this post:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.tweag.io/blog/2020-06-25-eval-cache/&quot;&gt;Nix Flakes, Part 2: Evaluation Caching&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and if you view flakes in that capacity then they are a feature of the Nix language since evaluation/instantiation are the primary purpose of the programming language.&lt;/p&gt;&lt;h4 id=&quot;layer-2-the-nix-build-tool&quot;&gt;Layer #2: The Nix build tool&lt;/h4&gt;&lt;p&gt;This layer encompasses the command-line interface to both the “Nix store” and the “Nix language”.&lt;/p&gt;&lt;p&gt;This includes (but is not limited to):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;nix-store&lt;/code&gt; (the command, not the underlying store)&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix-instantiate&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix-build&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix-shell&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix&lt;/code&gt; subcommands, including: &lt;ul&gt;&lt;li&gt;&lt;code&gt;nix build&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix run&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix develop&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix log&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;nix flake&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I make this distinction because the command-line interface enables some additional niceties that are not inherent to the underlying layers. For example, the &lt;code&gt;nix build&lt;/code&gt; command has some flake integration so that you can say &lt;code&gt;nix build someFlake#somePackage&lt;/code&gt; and this command-line API nicety is not necessarily inherent to flakes (in my view).&lt;/p&gt;&lt;p&gt;Also, many of these commands operate at both Layer 0 and Layer 1, which can blur the distinction between the two. For example the &lt;code&gt;nix-build&lt;/code&gt; command can accept a layer 1 Nix program (i.e. a &lt;code&gt;.nix&lt;/code&gt; file) or a layer 0 derivation (i.e. a &lt;code&gt;.drv&lt;/code&gt; file).&lt;/p&gt;&lt;p&gt;Another thing that blurs the distinction is that the Nix manual covers all three of the layers introduced so far, ranging from the Nix store to the command-line interface. However, if you want to better understand these three layers then that is correct place to begin:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nixos.org/manual/nix/stable/introduction.html&quot;&gt;Nix manual&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;layer-3-nixpkgs&quot;&gt;Layer #3: Nixpkgs&lt;/h4&gt;&lt;p&gt;Nixpkgs is a software distribution (a.k.a. “distro”) for Nix. Specifically, all of the packaging logic for Nixpkgs is hosted on GitHub here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/NixOS/nixpkgs&quot;&gt;GitHub - &lt;code&gt;NixOS/nix&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This repository contains a large number of Nix expressions for building packages across several platforms. If the “Nix language” is a programming language then “Nixpkgs” is a gigantic “library” authored within that language. There are other Nix “libraries” outside of Nixpkgs but Nixpkgs is the one you will interact with the most.&lt;/p&gt;&lt;p&gt;The Nixpkgs repository establishes several widespread idioms and conventions, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The standard environment (a.k.a. &lt;code&gt;stdenv&lt;/code&gt;) for authoring a package &lt;ul&gt;&lt;li&gt;There are also language-specific standard-environments, too&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;A domain-specific language for overriding individual packages or sets of packages&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;When people complain about “Nix’s syntax”, most of the time they’re actually complaining about Nixpkgs and more specifically complaining about the Nixpkgs system for overriding packages. However, I can see how people might mistake the two.&lt;/p&gt;&lt;p&gt;The reason for the confusion is that the Nixpkgs support for overrides is essentially an embedded domain-specific language, meaning that you still express everything in the Nix language (layer 1), but the ways in which you express things is fundamentally different than if you were simply using low-level Nix language features.&lt;/p&gt;&lt;p&gt;As a contrived example, this “layer 1” Nix code:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  x = 1;&lt;br /&gt;&lt;br /&gt;  y = x + 2;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… would roughly correspond to the following “layer 3” Nixpkgs overlay:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;self: super: {&lt;br /&gt;  x = 1;&lt;br /&gt;&lt;br /&gt;  y = self.x + 2;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The reason why Nixpkgs doesn’t do the simpler “layer 1” thing is because Nixpkgs is designed to support “late binding” of expressions, meaning that everything can be overridden, even dependencies deep within the dependency tree. Moreover, this overriding is done in such a way that everything “downstream” of the overrride (i.e. all reverse dependencies) pick up the change correctly.&lt;/p&gt;&lt;p&gt;As a more realistic example, the following program:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  pkgs = import &amp;lt;nixpkgs&amp;gt; { };&lt;br /&gt;&lt;br /&gt;  fast-tags =&lt;br /&gt;    pkgs.haskell.lib.justStaticExecutables pkgs.haskellPackages.fast-tags;&lt;br /&gt;&lt;br /&gt;  fast-tags-no-tests =&lt;br /&gt;    pkgs.haskell.lib.dontCheck fast-tags;&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  fast-tags-no-tests&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… is simpler, but is not an idiomatic use of Nixpkgs because it is not using the overlay system and therefore does not support late binding. The more idiomatic analog would be:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  overlay = self: super: {&lt;br /&gt;    fast-tags =&lt;br /&gt;      self.haskell.lib.justStaticExecutables self.haskellPackages.fast-tags;&lt;br /&gt;&lt;br /&gt;    fast-tags-no-tests =&lt;br /&gt;      self.haskell.lib.dontCheck self.fast-tags;&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import &amp;lt;nixpkgs&amp;gt; { overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  pkgs.fast-tags-no-tests&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can learn more about this abstraction layer by consulting the Nixpkgs manual:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nixos.org/manual/nixpkgs/stable/&quot;&gt;Nixpkgs manual&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;layer-4-nixos&quot;&gt;Layer #4: NixOS&lt;/h4&gt;&lt;p&gt;NixOS is an operating system that is (literally) built on Nixpkgs. Specifically, there is a &lt;code&gt;./nixos/&lt;/code&gt; subdirectory of the Nixpkgs repository for all of the NixOS-related logic.&lt;/p&gt;&lt;p&gt;NixOS is based on the NixOS module system, which is yet another embedded domain-specific language. In other words, you configure NixOS with Nix code, but the idioms of that Nix code depart even more wildly from straightforward “layer 1” Nix code.&lt;/p&gt;&lt;p&gt;NixOS modules were designed to look more like Terraform modules than Nix code, but they are still technically Nix code. For example, this is what the NixOS module for the &lt;code&gt;lorri&lt;/code&gt; service looks like at the time of this writing:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;{ config, lib, pkgs, ... }:&lt;br /&gt;&lt;br /&gt;let&lt;br /&gt;  cfg = config.services.lorri;&lt;br /&gt;  socketPath = &amp;quot;lorri/daemon.socket&amp;quot;;&lt;br /&gt;in {&lt;br /&gt;  options = {&lt;br /&gt;    services.lorri = {&lt;br /&gt;      enable = lib.mkOption {&lt;br /&gt;        default = false;&lt;br /&gt;        type = lib.types.bool;&lt;br /&gt;        description = lib.mdDoc &amp;#39;&amp;#39;&lt;br /&gt;          Enables the daemon for `lorri`, a nix-shell replacement for project&lt;br /&gt;          development. The socket-activated daemon starts on the first request&lt;br /&gt;          issued by the `lorri` command.&lt;br /&gt;        &amp;#39;&amp;#39;;&lt;br /&gt;      };&lt;br /&gt;      package = lib.mkOption {&lt;br /&gt;        default = pkgs.lorri;&lt;br /&gt;        type = lib.types.package;&lt;br /&gt;        description = lib.mdDoc &amp;#39;&amp;#39;&lt;br /&gt;          The lorri package to use.&lt;br /&gt;        &amp;#39;&amp;#39;;&lt;br /&gt;        defaultText = lib.literalExpression &amp;quot;pkgs.lorri&amp;quot;;&lt;br /&gt;      };&lt;br /&gt;    };&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  config = lib.mkIf cfg.enable {&lt;br /&gt;    systemd.user.sockets.lorri = {&lt;br /&gt;      description = &amp;quot;Socket for Lorri Daemon&amp;quot;;&lt;br /&gt;      wantedBy = [ &amp;quot;sockets.target&amp;quot; ];&lt;br /&gt;      socketConfig = {&lt;br /&gt;        ListenStream = &amp;quot;%t/${socketPath}&amp;quot;;&lt;br /&gt;        RuntimeDirectory = &amp;quot;lorri&amp;quot;;&lt;br /&gt;      };&lt;br /&gt;    };&lt;br /&gt;&lt;br /&gt;    systemd.user.services.lorri = {&lt;br /&gt;      description = &amp;quot;Lorri Daemon&amp;quot;;&lt;br /&gt;      requires = [ &amp;quot;lorri.socket&amp;quot; ];&lt;br /&gt;      after = [ &amp;quot;lorri.socket&amp;quot; ];&lt;br /&gt;      path = with pkgs; [ config.nix.package git gnutar gzip ];&lt;br /&gt;      serviceConfig = {&lt;br /&gt;        ExecStart = &amp;quot;${cfg.package}/bin/lorri daemon&amp;quot;;&lt;br /&gt;        PrivateTmp = true;&lt;br /&gt;        ProtectSystem = &amp;quot;strict&amp;quot;;&lt;br /&gt;        ProtectHome = &amp;quot;read-only&amp;quot;;&lt;br /&gt;        Restart = &amp;quot;on-failure&amp;quot;;&lt;br /&gt;      };&lt;br /&gt;    };&lt;br /&gt;&lt;br /&gt;    environment.systemPackages = [ cfg.package ];&lt;br /&gt;  };&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You might wonder how NixOS relates to the underlying layers. For example, if Nix is a build system, then how do you “build” NixOS? I have another post which elaborates on that subject here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2018/08/nixos-in-production.html&quot;&gt;NixOS in production&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also, you can learn more about this abstraction layer by consulting the NixOS manual:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nixos.org/manual/nixos/stable/&quot;&gt;NixOS manual&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;nix-ecosystem&quot;&gt;Nix ecosystem&lt;/h4&gt;&lt;p&gt;I use the term “Nix ecosystem” to describe all of the preceding layers and other stuff not mentioned so far (like &lt;code&gt;hydra&lt;/code&gt;, the continuous integration service).&lt;/p&gt;&lt;p&gt;This is not a layer of its own, but I mention this because I prefer to use “Nix ecosystem” instead of “Nix” to avoid ambiguity, since the latter can easily be mistaken for an individual abstraction layer (especially the Nix language or the Nix build tool).&lt;/p&gt;&lt;p&gt;However, when I do hear people say “Nix”, then I generally understand it to mean the “Nix ecosystem” unless they clarify otherwise.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;Hopefully this passive aggressive post helps people express themselves a little more precisely when discussing the Nix ecosystem.&lt;/p&gt;&lt;p&gt;If you enjoy this post, you will probably also like this other post of mine:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2022/03/the-hard-part-of-type-checking-nix.html&quot;&gt;The hard part of type-checking Nix&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… since that touches on the Nixpkgs and NixOS embedded domain-specific languages and how they confound the user experience.&lt;/p&gt;&lt;p&gt;I’ll conclude this post with the following obligatory joke:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I’d just like to interject for a moment. What you’re refering to as Nix, is in fact, NixOS, or as I’ve recently taken to calling it, Nix plus OS. Nix is not an operating system unto itself, but rather another free component of a fully functioning ecosystem made useful by the Nix store, Nix language, and Nix build tool comprising a full OS as defined by POSIX.&lt;/p&gt;&lt;p&gt;Many Guix users run a modified version of the Nix ecosystem every day, without realizing it. Through a peculiar turn of events, the operating system based on Nix which is widely used today is often called Nix, and many of its users are not aware that it is basically the Nix ecosystem, developed by the NixOS foundation.&lt;/p&gt;&lt;p&gt;There really is a Nix, and these people are using it, but it is just a part of the system they use. Nix is the expression language: the program in the system that specifies the services and programs that you want to build and run. The language is an essential part of the operating system, but useless by itself; it can only function in the context of a complete operating system. Nix is normally used in combination with an operating system: the whole system is basically an operating system with Nix added, or NixOS. All the so-called Nix distributions are really distributions of NixOS!&lt;/p&gt;&lt;/blockquote&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/906620765110929969/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/08/stop-calling-everything-nix.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/906620765110929969"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/906620765110929969"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/08/stop-calling-everything-nix.html" title="Stop calling everything &quot;Nix&quot;"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-2613892908644813447</id><published>2022-08-28T08:23:00.007-07:00</published><updated>2022-08-28T08:56:26.253-07:00</updated><title type="text">Incrementally package a Haskell program using Nix</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;  &lt;meta name=&quot;twitter:creator&quot; content=&quot;@GabriellaG439&quot;&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Incrementally package a Haskell program using Nix&quot;&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;A tour of progressively more robust ways to package a Haskell file using Nix&quot;&gt;  &lt;title&gt;incremental-nix&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       overflow-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }       h1 {         font-size: 1.8em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;       overflow-wrap: normal;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC ul {       padding-left: 1.3em;     }     #TOC &gt; ul {       padding-left: 0;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post walks through how to take a standalone Haskell file and progressively package the file using Nix. In other words, we will tour a spectrum of packaging options ranging from simple to fancy.&lt;/p&gt;&lt;p&gt;The running example will be the following standalone single-file Haskell program:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Gabriella439/spire/blob/5a35feb5629df27d9c973d36d9bf940dd85445eb/Spire.hs&quot;&gt;GitHub - Gabriella439/spire - Spire.hs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I won’t go into detail about what that program does, although you can study the program if you are curious. Essentially, I’m planning to deliver a talk based on that program at &lt;a href=&quot;https://munihac.de/2022.html&quot;&gt;this year’s MuniHac&lt;/a&gt; and I wanted to package it up so that other people could collaborate on the program with me during the hackathon.&lt;/p&gt;&lt;p&gt;When I began writing this post, there was no packaging logic for this program; it’s a standalone Haskell file. However, this file has several dependencies outside of Haskell’s standard library, so up until now I needed some way to obtain those dependencies for development.&lt;/p&gt;&lt;h4 id=&quot;stage-0-ghc.withpackages&quot;&gt;Stage 0: &lt;code&gt;ghc.withPackages&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;The most low-tech way that you can hack on a Haskell program using Nix is to use &lt;code&gt;nix-shell&lt;/code&gt; to obtain a transient development environment (this is what I had done up until now).&lt;/p&gt;&lt;p&gt;Specifically, you can do something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-shell &lt;span class=&quot;at&quot;&gt;--packages&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;ghc.withPackages (pkgs: [ pkgs.mtl pkgs.MemoTrie pkgs.containers pkgs.pretty-show ])&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… where &lt;code&gt;pkgs.mtl&lt;/code&gt; and &lt;code&gt;pkgs.MemoTrie&lt;/code&gt; indicate that I want to include the &lt;code&gt;mtl&lt;/code&gt; and &lt;code&gt;MemoTrie&lt;/code&gt;packages in my Haskell development environment.&lt;/p&gt;&lt;p&gt;Inside of that development environment I can build and run the file using &lt;code&gt;ghc&lt;/code&gt;. For example, I can use &lt;code&gt;ghc -O&lt;/code&gt; to build an executable to run:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;[nix-shell]$&lt;/span&gt; ghc &lt;span class=&quot;at&quot;&gt;-O&lt;/span&gt; Spire.hs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;[nix-shell]$&lt;/span&gt; ./Spire&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… or if I don’t care about optimizations I can interpret the file using &lt;code&gt;runghc&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; runghc Spire.hs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;stage-1-ide-support&quot;&gt;Stage 1: IDE support&lt;/h4&gt;&lt;p&gt;Once I’m inside a Nix shell I can begin to take advantage of integrated development environment (IDE) support.&lt;/p&gt;&lt;p&gt;The two most common tools Haskell developers use for rapid feedback are &lt;code&gt;ghcid&lt;/code&gt; and &lt;code&gt;haskell-language-server&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;ghcid&lt;/code&gt; provides a command-line interface for fast type-checking feedback but doesn’t provide other IDE-like features&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;haskell-language-server&lt;/code&gt; is more of a proper IDE that you use in conjunction with some editor&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I can obtain either tool by exiting from the shell and creating a new shell that includes the desired tool.&lt;/p&gt;&lt;p&gt;For example, if I want to use &lt;code&gt;ghcid&lt;/code&gt; then I recreate the &lt;code&gt;nix-shell&lt;/code&gt; using the following command:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-shell &lt;span class=&quot;at&quot;&gt;--packages&lt;/span&gt; ghcid &lt;span class=&quot;st&quot;&gt;&amp;#39;ghc.withPackages (pkgs: [ pkgs.mtl pkgs.MemoTrie pkgs.containers pkgs.pretty-show ])&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and then I can tell &lt;code&gt;ghcid&lt;/code&gt; to continuously type-check my file using:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;[nix-shell]$&lt;/span&gt; ghcid Spire.hs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If I want to use &lt;code&gt;haskell-language-server&lt;/code&gt;, then I recreate the &lt;code&gt;nix-shell&lt;/code&gt; using this command:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-shell &lt;span class=&quot;at&quot;&gt;--packages&lt;/span&gt; haskell-language-server &lt;span class=&quot;st&quot;&gt;&amp;#39;ghc.withPackages (pkgs: [ pkgs.mtl pkgs.MemoTrie pkgs.containers pkgs.pretty-show ])&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and then I can explore the code in any editor that supports the language server protocol.&lt;/p&gt;&lt;p&gt;Note that if you use VSCode as your editor then you may need to install some additional plugins:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=justusadam.language-haskell&quot;&gt;Haskell Syntax Highlighting&lt;/a&gt; plugin&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=haskell.haskell&quot;&gt;Haskell&lt;/a&gt;plugin&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and the next section will show how to install VSCode and those plugins using Nix.&lt;/p&gt;&lt;p&gt;However, once you do install those plugins then you can open the file in VSCode from within the &lt;code&gt;nix-shell&lt;/code&gt; using:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;[nix-shell]$&lt;/span&gt; code Spire.hs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and once you &lt;a href=&quot;https://code.visualstudio.com/docs/editor/workspace-trust&quot;&gt;trust the file&lt;/a&gt; the IDE features will kick in.&lt;/p&gt;&lt;h4 id=&quot;stage-2-global-development-environment&quot;&gt;Stage 2: Global development environment&lt;/h4&gt;&lt;p&gt;Sometimes I like to globally install development tools that are commonly shared between projects. For example, if I use &lt;code&gt;ghcid&lt;/code&gt; or &lt;code&gt;haskell-language-server&lt;/code&gt; across all my projects then I don’t want to have to explicitly enumerate that tool in each project’s Nix shell.&lt;/p&gt;&lt;p&gt;Moreover, my tool preferences might not be shared by other developers. If I share my &lt;code&gt;nix-shell&lt;/code&gt; with other developers for a project then I probably don’t want to add editors/IDEs or other command-line tools to that environment because then they have to download those tools regardless of whether they plan to use them.&lt;/p&gt;&lt;p&gt;However, I don’t want to globally install development tools like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-env &lt;span class=&quot;at&quot;&gt;--install&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--file&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;lt;nixpkgs&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--attr&lt;/span&gt; ghcid&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-env &lt;span class=&quot;at&quot;&gt;--install&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--file&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;&amp;lt;nixpkgs&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--attr&lt;/span&gt; haskell-language-server&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Part of the reason I use Nix is to avoid imperatively managing my development environment. Fortunately, though, &lt;code&gt;nix-env&lt;/code&gt;supports a more declarative way of managing dependencies.&lt;/p&gt;&lt;p&gt;What you can do instead is save a file like this to &lt;code&gt;~/default.nix&lt;/code&gt;:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  # For VSCode&lt;br /&gt;  config = { allowUnfree = true; };&lt;br /&gt;&lt;br /&gt;  overlay = pkgsNew: pkgsOld: {&lt;br /&gt;    # Here&amp;#39;s an example of how to use Nix to install VSCode with plugins managed&lt;br /&gt;    # by Nix, too&lt;br /&gt;    vscode-with-extensions = pkgsOld.vscode-with-extensions.override {&lt;br /&gt;      vscodeExtensions = [&lt;br /&gt;        pkgsNew.vscode-extensions.haskell.haskell&lt;br /&gt;        pkgsNew.vscode-extensions.justusadam.language-haskell&lt;br /&gt;      ]; &lt;br /&gt;    };&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import &amp;lt;nixpkgs&amp;gt; { inherit config; overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in      &lt;br /&gt;  { inherit (pkgs)&lt;br /&gt;      # I included some sample useful development tools for Haskell.  Feel free&lt;br /&gt;      # to customize.&lt;br /&gt;      cabal-install&lt;br /&gt;      ghcid&lt;br /&gt;      haskell-language-server&lt;br /&gt;      stylish-haskell&lt;br /&gt;      vscode-with-extensions &lt;br /&gt;    ; &lt;br /&gt;  }     &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and once you create that file you have two options.&lt;/p&gt;&lt;p&gt;The first option is that you can set your global development environment to match the file by running:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-env &lt;span class=&quot;at&quot;&gt;--remove-all&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--install&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;--file&lt;/span&gt; ~/default.nix&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;NOTE: At the time of this writing you may also need to add &lt;code&gt;--system x86_64-darwin&lt;/code&gt; if you are trying out these examples on an M1 Macbook. For more details, see:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://evanrelf.com/building-x86-64-packages-with-nix-on-apple-silicon&quot;&gt;Building x86-64 Packages With Nix on Apple Silicon&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p&gt;Carefully note the &lt;code&gt;--remove-all&lt;/code&gt;, which resets your development environment to match the file, so that nothing from your old development environment is accidentally carried over into your new development environment. This makes our use of the &lt;code&gt;nix-env&lt;/code&gt;command truly declarative.&lt;/p&gt;&lt;p&gt;The second option is that you can change the file to create a valid shell, like this:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  config = { allowUnfree = true; };&lt;br /&gt;&lt;br /&gt;  overlay = pkgsNew: pkgsOld: {&lt;br /&gt;    vscode-with-extensions = pkgsOld.vscode-with-extensions.override {&lt;br /&gt;      vscodeExtensions = [&lt;br /&gt;        pkgsNew.vscode-extensions.haskell.haskell&lt;br /&gt;        pkgsNew.vscode-extensions.justusadam.language-haskell&lt;br /&gt;      ];&lt;br /&gt;    };&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import &amp;lt;nixpkgs&amp;gt; { inherit config; overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  pkgs.mkShell {&lt;br /&gt;    packages = [&lt;br /&gt;      pkgs.ghcid&lt;br /&gt;      pkgs.haskell-language-server&lt;br /&gt;      pkgs.stylish-haskell&lt;br /&gt;      pkgs.vscode-with-extensions&lt;br /&gt;      pkgs.cabal-install&lt;br /&gt;    ];&lt;br /&gt;  }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and then run:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-shell ~/default.nix&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or, even better, you can rename the file to &lt;code&gt;~/shell.nix&lt;/code&gt;and then if you’re already in your home directory (e.g. you just logged into your system), then you can run:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-shell&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which will select &lt;code&gt;~/shell.nix&lt;/code&gt; by default. This lets you get a completely transient development environment so that you never have to install anything development tools globally.&lt;/p&gt;&lt;p&gt;These &lt;code&gt;nix-shell&lt;/code&gt; commands stack, so you can first run &lt;code&gt;nix-shell&lt;/code&gt; to obtain your global development environment and then use &lt;code&gt;nix-shell&lt;/code&gt; a second time to obtain project-specific dependencies.&lt;/p&gt;&lt;p&gt;My personal preference is to use the declarative &lt;code&gt;nix-env&lt;/code&gt;trick for installing global development tools. In my opinion it’s just as elegant as &lt;code&gt;nix-shell&lt;/code&gt; and slightly less hassle.&lt;/p&gt;&lt;h4 id=&quot;stage-3-cabal&quot;&gt;Stage 3: Cabal&lt;/h4&gt;&lt;p&gt;Anyway, enough about global development tools. Back to our Haskell project!&lt;/p&gt;&lt;p&gt;So &lt;code&gt;ghc.withPackages&lt;/code&gt; is a great way to just start hacking on a standalone Haskell program when you don’t want to worry about packaging up the program. However, at some point you might want to share the program with the others or do a proper job of packaging if you’re trying to &lt;a href=&quot;https://en.wiktionary.org/wiki/productionize&quot;&gt;productionize&lt;/a&gt;the code.&lt;/p&gt;&lt;p&gt;That brings us to the next step, which is packaging our Haskell program with a Cabal file (a Haskell package manifest). We’ll need the &lt;code&gt;cabal-install&lt;/code&gt; command-line tool before we proceed further, so you’ll want to add that tool to your global development environment (see the previous section).&lt;/p&gt;&lt;p&gt;To create our &lt;code&gt;.cabal&lt;/code&gt; file we can run the following command from the top-level directory of our Haskell project:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; cabal init &lt;span class=&quot;at&quot;&gt;--interactive&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Should&lt;/span&gt; I generate a simple project with sensible defaults&lt;span class=&quot;pp&quot;&gt;?&lt;/span&gt; [default: y] n&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and follow the prompts to create a starting point for our &lt;code&gt;.cabal&lt;/code&gt; file.&lt;/p&gt;&lt;p&gt;After completing those choices and trimming down the &lt;code&gt;.cabal&lt;/code&gt; file (to keep the example simple), I get a file that looks like this:&lt;/p&gt;&lt;pre class=&quot;cabal&quot;&gt;&lt;code&gt;cabal-version:      2.4&lt;br /&gt;name:               spire&lt;br /&gt;version:            1.0.0&lt;br /&gt;license:            BSD-3-Clause&lt;br /&gt;license-file:       LICENSE&lt;br /&gt;&lt;br /&gt;executable spire&lt;br /&gt;    main-is:          Spire.hs&lt;br /&gt;    build-depends:    base ^&amp;gt;=4.14.3.0&lt;br /&gt;    default-language: Haskell2010&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The only thing I’m going change for now is to add dependencies to the &lt;code&gt;build-depends&lt;/code&gt; section and increase the upper bound on &lt;code&gt;base&lt;/code&gt;::&lt;/p&gt;&lt;pre class=&quot;cabal&quot;&gt;&lt;code&gt;cabal-version:      2.4&lt;br /&gt;name:               spire&lt;br /&gt;version:            1.0.0&lt;br /&gt;license:            BSD-3-Clause&lt;br /&gt;license-file:       LICENSE&lt;br /&gt;&lt;br /&gt;executable spire&lt;br /&gt;    main-is:          Spire.hs&lt;br /&gt;    build-depends:    base &amp;gt;=4.14.3.0 &amp;amp;&amp;amp; &amp;lt; 5&lt;br /&gt;                    , MemoTrie&lt;br /&gt;                    , containers&lt;br /&gt;                    , mtl&lt;br /&gt;                    , pretty-show&lt;br /&gt;                    , transformers&lt;br /&gt;    default-language: Haskell2010&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;stage-4-cabal2nix---shell&quot;&gt;Stage 4: &lt;code&gt;cabal2nix --shell&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;Adding a &lt;code&gt;.cabal&lt;/code&gt; file suffices to share our Haskell package with other Haskell developers if they’re not using Nix. However, if we want to Nix-enable package our package then we have a few options.&lt;/p&gt;&lt;p&gt;The simplest option is to run the following command from the top-level of the Haskell project:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ cabal2nix --shell . &amp;gt; shell.nix&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That will create something similar to the following &lt;code&gt;shell.nix&lt;/code&gt; file:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;{ nixpkgs ? import &amp;lt;nixpkgs&amp;gt; {}, compiler ? &amp;quot;default&amp;quot;, doBenchmark ? false }:&lt;br /&gt;&lt;br /&gt;let&lt;br /&gt;&lt;br /&gt;  inherit (nixpkgs) pkgs;&lt;br /&gt;&lt;br /&gt;  f = { mkDerivation, base, containers, lib, MemoTrie, mtl&lt;br /&gt;      , pretty-show, transformers&lt;br /&gt;      }:&lt;br /&gt;      mkDerivation {&lt;br /&gt;        pname = &amp;quot;spire&amp;quot;;&lt;br /&gt;        version = &amp;quot;1.0.0&amp;quot;;&lt;br /&gt;        src = ./.;&lt;br /&gt;        isLibrary = false;&lt;br /&gt;        isExecutable = true;&lt;br /&gt;        executableHaskellDepends = [&lt;br /&gt;          base containers MemoTrie mtl pretty-show transformers&lt;br /&gt;        ];&lt;br /&gt;        license = lib.licenses.bsd3;&lt;br /&gt;      };&lt;br /&gt;&lt;br /&gt;  haskellPackages = if compiler == &amp;quot;default&amp;quot;&lt;br /&gt;                       then pkgs.haskellPackages&lt;br /&gt;                       else pkgs.haskell.packages.${compiler};&lt;br /&gt;&lt;br /&gt;  variant = if doBenchmark then pkgs.haskell.lib.doBenchmark else pkgs.lib.id;&lt;br /&gt;&lt;br /&gt;  drv = variant (haskellPackages.callPackage f {});&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;&lt;br /&gt;  if pkgs.lib.inNixShell then drv.env else drv&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and if you run &lt;code&gt;nix-shell&lt;/code&gt; within the same directory the shell environment will have the Haskell dependencies you need to build and run project using &lt;code&gt;cabal&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-shell&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;[nix-shell]$&lt;/span&gt; cabal run&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-3&quot;&gt;&lt;a href=&quot;#cb19-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and tools like &lt;code&gt;ghcid&lt;/code&gt; and &lt;code&gt;haskell-language-server&lt;/code&gt; will also work within this shell, too. The only difference is that &lt;code&gt;ghcid&lt;/code&gt; now takes no arguments, since it will auto-detect the cabal project in the current directory:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;[nix-shell]$&lt;/span&gt; ghcid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that this &lt;code&gt;nix-shell&lt;/code&gt; will &lt;strong&gt;NOT&lt;/strong&gt;include &lt;code&gt;cabal&lt;/code&gt; by default. You will need to globally install &lt;code&gt;cabal&lt;/code&gt; (see the prior section on “Global development environment”).&lt;/p&gt;&lt;p&gt;This &lt;code&gt;cabal2nix --shell&lt;/code&gt; workflow is sufficiently lightweight that you can Nixify other people’s projects on the fly when hacking on them locally. A common thing I do if I need to make a change to a person’s project is to clone their repository, run:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; cabal2nix &lt;span class=&quot;at&quot;&gt;--shell&lt;/span&gt; . &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; shell.nix&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-2&quot;&gt;&lt;a href=&quot;#cb21-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-shell&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and start hacking away. I don’t even need to upstream the &lt;code&gt;shell.nix&lt;/code&gt; file I created in this way; I just keep it around locally for my own hacking.&lt;/p&gt;&lt;p&gt;In fact, I typically don’t want to upstream such a &lt;code&gt;shell.nix&lt;/code&gt; file (even if the upstream author were receptive to Nix), because there are more robust Nix expressions we can upstream instead.&lt;/p&gt;&lt;h4 id=&quot;stage-5-custom-shell.nix-file&quot;&gt;Stage 5: Custom &lt;code&gt;shell.nix&lt;/code&gt; file&lt;/h4&gt;&lt;p&gt;One disadvantage of &lt;code&gt;cabal2nix --shell&lt;/code&gt; is that you have to re-run the command any time your dependencies change. However, if you’re willing to hand-write your own &lt;code&gt;shell.nix&lt;/code&gt; file then you can create something more stable:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  overlay = pkgsNew: pkgsOld: {&lt;br /&gt;    haskellPackages = pkgsOld.haskellPackages.override (old: {&lt;br /&gt;      overrides = pkgsNew.haskell.lib.packageSourceOverrides {&lt;br /&gt;        spire = ./.;&lt;br /&gt;      };&lt;br /&gt;    });&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import &amp;lt;nixpkgs&amp;gt; { overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  pkgs.haskellPackages.spire.env&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;packageSourceOverrides&lt;/code&gt; is the key bit. Under the hood, that essentially runs &lt;code&gt;cabal2nix&lt;/code&gt; for you any time your project changes and then generates your development environment from the result. You can also use &lt;code&gt;packageSourceOverrides&lt;/code&gt; to specify non-default versions of dependencies, too:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  overlay = pkgsNew: pkgsOld: {&lt;br /&gt;    haskellPackages = pkgsOld.haskellPackages.override (old: {&lt;br /&gt;      overrides = pkgsNew.haskell.lib.packageSourceOverrides {&lt;br /&gt;        spire = ./.;&lt;br /&gt;&lt;br /&gt;        # Example of how to pin a dependency to a non-defaul version&lt;br /&gt;        pretty-show = &amp;quot;1.9.5&amp;quot;;&lt;br /&gt;      };&lt;br /&gt;    });&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import &amp;lt;nixpkgs&amp;gt; { overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  pkgs.haskellPackages.spire.env&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… although that will only work for packages that have been released prior to the version of Nixpkgs that you’re depending on.&lt;/p&gt;&lt;p&gt;If you want something a bit more robust, you can do something like this:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  overlay = pkgsNew: pkgsOld: {&lt;br /&gt;    haskellPackages = pkgsOld.haskellPackages.override (old: {&lt;br /&gt;      overrides =&lt;br /&gt;        pkgsNew.lib.fold&lt;br /&gt;          pkgsNew.lib.composeExtensions&lt;br /&gt;          (old.overrides or (_: _: { }))&lt;br /&gt;          [ (pkgsNew.haskell.lib.packageSourceOverrides {&lt;br /&gt;              spire = ./.;&lt;br /&gt;            })&lt;br /&gt;            (pkgsNew.haskell.lib.packagesFromDirectory {&lt;br /&gt;              directory = ./packages;&lt;br /&gt;            })&lt;br /&gt;          ];&lt;br /&gt;    });&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import &amp;lt;nixpkgs&amp;gt; { overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  pkgs.haskellPackages.spire.env&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and then you have the option to also depend on any dependency that &lt;code&gt;cabal2nix&lt;/code&gt; knows how to generate:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb25&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb25-1&quot;&gt;&lt;a href=&quot;#cb25-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; mkdir packages&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-2&quot;&gt;&lt;a href=&quot;#cb25-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-3&quot;&gt;&lt;a href=&quot;#cb25-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# Add the following file to version control to preserve the directory&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-4&quot;&gt;&lt;a href=&quot;#cb25-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; touch packages/.gitkeep&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-5&quot;&gt;&lt;a href=&quot;#cb25-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-6&quot;&gt;&lt;a href=&quot;#cb25-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; cabal update&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-7&quot;&gt;&lt;a href=&quot;#cb25-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-8&quot;&gt;&lt;a href=&quot;#cb25-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; cabal2nix cabal://&lt;span class=&quot;va&quot;&gt;${PACKAGE_NAME}&lt;/span&gt;-&lt;span class=&quot;va&quot;&gt;${VERSION}&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; ./packages/&lt;span class=&quot;va&quot;&gt;${PACKAGE_NAME}&lt;/span&gt;.nix&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that works even on bleeding-edge Haskell packages that Nixpkgs hasn’t picked up, yet.&lt;/p&gt;&lt;h4 id=&quot;stage-6-pinning-nixpkgs&quot;&gt;Stage 6: Pinning Nixpkgs&lt;/h4&gt;&lt;p&gt;All of the prior examples are “impure”, meaning that they depend on the ambient &lt;code&gt;nixpkgs&lt;/code&gt; channel installed on the developer’s system. This &lt;code&gt;nixpkgs&lt;/code&gt; channel might vary from system to system, meaning that each system might have different versions of &lt;code&gt;nixpkgs&lt;/code&gt; installed, and then you run into issues reproducing each other’s builds.&lt;/p&gt;&lt;p&gt;For example, if you have a newer version of &lt;code&gt;nixpkgs&lt;/code&gt;installed your Nix build for the above Haskell project might succeed, but then another developer might attempt to build your project with an older version of &lt;code&gt;nixpkgs&lt;/code&gt;, which might select an older incompatible version of one of your Haskell dependencies.&lt;/p&gt;&lt;p&gt;Or, vice versa, the examples in this blog post might succeed at the time of this writing for the current version of &lt;code&gt;nixpkgs&lt;/code&gt; but then as time goes on the examples might begin to fail for future versions of &lt;code&gt;nixpkgs&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;You can fix that by pinning Nixpkgs, which this post covers:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nixos.wiki/wiki/How_to_fetch_Nixpkgs_with_an_empty_NIX_PATH&quot;&gt;How to fetch Nixpkgs with an empty &lt;code&gt;NIX_PATH&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For example, we could pin &lt;code&gt;nixpkgs&lt;/code&gt; for our global &lt;code&gt;~/default.nix&lt;/code&gt; like this:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  nixpkgs = builtins.fetchTarball {&lt;br /&gt;    url    = &amp;quot;https://github.com/NixOS/nixpkgs/archive/0ba2543f8c855d7be8e90ef6c8dc89c1617e8a08.tar.gz&amp;quot;;&lt;br /&gt;    sha256 = &amp;quot;14ann7vz7qgfrw39ji1s19n1p0likyf2ag8h7rh8iwp3iv5lmprl&amp;quot;;&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  config = { allowUnfree = true; };&lt;br /&gt;&lt;br /&gt;  overlay = pkgsNew: pkgsOld: {&lt;br /&gt;    vscode-with-extensions = pkgsOld.vscode-with-extensions.override {&lt;br /&gt;      vscodeExtensions = [&lt;br /&gt;        pkgsNew.vscode-extensions.haskell.haskell&lt;br /&gt;        pkgsNew.vscode-extensions.justusadam.language-haskell&lt;br /&gt;      ];&lt;br /&gt;    };&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import nixpkgs { inherit config; overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  { inherit (pkgs)&lt;br /&gt;      cabal-install&lt;br /&gt;      ghcid&lt;br /&gt;      haskell-language-server&lt;br /&gt;      stylish-haskell&lt;br /&gt;      vscode-with-extensions&lt;br /&gt;    ;&lt;br /&gt;  }&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… which pins us to the tip of the &lt;code&gt;release-22.05&lt;/code&gt; branch at the time of this writing.&lt;/p&gt;&lt;p&gt;We can likewise pin &lt;code&gt;nixpkgs&lt;/code&gt; for our project-local &lt;code&gt;shell.nix&lt;/code&gt; like this:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;let&lt;br /&gt;  nixpkgs = builtins.fetchTarball {&lt;br /&gt;    url    = &amp;quot;https://github.com/NixOS/nixpkgs/archive/0ba2543f8c855d7be8e90ef6c8dc89c1617e8a08.tar.gz&amp;quot;;&lt;br /&gt;    sha256 = &amp;quot;14ann7vz7qgfrw39ji1s19n1p0likyf2ag8h7rh8iwp3iv5lmprl&amp;quot;;&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  overlay = pkgsNew: pkgsOld: {&lt;br /&gt;    haskellPackages = pkgsOld.haskellPackages.override (old: {&lt;br /&gt;      overrides = pkgsNew.haskell.lib.packageSourceOverrides {&lt;br /&gt;        spire = ./.;&lt;br /&gt;      };&lt;br /&gt;    });&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  pkgs = import nixpkgs { overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;in&lt;br /&gt;  pkgs.haskellPackages.spire.env&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;flakes&quot;&gt;Flakes&lt;/h4&gt;&lt;p&gt;The final improvement we can make is the most important one of all: we can convert our project into a Nix flake:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://nixos.wiki/wiki/Flakes&quot;&gt;NixOS Wiki - Flakes&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are two main motivations for flake-enabling our project:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To simplify managing inputs that we need to lock (e.g. &lt;code&gt;nixpkgs&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;To speed up our shell&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To flake-enable our project, we’ll save the following code to &lt;code&gt;flake.nix&lt;/code&gt;:&lt;/p&gt;&lt;pre class=&quot;nix&quot;&gt;&lt;code&gt;{ inputs = {&lt;br /&gt;    nixpkgs.url = github:NixOS/nixpkgs/release-22.05;&lt;br /&gt;&lt;br /&gt;    utils.url = github:numtide/flake-utils;&lt;br /&gt;  };&lt;br /&gt;&lt;br /&gt;  outputs = { nixpkgs, utils, ... }:&lt;br /&gt;    utils.lib.eachDefaultSystem (system:&lt;br /&gt;      let&lt;br /&gt;        config = { };&lt;br /&gt;&lt;br /&gt;        overlay = pkgsNew: pkgsOld: {&lt;br /&gt;          spire =&lt;br /&gt;            pkgsNew.haskell.lib.justStaticExecutables&lt;br /&gt;              pkgsNew.haskellPackages.spire;&lt;br /&gt;&lt;br /&gt;          haskellPackages = pkgsOld.haskellPackages.override (old: {&lt;br /&gt;            overrides = pkgsNew.haskell.lib.packageSourceOverrides {&lt;br /&gt;              spire = ./.;&lt;br /&gt;            };&lt;br /&gt;          });&lt;br /&gt;        };&lt;br /&gt;&lt;br /&gt;        pkgs =&lt;br /&gt;          import nixpkgs { inherit config system; overlays = [ overlay ]; };&lt;br /&gt;&lt;br /&gt;      in&lt;br /&gt;        rec {&lt;br /&gt;          packages.default = pkgs.haskellPackages.spire;&lt;br /&gt;&lt;br /&gt;          apps.default = {&lt;br /&gt;            type = &amp;quot;app&amp;quot;;&lt;br /&gt;&lt;br /&gt;            program = &amp;quot;${pkgs.spire}/bin/spire&amp;quot;;&lt;br /&gt;          };&lt;br /&gt;&lt;br /&gt;          devShells.default = pkgs.haskellPackages.spire.env;&lt;br /&gt;        }&lt;br /&gt;    );&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and then we can delete our old &lt;code&gt;shell.nix&lt;/code&gt; because we don’t need it anymore.&lt;/p&gt;&lt;p&gt;Now we can obtain a development environment by running:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb29&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb29-1&quot;&gt;&lt;a href=&quot;#cb29-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix develop&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the above flake also makes it possible to easily build and run the program, too:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb30&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb30-1&quot;&gt;&lt;a href=&quot;#cb30-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix run    &lt;span class=&quot;co&quot;&gt;# Run the program&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-2&quot;&gt;&lt;a href=&quot;#cb30-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix build  &lt;span class=&quot;co&quot;&gt;# Build the project&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In fact, you can even run a flake without having to clone a repository. For example, you can run the example code from this blog post by typing:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb31&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb31-1&quot;&gt;&lt;a href=&quot;#cb31-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix run github:Gabriella439/spire&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Moreover, we no longer have to take care of managing hashes for, say, Nixpkgs. The flake machinery takes care of that automatically for you and generates a &lt;code&gt;flake.lock&lt;/code&gt; file which you can then add to version control. For example, the lock file I got was:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb32&quot;&gt;&lt;pre class=&quot;sourceCode json&quot;&gt;&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span id=&quot;cb32-1&quot;&gt;&lt;a href=&quot;#cb32-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-2&quot;&gt;&lt;a href=&quot;#cb32-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;nodes&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-3&quot;&gt;&lt;a href=&quot;#cb32-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-4&quot;&gt;&lt;a href=&quot;#cb32-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;dt&quot;&gt;&amp;quot;locked&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-5&quot;&gt;&lt;a href=&quot;#cb32-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;lastModified&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1661617163&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-6&quot;&gt;&lt;a href=&quot;#cb32-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;narHash&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;sha256-NN9Ky47j8ohgPhA9JZyfkYIbbAo6RJkGz+7h8/exVpE=&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-7&quot;&gt;&lt;a href=&quot;#cb32-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;owner&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;NixOS&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-8&quot;&gt;&lt;a href=&quot;#cb32-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;repo&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-9&quot;&gt;&lt;a href=&quot;#cb32-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;rev&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;0ba2543f8c855d7be8e90ef6c8dc89c1617e8a08&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-10&quot;&gt;&lt;a href=&quot;#cb32-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-11&quot;&gt;&lt;a href=&quot;#cb32-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;fu&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-12&quot;&gt;&lt;a href=&quot;#cb32-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;dt&quot;&gt;&amp;quot;original&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-13&quot;&gt;&lt;a href=&quot;#cb32-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;owner&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;NixOS&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-14&quot;&gt;&lt;a href=&quot;#cb32-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;ref&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;release-22.05&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-15&quot;&gt;&lt;a href=&quot;#cb32-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;repo&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-16&quot;&gt;&lt;a href=&quot;#cb32-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-17&quot;&gt;&lt;a href=&quot;#cb32-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-18&quot;&gt;&lt;a href=&quot;#cb32-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-19&quot;&gt;&lt;a href=&quot;#cb32-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-20&quot;&gt;&lt;a href=&quot;#cb32-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;dt&quot;&gt;&amp;quot;inputs&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-21&quot;&gt;&lt;a href=&quot;#cb32-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-22&quot;&gt;&lt;a href=&quot;#cb32-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;utils&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;utils&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-23&quot;&gt;&lt;a href=&quot;#cb32-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-24&quot;&gt;&lt;a href=&quot;#cb32-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-25&quot;&gt;&lt;a href=&quot;#cb32-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;&amp;quot;utils&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-26&quot;&gt;&lt;a href=&quot;#cb32-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;dt&quot;&gt;&amp;quot;locked&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-27&quot;&gt;&lt;a href=&quot;#cb32-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;lastModified&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1659877975&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-28&quot;&gt;&lt;a href=&quot;#cb32-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;narHash&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;sha256-zllb8aq3YO3h8B/U0/J1WBgAL8EX5yWf5pMj3G0NAmc=&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-29&quot;&gt;&lt;a href=&quot;#cb32-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;owner&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;numtide&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-30&quot;&gt;&lt;a href=&quot;#cb32-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;repo&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;flake-utils&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-31&quot;&gt;&lt;a href=&quot;#cb32-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;rev&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;c0e246b9b83f637f4681389ecabcb2681b4f3af0&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-32&quot;&gt;&lt;a href=&quot;#cb32-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-33&quot;&gt;&lt;a href=&quot;#cb32-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;fu&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-34&quot;&gt;&lt;a href=&quot;#cb32-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;dt&quot;&gt;&amp;quot;original&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-35&quot;&gt;&lt;a href=&quot;#cb32-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;owner&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;numtide&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-36&quot;&gt;&lt;a href=&quot;#cb32-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;repo&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;flake-utils&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-37&quot;&gt;&lt;a href=&quot;#cb32-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-38&quot;&gt;&lt;a href=&quot;#cb32-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-39&quot;&gt;&lt;a href=&quot;#cb32-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-40&quot;&gt;&lt;a href=&quot;#cb32-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;fu&quot;&gt;},&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-41&quot;&gt;&lt;a href=&quot;#cb32-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-42&quot;&gt;&lt;a href=&quot;#cb32-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-43&quot;&gt;&lt;a href=&quot;#cb32-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and you can easily upgrade to, say, a newer revision of Nixpkgs if you need to.&lt;/p&gt;&lt;p&gt;Additionally, all of the Nix commands are now &lt;em&gt;faster&lt;/em&gt;. Specifically, the first time you run a command Nix still needs to download and/or build dependencies, but subsequent runs are faster because Nix can skip the instantiation phase. For more details, see:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.tweag.io/blog/2020-06-25-eval-cache/&quot;&gt;Nix Flakes, Part 2: Evaluation Caching&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;Flakes are our final destination, so that’s as far as this post will go. There are technically some more ways that we can overengineer things, but in my experience the idioms highlighted in this post are the ones that provide the highest power-to-weight ratio.&lt;/p&gt;&lt;p&gt;The key thing to take away is that the Nixpkgs Haskell infrastructure lets you smoothly transition from simpler approaches to more powerful approaches, and even the final flake-enabled approach is actually not that complicated.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/2613892908644813447/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/08/incrementally-package-haskell-program.html#comment-form" title="4 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/2613892908644813447"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/2613892908644813447"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/08/incrementally-package-haskell-program.html" title="Incrementally package a Haskell program using Nix"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-810372623312147782</id><published>2022-06-26T10:03:00.004-07:00</published><updated>2022-06-26T19:03:59.290-07:00</updated><title type="text">defaultable-map: An Applicative wrapper for Maps</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;defaultable-map: An Applicative wrapper for Maps&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;An announcement post for a Haskell package for default-valued Maps.&quot; /&gt;  &lt;title&gt;defaultable-map: An Applicative wrapper for Maps&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;I’m announcing a small utility Haskell package I created that can wrap arbitrary &lt;code&gt;Map&lt;/code&gt;-like types to provide &lt;code&gt;Applicative&lt;/code&gt; and &lt;code&gt;Alternative&lt;/code&gt; instances. You can find this package on Hackage here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hackage.haskell.org/package/defaultable-map&quot;&gt;&lt;code&gt;defaultable-map&lt;/code&gt;: Applicative maps&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I can motivate why the &lt;code&gt;Applicative&lt;/code&gt; and &lt;code&gt;Alternative&lt;/code&gt; instances matter with a small example. Suppose that I define the following three &lt;code&gt;Map&lt;/code&gt;s which are sort of like database tables:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable.Map&lt;/span&gt; &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;firstNames ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;) &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;firstNames &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; fromList [(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Gabriella&amp;quot;&lt;/span&gt;), (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Oscar&amp;quot;&lt;/span&gt;), (&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Edgar&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;lastNames ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;) &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;lastNames &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; fromList [(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Gonzalez&amp;quot;&lt;/span&gt;), (&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Codd&amp;quot;&lt;/span&gt;), (&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Bryant&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;handles ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;) &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;handles &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; fromList [(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;GabriellaG439&amp;quot;&lt;/span&gt;), (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;posco&amp;quot;&lt;/span&gt;), (&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;avibryant&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you squint, you can think of these as analogous to database tables, where the primary key is an &lt;code&gt;Int&lt;/code&gt; index:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; firstNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;integer&lt;/span&gt;, firstName text);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; firstNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, firstName) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Gabriella&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; firstNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, firstName) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Oscar&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; firstNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, firstName) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Edgar&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; firstNames;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; | firstName&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;---+----------&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;  | Gabriella&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;  | Oscar&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;  | Edgar&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; lastNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;integer&lt;/span&gt;, lastName text);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; lastNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, lastName) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Gonzalez&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-14&quot;&gt;&lt;a href=&quot;#cb2-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; lastNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, lastName) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Codd&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-15&quot;&gt;&lt;a href=&quot;#cb2-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; lastNames (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, lastName) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;Bryant&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-16&quot;&gt;&lt;a href=&quot;#cb2-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; lastNames;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-17&quot;&gt;&lt;a href=&quot;#cb2-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; | lastName&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-18&quot;&gt;&lt;a href=&quot;#cb2-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;---+---------&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-19&quot;&gt;&lt;a href=&quot;#cb2-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;  | Gonzalez&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-20&quot;&gt;&lt;a href=&quot;#cb2-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;  | Codd&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-21&quot;&gt;&lt;a href=&quot;#cb2-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;  | Bryant&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-22&quot;&gt;&lt;a href=&quot;#cb2-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-23&quot;&gt;&lt;a href=&quot;#cb2-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;TABLE&lt;/span&gt; handles (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;integer&lt;/span&gt;, handle text);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-24&quot;&gt;&lt;a href=&quot;#cb2-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; handles (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, handle) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;GabriellaG439&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-25&quot;&gt;&lt;a href=&quot;#cb2-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; handles (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, handle) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;posco&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-26&quot;&gt;&lt;a href=&quot;#cb2-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;INTO&lt;/span&gt; handles (&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, handle) &lt;span class=&quot;kw&quot;&gt;VALUES&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;avibryant&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-27&quot;&gt;&lt;a href=&quot;#cb2-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; handles;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-28&quot;&gt;&lt;a href=&quot;#cb2-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; | handle&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-29&quot;&gt;&lt;a href=&quot;#cb2-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;---+--------------&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-30&quot;&gt;&lt;a href=&quot;#cb2-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;  | GabriellaG439&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-31&quot;&gt;&lt;a href=&quot;#cb2-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;  | posco&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-32&quot;&gt;&lt;a href=&quot;#cb2-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;  | avibryant&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;Defaultable (Map Int)&lt;/code&gt; type has a law-abiding &lt;code&gt;Applicative&lt;/code&gt; instance, so we can safely “join” these “tables” using &lt;code&gt;Applicative&lt;/code&gt; operations. For example, if we enable Haskell’s &lt;code&gt;ApplicativeDo&lt;/code&gt; language extension then we can compute an “inner join” on tables like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE ApplicativeDo #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;innerJoin ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;innerJoin &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    firstName &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; firstNames&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    lastName  &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; lastNames&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (firstName, lastName)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that evaluates to the following result:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (fromList&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        [ (&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, (&lt;span class=&quot;st&quot;&gt;&amp;quot;Gabriella&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;Gonzalez&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , (&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, (&lt;span class=&quot;st&quot;&gt;&amp;quot;Edgar&amp;quot;&lt;/span&gt;    ,&lt;span class=&quot;st&quot;&gt;&amp;quot;Codd&amp;quot;&lt;/span&gt;    ))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which is the same result we would have gotten from doing an inner join in SQL:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; firstNames.&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, firstName, lastName&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; firstNames &lt;span class=&quot;kw&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;JOIN&lt;/span&gt; lastNames &lt;span class=&quot;kw&quot;&gt;on&lt;/span&gt; firstNames.&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; lastNames.&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; | firstName | lastName&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;---+-----------+---------&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;  | Gabriella | Gonzalez&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;  | Edgar     | Codd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;Defaultable (Map Int)&lt;/code&gt; type also has a law-abiding &lt;code&gt;Alternative&lt;/code&gt; instance, which we can combine with the &lt;code&gt;Applicative&lt;/code&gt; instance to compute “left/right/outer joins”. For example, this “left join”:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;leftJoin ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;leftJoin &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    firstName &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; firstNames&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    lastName  &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; optional lastNames&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (firstName, lastName)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… evaluates to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (fromList&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        [ (&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, (&lt;span class=&quot;st&quot;&gt;&amp;quot;Gabriella&amp;quot;&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Gonzalez&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, (&lt;span class=&quot;st&quot;&gt;&amp;quot;Oscar&amp;quot;&lt;/span&gt;    ,&lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;        ))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , (&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, (&lt;span class=&quot;st&quot;&gt;&amp;quot;Edgar&amp;quot;&lt;/span&gt;    ,&lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Codd&amp;quot;&lt;/span&gt;    ))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which is analogous to this SQL left join:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;SELECT&lt;/span&gt; firstNames.&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;, firstName, lastName&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;FROM&lt;/span&gt; firstNames &lt;span class=&quot;kw&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;JOIN&lt;/span&gt; lastNames &lt;span class=&quot;kw&quot;&gt;on&lt;/span&gt; firstNames.&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; lastNames.&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;id&lt;/span&gt; | firstName | lastName&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;---+-----------+---------&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;  | Gabriella | Gonzalez&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;  | Oscar     |&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;  | Edgar     | Codd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since Haskell is a more fully-featured language than SQL, we can do more sophisticated things more easily than in SQL. For example, the following three-way join with some post-processing logic is much easier to express in Haskell than SQL:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;display ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;display firstName &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; handle &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    firstName &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;: @&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; handle&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;display firstName (&lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; lastName) handle &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    firstName &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; lastName &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;: @&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; handle&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;interestingJoin ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;) &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;interestingJoin &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    firstName &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; firstNames&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    lastName  &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; optional lastNames&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-11&quot;&gt;&lt;a href=&quot;#cb9-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    handle    &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; handles&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-12&quot;&gt;&lt;a href=&quot;#cb9-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (display firstName lastName handle)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which evaluates to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (fromList&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        [ (&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Gabriella Gonzalez: @GabriellaG439&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Oscar: @posco&amp;quot;&lt;/span&gt;                     )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-7&quot;&gt;&lt;a href=&quot;#cb10-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;the-defaultable-type-constructor&quot;&gt;The &lt;code&gt;Defaultable&lt;/code&gt; type constructor&lt;/h4&gt;&lt;p&gt;The central data type exported by the package is the &lt;code&gt;Defaultable&lt;/code&gt; type constructor, which has the following simple definition:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; value &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; value) (&lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; value)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here the &lt;code&gt;map&lt;/code&gt; type parameter can be any &lt;code&gt;Map&lt;/code&gt;-like type that includes the type of the key. For example, a typical instantiation of the &lt;code&gt;Defaultable&lt;/code&gt; type constructor might be &lt;code&gt;Defaultable (Map key) value&lt;/code&gt; or &lt;code&gt;Defaultable IntMap value&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The first field of the type is the actual map that you want to wrap in order to get an &lt;code&gt;Applicative&lt;/code&gt; and &lt;code&gt;Alternative&lt;/code&gt; instance. The second field is an optional default value stored alongside the map that can be returned if a &lt;code&gt;lookup&lt;/code&gt; does not find a matching key.&lt;/p&gt;&lt;p&gt;The default value is not required (it can be &lt;code&gt;Nothing&lt;/code&gt;), but that default value is what makes the &lt;code&gt;Applicative&lt;/code&gt; instance work. Specifically, without the ability to specify a default value there would be no way to implement &lt;code&gt;pure&lt;/code&gt; for a &lt;code&gt;Map&lt;/code&gt;-like type.&lt;/p&gt;&lt;p&gt;In case you’re curious, here is what the &lt;code&gt;Applicative&lt;/code&gt; instance looks like:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; a)) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fMap fDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; xMap xDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-7&quot;&gt;&lt;a href=&quot;#cb12-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-8&quot;&gt;&lt;a href=&quot;#cb12-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (fMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; xMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; fFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xFallback&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-9&quot;&gt;&lt;a href=&quot;#cb12-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-10&quot;&gt;&lt;a href=&quot;#cb12-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            fFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-11&quot;&gt;&lt;a href=&quot;#cb12-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; fDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-12&quot;&gt;&lt;a href=&quot;#cb12-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-13&quot;&gt;&lt;a href=&quot;#cb12-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; f  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-14&quot;&gt;&lt;a href=&quot;#cb12-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-15&quot;&gt;&lt;a href=&quot;#cb12-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            xFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-16&quot;&gt;&lt;a href=&quot;#cb12-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; xDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-17&quot;&gt;&lt;a href=&quot;#cb12-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-18&quot;&gt;&lt;a href=&quot;#cb12-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; x) fMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-19&quot;&gt;&lt;a href=&quot;#cb12-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-20&quot;&gt;&lt;a href=&quot;#cb12-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; fDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; xDefault&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The neat part of the above instance is the class constraint:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; a)) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;Defaultable&lt;/code&gt; type is set up in such a way that you can wrap any &lt;code&gt;Map&lt;/code&gt;-like type that satisfies that constraint (which is basically all of them) and get a law-abiding &lt;code&gt;Applicative&lt;/code&gt; instance (See the &lt;a href=&quot;#appendix---proof-of-the-applicative-laws&quot;&gt;Appendix&lt;/a&gt; for a proof of the &lt;code&gt;Applicative&lt;/code&gt; laws).&lt;/p&gt;&lt;p&gt;In particular, this constraint makes use of &lt;a href=&quot;https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/quantified_constraints.html&quot;&gt;the &lt;code&gt;QuantifiedConstraints&lt;/code&gt; language extension&lt;/a&gt; introduced in GHC 8.6. Without that instance then we wouldn’t be able to generalize this type to wrap arbitrary &lt;code&gt;Map&lt;/code&gt;s and we’d have to hard-code the package to work with a specific &lt;code&gt;Map&lt;/code&gt; like &lt;code&gt;Data.Map.Map&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;Defaultable&lt;/code&gt; type also implements &lt;code&gt;Alternative&lt;/code&gt;, too, although that instance is much simpler:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; a)) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Alternative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    empty &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; lMap lDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; rMap rDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (lMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; rMap) (lDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; rDefault)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This instance is only possible because the &lt;code&gt;Defaultable&lt;/code&gt; type constructor doesn’t require the default value to be present. If the default value were required then we could not sensibly define &lt;code&gt;empty&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;prior-art&quot;&gt;Prior art&lt;/h4&gt;&lt;p&gt;I was surprised that something like this didn’t already exist on Hackage. The closest package I could find was this one:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hackage.haskell.org/package/total-map&quot;&gt;&lt;code&gt;total-map&lt;/code&gt;: Finitely represented total maps&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;However, that wasn’t exactly what I wanted, because it requires the default value to be present. That means that you can’t implement an &lt;code&gt;Alternative&lt;/code&gt; instance for the &lt;code&gt;TMap&lt;/code&gt; type from that package and you therefore can’t do things like left/right/outer joins as I mentioned above.&lt;/p&gt;&lt;p&gt;Also, more generally, sometimes you want a &lt;code&gt;Map&lt;/code&gt; to have an &lt;code&gt;Applicative&lt;/code&gt; instance without having to specify a default value. Requiring the default to always be present is not necessary to implement &lt;code&gt;Applicative&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The other issue I had with that package is that it’s hard-coded to use &lt;code&gt;Data.Map.Map&lt;/code&gt; under the hood, whereas I wanted an API that could be used in conjunction with any &lt;code&gt;Map&lt;/code&gt;-like type.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;The idea for this package originated from a LambdaConf presentation I gave a while ago where I brainstormed what a good “data science” ecosystem for Haskell might look like:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Gabriella439/slides/blob/main/lambdaconf/data/data.md#a-higher-level-api&quot;&gt;Data science APIs in Haskell - slides&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I sat on this idea for years without publishing anything to Hackage because my original vision was a bit too ambitious and included much more than just an &lt;code&gt;Applicative&lt;/code&gt; &lt;code&gt;Map&lt;/code&gt; type. However, recently I needed this &lt;code&gt;Applicative&lt;/code&gt; &lt;code&gt;Map&lt;/code&gt; type, so I settled for publishing a narrower and more focused package to Hackage.&lt;/p&gt;&lt;p&gt;The personal use case I have in mind for this package is no longer data science, but I hope that people interested in building a data science ecosystem for Haskell consider using this package as a building block since I believe it is well-suited for that purpose.&lt;/p&gt;&lt;h4 id=&quot;appendix---proof-of-the-applicative-laws&quot;&gt;Appendix - Proof of the &lt;code&gt;Applicative&lt;/code&gt; laws&lt;/h4&gt;&lt;p&gt;These proofs require a few additional assumptions about the interaction between the &lt;code&gt;Apply&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; constraint on the &lt;code&gt;map&lt;/code&gt; type parameter to &lt;code&gt;Defaultable&lt;/code&gt;. These assumptions hold for &lt;code&gt;Map&lt;/code&gt;-like types.&lt;/p&gt;&lt;p&gt;The first assumption is that &lt;code&gt;fmap&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt; homomorphism:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f (x &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; y) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f x &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second assumption is that &lt;code&gt;f &amp;lt;.&amp;gt;&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt; homorphism:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;f &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;f &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (x &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; y) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (f &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; x) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; (f &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; y)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The final assumption is specific to maps, which is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Given:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;mf ::&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;mx ::&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;kf ::&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-5&quot;&gt;&lt;a href=&quot;#cb17-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;kx ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; c&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-6&quot;&gt;&lt;a href=&quot;#cb17-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-7&quot;&gt;&lt;a href=&quot;#cb17-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  (mf &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; mx) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; kf mf &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; kx mx&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-8&quot;&gt;&lt;a href=&quot;#cb17-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (mf &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; mx) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; kx mx &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; kf mf&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The intuition here is if that &lt;code&gt;map&lt;/code&gt; is a &lt;code&gt;Map&lt;/code&gt;-like type constructor then we can think of those three expressions as having a set of keys associated with them, such that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Given:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;keys ::&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Set&lt;/span&gt; key&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;keys (mf &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; mx) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; keys (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; kf mf) &lt;span class=&quot;ot&quot;&gt;`intersection`&lt;/span&gt; keys (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; kx mx)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So normally the following equality would not be true:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  fmap kf mf &amp;lt;&amp;gt; fmap kx mx&lt;br /&gt;= fmap kx mx &amp;lt;&amp;gt; fmap kf mf&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… because the result would change if there was a key collision. Then the order in which we union (&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;) the two maps would change the result.&lt;/p&gt;&lt;p&gt;However, if you union yet another map (&lt;code&gt;mf &amp;lt;.&amp;gt; mx&lt;/code&gt;) that shadows the colliding keys then result remains the same.&lt;/p&gt;&lt;p&gt;The proof below uses that assumption a bit less formally by just noting that we can commute a union operation if there is a downstream union operation that would shadow any colliding keys that might differ.&lt;/p&gt;&lt;h5 id=&quot;proof-of-identity-law&quot;&gt;Proof of identity law&lt;/h5&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure v = Defaultable mempty (pure v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-6&quot;&gt;&lt;a href=&quot;#cb20-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Expand: v = Defaultable xMap xDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-7&quot;&gt;&lt;a href=&quot;#cb20-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; xMap xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-8&quot;&gt;&lt;a href=&quot;#cb20-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-9&quot;&gt;&lt;a href=&quot;#cb20-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-10&quot;&gt;&lt;a href=&quot;#cb20-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-11&quot;&gt;&lt;a href=&quot;#cb20-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-12&quot;&gt;&lt;a href=&quot;#cb20-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; xMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; fFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xFallback&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-13&quot;&gt;&lt;a href=&quot;#cb20-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-14&quot;&gt;&lt;a href=&quot;#cb20-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-15&quot;&gt;&lt;a href=&quot;#cb20-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-16&quot;&gt;&lt;a href=&quot;#cb20-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-17&quot;&gt;&lt;a href=&quot;#cb20-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; f  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-18&quot;&gt;&lt;a href=&quot;#cb20-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-19&quot;&gt;&lt;a href=&quot;#cb20-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        xFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-20&quot;&gt;&lt;a href=&quot;#cb20-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; xDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-21&quot;&gt;&lt;a href=&quot;#cb20-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-22&quot;&gt;&lt;a href=&quot;#cb20-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; x) &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-23&quot;&gt;&lt;a href=&quot;#cb20-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-24&quot;&gt;&lt;a href=&quot;#cb20-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-25&quot;&gt;&lt;a href=&quot;#cb20-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-26&quot;&gt;&lt;a href=&quot;#cb20-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- mempty &amp;lt;.&amp;gt; xMap = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-27&quot;&gt;&lt;a href=&quot;#cb20-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-28&quot;&gt;&lt;a href=&quot;#cb20-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-29&quot;&gt;&lt;a href=&quot;#cb20-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; fFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xFallback&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-30&quot;&gt;&lt;a href=&quot;#cb20-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-31&quot;&gt;&lt;a href=&quot;#cb20-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-32&quot;&gt;&lt;a href=&quot;#cb20-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-33&quot;&gt;&lt;a href=&quot;#cb20-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-34&quot;&gt;&lt;a href=&quot;#cb20-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; f  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-35&quot;&gt;&lt;a href=&quot;#cb20-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-36&quot;&gt;&lt;a href=&quot;#cb20-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        xFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-37&quot;&gt;&lt;a href=&quot;#cb20-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; xDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-38&quot;&gt;&lt;a href=&quot;#cb20-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-39&quot;&gt;&lt;a href=&quot;#cb20-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; x) &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-40&quot;&gt;&lt;a href=&quot;#cb20-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-41&quot;&gt;&lt;a href=&quot;#cb20-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-42&quot;&gt;&lt;a href=&quot;#cb20-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-43&quot;&gt;&lt;a href=&quot;#cb20-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify `case pure id of …`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-44&quot;&gt;&lt;a href=&quot;#cb20-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-45&quot;&gt;&lt;a href=&quot;#cb20-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-46&quot;&gt;&lt;a href=&quot;#cb20-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; fFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xFallback&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-47&quot;&gt;&lt;a href=&quot;#cb20-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-48&quot;&gt;&lt;a href=&quot;#cb20-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-49&quot;&gt;&lt;a href=&quot;#cb20-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-50&quot;&gt;&lt;a href=&quot;#cb20-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        xFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-51&quot;&gt;&lt;a href=&quot;#cb20-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; xDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-52&quot;&gt;&lt;a href=&quot;#cb20-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-53&quot;&gt;&lt;a href=&quot;#cb20-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; x) &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-54&quot;&gt;&lt;a href=&quot;#cb20-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-55&quot;&gt;&lt;a href=&quot;#cb20-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-56&quot;&gt;&lt;a href=&quot;#cb20-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-57&quot;&gt;&lt;a href=&quot;#cb20-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap id x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-58&quot;&gt;&lt;a href=&quot;#cb20-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-59&quot;&gt;&lt;a href=&quot;#cb20-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-60&quot;&gt;&lt;a href=&quot;#cb20-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; fFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xFallback&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-61&quot;&gt;&lt;a href=&quot;#cb20-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-62&quot;&gt;&lt;a href=&quot;#cb20-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-63&quot;&gt;&lt;a href=&quot;#cb20-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-64&quot;&gt;&lt;a href=&quot;#cb20-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        xFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-65&quot;&gt;&lt;a href=&quot;#cb20-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; xDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-66&quot;&gt;&lt;a href=&quot;#cb20-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-67&quot;&gt;&lt;a href=&quot;#cb20-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; x) &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-68&quot;&gt;&lt;a href=&quot;#cb20-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-69&quot;&gt;&lt;a href=&quot;#cb20-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-70&quot;&gt;&lt;a href=&quot;#cb20-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-71&quot;&gt;&lt;a href=&quot;#cb20-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f mempty = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-72&quot;&gt;&lt;a href=&quot;#cb20-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-73&quot;&gt;&lt;a href=&quot;#cb20-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-74&quot;&gt;&lt;a href=&quot;#cb20-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;fFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xFallback&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-75&quot;&gt;&lt;a href=&quot;#cb20-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-76&quot;&gt;&lt;a href=&quot;#cb20-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-77&quot;&gt;&lt;a href=&quot;#cb20-77&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-78&quot;&gt;&lt;a href=&quot;#cb20-78&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        xFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-79&quot;&gt;&lt;a href=&quot;#cb20-79&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; xDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-80&quot;&gt;&lt;a href=&quot;#cb20-80&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-81&quot;&gt;&lt;a href=&quot;#cb20-81&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-82&quot;&gt;&lt;a href=&quot;#cb20-82&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-83&quot;&gt;&lt;a href=&quot;#cb20-83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-84&quot;&gt;&lt;a href=&quot;#cb20-84&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-85&quot;&gt;&lt;a href=&quot;#cb20-85&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure id &amp;lt;*&amp;gt; v = v&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-86&quot;&gt;&lt;a href=&quot;#cb20-86&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-87&quot;&gt;&lt;a href=&quot;#cb20-87&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-88&quot;&gt;&lt;a href=&quot;#cb20-88&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; fFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xFallback&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-89&quot;&gt;&lt;a href=&quot;#cb20-89&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-90&quot;&gt;&lt;a href=&quot;#cb20-90&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        fFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-91&quot;&gt;&lt;a href=&quot;#cb20-91&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-92&quot;&gt;&lt;a href=&quot;#cb20-92&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        xFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-93&quot;&gt;&lt;a href=&quot;#cb20-93&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; xDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-94&quot;&gt;&lt;a href=&quot;#cb20-94&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-95&quot;&gt;&lt;a href=&quot;#cb20-95&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-96&quot;&gt;&lt;a href=&quot;#cb20-96&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-97&quot;&gt;&lt;a href=&quot;#cb20-97&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-98&quot;&gt;&lt;a href=&quot;#cb20-98&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-99&quot;&gt;&lt;a href=&quot;#cb20-99&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-100&quot;&gt;&lt;a href=&quot;#cb20-100&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-101&quot;&gt;&lt;a href=&quot;#cb20-101&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-102&quot;&gt;&lt;a href=&quot;#cb20-102&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; xMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-103&quot;&gt;&lt;a href=&quot;#cb20-103&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-104&quot;&gt;&lt;a href=&quot;#cb20-104&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-105&quot;&gt;&lt;a href=&quot;#cb20-105&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-106&quot;&gt;&lt;a href=&quot;#cb20-106&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- x &amp;lt;&amp;gt; mempty = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-107&quot;&gt;&lt;a href=&quot;#cb20-107&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- mempty &amp;lt;&amp;gt; x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-108&quot;&gt;&lt;a href=&quot;#cb20-108&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-109&quot;&gt;&lt;a href=&quot;#cb20-109&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-110&quot;&gt;&lt;a href=&quot;#cb20-110&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; xMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-111&quot;&gt;&lt;a href=&quot;#cb20-111&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-112&quot;&gt;&lt;a href=&quot;#cb20-112&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-113&quot;&gt;&lt;a href=&quot;#cb20-113&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-114&quot;&gt;&lt;a href=&quot;#cb20-114&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-115&quot;&gt;&lt;a href=&quot;#cb20-115&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; xMap xDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-116&quot;&gt;&lt;a href=&quot;#cb20-116&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-117&quot;&gt;&lt;a href=&quot;#cb20-117&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Contract: v = Defaultable xMap xDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-118&quot;&gt;&lt;a href=&quot;#cb20-118&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&quot;proof-of-the-composition-law&quot;&gt;Proof of the composition law&lt;/h5&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; w&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-2&quot;&gt;&lt;a href=&quot;#cb21-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-3&quot;&gt;&lt;a href=&quot;#cb21-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Expand:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-4&quot;&gt;&lt;a href=&quot;#cb21-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- u = Defaultable uMap uDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-5&quot;&gt;&lt;a href=&quot;#cb21-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- v = Defaultable vMap vDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-6&quot;&gt;&lt;a href=&quot;#cb21-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- w = Defaultable wMap wDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-7&quot;&gt;&lt;a href=&quot;#cb21-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-8&quot;&gt;&lt;a href=&quot;#cb21-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap uDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-9&quot;&gt;&lt;a href=&quot;#cb21-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap vDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-10&quot;&gt;&lt;a href=&quot;#cb21-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap wDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-11&quot;&gt;&lt;a href=&quot;#cb21-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-12&quot;&gt;&lt;a href=&quot;#cb21-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure v = Defaultable mempty (pure v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-13&quot;&gt;&lt;a href=&quot;#cb21-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-14&quot;&gt;&lt;a href=&quot;#cb21-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap uDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-15&quot;&gt;&lt;a href=&quot;#cb21-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap vDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-16&quot;&gt;&lt;a href=&quot;#cb21-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap wDefault&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… before continuing, it’s easiest to prove all eight possible combinations of:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;uDefault&lt;/code&gt; is &lt;code&gt;pure u&lt;/code&gt; or &lt;code&gt;empty&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;vDefault&lt;/code&gt; is &lt;code&gt;pure v&lt;/code&gt; or &lt;code&gt;empty&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;wDefault&lt;/code&gt; is &lt;code&gt;pure w&lt;/code&gt; or &lt;code&gt;empty&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To avoid lots of repetition, I’ll only prove the most difficult case (where all defaults are present), since the other proofs are essentially subsets of that proof where some subterms disappear because they become &lt;code&gt;mempty&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Case:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;uDefault = pure u&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;vDefault = pure v&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;wDefault = pure w&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb22&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb22-1&quot;&gt;&lt;a href=&quot;#cb22-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-2&quot;&gt;&lt;a href=&quot;#cb22-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-3&quot;&gt;&lt;a href=&quot;#cb22-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-4&quot;&gt;&lt;a href=&quot;#cb22-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-5&quot;&gt;&lt;a href=&quot;#cb22-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-6&quot;&gt;&lt;a href=&quot;#cb22-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-7&quot;&gt;&lt;a href=&quot;#cb22-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuMap cuDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-8&quot;&gt;&lt;a href=&quot;#cb22-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-9&quot;&gt;&lt;a href=&quot;#cb22-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; uMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; u) &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-10&quot;&gt;&lt;a href=&quot;#cb22-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-11&quot;&gt;&lt;a href=&quot;#cb22-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-12&quot;&gt;&lt;a href=&quot;#cb22-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-13&quot;&gt;&lt;a href=&quot;#cb22-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-14&quot;&gt;&lt;a href=&quot;#cb22-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-15&quot;&gt;&lt;a href=&quot;#cb22-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-16&quot;&gt;&lt;a href=&quot;#cb22-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- mempty &amp;lt;.&amp;gt; x = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-17&quot;&gt;&lt;a href=&quot;#cb22-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuMap cuDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-18&quot;&gt;&lt;a href=&quot;#cb22-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-19&quot;&gt;&lt;a href=&quot;#cb22-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; u) &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-20&quot;&gt;&lt;a href=&quot;#cb22-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-21&quot;&gt;&lt;a href=&quot;#cb22-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-22&quot;&gt;&lt;a href=&quot;#cb22-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-23&quot;&gt;&lt;a href=&quot;#cb22-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-24&quot;&gt;&lt;a href=&quot;#cb22-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-25&quot;&gt;&lt;a href=&quot;#cb22-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-26&quot;&gt;&lt;a href=&quot;#cb22-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f mempty = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-27&quot;&gt;&lt;a href=&quot;#cb22-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuMap cuDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-28&quot;&gt;&lt;a href=&quot;#cb22-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-29&quot;&gt;&lt;a href=&quot;#cb22-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-30&quot;&gt;&lt;a href=&quot;#cb22-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-31&quot;&gt;&lt;a href=&quot;#cb22-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-32&quot;&gt;&lt;a href=&quot;#cb22-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-33&quot;&gt;&lt;a href=&quot;#cb22-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-34&quot;&gt;&lt;a href=&quot;#cb22-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-35&quot;&gt;&lt;a href=&quot;#cb22-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-36&quot;&gt;&lt;a href=&quot;#cb22-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; pure x = pure (f x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-37&quot;&gt;&lt;a href=&quot;#cb22-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuMap cuDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-38&quot;&gt;&lt;a href=&quot;#cb22-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-39&quot;&gt;&lt;a href=&quot;#cb22-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-40&quot;&gt;&lt;a href=&quot;#cb22-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-41&quot;&gt;&lt;a href=&quot;#cb22-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; ((&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) u)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-42&quot;&gt;&lt;a href=&quot;#cb22-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-43&quot;&gt;&lt;a href=&quot;#cb22-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-44&quot;&gt;&lt;a href=&quot;#cb22-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-45&quot;&gt;&lt;a href=&quot;#cb22-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-46&quot;&gt;&lt;a href=&quot;#cb22-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- x &amp;lt;&amp;gt; mempty = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-47&quot;&gt;&lt;a href=&quot;#cb22-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- mempty &amp;lt;&amp;gt; x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-48&quot;&gt;&lt;a href=&quot;#cb22-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuMap cuDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-49&quot;&gt;&lt;a href=&quot;#cb22-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-50&quot;&gt;&lt;a href=&quot;#cb22-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-51&quot;&gt;&lt;a href=&quot;#cb22-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-52&quot;&gt;&lt;a href=&quot;#cb22-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; ((&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) u)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-53&quot;&gt;&lt;a href=&quot;#cb22-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-54&quot;&gt;&lt;a href=&quot;#cb22-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-55&quot;&gt;&lt;a href=&quot;#cb22-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-56&quot;&gt;&lt;a href=&quot;#cb22-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-57&quot;&gt;&lt;a href=&quot;#cb22-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-58&quot;&gt;&lt;a href=&quot;#cb22-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap) (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-59&quot;&gt;&lt;a href=&quot;#cb22-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-60&quot;&gt;&lt;a href=&quot;#cb22-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-61&quot;&gt;&lt;a href=&quot;#cb22-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-62&quot;&gt;&lt;a href=&quot;#cb22-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-63&quot;&gt;&lt;a href=&quot;#cb22-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvMap cuvDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-64&quot;&gt;&lt;a href=&quot;#cb22-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-65&quot;&gt;&lt;a href=&quot;#cb22-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-66&quot;&gt;&lt;a href=&quot;#cb22-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-67&quot;&gt;&lt;a href=&quot;#cb22-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-68&quot;&gt;&lt;a href=&quot;#cb22-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; v) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-69&quot;&gt;&lt;a href=&quot;#cb22-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-70&quot;&gt;&lt;a href=&quot;#cb22-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-71&quot;&gt;&lt;a href=&quot;#cb22-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-72&quot;&gt;&lt;a href=&quot;#cb22-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-73&quot;&gt;&lt;a href=&quot;#cb22-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-74&quot;&gt;&lt;a href=&quot;#cb22-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (fmap g x) = fmap (f . g) x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-75&quot;&gt;&lt;a href=&quot;#cb22-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvMap cuvDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-76&quot;&gt;&lt;a href=&quot;#cb22-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-77&quot;&gt;&lt;a href=&quot;#cb22-77&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-78&quot;&gt;&lt;a href=&quot;#cb22-78&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-79&quot;&gt;&lt;a href=&quot;#cb22-79&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-80&quot;&gt;&lt;a href=&quot;#cb22-80&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-81&quot;&gt;&lt;a href=&quot;#cb22-81&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-82&quot;&gt;&lt;a href=&quot;#cb22-82&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-83&quot;&gt;&lt;a href=&quot;#cb22-83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-84&quot;&gt;&lt;a href=&quot;#cb22-84&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-85&quot;&gt;&lt;a href=&quot;#cb22-85&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-86&quot;&gt;&lt;a href=&quot;#cb22-86&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- ((.) u) = \v -&amp;gt; u . v&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-87&quot;&gt;&lt;a href=&quot;#cb22-87&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvMap cuvDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-88&quot;&gt;&lt;a href=&quot;#cb22-88&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-89&quot;&gt;&lt;a href=&quot;#cb22-89&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-90&quot;&gt;&lt;a href=&quot;#cb22-90&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-91&quot;&gt;&lt;a href=&quot;#cb22-91&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-92&quot;&gt;&lt;a href=&quot;#cb22-92&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-93&quot;&gt;&lt;a href=&quot;#cb22-93&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-94&quot;&gt;&lt;a href=&quot;#cb22-94&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-95&quot;&gt;&lt;a href=&quot;#cb22-95&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-96&quot;&gt;&lt;a href=&quot;#cb22-96&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-97&quot;&gt;&lt;a href=&quot;#cb22-97&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-98&quot;&gt;&lt;a href=&quot;#cb22-98&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; pure x = pure (f x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-99&quot;&gt;&lt;a href=&quot;#cb22-99&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;       (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvMap cuvDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-100&quot;&gt;&lt;a href=&quot;#cb22-100&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-101&quot;&gt;&lt;a href=&quot;#cb22-101&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-102&quot;&gt;&lt;a href=&quot;#cb22-102&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-103&quot;&gt;&lt;a href=&quot;#cb22-103&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-104&quot;&gt;&lt;a href=&quot;#cb22-104&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-105&quot;&gt;&lt;a href=&quot;#cb22-105&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-106&quot;&gt;&lt;a href=&quot;#cb22-106&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            cuvDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-107&quot;&gt;&lt;a href=&quot;#cb22-107&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-108&quot;&gt;&lt;a href=&quot;#cb22-108&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-109&quot;&gt;&lt;a href=&quot;#cb22-109&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-110&quot;&gt;&lt;a href=&quot;#cb22-110&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-111&quot;&gt;&lt;a href=&quot;#cb22-111&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-112&quot;&gt;&lt;a href=&quot;#cb22-112&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-113&quot;&gt;&lt;a href=&quot;#cb22-113&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (cuvMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) cuvMap &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-114&quot;&gt;&lt;a href=&quot;#cb22-114&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-115&quot;&gt;&lt;a href=&quot;#cb22-115&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        cuvMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-116&quot;&gt;&lt;a href=&quot;#cb22-116&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-117&quot;&gt;&lt;a href=&quot;#cb22-117&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-118&quot;&gt;&lt;a href=&quot;#cb22-118&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-119&quot;&gt;&lt;a href=&quot;#cb22-119&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-120&quot;&gt;&lt;a href=&quot;#cb22-120&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-121&quot;&gt;&lt;a href=&quot;#cb22-121&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-122&quot;&gt;&lt;a href=&quot;#cb22-122&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (f &amp;lt;&amp;gt; g) &amp;lt;.&amp;gt; x = (f &amp;lt;.&amp;gt; x) &amp;lt;&amp;gt; (g &amp;lt;.&amp;gt; x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-123&quot;&gt;&lt;a href=&quot;#cb22-123&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (x &amp;lt;&amp;gt; y) = fmap f x &amp;lt;&amp;gt; fmap f y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-124&quot;&gt;&lt;a href=&quot;#cb22-124&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-125&quot;&gt;&lt;a href=&quot;#cb22-125&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-126&quot;&gt;&lt;a href=&quot;#cb22-126&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-127&quot;&gt;&lt;a href=&quot;#cb22-127&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-128&quot;&gt;&lt;a href=&quot;#cb22-128&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-129&quot;&gt;&lt;a href=&quot;#cb22-129&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-130&quot;&gt;&lt;a href=&quot;#cb22-130&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-131&quot;&gt;&lt;a href=&quot;#cb22-131&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-132&quot;&gt;&lt;a href=&quot;#cb22-132&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-133&quot;&gt;&lt;a href=&quot;#cb22-133&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-134&quot;&gt;&lt;a href=&quot;#cb22-134&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-135&quot;&gt;&lt;a href=&quot;#cb22-135&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-136&quot;&gt;&lt;a href=&quot;#cb22-136&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-137&quot;&gt;&lt;a href=&quot;#cb22-137&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; pure x = pure (f x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-138&quot;&gt;&lt;a href=&quot;#cb22-138&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-139&quot;&gt;&lt;a href=&quot;#cb22-139&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-140&quot;&gt;&lt;a href=&quot;#cb22-140&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-141&quot;&gt;&lt;a href=&quot;#cb22-141&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-142&quot;&gt;&lt;a href=&quot;#cb22-142&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-143&quot;&gt;&lt;a href=&quot;#cb22-143&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-144&quot;&gt;&lt;a href=&quot;#cb22-144&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-145&quot;&gt;&lt;a href=&quot;#cb22-145&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-146&quot;&gt;&lt;a href=&quot;#cb22-146&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-147&quot;&gt;&lt;a href=&quot;#cb22-147&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-148&quot;&gt;&lt;a href=&quot;#cb22-148&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-149&quot;&gt;&lt;a href=&quot;#cb22-149&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-150&quot;&gt;&lt;a href=&quot;#cb22-150&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-151&quot;&gt;&lt;a href=&quot;#cb22-151&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap (.) u &amp;lt;.&amp;gt; v &amp;lt;.&amp;gt; w = u &amp;lt;.&amp;gt; (v &amp;lt;.&amp;gt; w)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-152&quot;&gt;&lt;a href=&quot;#cb22-152&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-153&quot;&gt;&lt;a href=&quot;#cb22-153&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-154&quot;&gt;&lt;a href=&quot;#cb22-154&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-155&quot;&gt;&lt;a href=&quot;#cb22-155&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-156&quot;&gt;&lt;a href=&quot;#cb22-156&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-157&quot;&gt;&lt;a href=&quot;#cb22-157&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-158&quot;&gt;&lt;a href=&quot;#cb22-158&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-159&quot;&gt;&lt;a href=&quot;#cb22-159&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-160&quot;&gt;&lt;a href=&quot;#cb22-160&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-161&quot;&gt;&lt;a href=&quot;#cb22-161&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-162&quot;&gt;&lt;a href=&quot;#cb22-162&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-163&quot;&gt;&lt;a href=&quot;#cb22-163&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-164&quot;&gt;&lt;a href=&quot;#cb22-164&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-165&quot;&gt;&lt;a href=&quot;#cb22-165&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (x &amp;lt;.&amp;gt; y) = fmap (f .) x &amp;lt;.&amp;gt; y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-166&quot;&gt;&lt;a href=&quot;#cb22-166&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-167&quot;&gt;&lt;a href=&quot;#cb22-167&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-168&quot;&gt;&lt;a href=&quot;#cb22-168&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-169&quot;&gt;&lt;a href=&quot;#cb22-169&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-170&quot;&gt;&lt;a href=&quot;#cb22-170&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-171&quot;&gt;&lt;a href=&quot;#cb22-171&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-172&quot;&gt;&lt;a href=&quot;#cb22-172&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-173&quot;&gt;&lt;a href=&quot;#cb22-173&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-174&quot;&gt;&lt;a href=&quot;#cb22-174&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-175&quot;&gt;&lt;a href=&quot;#cb22-175&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-176&quot;&gt;&lt;a href=&quot;#cb22-176&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-177&quot;&gt;&lt;a href=&quot;#cb22-177&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-178&quot;&gt;&lt;a href=&quot;#cb22-178&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-179&quot;&gt;&lt;a href=&quot;#cb22-179&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- x &amp;lt;.&amp;gt; fmap f y = fmap (. f) x &amp;lt;.&amp;gt; y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-180&quot;&gt;&lt;a href=&quot;#cb22-180&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-181&quot;&gt;&lt;a href=&quot;#cb22-181&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-182&quot;&gt;&lt;a href=&quot;#cb22-182&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-183&quot;&gt;&lt;a href=&quot;#cb22-183&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-184&quot;&gt;&lt;a href=&quot;#cb22-184&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-185&quot;&gt;&lt;a href=&quot;#cb22-185&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-186&quot;&gt;&lt;a href=&quot;#cb22-186&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-187&quot;&gt;&lt;a href=&quot;#cb22-187&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-188&quot;&gt;&lt;a href=&quot;#cb22-188&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-189&quot;&gt;&lt;a href=&quot;#cb22-189&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-190&quot;&gt;&lt;a href=&quot;#cb22-190&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-191&quot;&gt;&lt;a href=&quot;#cb22-191&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-192&quot;&gt;&lt;a href=&quot;#cb22-192&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-193&quot;&gt;&lt;a href=&quot;#cb22-193&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (x &amp;lt;.&amp;gt; y) = fmap (f .) x &amp;lt;.&amp;gt; y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-194&quot;&gt;&lt;a href=&quot;#cb22-194&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-195&quot;&gt;&lt;a href=&quot;#cb22-195&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-196&quot;&gt;&lt;a href=&quot;#cb22-196&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-197&quot;&gt;&lt;a href=&quot;#cb22-197&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-198&quot;&gt;&lt;a href=&quot;#cb22-198&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-199&quot;&gt;&lt;a href=&quot;#cb22-199&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-200&quot;&gt;&lt;a href=&quot;#cb22-200&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-201&quot;&gt;&lt;a href=&quot;#cb22-201&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; ((&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) uMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-202&quot;&gt;&lt;a href=&quot;#cb22-202&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-203&quot;&gt;&lt;a href=&quot;#cb22-203&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-204&quot;&gt;&lt;a href=&quot;#cb22-204&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-205&quot;&gt;&lt;a href=&quot;#cb22-205&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-206&quot;&gt;&lt;a href=&quot;#cb22-206&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-207&quot;&gt;&lt;a href=&quot;#cb22-207&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (fmap g x) = fmap (f . g) x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-208&quot;&gt;&lt;a href=&quot;#cb22-208&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-209&quot;&gt;&lt;a href=&quot;#cb22-209&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-210&quot;&gt;&lt;a href=&quot;#cb22-210&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-211&quot;&gt;&lt;a href=&quot;#cb22-211&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-212&quot;&gt;&lt;a href=&quot;#cb22-212&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-213&quot;&gt;&lt;a href=&quot;#cb22-213&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-214&quot;&gt;&lt;a href=&quot;#cb22-214&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-215&quot;&gt;&lt;a href=&quot;#cb22-215&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (((&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;)) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-216&quot;&gt;&lt;a href=&quot;#cb22-216&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-217&quot;&gt;&lt;a href=&quot;#cb22-217&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-218&quot;&gt;&lt;a href=&quot;#cb22-218&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-219&quot;&gt;&lt;a href=&quot;#cb22-219&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-220&quot;&gt;&lt;a href=&quot;#cb22-220&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-221&quot;&gt;&lt;a href=&quot;#cb22-221&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- ((($ w) .) . (.))&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-222&quot;&gt;&lt;a href=&quot;#cb22-222&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u -&amp;gt; (($ w) .) ((.) u)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-223&quot;&gt;&lt;a href=&quot;#cb22-223&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u -&amp;gt; (($ w) .) (u .)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-224&quot;&gt;&lt;a href=&quot;#cb22-224&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u -&amp;gt; ($ w) . (u .)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-225&quot;&gt;&lt;a href=&quot;#cb22-225&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u v -&amp;gt; ($ w) ((u .) v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-226&quot;&gt;&lt;a href=&quot;#cb22-226&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u v -&amp;gt; ($ w) (u . v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-227&quot;&gt;&lt;a href=&quot;#cb22-227&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u v -&amp;gt; (u . v) w&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-228&quot;&gt;&lt;a href=&quot;#cb22-228&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u v -&amp;gt; u (v w)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-229&quot;&gt;&lt;a href=&quot;#cb22-229&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u v -&amp;gt; u (($ w) v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-230&quot;&gt;&lt;a href=&quot;#cb22-230&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \u -&amp;gt; u . ($ w)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-231&quot;&gt;&lt;a href=&quot;#cb22-231&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = (. ($ w))&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-232&quot;&gt;&lt;a href=&quot;#cb22-232&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-233&quot;&gt;&lt;a href=&quot;#cb22-233&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-234&quot;&gt;&lt;a href=&quot;#cb22-234&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-235&quot;&gt;&lt;a href=&quot;#cb22-235&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-236&quot;&gt;&lt;a href=&quot;#cb22-236&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-237&quot;&gt;&lt;a href=&quot;#cb22-237&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-238&quot;&gt;&lt;a href=&quot;#cb22-238&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-239&quot;&gt;&lt;a href=&quot;#cb22-239&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w)) uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-240&quot;&gt;&lt;a href=&quot;#cb22-240&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-241&quot;&gt;&lt;a href=&quot;#cb22-241&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-242&quot;&gt;&lt;a href=&quot;#cb22-242&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-243&quot;&gt;&lt;a href=&quot;#cb22-243&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-244&quot;&gt;&lt;a href=&quot;#cb22-244&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-245&quot;&gt;&lt;a href=&quot;#cb22-245&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- x &amp;lt;.&amp;gt; (f &amp;lt;$&amp;gt; y) = (. f) &amp;lt;$&amp;gt; x &amp;lt;.&amp;gt; y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-246&quot;&gt;&lt;a href=&quot;#cb22-246&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-247&quot;&gt;&lt;a href=&quot;#cb22-247&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-248&quot;&gt;&lt;a href=&quot;#cb22-248&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-249&quot;&gt;&lt;a href=&quot;#cb22-249&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-250&quot;&gt;&lt;a href=&quot;#cb22-250&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-251&quot;&gt;&lt;a href=&quot;#cb22-251&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-252&quot;&gt;&lt;a href=&quot;#cb22-252&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-253&quot;&gt;&lt;a href=&quot;#cb22-253&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-254&quot;&gt;&lt;a href=&quot;#cb22-254&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-255&quot;&gt;&lt;a href=&quot;#cb22-255&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) uMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-256&quot;&gt;&lt;a href=&quot;#cb22-256&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-257&quot;&gt;&lt;a href=&quot;#cb22-257&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-258&quot;&gt;&lt;a href=&quot;#cb22-258&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-259&quot;&gt;&lt;a href=&quot;#cb22-259&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (fmap g x) = fmap (f . g) w&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-260&quot;&gt;&lt;a href=&quot;#cb22-260&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (f . g) = \x -&amp;gt; f (g x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-261&quot;&gt;&lt;a href=&quot;#cb22-261&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-262&quot;&gt;&lt;a href=&quot;#cb22-262&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-263&quot;&gt;&lt;a href=&quot;#cb22-263&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-264&quot;&gt;&lt;a href=&quot;#cb22-264&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-265&quot;&gt;&lt;a href=&quot;#cb22-265&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-266&quot;&gt;&lt;a href=&quot;#cb22-266&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-267&quot;&gt;&lt;a href=&quot;#cb22-267&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\w &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-268&quot;&gt;&lt;a href=&quot;#cb22-268&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-269&quot;&gt;&lt;a href=&quot;#cb22-269&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\v &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-270&quot;&gt;&lt;a href=&quot;#cb22-270&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-271&quot;&gt;&lt;a href=&quot;#cb22-271&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-272&quot;&gt;&lt;a href=&quot;#cb22-272&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-273&quot;&gt;&lt;a href=&quot;#cb22-273&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-274&quot;&gt;&lt;a href=&quot;#cb22-274&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- `fmap (\w -&amp;gt; u (v w)) wMap &amp;lt;&amp;gt; (uMap &amp;lt;.&amp;gt; fmap ($ w) vMap)` commutes because&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-275&quot;&gt;&lt;a href=&quot;#cb22-275&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- the colliding keys are shadowed by `(uMap &amp;lt;.&amp;gt; (vMap &amp;lt;.&amp;gt; wMap))`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-276&quot;&gt;&lt;a href=&quot;#cb22-276&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-277&quot;&gt;&lt;a href=&quot;#cb22-277&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-278&quot;&gt;&lt;a href=&quot;#cb22-278&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-279&quot;&gt;&lt;a href=&quot;#cb22-279&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-280&quot;&gt;&lt;a href=&quot;#cb22-280&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-281&quot;&gt;&lt;a href=&quot;#cb22-281&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-282&quot;&gt;&lt;a href=&quot;#cb22-282&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-283&quot;&gt;&lt;a href=&quot;#cb22-283&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\w &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-284&quot;&gt;&lt;a href=&quot;#cb22-284&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\v &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-285&quot;&gt;&lt;a href=&quot;#cb22-285&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-286&quot;&gt;&lt;a href=&quot;#cb22-286&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-287&quot;&gt;&lt;a href=&quot;#cb22-287&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-288&quot;&gt;&lt;a href=&quot;#cb22-288&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-289&quot;&gt;&lt;a href=&quot;#cb22-289&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- `fmap u (vMap &amp;lt;.&amp;gt; wMap) &amp;lt;&amp;gt; (uMap &amp;lt;.&amp;gt; fmap v wMap)` commutes because the&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-290&quot;&gt;&lt;a href=&quot;#cb22-290&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- colliding keys are sahdowed by `(uMap &amp;lt;.&amp;gt; (vMap &amp;lt;.&amp;gt; wMap))`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-291&quot;&gt;&lt;a href=&quot;#cb22-291&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-292&quot;&gt;&lt;a href=&quot;#cb22-292&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-293&quot;&gt;&lt;a href=&quot;#cb22-293&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-294&quot;&gt;&lt;a href=&quot;#cb22-294&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-295&quot;&gt;&lt;a href=&quot;#cb22-295&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-296&quot;&gt;&lt;a href=&quot;#cb22-296&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-297&quot;&gt;&lt;a href=&quot;#cb22-297&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-298&quot;&gt;&lt;a href=&quot;#cb22-298&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\w &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-299&quot;&gt;&lt;a href=&quot;#cb22-299&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\v &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-300&quot;&gt;&lt;a href=&quot;#cb22-300&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-301&quot;&gt;&lt;a href=&quot;#cb22-301&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-302&quot;&gt;&lt;a href=&quot;#cb22-302&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-303&quot;&gt;&lt;a href=&quot;#cb22-303&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-304&quot;&gt;&lt;a href=&quot;#cb22-304&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- `fmap u (vMap &amp;lt;.&amp;gt; wMap) &amp;lt;&amp;gt; (uMap &amp;lt;.&amp;gt; fmap ($ w) vMap)` commutes because the&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-305&quot;&gt;&lt;a href=&quot;#cb22-305&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- colliding keys are sahdowed by `(uMap &amp;lt;.&amp;gt; (vMap &amp;lt;.&amp;gt; wMap))`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-306&quot;&gt;&lt;a href=&quot;#cb22-306&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-307&quot;&gt;&lt;a href=&quot;#cb22-307&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-308&quot;&gt;&lt;a href=&quot;#cb22-308&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-309&quot;&gt;&lt;a href=&quot;#cb22-309&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-310&quot;&gt;&lt;a href=&quot;#cb22-310&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-311&quot;&gt;&lt;a href=&quot;#cb22-311&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-312&quot;&gt;&lt;a href=&quot;#cb22-312&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-313&quot;&gt;&lt;a href=&quot;#cb22-313&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\w &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) wMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-314&quot;&gt;&lt;a href=&quot;#cb22-314&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\v &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-315&quot;&gt;&lt;a href=&quot;#cb22-315&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-316&quot;&gt;&lt;a href=&quot;#cb22-316&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-317&quot;&gt;&lt;a href=&quot;#cb22-317&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-318&quot;&gt;&lt;a href=&quot;#cb22-318&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-319&quot;&gt;&lt;a href=&quot;#cb22-319&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- \w -&amp;gt; u (v w) = u . v&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-320&quot;&gt;&lt;a href=&quot;#cb22-320&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-321&quot;&gt;&lt;a href=&quot;#cb22-321&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-322&quot;&gt;&lt;a href=&quot;#cb22-322&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-323&quot;&gt;&lt;a href=&quot;#cb22-323&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-324&quot;&gt;&lt;a href=&quot;#cb22-324&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-325&quot;&gt;&lt;a href=&quot;#cb22-325&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-326&quot;&gt;&lt;a href=&quot;#cb22-326&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-327&quot;&gt;&lt;a href=&quot;#cb22-327&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; v) wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-328&quot;&gt;&lt;a href=&quot;#cb22-328&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\v &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-329&quot;&gt;&lt;a href=&quot;#cb22-329&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-330&quot;&gt;&lt;a href=&quot;#cb22-330&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-331&quot;&gt;&lt;a href=&quot;#cb22-331&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-332&quot;&gt;&lt;a href=&quot;#cb22-332&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-333&quot;&gt;&lt;a href=&quot;#cb22-333&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (fmap g x) = fmap (f . g) x, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-334&quot;&gt;&lt;a href=&quot;#cb22-334&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-335&quot;&gt;&lt;a href=&quot;#cb22-335&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-336&quot;&gt;&lt;a href=&quot;#cb22-336&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-337&quot;&gt;&lt;a href=&quot;#cb22-337&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-338&quot;&gt;&lt;a href=&quot;#cb22-338&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-339&quot;&gt;&lt;a href=&quot;#cb22-339&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-340&quot;&gt;&lt;a href=&quot;#cb22-340&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-341&quot;&gt;&lt;a href=&quot;#cb22-341&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-342&quot;&gt;&lt;a href=&quot;#cb22-342&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\v &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-343&quot;&gt;&lt;a href=&quot;#cb22-343&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-344&quot;&gt;&lt;a href=&quot;#cb22-344&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-345&quot;&gt;&lt;a href=&quot;#cb22-345&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-346&quot;&gt;&lt;a href=&quot;#cb22-346&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-347&quot;&gt;&lt;a href=&quot;#cb22-347&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- \v -&amp;gt; u (v w)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-348&quot;&gt;&lt;a href=&quot;#cb22-348&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = \v -&amp;gt; u (($ w) v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-349&quot;&gt;&lt;a href=&quot;#cb22-349&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- = u . ($ w)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-350&quot;&gt;&lt;a href=&quot;#cb22-350&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-351&quot;&gt;&lt;a href=&quot;#cb22-351&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-352&quot;&gt;&lt;a href=&quot;#cb22-352&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-353&quot;&gt;&lt;a href=&quot;#cb22-353&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-354&quot;&gt;&lt;a href=&quot;#cb22-354&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-355&quot;&gt;&lt;a href=&quot;#cb22-355&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-356&quot;&gt;&lt;a href=&quot;#cb22-356&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-357&quot;&gt;&lt;a href=&quot;#cb22-357&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-358&quot;&gt;&lt;a href=&quot;#cb22-358&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (u &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w)) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-359&quot;&gt;&lt;a href=&quot;#cb22-359&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-360&quot;&gt;&lt;a href=&quot;#cb22-360&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-361&quot;&gt;&lt;a href=&quot;#cb22-361&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-362&quot;&gt;&lt;a href=&quot;#cb22-362&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-363&quot;&gt;&lt;a href=&quot;#cb22-363&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (fmap g x) = fmap (f . g) x, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-364&quot;&gt;&lt;a href=&quot;#cb22-364&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-365&quot;&gt;&lt;a href=&quot;#cb22-365&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-366&quot;&gt;&lt;a href=&quot;#cb22-366&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-367&quot;&gt;&lt;a href=&quot;#cb22-367&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-368&quot;&gt;&lt;a href=&quot;#cb22-368&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-369&quot;&gt;&lt;a href=&quot;#cb22-369&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-370&quot;&gt;&lt;a href=&quot;#cb22-370&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-371&quot;&gt;&lt;a href=&quot;#cb22-371&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-372&quot;&gt;&lt;a href=&quot;#cb22-372&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-373&quot;&gt;&lt;a href=&quot;#cb22-373&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (\u &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; u (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-374&quot;&gt;&lt;a href=&quot;#cb22-374&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-375&quot;&gt;&lt;a href=&quot;#cb22-375&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-376&quot;&gt;&lt;a href=&quot;#cb22-376&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-377&quot;&gt;&lt;a href=&quot;#cb22-377&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- \f -&amp;gt; f x = ($ x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-378&quot;&gt;&lt;a href=&quot;#cb22-378&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-379&quot;&gt;&lt;a href=&quot;#cb22-379&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-380&quot;&gt;&lt;a href=&quot;#cb22-380&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-381&quot;&gt;&lt;a href=&quot;#cb22-381&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-382&quot;&gt;&lt;a href=&quot;#cb22-382&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-383&quot;&gt;&lt;a href=&quot;#cb22-383&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-384&quot;&gt;&lt;a href=&quot;#cb22-384&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-385&quot;&gt;&lt;a href=&quot;#cb22-385&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-386&quot;&gt;&lt;a href=&quot;#cb22-386&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-387&quot;&gt;&lt;a href=&quot;#cb22-387&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-388&quot;&gt;&lt;a href=&quot;#cb22-388&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-389&quot;&gt;&lt;a href=&quot;#cb22-389&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-390&quot;&gt;&lt;a href=&quot;#cb22-390&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-391&quot;&gt;&lt;a href=&quot;#cb22-391&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- f &amp;lt;.&amp;gt; (x &amp;lt;&amp;gt; y) = (f &amp;lt;.&amp;gt; x) &amp;lt;&amp;gt; (f &amp;lt;.&amp;gt; y), in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-392&quot;&gt;&lt;a href=&quot;#cb22-392&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (x &amp;lt;&amp;gt; y) = fmap f x &amp;lt;&amp;gt; fmap f y, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-393&quot;&gt;&lt;a href=&quot;#cb22-393&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-394&quot;&gt;&lt;a href=&quot;#cb22-394&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-395&quot;&gt;&lt;a href=&quot;#cb22-395&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vwMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u vwMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-396&quot;&gt;&lt;a href=&quot;#cb22-396&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-397&quot;&gt;&lt;a href=&quot;#cb22-397&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        vwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-398&quot;&gt;&lt;a href=&quot;#cb22-398&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-399&quot;&gt;&lt;a href=&quot;#cb22-399&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (u (v w))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-400&quot;&gt;&lt;a href=&quot;#cb22-400&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-401&quot;&gt;&lt;a href=&quot;#cb22-401&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; pure x = pure (f x), in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-402&quot;&gt;&lt;a href=&quot;#cb22-402&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; cuvwMap cuvwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-403&quot;&gt;&lt;a href=&quot;#cb22-403&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-404&quot;&gt;&lt;a href=&quot;#cb22-404&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; vwMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; u vwMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; (v w)) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-405&quot;&gt;&lt;a href=&quot;#cb22-405&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-406&quot;&gt;&lt;a href=&quot;#cb22-406&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        vwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-407&quot;&gt;&lt;a href=&quot;#cb22-407&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-408&quot;&gt;&lt;a href=&quot;#cb22-408&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cuvwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (v w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-409&quot;&gt;&lt;a href=&quot;#cb22-409&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-410&quot;&gt;&lt;a href=&quot;#cb22-410&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;), in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-411&quot;&gt;&lt;a href=&quot;#cb22-411&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;   (   &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-412&quot;&gt;&lt;a href=&quot;#cb22-412&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vwMap vwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-413&quot;&gt;&lt;a href=&quot;#cb22-413&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-414&quot;&gt;&lt;a href=&quot;#cb22-414&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            vwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-415&quot;&gt;&lt;a href=&quot;#cb22-415&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-416&quot;&gt;&lt;a href=&quot;#cb22-416&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            vwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (v w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-417&quot;&gt;&lt;a href=&quot;#cb22-417&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-418&quot;&gt;&lt;a href=&quot;#cb22-418&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-419&quot;&gt;&lt;a href=&quot;#cb22-419&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-420&quot;&gt;&lt;a href=&quot;#cb22-420&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; pure x = pure (f x), in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-421&quot;&gt;&lt;a href=&quot;#cb22-421&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;   (   &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-422&quot;&gt;&lt;a href=&quot;#cb22-422&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vwMap vwDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-423&quot;&gt;&lt;a href=&quot;#cb22-423&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-424&quot;&gt;&lt;a href=&quot;#cb22-424&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            vwMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (vMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; wMap) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; v wMap &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; w) vMap &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-425&quot;&gt;&lt;a href=&quot;#cb22-425&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-426&quot;&gt;&lt;a href=&quot;#cb22-426&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            vwDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-427&quot;&gt;&lt;a href=&quot;#cb22-427&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-428&quot;&gt;&lt;a href=&quot;#cb22-428&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-429&quot;&gt;&lt;a href=&quot;#cb22-429&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-430&quot;&gt;&lt;a href=&quot;#cb22-430&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;), in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-431&quot;&gt;&lt;a href=&quot;#cb22-431&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;   (   &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; u)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-432&quot;&gt;&lt;a href=&quot;#cb22-432&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (   &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; vMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; v)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-433&quot;&gt;&lt;a href=&quot;#cb22-433&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; wMap (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; w)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-434&quot;&gt;&lt;a href=&quot;#cb22-434&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-435&quot;&gt;&lt;a href=&quot;#cb22-435&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-436&quot;&gt;&lt;a href=&quot;#cb22-436&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-437&quot;&gt;&lt;a href=&quot;#cb22-437&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Contract:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-438&quot;&gt;&lt;a href=&quot;#cb22-438&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- u = Defaultable uMap uDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-439&quot;&gt;&lt;a href=&quot;#cb22-439&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- v = Defaultable vMap vDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-440&quot;&gt;&lt;a href=&quot;#cb22-440&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- w = Defaultable wMap wDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-441&quot;&gt;&lt;a href=&quot;#cb22-441&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (v &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; w)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&quot;proof-of-homomorphism-law&quot;&gt;Proof of homomorphism law&lt;/h5&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb23&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb23-1&quot;&gt;&lt;a href=&quot;#cb23-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-2&quot;&gt;&lt;a href=&quot;#cb23-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-3&quot;&gt;&lt;a href=&quot;#cb23-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure v = Defaultable mempty (pure v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-4&quot;&gt;&lt;a href=&quot;#cb23-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-5&quot;&gt;&lt;a href=&quot;#cb23-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-6&quot;&gt;&lt;a href=&quot;#cb23-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-7&quot;&gt;&lt;a href=&quot;#cb23-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-8&quot;&gt;&lt;a href=&quot;#cb23-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-9&quot;&gt;&lt;a href=&quot;#cb23-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;  (&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; x) &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-10&quot;&gt;&lt;a href=&quot;#cb23-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-11&quot;&gt;&lt;a href=&quot;#cb23-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-12&quot;&gt;&lt;a href=&quot;#cb23-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-13&quot;&gt;&lt;a href=&quot;#cb23-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f mempty = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-14&quot;&gt;&lt;a href=&quot;#cb23-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-15&quot;&gt;&lt;a href=&quot;#cb23-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-16&quot;&gt;&lt;a href=&quot;#cb23-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-17&quot;&gt;&lt;a href=&quot;#cb23-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-18&quot;&gt;&lt;a href=&quot;#cb23-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-19&quot;&gt;&lt;a href=&quot;#cb23-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-20&quot;&gt;&lt;a href=&quot;#cb23-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- mempty &amp;lt;.&amp;gt; x = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-21&quot;&gt;&lt;a href=&quot;#cb23-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-22&quot;&gt;&lt;a href=&quot;#cb23-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-23&quot;&gt;&lt;a href=&quot;#cb23-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-24&quot;&gt;&lt;a href=&quot;#cb23-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-25&quot;&gt;&lt;a href=&quot;#cb23-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-26&quot;&gt;&lt;a href=&quot;#cb23-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-27&quot;&gt;&lt;a href=&quot;#cb23-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- mempty &amp;lt;&amp;gt; x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-28&quot;&gt;&lt;a href=&quot;#cb23-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-29&quot;&gt;&lt;a href=&quot;#cb23-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-30&quot;&gt;&lt;a href=&quot;#cb23-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-31&quot;&gt;&lt;a href=&quot;#cb23-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-32&quot;&gt;&lt;a href=&quot;#cb23-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-33&quot;&gt;&lt;a href=&quot;#cb23-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-34&quot;&gt;&lt;a href=&quot;#cb23-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; pure x = pure (f x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-35&quot;&gt;&lt;a href=&quot;#cb23-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; fxMap fxDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-36&quot;&gt;&lt;a href=&quot;#cb23-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-37&quot;&gt;&lt;a href=&quot;#cb23-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-38&quot;&gt;&lt;a href=&quot;#cb23-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-39&quot;&gt;&lt;a href=&quot;#cb23-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    fxDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-40&quot;&gt;&lt;a href=&quot;#cb23-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-41&quot;&gt;&lt;a href=&quot;#cb23-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-42&quot;&gt;&lt;a href=&quot;#cb23-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (f x))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-43&quot;&gt;&lt;a href=&quot;#cb23-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-44&quot;&gt;&lt;a href=&quot;#cb23-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure v = Defaultable mempty (pure v), in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-45&quot;&gt;&lt;a href=&quot;#cb23-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (f x)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&quot;proof-of-interchange-law&quot;&gt;Proof of interchange law&lt;/h5&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb24&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb24-1&quot;&gt;&lt;a href=&quot;#cb24-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-2&quot;&gt;&lt;a href=&quot;#cb24-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-3&quot;&gt;&lt;a href=&quot;#cb24-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure v = Defaultable mempty (pure v)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-4&quot;&gt;&lt;a href=&quot;#cb24-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-5&quot;&gt;&lt;a href=&quot;#cb24-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-6&quot;&gt;&lt;a href=&quot;#cb24-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Expand: u = Defaultable uMap uDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-7&quot;&gt;&lt;a href=&quot;#cb24-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap uDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-8&quot;&gt;&lt;a href=&quot;#cb24-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-9&quot;&gt;&lt;a href=&quot;#cb24-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of (&amp;lt;*&amp;gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-10&quot;&gt;&lt;a href=&quot;#cb24-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uyMap uyDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-11&quot;&gt;&lt;a href=&quot;#cb24-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-12&quot;&gt;&lt;a href=&quot;#cb24-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; uFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-13&quot;&gt;&lt;a href=&quot;#cb24-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-14&quot;&gt;&lt;a href=&quot;#cb24-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        uFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-15&quot;&gt;&lt;a href=&quot;#cb24-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; uDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-16&quot;&gt;&lt;a href=&quot;#cb24-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-17&quot;&gt;&lt;a href=&quot;#cb24-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; u  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; y &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-18&quot;&gt;&lt;a href=&quot;#cb24-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-19&quot;&gt;&lt;a href=&quot;#cb24-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; uDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-20&quot;&gt;&lt;a href=&quot;#cb24-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-21&quot;&gt;&lt;a href=&quot;#cb24-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f mempty = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-22&quot;&gt;&lt;a href=&quot;#cb24-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uyMap uyDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-23&quot;&gt;&lt;a href=&quot;#cb24-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-24&quot;&gt;&lt;a href=&quot;#cb24-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; uFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-25&quot;&gt;&lt;a href=&quot;#cb24-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-26&quot;&gt;&lt;a href=&quot;#cb24-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        uFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-27&quot;&gt;&lt;a href=&quot;#cb24-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; uDefault &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-28&quot;&gt;&lt;a href=&quot;#cb24-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-29&quot;&gt;&lt;a href=&quot;#cb24-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; u  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-30&quot;&gt;&lt;a href=&quot;#cb24-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-31&quot;&gt;&lt;a href=&quot;#cb24-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; uDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-32&quot;&gt;&lt;a href=&quot;#cb24-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-33&quot;&gt;&lt;a href=&quot;#cb24-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify `case uDefault of …`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-34&quot;&gt;&lt;a href=&quot;#cb24-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uyMap uyDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-35&quot;&gt;&lt;a href=&quot;#cb24-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-36&quot;&gt;&lt;a href=&quot;#cb24-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (uMap &lt;span class=&quot;op&quot;&gt;&amp;lt;.&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; uFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-37&quot;&gt;&lt;a href=&quot;#cb24-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-38&quot;&gt;&lt;a href=&quot;#cb24-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        uFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-39&quot;&gt;&lt;a href=&quot;#cb24-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-40&quot;&gt;&lt;a href=&quot;#cb24-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; uDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-41&quot;&gt;&lt;a href=&quot;#cb24-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-42&quot;&gt;&lt;a href=&quot;#cb24-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- f &amp;lt;.&amp;gt; mempty = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-43&quot;&gt;&lt;a href=&quot;#cb24-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uyMap uyDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-44&quot;&gt;&lt;a href=&quot;#cb24-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-45&quot;&gt;&lt;a href=&quot;#cb24-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; uFallback &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-46&quot;&gt;&lt;a href=&quot;#cb24-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-47&quot;&gt;&lt;a href=&quot;#cb24-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        uFallback &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-48&quot;&gt;&lt;a href=&quot;#cb24-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-49&quot;&gt;&lt;a href=&quot;#cb24-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; uDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-50&quot;&gt;&lt;a href=&quot;#cb24-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-51&quot;&gt;&lt;a href=&quot;#cb24-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- mempty &amp;lt;&amp;gt; x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-52&quot;&gt;&lt;a href=&quot;#cb24-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uyMap uyDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-53&quot;&gt;&lt;a href=&quot;#cb24-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-54&quot;&gt;&lt;a href=&quot;#cb24-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-55&quot;&gt;&lt;a href=&quot;#cb24-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-56&quot;&gt;&lt;a href=&quot;#cb24-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; uDefault &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-57&quot;&gt;&lt;a href=&quot;#cb24-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-58&quot;&gt;&lt;a href=&quot;#cb24-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- u &amp;lt;*&amp;gt; pure y = pure ($ y) &amp;lt;*&amp;gt; u&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-59&quot;&gt;&lt;a href=&quot;#cb24-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uyMap uyDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-60&quot;&gt;&lt;a href=&quot;#cb24-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-61&quot;&gt;&lt;a href=&quot;#cb24-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-62&quot;&gt;&lt;a href=&quot;#cb24-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-63&quot;&gt;&lt;a href=&quot;#cb24-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; uDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-64&quot;&gt;&lt;a href=&quot;#cb24-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-65&quot;&gt;&lt;a href=&quot;#cb24-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; x = fmap f x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-66&quot;&gt;&lt;a href=&quot;#cb24-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uyMap uyDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-67&quot;&gt;&lt;a href=&quot;#cb24-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-68&quot;&gt;&lt;a href=&quot;#cb24-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyMap &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uMap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-69&quot;&gt;&lt;a href=&quot;#cb24-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-70&quot;&gt;&lt;a href=&quot;#cb24-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    uyDefault &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) uDefault&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-71&quot;&gt;&lt;a href=&quot;#cb24-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-72&quot;&gt;&lt;a href=&quot;#cb24-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `fmap`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-73&quot;&gt;&lt;a href=&quot;#cb24-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) (&lt;span class=&quot;dt&quot;&gt;Defaultable&lt;/span&gt; uMap uDefault)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-74&quot;&gt;&lt;a href=&quot;#cb24-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-75&quot;&gt;&lt;a href=&quot;#cb24-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Contract: u = Defaultable uMap uDefault&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-76&quot;&gt;&lt;a href=&quot;#cb24-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) u&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-77&quot;&gt;&lt;a href=&quot;#cb24-77&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-78&quot;&gt;&lt;a href=&quot;#cb24-78&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure f &amp;lt;*&amp;gt; x = fmap f x, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-79&quot;&gt;&lt;a href=&quot;#cb24-79&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; u&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/810372623312147782/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/06/defaultable-map-applicative-wrapper-for.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/810372623312147782"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/810372623312147782"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/06/defaultable-map-applicative-wrapper-for.html" title="defaultable-map: An Applicative wrapper for Maps"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-1659249216193744870</id><published>2022-06-03T06:12:00.008-07:00</published><updated>2022-06-10T15:04:50.943-07:00</updated><title type="text">The appeal of bidirectional type-checking</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;The appeal of bidirectional type-checking&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;A post explaining why bidirectional type-checking is popular within the programming language theory community.&quot; /&gt;  &lt;title&gt;The appeal of bidirectional type-checking&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;In this post I hope to explain why &lt;a href=&quot;https://www.cl.cam.ac.uk/~nk480/bidir.pdf&quot;&gt;bidirectional type-checking&lt;/a&gt; has a lot of cultural cachet within the programming language theory community. To be clear, I’m an amateur and I have no formal background in computer science or type theory. Nonetheless, I believe I’ve learned enough and compared notes with others to motivate bidirectional type-checking.&lt;/p&gt;&lt;h4 id=&quot;subtyping&quot;&gt;Subtyping&lt;/h4&gt;&lt;p&gt;The fundamental problem that bidirectional type-checking solves well is &lt;strong&gt;subtyping&lt;/strong&gt;. I will not explain why in this post, so for now take it as an article of faith that bidirectional type-checking provides a simple and consistent framework for supporting subtyping within a programming language’s type system.&lt;/p&gt;&lt;p&gt;Bidirectional type-checking does other things well, too (such as inferring the types of inputs from outputs), but subtyping is the thing that bidirectional type-checking does uniquely well.  For example, you can infer inputs from outputs using unification instead of bidirectional type-checking, which is why I don't motivate bidirectional type-checking in terms of doing inference &quot;in reverse&quot;.&lt;/p&gt;&lt;p&gt;By “subtyping”, I mean that a type &lt;code&gt;A&lt;/code&gt; is a subtype of type &lt;code&gt;B&lt;/code&gt; if any expression of type &lt;code&gt;A&lt;/code&gt; is also a valid expression of type &lt;code&gt;B&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For example, we could create a language that provides two numeric types:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Natural&lt;/code&gt; - The type of non-negative integers (ℕ)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Integer&lt;/code&gt; - The type of all integers (ℤ)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Furthermore, we could define &lt;code&gt;Natural&lt;/code&gt; to be a subtype of &lt;code&gt;Integer&lt;/code&gt; (i.e. ℕ ⊆ ℤ). In other words, if a scalar literal like &lt;code&gt;4&lt;/code&gt; were a valid &lt;code&gt;Natural&lt;/code&gt; number then &lt;code&gt;4&lt;/code&gt; would also be a valid &lt;code&gt;Integer&lt;/code&gt;, too. That would permit us to write something like this &lt;a href=&quot;https://github.com/Gabriella439/grace&quot;&gt;Fall-from-Grace&lt;/a&gt; code:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  [ x, &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt; ] &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the type-checker would not complain that we put a &lt;code&gt;Natural&lt;/code&gt; number inside a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Integer&lt;/code&gt;s, because a &lt;code&gt;Natural&lt;/code&gt; number is a subtype of an &lt;code&gt;Integer&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;why-subtyping-matters&quot;&gt;Why subtyping matters&lt;/h4&gt;&lt;p&gt;Now, automatic numeric coercions like that are convenient but in the grand scheme of things they are not a big deal from a language implementer’s point of view. The real appeal of subtyping is that subtyping appears in more places than you’d expect.&lt;/p&gt;&lt;p&gt;I’m not even talking about object-oriented subtyping like “The &lt;code&gt;Dog&lt;/code&gt; class is a subtype of the &lt;code&gt;Animal&lt;/code&gt; class”. Subtyping occurs quite frequently in even non-OOP languages, in the form of universal quantification (a.k.a. “polymorphism” or “generics”).&lt;/p&gt;&lt;p&gt;For example, we can define a polymorphic identity function, but then use the function as if it had a narrower (more specialized) type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that works because &lt;code&gt;forall (a : Type) . a -&amp;gt; a&lt;/code&gt; is a subtype of &lt;code&gt;Text -&amp;gt; Text&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Yes, you read that right; I didn’t get the subtyping direction backwards. A polymorphic type is a subtype of a more specialized type.&lt;/p&gt;&lt;p&gt;In fact, &lt;code&gt;forall (a : Type) . a -&amp;gt; a&lt;/code&gt; is a subtype of multiple types, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Integer -&amp;gt; Integer&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;List Natural -&amp;gt; List Natural&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;{ x: Bool } -&amp;gt; { x: Bool }&lt;/code&gt;&lt;/li&gt;&lt;li&gt;…&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and so on. This might be a bit counter-intuitive if you come from an OOP background where usually each type is a subtype of at most one other (explicitly declared) supertype.&lt;/p&gt;&lt;p&gt;This type specialization is implicit, meaning that we don’t need the type annotation to use &lt;code&gt;id&lt;/code&gt; on a value of type &lt;code&gt;Text&lt;/code&gt;. Instead, the specialization happens automatically, so we can use &lt;code&gt;id&lt;/code&gt; on any value without annotations:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ABC&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If our language didn’t support subtyping then we’d need to explicitly abstract over and apply type arguments. For example, this is how that same &lt;code&gt;id&lt;/code&gt; example would work in &lt;a href=&quot;https://dhall-lang.org&quot;&gt;Dhall&lt;/a&gt; (which does not support any form of subtyping):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \(a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \(x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; a) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;-- ↑ Explicit type abstraction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ABC&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ↑ Explicit type application&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Typically I refer to a Dhall-style type system as “explicit type abstraction and type application”. Vice versa, I refer to a Grace-style language as “implicit type abstraction and type application”.&lt;/p&gt;&lt;p&gt;The real reason why subtyping matters is because you need to support subtyping in order to implement a language with “implicit type abstraction/application”. In other words, you need some way to automatically produce and consume polymorphic types without explicit types or type annotations from the end user and that is essentially a form of subtyping.&lt;/p&gt;&lt;h4 id=&quot;bidirectional-type-checking-vs-hindley-milner&quot;&gt;Bidirectional type-checking vs unification&lt;/h4&gt;&lt;p&gt;Bidirectional type-checking is not the only way to implement a language with implicit type abstraction/application. For example, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hindley–Milner_type_system&quot;&gt;Hindley-Milner type inference&lt;/a&gt; is a type system that is based on unification instead of bidirectional type-checking type system and Hindley-Milner inference still supports implicit type abstraction/application.&lt;/p&gt;&lt;p&gt;The reason why Hindley Milner type inference works, though, is by exploiting a narrow set of requirements that do not generalize well to more sophisticated type systems. Specifically:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Hindley Milner type inference only permits “top-level polymorphism”&lt;/p&gt;&lt;p&gt;In other words, Hindley Milner type inference only permits universal quantification at the top-level of a program or at the top-level of a &lt;code&gt;let&lt;/code&gt;-bound expression&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Hindley Milner type inference does not support any other form of subtyping&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To expand on the latter point, language implementers often want to add other forms of subtyping to our languages beyond implicit type abstraction/application, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implicit numeric coercions&lt;/li&gt;&lt;li&gt;Object-oriented inheritance&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Existential_quantification&quot;&gt;Existential quantification&lt;/a&gt; (the dual of universal quantification)&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Refinement_type&quot;&gt;Refinement types&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and if you try to extend Hindley Milner type inference to add any other language feature that requires subtyping then you run into issues pretty quickly. This is because Hindley Milner exploits a cute hack that does not generalize well.&lt;/p&gt;&lt;p&gt;In contrast, bidirectional type-checking is not just a method for handling implicit type abstraction/application. Rather, bidirectional type-checking is a framework for introducing any form of subtyping, of which implicit type abstraction/application is just a special case.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;If you’d like to learn more about bidirectional type-checking then I recommend reading:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.cl.cam.ac.uk/~nk480/bidir.pdf&quot;&gt;Complete and Easy Bidirectional Typechecking for Higher-Rank Polymorphism&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This paper provides an all-in-one presentation of how to implement a bidirectional type-checking system&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.cl.cam.ac.uk/~nk480/bidir-survey.pdf&quot;&gt;Bidirectional Typing&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This explains the general principles behind bidirectional type-checking so that you can better understand how to extend the type system with new features&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As I mentioned earlier, bidirectional type-checking has a lot of cultural cachet within the programming language theory community, so even if you don’t plan on using it, understanding it will help you speak the same language as many others within the community.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/1659249216193744870/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/06/the-appeal-of-bidirectional-type.html#comment-form" title="2 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1659249216193744870"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1659249216193744870"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/06/the-appeal-of-bidirectional-type.html" title="The appeal of bidirectional type-checking"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-7352509006108964106</id><published>2022-05-31T09:13:00.004-07:00</published><updated>2022-05-31T09:26:13.366-07:00</updated><title type="text">Generate web forms from pure functions</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;Generate web forms from pure functions&lt;/title&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Generate web forms from pure functions&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;Announce post for the Grace browser, which translates functional code to interactive HTML&quot; /&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This is an announcement post for my “Grace browser” project, which you can find here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev&quot;&gt;&lt;code&gt;trygrace.dev&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This project is a web page which can dynamically convert a wide variety of functional programming expressions to their equivalent HTML. This conversion can even auto-generate interactive web forms from functions, which means that people without web programming knowledge can use the Grace browser to create and share simple and interactive web pages.&lt;/p&gt;&lt;h4 id=&quot;demo&quot;&gt;Demo&lt;/h4&gt;&lt;p&gt;You can quickly get the gist of this project by visiting the following page:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev/?expression=%255Cinput%2520-%253E%250A%2520%2520%2520%2520%257B%2520%2522x%2520or%2520y%2522%2520%253A%2520input.x%2520%257C%257C%2520input.y%250A%2520%2520%2520%2520%252C%2520%2522x%2520and%2520y%2522%253A%2520input.x%2520%2526%2526%2520input.y%250A%2520%2520%2520%2520%257D&quot;&gt;Grace browser - Boolean logic example&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The Grace browser begins with a code editor where you can input a purely functional expression and the above link uses the following example code:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\input &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    { &lt;span class=&quot;st&quot;&gt;&amp;quot;x or y&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; input&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;x &lt;span class=&quot;op&quot;&gt;||&lt;/span&gt; input&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    , &lt;span class=&quot;st&quot;&gt;&amp;quot;x and y&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; input&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;x &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; input&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The interpreter then infers the type of the input expression, which for the above example is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;{ &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; } &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; { &lt;span class=&quot;st&quot;&gt;&amp;quot;x or y&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;x and y&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and you can read that type as saying:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;This is a function whose input is a record and whose output is also a record. The input record has two boolean-valued fields named “x” and “y” and the output record has two boolean-valued fields named “x or y” and “x and y”.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Here is the novel bit: the interpreter then &lt;strong&gt;generates a web interface appropriate for that type&lt;/strong&gt;. In this case, the equivalent web interface is a form with two inputs:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a checkbox labeled “x”&lt;/li&gt;&lt;li&gt;a checkbox labeled “y”&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and the form also produces two outputs:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;a read-only checkbox labeled “x or y”&lt;/li&gt;&lt;li&gt;a read-only checkbox labeled “x and y”&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The result looks like this:&lt;/p&gt;&lt;p&gt;&lt;img width=&quot;404&quot; alt=&quot;Screen Shot 2022-05-28 at 11 12 23 AM&quot; src=&quot;https://user-images.githubusercontent.com/1313787/170837955-35feb8b4-9028-4bf2-af36-9b814fc9a70c.png&quot;&gt;&lt;/p&gt;&lt;p&gt;Moreover, the generated form is reactive: as you check or uncheck the two input checkboxes the two output checkboxes immediately update in response. In particular:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the “x or y” box will be checked whenever either input box is checked&lt;/li&gt;&lt;li&gt;the “x and y” box will be checked whenever both input boxes are checked&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img width=&quot;136&quot; alt=&quot;Screen Shot 2022-05-28 at 11 19 15 AM&quot; src=&quot;https://user-images.githubusercontent.com/1313787/170838108-83610230-159e-43ea-9ef9-0e2bbebdee03.png&quot;&gt;&lt;/p&gt;&lt;p&gt;This also all runs entirely client side, meaning that all the computation happens in your browser. Specifically:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;compiling the functional code to an interactive form is done client-side&lt;/li&gt;&lt;li&gt;updating form outputs in response to inputs is also done client-side&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;intelligent-forms&quot;&gt;Intelligent forms&lt;/h4&gt;&lt;p&gt;Here’s another example that might further pique your interest:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev/?expression=List%252Fmap%2520%2528%255Cx%2520-%253E%2520x%2520%252B%25201%2529&quot;&gt;Grace browser - Increment each element of a list&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The above example is a pure function to increment each element of a list:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; (\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;List/map&lt;/code&gt; function is unsaturated, meaning that we’re missing the final argument: the actual list to transform. So the interpreter infers the following type for the function:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and you can read that type as saying:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;This is a function whose input is a list of natural numbers and whose output is also a list of natural numbers.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;So what kind of interactive form will that generate?&lt;/p&gt;&lt;p&gt;The generated input to the form begins with a blue “+” button that you can click to add elements to the input list. Each time you click the button the form creates a numeric input for that list element alongside a red “-” button that you can click to delete the corresponding list element. As you add or remove elements from the input list the reactive form update will also add or remove elements from the output list, too.&lt;/p&gt;&lt;p&gt;&lt;img width=&quot;296&quot; alt=&quot;Screen Shot 2022-05-28 at 11 14 45 AM&quot; src=&quot;https://user-images.githubusercontent.com/1313787/170838009-3d68369d-34b0-4823-a1f9-160505c84c4e.png&quot;&gt;&lt;/p&gt;&lt;p&gt;Moreover, each element in the input list will be a numeric input. As you adjust each input element the matching output element will automatically be set to a number that is one greater than the input number.&lt;/p&gt;&lt;p&gt;The interpreter also sets the permitted range of the numeric inputs based on the inferred type. Since the default numeric type is &lt;code&gt;Natural&lt;/code&gt; (i.e. non-negative) numbers, the numeric inputs will forbid negative inputs. However, if you were to add a type annotation to specify an &lt;code&gt;Integer&lt;/code&gt; element type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; (\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then the generated form will change to permit negative inputs and outputs because then the inferred type would be:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;shareable-forms&quot;&gt;Shareable forms&lt;/h4&gt;&lt;p&gt;The “Grace browser” is based on the Fall-from-Grace functional programming language (or “Grace” for short), which I previously announced here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2021/09/fall-from-grace-ready-to-fork.html&quot;&gt;Fall-from-Grace: A ready-to-fork functional programming language&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and one of the features of this language is the ability to import arbitrary expressions by URL, including functions!&lt;/p&gt;&lt;p&gt;That means that if you were to create a useful pure function for others to use you could host your code anywhere that you can serve plain text (such as a GitHub repository or gist) and anybody could turn that function into the corresponding form.&lt;/p&gt;&lt;p&gt;For example, the following gist contains a pure Grace function to compute US federal income taxes for 2022:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://gist.github.com/Gabriella439/712d0648bbdcfcc83eadd0ee394beed3&quot;&gt;GitHub Gist - Income tax calculator&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… so if you paste the URL for the raw text of the gist into the Grace browser you’ll get a shareable form for computing your taxes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev/?expression=https%253A%252F%252Fgist.githubusercontent.com%252FGabriella439%252F712d0648bbdcfcc83eadd0ee394beed3%252Fraw%252F1b03f661577521b4d3dc6ca73dd11475a30c1594%252FincomeTax.ffg&quot;&gt;Grace browser - US federal income tax calculator&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img width=&quot;390&quot; alt=&quot;Screen Shot 2022-05-28 at 11 15 45 AM&quot; src=&quot;https://user-images.githubusercontent.com/1313787/170838035-1b45109e-eb38-426b-9d20-0f2d216456f5.png&quot;&gt;&lt;/p&gt;&lt;p&gt;This provides a lightweight way to publish, share, and consume utility code.&lt;/p&gt;&lt;h4 id=&quot;plain-json-data&quot;&gt;Plain JSON data&lt;/h4&gt;&lt;p&gt;The Grace browser also works for plain data, too. In fact, Grace is a superset of JSON so the Grace browser is also a JSON browser.&lt;/p&gt;&lt;p&gt;For example, I can render the JSON served at &lt;a href=&quot;https://api.github.com&quot;&gt;&lt;code&gt;https://api.github.com&lt;/code&gt;&lt;/a&gt; as HTML by pasting that URL into the Grace browser, which produces this result:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev/?expression=https%253A%252F%252Fapi.github.com&quot;&gt;Grace browser - GitHub API&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img width=&quot;814&quot; alt=&quot;Screen Shot 2022-05-28 at 11 16 39 AM&quot; src=&quot;https://user-images.githubusercontent.com/1313787/170838058-1e376c3a-4a02-4b81-9982-b41e07fed454.png&quot;&gt;&lt;/p&gt;&lt;p&gt;If I’m only interested in one field of the JSON output, I can project out the field of interest like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;( https&lt;span class=&quot;op&quot;&gt;://&lt;/span&gt;api&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;github&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt; )&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;starred_gists_url&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev/?expression=%2528%2520https%253A%252F%252Fapi.github.com%252F%2520%2529.starred_gists_url&quot;&gt;Grace browser - Query API field&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img width=&quot;505&quot; alt=&quot;Screen Shot 2022-05-28 at 11 17 08 AM&quot; src=&quot;https://user-images.githubusercontent.com/1313787/170838072-e4af350e-2f34-49f2-a4b1-970d11adaaea.png&quot;&gt;&lt;/p&gt;&lt;p&gt;In other words, you can use Grace browser sort of like a “&lt;code&gt;jq&lt;/code&gt; but with HTML output”.&lt;/p&gt;&lt;h4 id=&quot;teaching-tool&quot;&gt;Teaching tool&lt;/h4&gt;&lt;p&gt;You can also use the Grace browser to teach functional programming concepts, too. For example, you can illustrate the difference between Haskell/Rust-style error-handling and Go-style error-handling by entering this input into the code editor:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;{ &lt;span class=&quot;st&quot;&gt;&amp;quot;Error handling in Haskell and Rust&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \input &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; input &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Failure&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Success&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Error handling in Go&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \input &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; input &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { &lt;span class=&quot;st&quot;&gt;&amp;quot;Failure&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Optional&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Success&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Optional&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev/?expression=%257B%2520%2522Error%2520handling%2520in%2520Haskell%2520and%2520Rust%2522%253A%250A%2520%2520%2520%2520%255Cinput%2520-%253E%2520input%2520%253A%2520%253C%2520Failure%2520%253A%2520Text%2520%257C%2520Success%2520%253A%2520Natural%2520%253E%250A%252C%2520%2522Error%2520handling%2520in%2520Go%2522%253A%250A%2520%2520%2520%2520%255Cinput%2520-%253E%2520input%2520%253A%2520%257B%2520%2522Failure%2522%2520%253A%2520Optional%2520Text%252C%2520%2522Success%2522%253A%2520Optional%2520Natural%2520%257D%250A%257D&quot;&gt;Grace browser - Error handling semantics&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and the form will illustrate how:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;In Haskell and Rust, the failure data and success data are mutually exclusive&lt;/p&gt;&lt;p&gt;The generated form illustrates this by using mutually exclusive radio buttons for the input.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;In Go, failure data and success data are not mutually exclusive&lt;/p&gt;&lt;p&gt;The generated form illustrates this by using checkboxes to independently enable or disable the failure and success data.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img width=&quot;620&quot; alt=&quot;Screen Shot 2022-05-28 at 11 18 06 AM&quot; src=&quot;https://user-images.githubusercontent.com/1313787/170838090-4ba3bcdf-a5b2-4679-9535-d9eca0257b5e.png&quot;&gt;&lt;/p&gt;&lt;h4 id=&quot;semantic-web&quot;&gt;Semantic web&lt;/h4&gt;&lt;p&gt;Grace is currently very limited in its current incarnation, meaning that the language only provides a small set of built-in functions and operators. The reason why is because I originally created Grace to serve as a simple reference implementation of how to create a functional programming language and I intended people to fork the language to add any additional language features they needed.&lt;/p&gt;&lt;p&gt;However, if Grace were more featureful then you could imagine creating a “semantic web” of purely functional expressions that could reference each other by URL and be visualized using an intelligent client like the Grace browser. For example, you could have some pure data hosted at &lt;code&gt;https://example.com/students.ffg&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ { &lt;span class=&quot;st&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;       , &lt;span class=&quot;st&quot;&gt;&amp;quot;Grade&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;95&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, { &lt;span class=&quot;st&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Mary Jane&amp;quot;&lt;/span&gt;      , &lt;span class=&quot;st&quot;&gt;&amp;quot;Grade&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;98&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, { &lt;span class=&quot;st&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Alice Templeton&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Grade&amp;quot;&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;90&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and then you could create a “view” into that data that adds up all the grades by hosting another expression at &lt;code&gt;https://example.com/total.ffg&lt;/code&gt; which could contain:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; https&lt;span class=&quot;op&quot;&gt;://&lt;/span&gt;raw&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;githubusercontent&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Gabriella439&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;grace&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;main&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;prelude&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;natural&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;ffg&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;fu&quot;&gt;sum&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; (\student &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; student&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Grade&amp;quot;&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;./&lt;/span&gt;students&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;ffg)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and whenever you would update the data hosted at &lt;code&gt;students.ffg&lt;/code&gt; the view at &lt;code&gt;total.ffg&lt;/code&gt; would automatically update, too. You could then generate a web page for either view of the data using something like the Grace browser.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;If this interests you, the website contains a tutorial that you can try out that partially overlaps with the examples from this post:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://trygrace.dev&quot;&gt;Grace browser&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Just click the “Try the tutorial” button to give it a whirl.&lt;/p&gt;&lt;p&gt;If you want a deeper dive into what the Grace language can do, then I recommend reading the original announcement post:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2021/09/fall-from-grace-ready-to-fork.html&quot;&gt;Fall-from-Grace: A ready-to-fork functional programming language&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… or reading the &lt;code&gt;README&lt;/code&gt; from the corresponding GitHub project:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Gabriella439/grace#grace&quot;&gt;GitHub - &lt;code&gt;Gabriella439/grace&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also, I set things up so that if you do fork the language you can easily generate your own “Grace browser” for your fork of the language that’s just a bunch of static assets you can host anywhere. No server-side computation necessary!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/7352509006108964106/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/05/generate-web-forms-from-pure-functions.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7352509006108964106"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7352509006108964106"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/05/generate-web-forms-from-pure-functions.html" title="Generate web forms from pure functions"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-1300935440139812884</id><published>2022-05-09T06:29:00.008-07:00</published><updated>2022-05-09T06:54:53.606-07:00</updated><title type="text">The golden rule of software distributions</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;The golden rule of software distributions&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;A description of an architectural pattern commonly found in many software distributions&quot; /&gt;  &lt;title&gt;golden-software-distro&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This is a short post documenting a pattern I learned as a user and maintainer of software distributions. I wanted to share this pattern because the lesson was non-obvious to me in my early days as a software engineer.&lt;/p&gt;&lt;p&gt;I call this pattern the “golden rule of software distributions”, which I’ll define the verbose way followed by the concise way.&lt;/p&gt;&lt;p&gt;The verbose version of the golden rule of software distributions is:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;If a package manager only permits installing or depending on one version of each of package then a software distribution for that package manager should bless one version of each package. The blessed version for each package must be compatible with the blessed version of every other package.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The concise version of the golden rule of software distributions is:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;A locally coherent package manager requires a globally coherent software distribution.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;… where:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;“locally coherent” means that you can only install or depend on one version of each package for a given system or project&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;“globally coherent” means each package has a unique blessed version compatible with every other package’s blessed version&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note that any sufficiently large software distribution will not perfectly adhere to this golden rule. You should view this rule as an ideal that a software distribution aspires to approximate as closely as possible, but there will necessarily be cases where they cannot.&lt;/p&gt;&lt;h4 id=&quot;motivation&quot;&gt;Motivation&lt;/h4&gt;&lt;p&gt;I’ll introduce the term “build plan” to explain the motivation behind the golden rule:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;A build plan for a package A specifies a version for each dependency of A such that A successfully builds against those dependencies.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To motivate the golden rule, let’s examine what happens when you have a locally coherent package manager but a globally incoherent software distribution:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Package users need to do a combinatorial search of their dependencies&lt;/p&gt;&lt;p&gt;… in order to find a successful build plan. Specifically, they may need to test multiple major versions of their direct and indirect independencies to find a permutation that successfully builds.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Compatible sets of packages become increasingly unlikely at scale&lt;/p&gt;&lt;p&gt;The likelihood of finding a build plan rapidly diminishes as your dependency tree grows. Beyond a certain number of dependencies a build plan might not even exist, even if every dependency is maintained.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Package authors need to support multiple major versions of every dependency&lt;/p&gt;&lt;p&gt;… in order to maximize the likelihood that downstream packages can find a successful build plan. Maintaining this backwards compatibility greatly increases their maintenance burden.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Package authors must test against multiple major versions of each dependency&lt;/p&gt;&lt;p&gt;… in order to shield their users from build failures due to unexpected build plans. This means a large number of CI runs for every proposed change to the package, which slows down their development velocity.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Responsibility for fixing incompatibilities becomes diffuse&lt;/p&gt;&lt;p&gt;Sometimes you need to depend on two packages (A and B) which transitively depend on incompatible versions of another package (C). Neither package A nor package B can be held responsible for fixing the problem unless there is a blessed version of package C.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;These issues lead to a lot of wasted work, which scales exponentially with the number of dependencies. Consequently, software ecosystems that ignore the golden rule run into difficulties scaling dependency trees which people will work around in the following ways:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Culturally discouraging dependencies&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/plain-and-simple/dependency-vendoring-dd765be75655&quot;&gt;Vendoring dependencies&lt;/a&gt; within their projects&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Gravitating towards large and monolithic dependencies / frameworks&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;the-fundamental-problem&quot;&gt;The fundamental problem&lt;/h4&gt;&lt;p&gt;The golden rule is necessary because &lt;em&gt;build plans do not compose&lt;/em&gt; for a locally coherent package manager. In other words, if you have a working build plan for package A and another working build plan for package B, you cannot necessarily combine those two build plans to generate a working build plan for a package that depends on both A and B. In particular, you definitely cannot combine the two build plans if A and B depend on incompatible versions of another package C.&lt;/p&gt;&lt;p&gt;However, build plans can also fail to compose for more subtle reasons. For example, you can depend on multiple packages whose build plans are all pairwise-compatible, but there still might not exist a build plan for the complete set of packages.&lt;/p&gt;&lt;p&gt;The good news is that you can trivially “weaken” a build plan, meaning that if you find a build plan that includes both packages A and B then you can downgrade that to a working build plan for just package A or just package B.&lt;/p&gt;&lt;p&gt;Consequently, the globally optimal thing to do is to find a working build plan that combines as many packages as possible, because then any subset of that build plan is still a working build plan. That ensures that any work spent fixing this larger build plan is not wasted and benefits everybody. Contrast that with work spent fixing the build for a single package (e.g. creating a lockfile), which does not benefit any other package (not even downstream packages, a.k.a. reverse dependencies).&lt;/p&gt;&lt;h4 id=&quot;common-sense&quot;&gt;Common sense?&lt;/h4&gt;&lt;p&gt;Some people might view the golden rule of software distributions as common sense that doesn’t warrant a blog post, but my experiences with the Haskell ecosystem indicate otherwise. That’s because I began using Haskell seriously around 2011, four years before &lt;a href=&quot;https://www.fpcomplete.com/blog/2014/12/backporting-bug-fixes/&quot;&gt;Stackage was first released&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Before Stackage, I ran into all of the problems described in the previous section because there was no blessed set of Haskell packages. In particular, the worst problem (for me) was the inability to find a working build plan for my projects.&lt;/p&gt;&lt;p&gt;This issue went on for years; basically everyone in the Haskell ecosystem (myself included) unthinkingly cargo-culted this as the way things were supposed to work. When things went wrong we blamed Cabal (e.g. “Cabal hell”) for our problems when the root of the problem had little to do with Cabal.&lt;/p&gt;&lt;p&gt;Stackage fixed all of that when &lt;a href=&quot;https://www.snoyman.com&quot;&gt;Michael Snoyman&lt;/a&gt; essentially introduced the Haskell ecosystem to the golden rule of software distributions. Stackage works by publishing a set of blessed package versions for all of the packages vetted by Stackage and these packages are guaranteed to all build together. Periodically, Stackage publishes an updated set of blessed package versions.&lt;/p&gt;&lt;p&gt;After getting used to this, I quickly converted to this way of doing things, which seemed blindingly obvious in retrospect. Also, my professional career arc shifted towards DevOps, including managing upgrades and software distributions and I discovered that this was a fairly common practice for most large software distributions.&lt;/p&gt;&lt;h4 id=&quot;why-this-rule-is-not-intuitive&quot;&gt;Why this rule is not intuitive&lt;/h4&gt;&lt;p&gt;Actually, this insight is not as obvious as people might think. In fact, a person with a superficial understanding of how software ecosystems work might suspect that the larger a software ecosystem grows the more incoherent things get. However, you actually encounter the opposite phenomenon in practice: the larger a software ecosystem gets the more coherent things get (by necessity).&lt;/p&gt;&lt;p&gt;In fact, I still see people argue against the global coherence of software ecosystems, which indicates to me that this isn’t universally received wisdom. Sometimes they argue against global coherence directly (they believe coherence imposes an undue burden on maintainers or users) or they argue against global coherence indirectly (by positing incoherence as a foundation of a larger architectural pattern). Either way, I strongly oppose global incoherence, both for the theoretical reasons outlined in this post and also based on my practical experience managing dependencies in the pre-Stackage days of the Haskell ecosystem.&lt;/p&gt;&lt;p&gt;Indeed, many of people arguing against globally coherent software ecosystems are actually unwitting beneficiaries of global coherence. There is a massive amount of invisible work that goes on behind the scenes for every software distribution to create a globally coherent package set that benefits everybody (not just the users of those software distributions). For example, all software users benefit from the work that goes into maintaining the Debian, Arch, Nixpkgs, and Brew software distributions even if they don’t specifically use those software distributions or their associated package managers.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;This whole post has one giant caveat, which is that all of the arguments assume that the packager manager is locally coherent, which is not always the case! In fact, there’s a post that proves that local coherence can be undesirable because it (essentially) makes dependency resolution NP complete. For more details, see:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://research.swtch.com/version-sat&quot;&gt;Version SAT&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I personally have mixed views on whether local coherence is good or bad. Right now I’m slightly on team “local coherence is good”, but my opinions on that are not fully formed, yet.&lt;/p&gt;&lt;p&gt;That said, most package managers tend to require or at least benefit from local coherence so in practice most software distributions also require global coherence. For example, Haskell’s build tooling basically requires global coherence (with some caveats I won’t go into), so global coherence is a good thing for the Haskell ecosystem.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/1300935440139812884/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/05/the-golden-rule-of-software.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1300935440139812884"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1300935440139812884"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/05/the-golden-rule-of-software.html" title="The golden rule of software distributions"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-7568809994159291243</id><published>2022-05-03T19:52:00.004-07:00</published><updated>2022-05-03T21:45:48.445-07:00</updated><title type="text">Why does Haskell's take function accept insufficient elements?</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Why does Haskell's take function accept insufficient elements?&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;A blog post that is a long-form answer to a question originally asked on Reddit&quot; /&gt;  &lt;title&gt;Why does Haskell's take function accept insufficient elements?&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post is a long-form response to a &lt;a href=&quot;https://www.reddit.com/r/haskell/comments/uhm04p/how_does_take_function_really_work/&quot;&gt;question on Reddit&lt;/a&gt;, which asked:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I just started learning haskell, and the take function confuses me.&lt;/p&gt;&lt;p&gt;e.g &lt;code&gt;take 10 [1,2,3,4,5]&lt;/code&gt; will yield &lt;code&gt;[1,2,3,4,5]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;How does it not generate an error ?&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;… and I have enough to say on this subject that I thought it would warrant a blog post rather than just a comment reply.&lt;/p&gt;&lt;p&gt;The easiest way to answer this question is to walk through all the possible alternative implementations that can fail when not given enough elements.&lt;/p&gt;&lt;h4 id=&quot;solution-0-output-a-maybe&quot;&gt;Solution 0: Output a &lt;code&gt;Maybe&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;The first thing we could try would be to wrap the result in a &lt;code&gt;Maybe&lt;/code&gt;, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;safeTake ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; [a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; [a]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;safeTake &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;      _   &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;safeTake n      []  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;safeTake n (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; xs) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;) (safeTake (n &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) xs)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; safeTake &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; safeTake &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The main deficiency with this approach is that it is insufficiently lazy. The result will not produce a single element of the output list until &lt;code&gt;safeTake&lt;/code&gt; finishes consuming the required number of elements from the input list.&lt;/p&gt;&lt;p&gt;We can see the difference with the following examples:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; oops &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Too short&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;take&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; oops)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; safeTake &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;=&amp;lt;&amp;lt;&lt;/span&gt; safeTake &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; oops&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Too&lt;/span&gt; short&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;solution-1-fail-with-error&quot;&gt;Solution 1: Fail with &lt;code&gt;error&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;Another approach would be to create a &lt;a href=&quot;https://wiki.haskell.org/Partial_functions&quot;&gt;partial&lt;/a&gt; function that fails with an &lt;code&gt;error&lt;/code&gt; if we run out of elements, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;partialTake ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; [a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; [a]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;partialTake &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;      _   &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;partialTake n (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; xs) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; partialTake (n &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) xs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; partialTake &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; partialTake &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; partialTake &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;***&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; Test.hs&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;51&lt;/span&gt;)&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Non&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;exhaustive patterns &lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; function partialTake&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-7&quot;&gt;&lt;a href=&quot;#cb5-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-8&quot;&gt;&lt;a href=&quot;#cb5-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; partialTake &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; (partialTake &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; oops)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-9&quot;&gt;&lt;a href=&quot;#cb5-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Partial functions like these are undesirable, though, so we won’t go with that solution.&lt;/p&gt;&lt;h4 id=&quot;solution-2-use-a-custom-list-like-type&quot;&gt;Solution 2: Use a custom list-like type&lt;/h4&gt;&lt;p&gt;Okay, but what if we could store a value at the end of the list indicating whether or not the &lt;code&gt;take&lt;/code&gt; succeeded. One way we could do that would be to define an auxiliary type similar to a list, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DeriveFoldable #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;ListAnd&lt;/span&gt; r a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Cons&lt;/span&gt; a (&lt;span class=&quot;dt&quot;&gt;ListAnd&lt;/span&gt; r a) &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Nil&lt;/span&gt; r &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… where now the empty (&lt;code&gt;Nil&lt;/code&gt;) constructor can store an auxiliary value. We can then use this auxiliary value to indicate to the user whether or not the function succeeded or not:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Sufficient&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Insufficient&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;takeAnd ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; [a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;ListAnd&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Result&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeAnd &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;      _   &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Sufficient&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeAnd n      []  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Insufficient&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeAnd n (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; xs) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Cons&lt;/span&gt; x (takeAnd (n &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) xs)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; takeAnd &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Cons&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Cons&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Cons&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Sufficient&lt;/span&gt;)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; takeAnd &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Insufficient&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also, the &lt;code&gt;ListAnd&lt;/code&gt; type derives &lt;code&gt;Foldable&lt;/code&gt;, so we can recover the old behavior by converting the &lt;code&gt;ListAnd Result a&lt;/code&gt; type into &lt;code&gt;[a]&lt;/code&gt; using &lt;code&gt;toList&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Foldable&lt;/span&gt; (toList)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toList (takeAnd &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;])&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toList (takeAnd &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [])&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toList (takeAnd &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; (toList (takeAnd &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; oops)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the first total function that has the desired laziness characteristics, but the downside is that the &lt;code&gt;take&lt;/code&gt; function now has a much weirder type. Can we solve this only using existing types from &lt;code&gt;base&lt;/code&gt;?&lt;/p&gt;&lt;h4 id=&quot;solution-3-return-a-pair&quot;&gt;Solution 3: Return a pair&lt;/h4&gt;&lt;p&gt;Well, what if we were to change the type of &lt;code&gt;take&lt;/code&gt; to return an pair containing an ordinary list alongside a &lt;code&gt;Result&lt;/code&gt;, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;takeWithResult ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; [a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; ([a], &lt;span class=&quot;dt&quot;&gt;Result&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeWithResult &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;      _   &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (    [], &lt;span class=&quot;dt&quot;&gt;Sufficient&lt;/span&gt;  )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeWithResult n      []  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (    [], &lt;span class=&quot;dt&quot;&gt;Insufficient&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeWithResult n (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; xs) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; ys, result      )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (ys, result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; takeWithResult (n &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) xs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; takeWithResult &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;([&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;],&lt;span class=&quot;dt&quot;&gt;Sufficient&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; takeWithResult &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;([],&lt;span class=&quot;dt&quot;&gt;Insufficient&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we don’t need to add this weird &lt;code&gt;ListAnd&lt;/code&gt; type to &lt;code&gt;base&lt;/code&gt;, and we can recover the old behavior by post-processing the output using &lt;code&gt;fst&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fst&lt;/span&gt; (takeWithResult &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;])&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;fst&lt;/span&gt; (takeWithResult &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [])&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this also has the right laziness characteristics:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fst&lt;/span&gt; (takeWithResult &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fst&lt;/span&gt; (takeWithResult &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; oops)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and we can replace &lt;code&gt;Result&lt;/code&gt; with a &lt;code&gt;Bool&lt;/code&gt; if want a solution that depends solely on types from &lt;code&gt;base&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;takeWithResult ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; [a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; ([a], &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeWithResult &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;      _   &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; ([], &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeWithResult n      []  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; ([], &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;takeWithResult n (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; xs) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; ys, result)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (ys, result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; takeWithResult (n &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) xs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, even this solution is not completely satisfactory. There’s nothing that forces the user to check the &lt;code&gt;Bool&lt;/code&gt; value before accessing the list, so this is not as safe as, say, the &lt;code&gt;safeTake&lt;/code&gt; function which returns a &lt;code&gt;Maybe&lt;/code&gt;. The &lt;code&gt;Bool&lt;/code&gt; included in the result is more of an informational value rather than a safeguard.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;So the long-winded answer to the original question is that there are several alternative ways we could implement &lt;code&gt;take&lt;/code&gt; that can fail if the input list is too small, but in my view each of them has their own limitations.&lt;/p&gt;&lt;p&gt;This is why I think Haskell’s current &lt;code&gt;take&lt;/code&gt; function is probably the least worst of the alternatives, even if it’s not the safest possible implementation.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/7568809994159291243/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/05/why-does-haskells-take-function-accept.html#comment-form" title="1 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7568809994159291243"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7568809994159291243"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/05/why-does-haskells-take-function-accept.html" title="Why does Haskell's take function accept insufficient elements?"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-292075298165581432</id><published>2022-05-01T08:50:00.001-07:00</published><updated>2022-05-01T08:57:51.027-07:00</updated><title type="text">Introductory resources to type theory for language implementers</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Introductory resources to type theory for language implementers&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;A post touring resources you can use to learn how to implement a type checker or type inference algorithm&quot; /&gt;  &lt;title&gt;Introductory resources to type theory for language implementers&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post briefly tours resources that helped introduce me to type theory, because I’m frequently asked by others for resources on this subject (even though I never had a formal education in type theory). Specifically, these resources will focus more on how to implement a type checker or type inference algorithm.&lt;/p&gt;&lt;p&gt;Also, my post will be biased against books, because I don’t tend to learn well from reading books. That said, I will mention a few books that I’ve heard others recommend, even if I can’t personally vouch for them.&lt;/p&gt;&lt;h4 id=&quot;what-worked-for-me&quot;&gt;What worked for me&lt;/h4&gt;&lt;p&gt;The first and most important resource that I found useful was this one:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.andres-loeh.de/LambdaPi/LambdaPi.pdf&quot;&gt;A tutorial implementation of a dependently typed lambda calculus&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The reason why is because that paper shows logical notation side-by-side with Haskell code. That juxtaposition served as a sort of “Rosetta stone” for me to understand the correspondence between logical judgments and code. The paper also introduces some type theory basics (and dependent types!).&lt;/p&gt;&lt;p&gt;Along similar lines, another helpful resource was:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://web.cecs.pdx.edu/~mpj/thih/thih.pdf&quot;&gt;Typing Haskell in Haskell&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… which, as the name suggests, walks through a Haskell program to type-check Haskell code. This paper along with the preceding one helped bring type checkers “down to earth” to me by showing how there wasn’t any magic or secret sauce to implementing a type checker.&lt;/p&gt;&lt;p&gt;After that, the next thing that helped me improve my understanding was learning about &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_type_system&quot;&gt;pure type systems&lt;/a&gt;. Specifically, this paper was a very clear introduction to pure type systems:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/research/wp-content/uploads/1997/01/henk.pdf&quot;&gt;Henk: a typed intermediate language&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can think of pure type systems as sort of a “framework” for specifying type systems or talking about them. For example, the simply typed lambda calculus, System F, System FΩ, and the calculus of constructions are some example type systems that you’ll hear the literature refer to, and they’re all special cases of this general framework. You can think of pure type systems as generalizing the &lt;a href=&quot;https://en.wikipedia.org/wiki/Lambda_cube&quot;&gt;lambda cube&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;However, none of the above resources introduce how to implement a type system with “good” type inference. To elaborate on that, many simple type systems can infer the types of program outputs from program inputs, but cannot work “in reverse” and infer the types of inputs from outputs. Hindley Milner type inference is one example of a “good” type inference algorithm that can work in reverse.&lt;/p&gt;&lt;p&gt;However, I never learned Hindley Milner type inference all that well, because I skipped straight to bidirectional type checking, which is described in this paper:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.cl.cam.ac.uk/~nk480/bidir.pdf&quot;&gt;Complete and Easy Bidirectional Typechecking for Higher-Rank Polymorphism&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I prefer bidirectional type checking because (in my limited experience) it’s easier to extend the bidirectional type checking algorithm with new language features (or, at least, easier than extending Hindley Milner with the same language features).&lt;/p&gt;&lt;p&gt;The other reason I’m a fan of bidirectional type checking is that many cutting edge advances in research slot in well to a bidirectional type checker or even explicitly present their research using the framework of bidirectional type checking.&lt;/p&gt;&lt;h4 id=&quot;books&quot;&gt;Books&lt;/h4&gt;&lt;p&gt;Like I mentioned, I didn’t really learn that much from books, but here are some books that I see others commonly recommend, even if I can’t personally vouch for them:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.cis.upenn.edu/~bcpierce/tapl/&quot;&gt;Types and Programming Languages&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.cs.cmu.edu/~rwh/pfpl/&quot;&gt;Practical Foundations for Programming Languages&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;example-code&quot;&gt;Example code&lt;/h4&gt;&lt;p&gt;I also created a tutorial implementation of a functional programming language that summarizes everything I know about programming language theory so far, which is my Fall-from-Grace project:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/Gabriel439/grace&quot;&gt;GitHub - Gabriel439/grace&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This project is a clean reference implementation of how to implement an interpreted langauge using (what I believe are) best practices in the Haskell ecosystem.&lt;/p&gt;&lt;p&gt;I also have a longer post explaining the motivation behind the above project:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2021/09/fall-from-grace-ready-to-fork.html&quot;&gt;Fall-from-Grace: A ready-to-fork functional programming language&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;Note that these are not the only resources that I learned from. This post only summarizes the seminal resources that greatly enhanced my understanding of all other resources.&lt;/p&gt;&lt;p&gt;Feel free to leave a comment if you have any other resources that you’d like to suggest that you feel were helpful in this regard.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/292075298165581432/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/05/introductory-resources-to-type-theory.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/292075298165581432"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/292075298165581432"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/05/introductory-resources-to-type-theory.html" title="Introductory resources to type theory for language implementers"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-6961915750240123520</id><published>2022-03-29T07:14:00.001-07:00</published><updated>2022-03-29T07:14:24.842-07:00</updated><title type="text">Modeling PlusCal in Haskell using Cartesian products of NFAs</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Modeling PlusCal in Haskell using Cartesian products of NFAs&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;This post introduces a Haskell eDSL implementing a subset of PlusCal along with a tour of the implementation&quot; /&gt;  &lt;title&gt;Modeling PlusCal in Haskell using Cartesian products of NFAs&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/PlusCal&quot;&gt;PlusCal&lt;/a&gt; is a formal specification language created to model concurrent systems, and recently I became obsessed with implementing PlusCal as an embedded domain-specific language (eDSL) in Haskell. In other words, I want to model PlusCal processes as Haskell subroutines and also implement the model checker in Haskell.&lt;/p&gt;&lt;p&gt;I’m not done implementing this PlusCal eDSL, but I’m writing this to share what I learned in the course of doing so. Specifically, what I learned was:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You can model individual PlusCal processes as non-deterministic finite-state automata (NFAs)&lt;/p&gt;&lt;p&gt;I believe this is well-understood by users of PlusCal, but I’m mentioning this for people who are new to PlusCal.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can model concurrent processes in PlusCal by computing the Cartesian product of their NFAs&lt;/p&gt;&lt;p&gt;I’m not sure if this is widely understood or not.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Haskell’s &lt;code&gt;Applicative&lt;/code&gt; abstraction can compute Cartesian products of NFAs&lt;/p&gt;&lt;p&gt;This is the novel insight that this post contributes.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are two reasons why I’m keen on modeling PlusCal using Cartesian products of NFAs:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;We can use this trick to combine any number of PlusCal processes into a composite process&lt;/p&gt;&lt;p&gt;The behavior of this composite process is indistinguishable from the original collection of processes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;This approach simplifies the implementation of the model checker&lt;/p&gt;&lt;p&gt;The model checker now only needs to accept a single process as its input. To model check more than one process you compose them into a single process and model check the composite process.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also, it’s a theoretically elegant solution, and that’s good enough for me.&lt;/p&gt;&lt;h4 id=&quot;scope&quot;&gt;Scope&lt;/h4&gt;&lt;p&gt;Like I mentioned before, I have not fully implemented all of PlusCal, but here are the features I will explain how to implement in this post:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Concurrent processes&lt;/p&gt;&lt;p&gt;Concurrent processes in PlusCal are essentially NFAs where PlusCal labels correspond to NFA states and state transitions represent atomic process changes.&lt;/p&gt;&lt;p&gt;To be pedantic, a PlusCal process is an NFA where the transitions are not labeled (or, equivalently, there is only one input symbol).&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Labels&lt;/p&gt;&lt;p&gt;These are breakpoints within a PlusCal process where the process may be interrupted by another process. All other actions are uninterruptible, so anything that happens between two successive labels is atomic in PlusCal.&lt;/p&gt;&lt;p&gt;Note that a label in PlusCal is not the same as a label in traditional NFA terminology. PlusCal labels correspond to NFA states.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;either&lt;/code&gt; keyword&lt;/p&gt;&lt;p&gt;PlusCal lets a process non-deterministically branch using the &lt;code&gt;either&lt;/code&gt; keyword with one nested subroutine per branch. The model checker explores and verify all possible branches.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;with&lt;/code&gt; keyword&lt;/p&gt;&lt;p&gt;A process can non-deterministically choose from zero or more values. Just like with &lt;code&gt;either&lt;/code&gt; the model checker explores and verifies all possible choices.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;await&lt;/code&gt; keyword&lt;/p&gt;&lt;p&gt;A process can wait until a condition is satisfied before proceeding using the &lt;code&gt;await&lt;/code&gt; keyword.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;while&lt;/code&gt; keyword&lt;/p&gt;&lt;p&gt;A process can run in a loop until a condition is satisfied&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;skip&lt;/code&gt; keyword&lt;/p&gt;&lt;p&gt;A process can &lt;code&gt;skip&lt;/code&gt;, which does nothing.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I am not (yet) explaining how to implement the following parts of &lt;code&gt;PlusCal&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Global or process-local state&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Temporal expressions&lt;/p&gt;&lt;p&gt;Note that there is a Haskell package named &lt;a href=&quot;https://github.com/awakesecurity/spectacle&quot;&gt;&lt;code&gt;spectacle&lt;/code&gt;&lt;/a&gt; for temporal logic in Haskell that a coworker of mine published, which I might be able to use for this purpose, but I haven’t attempted to incorporate that, yet.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;print&lt;/code&gt; keyword&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;assert&lt;/code&gt; keyword&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The &lt;code&gt;goto&lt;/code&gt; keyword&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The model checker&lt;/p&gt;&lt;p&gt;We need to be able to model temporal expressions in order to implement the model checker and I haven’t yet incorporated temporal expressions into my implementation.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I believe the implementation I describe in this post can be extended with those missing features (with the exception of &lt;code&gt;goto&lt;/code&gt;) and I’ve already privately implemented some of them. However, I omit them because they would interfere with the subject of this post.&lt;/p&gt;&lt;p&gt;Also, some PlusCal features we’ll get for free by virtue of embedding PlusCal in Haskell:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;(Non-temporal) Expressions&lt;/p&gt;&lt;p&gt;We get all of TLA+’s non-temporal functionality (e.g. scalars, functions, composite data structures) for free from the Haskell language and its standard library. Plus we also access new functionality (such as algebraic data types) via Haskell.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Procedures (including the &lt;code&gt;call&lt;/code&gt; and &lt;code&gt;return&lt;/code&gt; keyword)&lt;/p&gt;&lt;p&gt;We won’t need to explicitly implement support for these keywords. We can already define and invoke procedures in Haskell using &lt;code&gt;do&lt;/code&gt; notation, which we can overload to work with PlusCal processes.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Modules&lt;/p&gt;&lt;p&gt;We can model PlusCal modules using a combination of Haskell modules and Haskell functions.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;user-experience&quot;&gt;User experience&lt;/h4&gt;&lt;p&gt;The best way to illustrate what I have in mind is through some sample working Haskell code.&lt;/p&gt;&lt;p&gt;First, I’d like to be able to translate a PlusCal process like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;begin&lt;br /&gt;A:&lt;br /&gt;  skip;&lt;br /&gt;B:&lt;br /&gt;  either&lt;br /&gt;    C:&lt;br /&gt;      skip;&lt;br /&gt;  or&lt;br /&gt;    skip;&lt;br /&gt;  end either;&lt;br /&gt;D:&lt;br /&gt;  skip;&lt;br /&gt;end process&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… into a Haskell process like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;strings ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;strings &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        [ yield &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , skip&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The type of our &lt;code&gt;strings&lt;/code&gt; process is &lt;code&gt;Coroutine String&lt;/code&gt;, meaning that it is a &lt;code&gt;Coroutine&lt;/code&gt; whose labels are &lt;code&gt;String&lt;/code&gt;s. The reason we specify the type of the labels is because the Haskell eDSL permits labels of any type and these labels might not necessarily be strings.&lt;/p&gt;&lt;p&gt;For example, suppose PlusCal permitted integers for labels, like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;begin&lt;br /&gt;0:&lt;br /&gt;  with x \in { 1, 2, 3 } do&lt;br /&gt;    await (x % 2 = 0);&lt;br /&gt;    x: (* Suppose we can even create dynamic labels from values in scope *)&lt;br /&gt;      skip;&lt;br /&gt;end process&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, the equivalent Haskell process would be:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;ints ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;ints &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; with [ &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    await (&lt;span class=&quot;fu&quot;&gt;even&lt;/span&gt; x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I mentioned in the introduction that we will be able to combine processes into a composite process, which looks like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;pairs ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;pairs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; strings&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    int    &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; ints&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (string, int)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Haskell code evaluates those three processes to canonical normal forms representing the evolution of labels for each process.&lt;/p&gt;&lt;p&gt;For example, the canonical normal form for the &lt;code&gt;strings&lt;/code&gt; process is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; [] ] , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; [] ] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… representing the following NFA with these labels and transitions:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;A → B → D&lt;br /&gt;     ↘ ↗&lt;br /&gt;      C&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In other words, this normal form data structure uses lists to model non-determinism (one list element per valid transition) and nesting to model sequential transitions.&lt;/p&gt;&lt;p&gt;Similarly, the canonical normal form for the &lt;code&gt;ints&lt;/code&gt; process is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; [] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… representing the following NFA with these labels and transitions:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;0&lt;br /&gt;↓&lt;br /&gt;2&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, the canonical normal form for the composite &lt;code&gt;pairs&lt;/code&gt; process is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-7&quot;&gt;&lt;a href=&quot;#cb10-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-8&quot;&gt;&lt;a href=&quot;#cb10-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-9&quot;&gt;&lt;a href=&quot;#cb10-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-10&quot;&gt;&lt;a href=&quot;#cb10-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-11&quot;&gt;&lt;a href=&quot;#cb10-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-12&quot;&gt;&lt;a href=&quot;#cb10-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-13&quot;&gt;&lt;a href=&quot;#cb10-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-14&quot;&gt;&lt;a href=&quot;#cb10-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-15&quot;&gt;&lt;a href=&quot;#cb10-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-16&quot;&gt;&lt;a href=&quot;#cb10-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-17&quot;&gt;&lt;a href=&quot;#cb10-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-18&quot;&gt;&lt;a href=&quot;#cb10-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-19&quot;&gt;&lt;a href=&quot;#cb10-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which is the Cartesian product of the two smaller NFAs:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;(A,0) → (B,0)   →   (D,0)&lt;br /&gt;             ↘     ↗&lt;br /&gt;              (C,0)    &lt;br /&gt;  ↓       ↓     ↓     ↓&lt;br /&gt;              (C,2)&lt;br /&gt;             ↗     ↘&lt;br /&gt;(A,2) → (B,2)   →   (D,2)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and if we convert the Haskell composite process to the equivalent PlusCal process we would get:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;begin&lt;br /&gt;  (A,0):&lt;br /&gt;    skip;&lt;br /&gt;  either&lt;br /&gt;    (B,0):&lt;br /&gt;      either&lt;br /&gt;        (C,0):&lt;br /&gt;          either&lt;br /&gt;            (D,0):&lt;br /&gt;              skip;&lt;br /&gt;            (D,2):&lt;br /&gt;              skip;&lt;br /&gt;          or&lt;br /&gt;            (C,2):&lt;br /&gt;              skip;&lt;br /&gt;            (D,2):&lt;br /&gt;              skip;&lt;br /&gt;          end either;&lt;br /&gt;      or&lt;br /&gt;        (D,0):&lt;br /&gt;          skip;&lt;br /&gt;        (D,2):&lt;br /&gt;          skip;&lt;br /&gt;      end either;&lt;br /&gt;  or&lt;br /&gt;    (A,2):&lt;br /&gt;      skip;&lt;br /&gt;    (B,2):&lt;br /&gt;      skip;&lt;br /&gt;    either&lt;br /&gt;      (C,2):&lt;br /&gt;        skip;&lt;br /&gt;      (D,2):&lt;br /&gt;        skip;&lt;br /&gt;    or&lt;br /&gt;      (D,2):&lt;br /&gt;        skip;&lt;br /&gt;    end either;&lt;br /&gt;  end either;&lt;br /&gt;end process&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This composite process is indistinguishable from the two input processes, meaning that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;This composite process is interruptible whenever one of the two original input processes is interruptible&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;This composite process performs an atomic state transition whenever one of the two input processes performs a state transition&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The current label of the composite process is a function of the current label of the two original input processes&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;the-process-type&quot;&gt;The &lt;code&gt;Process&lt;/code&gt; type&lt;/h4&gt;&lt;p&gt;Now I’ll explain how to implement this subset of PlusCal as an eDSL in Haskell.&lt;/p&gt;&lt;p&gt;First, we begin from the following two mutually-recursive types which represent NFAs where there are zero more labeled states but the transitions are unlabeled:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Step&lt;/span&gt; label result]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Step&lt;/span&gt; label result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result) &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;Process&lt;/code&gt; type handles the non-deterministic transitions for our NFA: a &lt;code&gt;Process&lt;/code&gt; stores zero or more valid state transitions (represented as a list of valid next &lt;code&gt;Step&lt;/code&gt;s).&lt;/p&gt;&lt;p&gt;The &lt;code&gt;Step&lt;/code&gt; type handles the labeled states for our NFA: a &lt;code&gt;Step&lt;/code&gt; can either &lt;code&gt;Yield&lt;/code&gt; or be &lt;code&gt;Done&lt;/code&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;A step that &lt;code&gt;Yield&lt;/code&gt;s includes the label for the current state and the remainder of the &lt;code&gt;Process&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A step that is &lt;code&gt;Done&lt;/code&gt; includes a &lt;code&gt;result&lt;/code&gt;&lt;/p&gt;&lt;p&gt;This &lt;code&gt;result&lt;/code&gt; is used to thread data bound by one step to subsequent steps. For example, this is how our previous example was able to pass the &lt;code&gt;x&lt;/code&gt; bound by &lt;code&gt;with&lt;/code&gt; to the subsequent &lt;code&gt;yield&lt;/code&gt; command:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;ints &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; with [ &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    …&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We’ll add support for rendering the data structures for debugging purposes:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DerivingStrategies         #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE GeneralizedNewtypeDeriving #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE UndecidableInstances       #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-4&quot;&gt;&lt;a href=&quot;#cb15-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-5&quot;&gt;&lt;a href=&quot;#cb15-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;GHC.Exts&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IsList&lt;/span&gt;(..))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-6&quot;&gt;&lt;a href=&quot;#cb15-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-7&quot;&gt;&lt;a href=&quot;#cb15-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Step&lt;/span&gt; label result]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-8&quot;&gt;&lt;a href=&quot;#cb15-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IsList&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-9&quot;&gt;&lt;a href=&quot;#cb15-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-10&quot;&gt;&lt;a href=&quot;#cb15-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Step&lt;/span&gt; label result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result) &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-11&quot;&gt;&lt;a href=&quot;#cb15-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; stock (&lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I make use of a small trick here where I derive &lt;code&gt;IsList&lt;/code&gt; for the &lt;code&gt;Process&lt;/code&gt; type This lets can omit the &lt;code&gt;Choice&lt;/code&gt; constructor when creating or rendering values of type &lt;code&gt;Process&lt;/code&gt;. That simplifies Haskell code like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; []) ])&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; [])&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            ])&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-8&quot;&gt;&lt;a href=&quot;#cb16-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     ])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… to this more ergonomic syntax if we enable the &lt;code&gt;OverloadedLists&lt;/code&gt; extension:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; [] ] , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; [] ] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;do-notation&quot;&gt;&lt;code&gt;do&lt;/code&gt; notation&lt;/h4&gt;&lt;p&gt;However, we don’t expect users to author these data structures by hand. Instead, we can use Haskell’s support for overloading &lt;code&gt;do&lt;/code&gt; notation so that users can author &lt;code&gt;Process&lt;/code&gt; values using subroutine-like syntax. In order to do this we need to implement the &lt;code&gt;Monad&lt;/code&gt; class for &lt;code&gt;Process&lt;/code&gt;, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE BlockArguments #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Monad&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-5&quot;&gt;&lt;a href=&quot;#cb18-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-6&quot;&gt;&lt;a href=&quot;#cb18-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ps &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-7&quot;&gt;&lt;a href=&quot;#cb18-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        p &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; ps&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-8&quot;&gt;&lt;a href=&quot;#cb18-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; p &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-9&quot;&gt;&lt;a href=&quot;#cb18-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label rest &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-10&quot;&gt;&lt;a href=&quot;#cb18-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label (rest &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; f))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-11&quot;&gt;&lt;a href=&quot;#cb18-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-12&quot;&gt;&lt;a href=&quot;#cb18-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; possibilities &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-13&quot;&gt;&lt;a href=&quot;#cb18-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                possibilities&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-14&quot;&gt;&lt;a href=&quot;#cb18-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-15&quot;&gt;&lt;a href=&quot;#cb18-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-16&quot;&gt;&lt;a href=&quot;#cb18-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-17&quot;&gt;&lt;a href=&quot;#cb18-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-18&quot;&gt;&lt;a href=&quot;#cb18-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;ap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-19&quot;&gt;&lt;a href=&quot;#cb18-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-20&quot;&gt;&lt;a href=&quot;#cb18-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Functor&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-21&quot;&gt;&lt;a href=&quot;#cb18-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;liftM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and we also need to provide the following utility function:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;yield ::&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;yield label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; ())]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Equipped with that &lt;code&gt;Monad&lt;/code&gt; instance we can now author code like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that superficially imperative code actually evaluates to a pure data structure:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; () ] ] ] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The reason that works is because any type that implements &lt;code&gt;Monad&lt;/code&gt; can be sequenced using &lt;code&gt;do&lt;/code&gt; notation, because &lt;code&gt;do&lt;/code&gt; notation is syntactic sugar for the &lt;code&gt;(&amp;gt;&amp;gt;=)&lt;/code&gt; operator we defined in our &lt;code&gt;Monad&lt;/code&gt; instance. To learn more, read:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/do_notation&quot;&gt;Haskell wikibook - &lt;code&gt;do&lt;/code&gt; notation&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We can also now implement &lt;code&gt;skip&lt;/code&gt;, which is just a synonym for &lt;code&gt;pure ()&lt;/code&gt; (i.e. “do nothing”):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb22&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb22-1&quot;&gt;&lt;a href=&quot;#cb22-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;skip ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-2&quot;&gt;&lt;a href=&quot;#cb22-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;skip &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unlike PlusCal, we don’t need to use &lt;code&gt;skip&lt;/code&gt; most of the time. In particular, we don’t need to add a skip in between two labels if nothing happens. For example, suppose we try to translate this PlusCal code:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;1:&lt;br /&gt;  skip;&lt;br /&gt;2:&lt;br /&gt;  skip;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… to Haskell:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb24&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb24-1&quot;&gt;&lt;a href=&quot;#cb24-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-2&quot;&gt;&lt;a href=&quot;#cb24-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-3&quot;&gt;&lt;a href=&quot;#cb24-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-4&quot;&gt;&lt;a href=&quot;#cb24-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    skip&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-5&quot;&gt;&lt;a href=&quot;#cb24-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-6&quot;&gt;&lt;a href=&quot;#cb24-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    skip&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We don’t actually need those &lt;code&gt;skip&lt;/code&gt;s. The following code without &lt;code&gt;skip&lt;/code&gt;s is the exact same &lt;code&gt;Process&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb25&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb25-1&quot;&gt;&lt;a href=&quot;#cb25-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-2&quot;&gt;&lt;a href=&quot;#cb25-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-3&quot;&gt;&lt;a href=&quot;#cb25-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-4&quot;&gt;&lt;a href=&quot;#cb25-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Both ways of writing the &lt;code&gt;Process&lt;/code&gt; produce the same result, which is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb26&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb26-1&quot;&gt;&lt;a href=&quot;#cb26-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; () ] ] ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, we can implement the &lt;code&gt;while&lt;/code&gt; keyword as an ordinary Haskell function:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb27&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb27-1&quot;&gt;&lt;a href=&quot;#cb27-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;while ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label () &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-2&quot;&gt;&lt;a href=&quot;#cb27-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;while condition body &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-3&quot;&gt;&lt;a href=&quot;#cb27-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    bool &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; condition&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-4&quot;&gt;&lt;a href=&quot;#cb27-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;when bool &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-5&quot;&gt;&lt;a href=&quot;#cb27-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-6&quot;&gt;&lt;a href=&quot;#cb27-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        while condition body&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In fact, there’s nothing really PlusCal-specific about this utility; this functionality already exists as &lt;code&gt;Control.Monad.Loops.whileM_&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;alternation&quot;&gt;Alternation&lt;/h4&gt;&lt;p&gt;So far we can only sequence commands, but we’d also like to be able to branch non-deterministically. Fortunately, Haskell has a standard API for doing that, too, which is the &lt;code&gt;Alternative&lt;/code&gt; class. We can implement &lt;code&gt;Alternative&lt;/code&gt; for our &lt;code&gt;Process&lt;/code&gt; type like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb28&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb28-1&quot;&gt;&lt;a href=&quot;#cb28-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Applicative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Alternative&lt;/span&gt;(..))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-2&quot;&gt;&lt;a href=&quot;#cb28-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-3&quot;&gt;&lt;a href=&quot;#cb28-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Alternative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-4&quot;&gt;&lt;a href=&quot;#cb28-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    empty &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-5&quot;&gt;&lt;a href=&quot;#cb28-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-6&quot;&gt;&lt;a href=&quot;#cb28-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; stepsL &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; stepsR &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (stepsL &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; stepsR)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We’ll also define &lt;code&gt;end&lt;/code&gt; to be a synonym for &lt;code&gt;empty&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb29&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb29-1&quot;&gt;&lt;a href=&quot;#cb29-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;end ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb29-2&quot;&gt;&lt;a href=&quot;#cb29-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;end &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; empty&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, if you &lt;code&gt;end&lt;/code&gt; a &lt;code&gt;Process&lt;/code&gt; there are no more valid transitions.&lt;/p&gt;&lt;p&gt;When we implement this &lt;code&gt;Alternative&lt;/code&gt; instance we can make use of several general-purpose utilities that work for any type that implements &lt;code&gt;Alternative&lt;/code&gt;. One such utility is &lt;a href=&quot;https://hackage.haskell.org/package/base-4.16.1.0/docs/Data-Foldable.html#v:asum&quot;&gt;&lt;code&gt;Data.Foldable.asum&lt;/code&gt;&lt;/a&gt;, which behaves exactly the same as PlusCal’s &lt;code&gt;either&lt;/code&gt; keyword:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb30&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb30-1&quot;&gt;&lt;a href=&quot;#cb30-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Prelude&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;hiding&lt;/span&gt; (either)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-2&quot;&gt;&lt;a href=&quot;#cb30-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-3&quot;&gt;&lt;a href=&quot;#cb30-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Foldable&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-4&quot;&gt;&lt;a href=&quot;#cb30-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-5&quot;&gt;&lt;a href=&quot;#cb30-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb30-6&quot;&gt;&lt;a href=&quot;#cb30-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;asum&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We could also write the implementation of &lt;code&gt;either&lt;/code&gt; by hand if we wanted to, which would be:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb31&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb31-1&quot;&gt;&lt;a href=&quot;#cb31-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt; (process &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; processes) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; process &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt; processes&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb31-2&quot;&gt;&lt;a href=&quot;#cb31-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt;            []         &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; empty&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which is exact same behavior as using &lt;code&gt;asum&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;In other words, given a list of &lt;code&gt;Process&lt;/code&gt;es, we can try all of them in parallel using &lt;code&gt;either&lt;/code&gt;. All that &lt;code&gt;either&lt;/code&gt; does is concatenate the lists of valid &lt;code&gt;Step&lt;/code&gt;s for each of the input &lt;code&gt;Process&lt;/code&gt;es.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://hackage.haskell.org/package/base-4.16.1.0/docs/Control-Monad.html#v:guard&quot;&gt;&lt;code&gt;Control.Monad.guard&lt;/code&gt;&lt;/a&gt; is another utility we get for free by virtue of implementing &lt;code&gt;Alternative&lt;/code&gt; and &lt;code&gt;guard&lt;/code&gt; behaves in the exact same way as PlusCal’s &lt;code&gt;await&lt;/code&gt; keyword:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb32&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb32-1&quot;&gt;&lt;a href=&quot;#cb32-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;await ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb32-2&quot;&gt;&lt;a href=&quot;#cb32-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;await &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;guard&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We could also write the implementation of &lt;code&gt;await&lt;/code&gt; by hand if we wanted to, which would be:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb33&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb33-1&quot;&gt;&lt;a href=&quot;#cb33-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;await &lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; skip&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb33-2&quot;&gt;&lt;a href=&quot;#cb33-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;await &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which is the same behavior as using &lt;code&gt;guard&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Finally, we can implement &lt;code&gt;with&lt;/code&gt; in terms of &lt;code&gt;either&lt;/code&gt;, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb34&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb34-1&quot;&gt;&lt;a href=&quot;#cb34-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;with ::&lt;/span&gt; [result] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb34-2&quot;&gt;&lt;a href=&quot;#cb34-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;with results &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; results)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, you can implement &lt;code&gt;with&lt;/code&gt; as if it were an &lt;code&gt;either&lt;/code&gt; statement with one branch per value that you want to bind. However, you have to promote each value to a trivial &lt;code&gt;Process&lt;/code&gt; (using &lt;code&gt;pure&lt;/code&gt;) in order to combine them using &lt;code&gt;either&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;cartesian-product-of-nfas&quot;&gt;Cartesian product of NFAs&lt;/h4&gt;&lt;p&gt;In the introduction I noted that we can model multiple processes in PlusCal by computing the Cartesian product of their NFAs. This section explains that in more detail, first as prose and then followed by Haskell code.&lt;/p&gt;&lt;p&gt;Informally, the Cartesian product of zero or more “input” NFAs creates a composite “output” NFA where:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The set of possible states for the output NFA is the Cartesian product of the set of possible states for each input NFA&lt;/p&gt;&lt;p&gt;In other words, if we have two input NFAs and the first NFA permits the following states:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb35&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb35-1&quot;&gt;&lt;a href=&quot;#cb35-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the second NFA permits the following states:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb36&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb36-1&quot;&gt;&lt;a href=&quot;#cb36-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then the Cartesian product of those two sets of states is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb37&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb37-1&quot;&gt;&lt;a href=&quot;#cb37-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ (&lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;C&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;C&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;C&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which is our composite set of possible states.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The starting state for our output NFA is the Cartesian product of the starting states for each input NFA&lt;/p&gt;&lt;p&gt;In other words, if our first NFA has a starting state of:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb38&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb38-1&quot;&gt;&lt;a href=&quot;#cb38-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and our second has a starting state of:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb39&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb39-1&quot;&gt;&lt;a href=&quot;#cb39-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then the Cartesian product of those two starting states is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb40&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb40-1&quot;&gt;&lt;a href=&quot;#cb40-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which is our composite starting state.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The set of valid transitions for any output state is the union of the set of valid transitions for the input sub-states&lt;/p&gt;&lt;p&gt;In other words, if the state &lt;code&gt;A&lt;/code&gt; can transition to either state &lt;code&gt;B&lt;/code&gt; or &lt;code&gt;C&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb41&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb41-1&quot;&gt;&lt;a href=&quot;#cb41-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;C&lt;/span&gt; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the state &lt;code&gt;0&lt;/code&gt; can transition to only state &lt;code&gt;2&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb42&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb42-1&quot;&gt;&lt;a href=&quot;#cb42-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then the state &lt;code&gt;(A,0)&lt;/code&gt; can transition to any of these states:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb43&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb43-1&quot;&gt;&lt;a href=&quot;#cb43-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ (&lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;C&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), (&lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this is because:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;If state &lt;code&gt;A&lt;/code&gt; transitions to state &lt;code&gt;B&lt;/code&gt;, then our composite state &lt;code&gt;(A,0)&lt;/code&gt; transitions to state &lt;code&gt;(B,0)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If state &lt;code&gt;A&lt;/code&gt; transitions to state &lt;code&gt;C&lt;/code&gt;, then our composite state &lt;code&gt;(B,0)&lt;/code&gt; transitions to state &lt;code&gt;(C,0)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If state &lt;code&gt;0&lt;/code&gt; transitions to state &lt;code&gt;2&lt;/code&gt;, then our composite state &lt;code&gt;(A,0)&lt;/code&gt; transitions to state &lt;code&gt;(A,2)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;applicative-as-cartesian-product&quot;&gt;&lt;code&gt;Applicative&lt;/code&gt; as Cartesian product&lt;/h4&gt;&lt;p&gt;Haskell’s standard library defines the following &lt;a href=&quot;https://hackage.haskell.org/package/base-4.16.1.0/docs/Control-Applicative.html&quot;&gt;&lt;code&gt;Applicative&lt;/code&gt; class&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb44&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb44-1&quot;&gt;&lt;a href=&quot;#cb44-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb44-2&quot;&gt;&lt;a href=&quot;#cb44-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    pure ::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb44-3&quot;&gt;&lt;a href=&quot;#cb44-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb44-4&quot;&gt;&lt;a href=&quot;#cb44-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    (&amp;lt;*&amp;gt;) ::&lt;/span&gt; f (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;…and you can think of Haskell’s &lt;code&gt;Applicative&lt;/code&gt; class as (essentially) an interface for arbitrary N-ary Cartesian products, meaning that any type that implements an &lt;code&gt;Applicative&lt;/code&gt; instance gets the following family of functions for free:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb45&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb45-1&quot;&gt;&lt;a href=&quot;#cb45-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- The 0-ary Cartesian product&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-2&quot;&gt;&lt;a href=&quot;#cb45-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;join0 ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-3&quot;&gt;&lt;a href=&quot;#cb45-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;join0 &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-4&quot;&gt;&lt;a href=&quot;#cb45-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-5&quot;&gt;&lt;a href=&quot;#cb45-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- The unary Cartesian product&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-6&quot;&gt;&lt;a href=&quot;#cb45-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;join1 ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-7&quot;&gt;&lt;a href=&quot;#cb45-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;join1 as &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; as&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-8&quot;&gt;&lt;a href=&quot;#cb45-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-9&quot;&gt;&lt;a href=&quot;#cb45-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- The binary Cartesian product&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-10&quot;&gt;&lt;a href=&quot;#cb45-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;join2 ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (a, b)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-11&quot;&gt;&lt;a href=&quot;#cb45-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;join2 as bs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (,) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; as &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; bs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-12&quot;&gt;&lt;a href=&quot;#cb45-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-13&quot;&gt;&lt;a href=&quot;#cb45-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- The trinary Cartesian product&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-14&quot;&gt;&lt;a href=&quot;#cb45-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;join3 ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f c &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (a, b, c)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-15&quot;&gt;&lt;a href=&quot;#cb45-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;join3 as bs cs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (,,) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; as &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; bs &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; cs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-16&quot;&gt;&lt;a href=&quot;#cb45-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb45-17&quot;&gt;&lt;a href=&quot;#cb45-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;…&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and so on. I deliberately implemented some of those functions in a weird way to illustrate the overall pattern.&lt;/p&gt;&lt;p&gt;This means that if we implement &lt;code&gt;Applicative&lt;/code&gt; for our NFA type then we can use that interface to create arbitrary N-ary Cartesian products of NFAs.&lt;/p&gt;&lt;h4 id=&quot;the-coroutine-type&quot;&gt;The &lt;code&gt;Coroutine&lt;/code&gt; type&lt;/h4&gt;&lt;p&gt;The &lt;code&gt;Process&lt;/code&gt; type does implement an &lt;code&gt;Applicative&lt;/code&gt; instance, but this is a different (more boring) Cartesian product and not the one we’re interested in. In fact, the &lt;code&gt;Process&lt;/code&gt; type &lt;em&gt;cannot&lt;/em&gt; implement the instance we’re interested in (the Cartesian product of NFAs), because our &lt;code&gt;Process&lt;/code&gt; type is not a complete NFA: our &lt;code&gt;Process&lt;/code&gt; type is missing a starting state.&lt;/p&gt;&lt;p&gt;This is what the following &lt;code&gt;Coroutine&lt;/code&gt; type fixes by extending our &lt;code&gt;Process&lt;/code&gt; type with an extra field for the starting state:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb46&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb46-1&quot;&gt;&lt;a href=&quot;#cb46-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Void&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb46-2&quot;&gt;&lt;a href=&quot;#cb46-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb46-3&quot;&gt;&lt;a href=&quot;#cb46-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label &lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb46-4&quot;&gt;&lt;a href=&quot;#cb46-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; stock (&lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We also constrain the &lt;code&gt;Process&lt;/code&gt; inside of a &lt;code&gt;Coroutine&lt;/code&gt; to return &lt;code&gt;Void&lt;/code&gt; (the impossible/uninhabited type). Any &lt;code&gt;Process&lt;/code&gt; that ends with no valid transitions will satisfy this type, such as a process that concludes with an &lt;code&gt;end&lt;/code&gt; or &lt;code&gt;empty&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb47&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb47-1&quot;&gt;&lt;a href=&quot;#cb47-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb47-2&quot;&gt;&lt;a href=&quot;#cb47-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb47-3&quot;&gt;&lt;a href=&quot;#cb47-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb47-4&quot;&gt;&lt;a href=&quot;#cb47-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb47-5&quot;&gt;&lt;a href=&quot;#cb47-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once we add in the starting state we can implement &lt;code&gt;Applicative&lt;/code&gt; for our &lt;code&gt;Coroutine&lt;/code&gt; type, which is essentially the same thing as implementing the Cartesian product of NFAs:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb48&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb48-1&quot;&gt;&lt;a href=&quot;#cb48-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-2&quot;&gt;&lt;a href=&quot;#cb48-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- The empty (0-ary) Cartesian product has only a single valid state, which&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-3&quot;&gt;&lt;a href=&quot;#cb48-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- is also the starting state, and no possible transitions.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-4&quot;&gt;&lt;a href=&quot;#cb48-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-5&quot;&gt;&lt;a href=&quot;#cb48-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-6&quot;&gt;&lt;a href=&quot;#cb48-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- The (sort of) binary Cartesian product …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-7&quot;&gt;&lt;a href=&quot;#cb48-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-8&quot;&gt;&lt;a href=&quot;#cb48-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;-- … of a first NFA …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-9&quot;&gt;&lt;a href=&quot;#cb48-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        f&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0F (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; fs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-10&quot;&gt;&lt;a href=&quot;#cb48-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;-- … and a second NFA …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-11&quot;&gt;&lt;a href=&quot;#cb48-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0X (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; xs)) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-12&quot;&gt;&lt;a href=&quot;#cb48-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-13&quot;&gt;&lt;a href=&quot;#cb48-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- … has a starting state which is (sort of) the product of the&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-14&quot;&gt;&lt;a href=&quot;#cb48-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- first and second starting states&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-15&quot;&gt;&lt;a href=&quot;#cb48-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (label0F label0X)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-16&quot;&gt;&lt;a href=&quot;#cb48-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- … and the set of valid transitions is the union of valid&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-17&quot;&gt;&lt;a href=&quot;#cb48-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- transitions for the first and second NFAs&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-18&quot;&gt;&lt;a href=&quot;#cb48-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptF fs &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-19&quot;&gt;&lt;a href=&quot;#cb48-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-20&quot;&gt;&lt;a href=&quot;#cb48-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- If the first NFA transitions, then we don&amp;#39;t disturb the state&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-21&quot;&gt;&lt;a href=&quot;#cb48-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- of the second NFA&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-22&quot;&gt;&lt;a href=&quot;#cb48-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptF (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-23&quot;&gt;&lt;a href=&quot;#cb48-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptF (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelF restF) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-24&quot;&gt;&lt;a href=&quot;#cb48-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-25&quot;&gt;&lt;a href=&quot;#cb48-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelF restF &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-26&quot;&gt;&lt;a href=&quot;#cb48-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-27&quot;&gt;&lt;a href=&quot;#cb48-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- If the second NFA transitions, then we don&amp;#39;t disturb the state&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-28&quot;&gt;&lt;a href=&quot;#cb48-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;co&quot;&gt;-- of the first NFA&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-29&quot;&gt;&lt;a href=&quot;#cb48-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-30&quot;&gt;&lt;a href=&quot;#cb48-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-31&quot;&gt;&lt;a href=&quot;#cb48-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb48-32&quot;&gt;&lt;a href=&quot;#cb48-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I use “sort of” in the comments to indicate that &lt;code&gt;(&amp;lt;*&amp;gt;)&lt;/code&gt; is not actually the binary Cartesian product, but it’s spiritually similar enough.&lt;/p&gt;&lt;p&gt;Moreover, we can reassure ourselves that this &lt;code&gt;Applicative&lt;/code&gt; instance is well-behaved because this instance satisfies &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Applicative_functors#Applicative_functor_laws&quot;&gt;the &lt;code&gt;Applicative&lt;/code&gt; laws&lt;/a&gt;. See &lt;a href=&quot;#appendix-d---proof-of-the-applicative-laws&quot;&gt;Appendix D&lt;/a&gt; for the proof of all four laws for the above instance.&lt;/p&gt;&lt;h3 id=&quot;applicativedo&quot;&gt;&lt;code&gt;ApplicativeDo&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;Haskell is not the only language that defines an &lt;code&gt;Applicative&lt;/code&gt; abstraction. For example, the &lt;code&gt;Cats&lt;/code&gt; package in the Scala ecosystem also defines &lt;a href=&quot;https://typelevel.org/cats/typeclasses/applicative.html&quot;&gt;an &lt;code&gt;Applicative&lt;/code&gt; abstraction&lt;/a&gt;, too.&lt;/p&gt;&lt;p&gt;However, the Haskell ecosystem has one edge over other languages (including Scala), which is language support for types that only implement &lt;code&gt;Applicative&lt;/code&gt; and not &lt;code&gt;Monad&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Specifically, Haskell has an &lt;a href=&quot;https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/applicative_do.html&quot;&gt;&lt;code&gt;ApplicativeDo&lt;/code&gt; extension&lt;/a&gt;, which we can use to combine values for any &lt;code&gt;Applicative&lt;/code&gt; type using &lt;code&gt;do&lt;/code&gt; notation. In fact, this is why the original example using &lt;code&gt;pairs&lt;/code&gt; worked, because of that extension:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb49&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb49-1&quot;&gt;&lt;a href=&quot;#cb49-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE ApplicativeDo #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb49-2&quot;&gt;&lt;a href=&quot;#cb49-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb49-3&quot;&gt;&lt;a href=&quot;#cb49-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;pairs ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb49-4&quot;&gt;&lt;a href=&quot;#cb49-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;pairs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb49-5&quot;&gt;&lt;a href=&quot;#cb49-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; strings&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb49-6&quot;&gt;&lt;a href=&quot;#cb49-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    int    &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; ints&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb49-7&quot;&gt;&lt;a href=&quot;#cb49-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (string, int)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When we enable that extension the Haskell compiler desugars that &lt;code&gt;do&lt;/code&gt; notation to something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb50&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb50-1&quot;&gt;&lt;a href=&quot;#cb50-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;pairs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; strings &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; ints&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb50-2&quot;&gt;&lt;a href=&quot;#cb50-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb50-3&quot;&gt;&lt;a href=&quot;#cb50-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    f string int &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (string, int)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and in my opinion the version using &lt;code&gt;do&lt;/code&gt; notation is more readable and ergonomic.&lt;/p&gt;&lt;p&gt;Normally &lt;code&gt;do&lt;/code&gt; notation only works on types that implement &lt;code&gt;Monad&lt;/code&gt;, but when we enable the &lt;code&gt;ApplicativeDo&lt;/code&gt; extension then a subset of &lt;code&gt;do&lt;/code&gt; notation works for types that implement &lt;code&gt;Applicative&lt;/code&gt; (which is superset of the types that implement &lt;code&gt;Monad&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;Our &lt;code&gt;Coroutine&lt;/code&gt; type is one such type that benefits from this &lt;code&gt;ApplicativeDo&lt;/code&gt; extension. The &lt;code&gt;Coroutine&lt;/code&gt; type can implement &lt;code&gt;Applicative&lt;/code&gt;, but not &lt;code&gt;Monad&lt;/code&gt;, so the only way we can use &lt;code&gt;do&lt;/code&gt; notation for &lt;code&gt;Coroutine&lt;/code&gt;s is if we enable &lt;code&gt;ApplicativeDo&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;ApplicativeDo&lt;/code&gt; extension also plays very nicely with Haskell’s support for &lt;a href=&quot;https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/record_puns.html&quot;&gt;&lt;code&gt;NamedFieldPuns&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/record_wildcards.html&quot;&gt;&lt;code&gt;RecordWildCards&lt;/code&gt;&lt;/a&gt;. For example, instead of packing the labels into a tuple we could instead slurp them into a record as fields of the same name:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb51&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb51-1&quot;&gt;&lt;a href=&quot;#cb51-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE RecordWildCards #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-2&quot;&gt;&lt;a href=&quot;#cb51-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-3&quot;&gt;&lt;a href=&quot;#cb51-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Status&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-4&quot;&gt;&lt;a href=&quot;#cb51-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    {&lt;span class=&quot;ot&quot;&gt; string ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-5&quot;&gt;&lt;a href=&quot;#cb51-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ,&lt;span class=&quot;ot&quot;&gt; int    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-6&quot;&gt;&lt;a href=&quot;#cb51-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-7&quot;&gt;&lt;a href=&quot;#cb51-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-8&quot;&gt;&lt;a href=&quot;#cb51-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;pairs ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Status&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-9&quot;&gt;&lt;a href=&quot;#cb51-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;pairs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-10&quot;&gt;&lt;a href=&quot;#cb51-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; strings&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-11&quot;&gt;&lt;a href=&quot;#cb51-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    int    &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; ints&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb51-12&quot;&gt;&lt;a href=&quot;#cb51-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Status&lt;/span&gt;{&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this scales really well to a large number of &lt;code&gt;Coroutine&lt;/code&gt;s.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;I’ve included the complete implementation from this post in &lt;a href=&quot;#appendix-a---complete-implementation&quot;&gt;Appendix A&lt;/a&gt; if you want to test this code out on your own. Once I’m done with the complete embedding of PlusCal in Haskell I’ll publish something a bit more polished.&lt;/p&gt;&lt;p&gt;If you enjoyed this post, you’ll probably also enjoy this paper:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.staff.city.ac.uk/~ross/papers/Applicative.pdf&quot;&gt;Functional Pearl - Applicative programming with effects&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… which was the original paper that introduced the &lt;code&gt;Applicative&lt;/code&gt; abstraction.&lt;/p&gt;&lt;p&gt;I also left some “bonus commentary” in &lt;a href=&quot;#appendix-b---free-monads&quot;&gt;Appendix B&lt;/a&gt; and &lt;a href=&quot;appendix-c---monoid-semigroup&quot;&gt;Appendix C&lt;/a&gt; for a few digressions that didn’t quite make the cut for the main body of this post.&lt;/p&gt;&lt;h4 id=&quot;appendix-a---complete-implementation&quot;&gt;Appendix A - Complete implementation&lt;/h4&gt;&lt;p&gt;The following module only depends on the &lt;code&gt;pretty-show&lt;/code&gt; package (and not even that if you delete the &lt;code&gt;main&lt;/code&gt; subroutine).&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb52&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb52-1&quot;&gt;&lt;a href=&quot;#cb52-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE ApplicativeDo              #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-2&quot;&gt;&lt;a href=&quot;#cb52-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE BlockArguments             #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-3&quot;&gt;&lt;a href=&quot;#cb52-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DerivingStrategies         #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-4&quot;&gt;&lt;a href=&quot;#cb52-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE GeneralizedNewtypeDeriving #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-5&quot;&gt;&lt;a href=&quot;#cb52-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE UndecidableInstances       #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-6&quot;&gt;&lt;a href=&quot;#cb52-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-7&quot;&gt;&lt;a href=&quot;#cb52-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;GHC.Exts&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IsList&lt;/span&gt;(..))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-8&quot;&gt;&lt;a href=&quot;#cb52-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Applicative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Alternative&lt;/span&gt;(..), liftA2)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-9&quot;&gt;&lt;a href=&quot;#cb52-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Void&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-10&quot;&gt;&lt;a href=&quot;#cb52-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Prelude&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;hiding&lt;/span&gt; (either)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-11&quot;&gt;&lt;a href=&quot;#cb52-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-12&quot;&gt;&lt;a href=&quot;#cb52-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Applicative&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-13&quot;&gt;&lt;a href=&quot;#cb52-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Monad&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-14&quot;&gt;&lt;a href=&quot;#cb52-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Foldable&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-15&quot;&gt;&lt;a href=&quot;#cb52-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text.Show.Pretty&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Pretty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-16&quot;&gt;&lt;a href=&quot;#cb52-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-17&quot;&gt;&lt;a href=&quot;#cb52-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Step&lt;/span&gt; label result]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-18&quot;&gt;&lt;a href=&quot;#cb52-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IsList&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-19&quot;&gt;&lt;a href=&quot;#cb52-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-20&quot;&gt;&lt;a href=&quot;#cb52-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Step&lt;/span&gt; label result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result) &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-21&quot;&gt;&lt;a href=&quot;#cb52-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; stock (&lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-22&quot;&gt;&lt;a href=&quot;#cb52-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-23&quot;&gt;&lt;a href=&quot;#cb52-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Functor&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-24&quot;&gt;&lt;a href=&quot;#cb52-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;liftM&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-25&quot;&gt;&lt;a href=&quot;#cb52-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-26&quot;&gt;&lt;a href=&quot;#cb52-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-27&quot;&gt;&lt;a href=&quot;#cb52-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-28&quot;&gt;&lt;a href=&quot;#cb52-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-29&quot;&gt;&lt;a href=&quot;#cb52-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;ap&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-30&quot;&gt;&lt;a href=&quot;#cb52-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-31&quot;&gt;&lt;a href=&quot;#cb52-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-32&quot;&gt;&lt;a href=&quot;#cb52-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ps &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-33&quot;&gt;&lt;a href=&quot;#cb52-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        p &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; ps&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-34&quot;&gt;&lt;a href=&quot;#cb52-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; p &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-35&quot;&gt;&lt;a href=&quot;#cb52-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label rest &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-36&quot;&gt;&lt;a href=&quot;#cb52-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label (rest &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; f))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-37&quot;&gt;&lt;a href=&quot;#cb52-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-38&quot;&gt;&lt;a href=&quot;#cb52-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; possibilities &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-39&quot;&gt;&lt;a href=&quot;#cb52-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                possibilities&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-40&quot;&gt;&lt;a href=&quot;#cb52-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-41&quot;&gt;&lt;a href=&quot;#cb52-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-42&quot;&gt;&lt;a href=&quot;#cb52-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; liftA2 (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-43&quot;&gt;&lt;a href=&quot;#cb52-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-44&quot;&gt;&lt;a href=&quot;#cb52-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-45&quot;&gt;&lt;a href=&quot;#cb52-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-46&quot;&gt;&lt;a href=&quot;#cb52-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-47&quot;&gt;&lt;a href=&quot;#cb52-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Alternative&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-48&quot;&gt;&lt;a href=&quot;#cb52-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    empty &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-49&quot;&gt;&lt;a href=&quot;#cb52-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-50&quot;&gt;&lt;a href=&quot;#cb52-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; stepsL &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; stepsR &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (stepsL &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; stepsR)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-51&quot;&gt;&lt;a href=&quot;#cb52-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-52&quot;&gt;&lt;a href=&quot;#cb52-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label &lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-53&quot;&gt;&lt;a href=&quot;#cb52-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; stock (&lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-54&quot;&gt;&lt;a href=&quot;#cb52-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-55&quot;&gt;&lt;a href=&quot;#cb52-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Functor&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-56&quot;&gt;&lt;a href=&quot;#cb52-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;liftA&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-57&quot;&gt;&lt;a href=&quot;#cb52-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-58&quot;&gt;&lt;a href=&quot;#cb52-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-59&quot;&gt;&lt;a href=&quot;#cb52-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-60&quot;&gt;&lt;a href=&quot;#cb52-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-61&quot;&gt;&lt;a href=&quot;#cb52-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-62&quot;&gt;&lt;a href=&quot;#cb52-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        f&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0F (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; fs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-63&quot;&gt;&lt;a href=&quot;#cb52-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0X (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; xs)) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-64&quot;&gt;&lt;a href=&quot;#cb52-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0F label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptF fs &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-65&quot;&gt;&lt;a href=&quot;#cb52-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-66&quot;&gt;&lt;a href=&quot;#cb52-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptF (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-67&quot;&gt;&lt;a href=&quot;#cb52-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptF (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelF restF) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-68&quot;&gt;&lt;a href=&quot;#cb52-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-69&quot;&gt;&lt;a href=&quot;#cb52-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelF restF &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-70&quot;&gt;&lt;a href=&quot;#cb52-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-71&quot;&gt;&lt;a href=&quot;#cb52-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-72&quot;&gt;&lt;a href=&quot;#cb52-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-73&quot;&gt;&lt;a href=&quot;#cb52-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-74&quot;&gt;&lt;a href=&quot;#cb52-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-75&quot;&gt;&lt;a href=&quot;#cb52-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-76&quot;&gt;&lt;a href=&quot;#cb52-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-77&quot;&gt;&lt;a href=&quot;#cb52-77&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; liftA2 (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-78&quot;&gt;&lt;a href=&quot;#cb52-78&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-79&quot;&gt;&lt;a href=&quot;#cb52-79&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; label) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-80&quot;&gt;&lt;a href=&quot;#cb52-80&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-81&quot;&gt;&lt;a href=&quot;#cb52-81&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-82&quot;&gt;&lt;a href=&quot;#cb52-82&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;yield ::&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-83&quot;&gt;&lt;a href=&quot;#cb52-83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;yield label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; label (&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; ())]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-84&quot;&gt;&lt;a href=&quot;#cb52-84&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-85&quot;&gt;&lt;a href=&quot;#cb52-85&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-86&quot;&gt;&lt;a href=&quot;#cb52-86&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;asum&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-87&quot;&gt;&lt;a href=&quot;#cb52-87&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-88&quot;&gt;&lt;a href=&quot;#cb52-88&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;await ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-89&quot;&gt;&lt;a href=&quot;#cb52-89&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;await &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;guard&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-90&quot;&gt;&lt;a href=&quot;#cb52-90&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-91&quot;&gt;&lt;a href=&quot;#cb52-91&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;with ::&lt;/span&gt; [result] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-92&quot;&gt;&lt;a href=&quot;#cb52-92&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;with results &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; results)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-93&quot;&gt;&lt;a href=&quot;#cb52-93&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-94&quot;&gt;&lt;a href=&quot;#cb52-94&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;end ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-95&quot;&gt;&lt;a href=&quot;#cb52-95&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;end &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-96&quot;&gt;&lt;a href=&quot;#cb52-96&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-97&quot;&gt;&lt;a href=&quot;#cb52-97&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;skip ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-98&quot;&gt;&lt;a href=&quot;#cb52-98&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;skip &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-99&quot;&gt;&lt;a href=&quot;#cb52-99&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-100&quot;&gt;&lt;a href=&quot;#cb52-100&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;strings ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-101&quot;&gt;&lt;a href=&quot;#cb52-101&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;strings &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-102&quot;&gt;&lt;a href=&quot;#cb52-102&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-103&quot;&gt;&lt;a href=&quot;#cb52-103&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;either&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-104&quot;&gt;&lt;a href=&quot;#cb52-104&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        [ yield &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-105&quot;&gt;&lt;a href=&quot;#cb52-105&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , skip&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-106&quot;&gt;&lt;a href=&quot;#cb52-106&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-107&quot;&gt;&lt;a href=&quot;#cb52-107&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-108&quot;&gt;&lt;a href=&quot;#cb52-108&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    end&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-109&quot;&gt;&lt;a href=&quot;#cb52-109&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-110&quot;&gt;&lt;a href=&quot;#cb52-110&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;ints ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-111&quot;&gt;&lt;a href=&quot;#cb52-111&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;ints &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-112&quot;&gt;&lt;a href=&quot;#cb52-112&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; with [ &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt; ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-113&quot;&gt;&lt;a href=&quot;#cb52-113&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    await (&lt;span class=&quot;fu&quot;&gt;even&lt;/span&gt; x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-114&quot;&gt;&lt;a href=&quot;#cb52-114&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    yield x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-115&quot;&gt;&lt;a href=&quot;#cb52-115&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    end&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-116&quot;&gt;&lt;a href=&quot;#cb52-116&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-117&quot;&gt;&lt;a href=&quot;#cb52-117&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;pairs ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Coroutine&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-118&quot;&gt;&lt;a href=&quot;#cb52-118&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;pairs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-119&quot;&gt;&lt;a href=&quot;#cb52-119&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; strings&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-120&quot;&gt;&lt;a href=&quot;#cb52-120&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    int    &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; ints&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-121&quot;&gt;&lt;a href=&quot;#cb52-121&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (string, int)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-122&quot;&gt;&lt;a href=&quot;#cb52-122&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-123&quot;&gt;&lt;a href=&quot;#cb52-123&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;main ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-124&quot;&gt;&lt;a href=&quot;#cb52-124&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;main &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-125&quot;&gt;&lt;a href=&quot;#cb52-125&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Pretty.pPrint strings&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-126&quot;&gt;&lt;a href=&quot;#cb52-126&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Pretty.pPrint ints&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb52-127&quot;&gt;&lt;a href=&quot;#cb52-127&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Pretty.pPrint pairs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you run that it will print:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb53&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb53-1&quot;&gt;&lt;a href=&quot;#cb53-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-2&quot;&gt;&lt;a href=&quot;#cb53-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; [] ] , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; [] ] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-3&quot;&gt;&lt;a href=&quot;#cb53-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-4&quot;&gt;&lt;a href=&quot;#cb53-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-5&quot;&gt;&lt;a href=&quot;#cb53-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  ( &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-6&quot;&gt;&lt;a href=&quot;#cb53-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-7&quot;&gt;&lt;a href=&quot;#cb53-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ( &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-8&quot;&gt;&lt;a href=&quot;#cb53-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-9&quot;&gt;&lt;a href=&quot;#cb53-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-10&quot;&gt;&lt;a href=&quot;#cb53-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-11&quot;&gt;&lt;a href=&quot;#cb53-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-12&quot;&gt;&lt;a href=&quot;#cb53-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-13&quot;&gt;&lt;a href=&quot;#cb53-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-14&quot;&gt;&lt;a href=&quot;#cb53-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-15&quot;&gt;&lt;a href=&quot;#cb53-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ( &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-16&quot;&gt;&lt;a href=&quot;#cb53-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-17&quot;&gt;&lt;a href=&quot;#cb53-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-18&quot;&gt;&lt;a href=&quot;#cb53-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-19&quot;&gt;&lt;a href=&quot;#cb53-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-20&quot;&gt;&lt;a href=&quot;#cb53-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-21&quot;&gt;&lt;a href=&quot;#cb53-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ( &lt;span class=&quot;st&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-22&quot;&gt;&lt;a href=&quot;#cb53-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-23&quot;&gt;&lt;a href=&quot;#cb53-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ( &lt;span class=&quot;st&quot;&gt;&amp;quot;B&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-24&quot;&gt;&lt;a href=&quot;#cb53-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [ &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) [] ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-25&quot;&gt;&lt;a href=&quot;#cb53-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          , &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; ( &lt;span class=&quot;st&quot;&gt;&amp;quot;D&amp;quot;&lt;/span&gt; , &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; ) []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-26&quot;&gt;&lt;a href=&quot;#cb53-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-27&quot;&gt;&lt;a href=&quot;#cb53-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb53-28&quot;&gt;&lt;a href=&quot;#cb53-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;appendix-b---free-monads&quot;&gt;Appendix B - Free Monads&lt;/h4&gt;&lt;p&gt;The implementation for &lt;code&gt;Process&lt;/code&gt; is actually a special case of a &lt;a href=&quot;https://hackage.haskell.org/package/free-5.1.7/docs/Control-Monad-Trans-Free.html&quot;&gt;free monad transformer&lt;/a&gt;, except that I’ve hand-written the types and instances so that the types are easier to inspect. However, if we really wanted to code golf all of this we could have replaced all of that code with just these three lines:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb54&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb54-1&quot;&gt;&lt;a href=&quot;#cb54-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Monad.Trans.Free&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;FreeT&lt;/span&gt;, liftF)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb54-2&quot;&gt;&lt;a href=&quot;#cb54-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb54-3&quot;&gt;&lt;a href=&quot;#cb54-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;FreeT&lt;/span&gt; ((,) label) []&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb54-4&quot;&gt;&lt;a href=&quot;#cb54-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb54-5&quot;&gt;&lt;a href=&quot;#cb54-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;yield label &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; liftF (label, ())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that would have behaved the exact same (including the same &lt;code&gt;Monad&lt;/code&gt; and &lt;code&gt;Alternative&lt;/code&gt; instances). You can read that as essentially saying: “A &lt;code&gt;Process&lt;/code&gt; is a subroutine that alternates between emitting a &lt;code&gt;label&lt;/code&gt; (i.e. &lt;code&gt;(,) label&lt;/code&gt;) and branching non-deterministically (i.e. &lt;code&gt;[]&lt;/code&gt;)”.&lt;/p&gt;&lt;h4 id=&quot;appendix-c---monoid-semigroup&quot;&gt;Appendix C - &lt;code&gt;Monoid&lt;/code&gt; / &lt;code&gt;Semigroup&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;If we want to be extra clever, we can implement &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances for &lt;code&gt;Process&lt;/code&gt; as suggested in this post:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2022/03/applicatives-should-usually-implement.html&quot;&gt;&lt;code&gt;Applicative&lt;/code&gt;s should usually implement &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… which we would do like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb55&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb55-1&quot;&gt;&lt;a href=&quot;#cb55-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Applicative&lt;/span&gt; (liftA2)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb55-2&quot;&gt;&lt;a href=&quot;#cb55-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb55-3&quot;&gt;&lt;a href=&quot;#cb55-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb55-4&quot;&gt;&lt;a href=&quot;#cb55-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; liftA2 (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb55-5&quot;&gt;&lt;a href=&quot;#cb55-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb55-6&quot;&gt;&lt;a href=&quot;#cb55-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; result &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Process&lt;/span&gt; label result) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb55-7&quot;&gt;&lt;a href=&quot;#cb55-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and then we can simplify &lt;code&gt;skip&lt;/code&gt; a tiny bit further to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb56&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb56-1&quot;&gt;&lt;a href=&quot;#cb56-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;skip &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;appendix-d---proof-of-the-applicative-laws&quot;&gt;Appendix D - Proof of the &lt;code&gt;Applicative&lt;/code&gt; laws&lt;/h4&gt;&lt;p&gt;The first &lt;code&gt;Applicative&lt;/code&gt; law requires that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb57&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb57-1&quot;&gt;&lt;a href=&quot;#cb57-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Proof:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb58&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb58-1&quot;&gt;&lt;a href=&quot;#cb58-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-2&quot;&gt;&lt;a href=&quot;#cb58-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-3&quot;&gt;&lt;a href=&quot;#cb58-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-4&quot;&gt;&lt;a href=&quot;#cb58-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-5&quot;&gt;&lt;a href=&quot;#cb58-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure label = Begin label empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-6&quot;&gt;&lt;a href=&quot;#cb58-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-7&quot;&gt;&lt;a href=&quot;#cb58-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-8&quot;&gt;&lt;a href=&quot;#cb58-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Define:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-9&quot;&gt;&lt;a href=&quot;#cb58-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-10&quot;&gt;&lt;a href=&quot;#cb58-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- v = Begin label0X (Choice xs)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-11&quot;&gt;&lt;a href=&quot;#cb58-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0X (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; xs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-12&quot;&gt;&lt;a href=&quot;#cb58-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-13&quot;&gt;&lt;a href=&quot;#cb58-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-14&quot;&gt;&lt;a href=&quot;#cb58-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptF empty &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-15&quot;&gt;&lt;a href=&quot;#cb58-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-16&quot;&gt;&lt;a href=&quot;#cb58-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptF (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-17&quot;&gt;&lt;a href=&quot;#cb58-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptF (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelF restF) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-18&quot;&gt;&lt;a href=&quot;#cb58-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-19&quot;&gt;&lt;a href=&quot;#cb58-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelF restF &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0X (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; xs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-20&quot;&gt;&lt;a href=&quot;#cb58-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-21&quot;&gt;&lt;a href=&quot;#cb58-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-22&quot;&gt;&lt;a href=&quot;#cb58-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-23&quot;&gt;&lt;a href=&quot;#cb58-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-24&quot;&gt;&lt;a href=&quot;#cb58-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-25&quot;&gt;&lt;a href=&quot;#cb58-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-26&quot;&gt;&lt;a href=&quot;#cb58-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f empty = empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-27&quot;&gt;&lt;a href=&quot;#cb58-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (empty &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-28&quot;&gt;&lt;a href=&quot;#cb58-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-29&quot;&gt;&lt;a href=&quot;#cb58-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-30&quot;&gt;&lt;a href=&quot;#cb58-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-31&quot;&gt;&lt;a href=&quot;#cb58-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-32&quot;&gt;&lt;a href=&quot;#cb58-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-33&quot;&gt;&lt;a href=&quot;#cb58-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-34&quot;&gt;&lt;a href=&quot;#cb58-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- empty &amp;lt;|&amp;gt; xs = xs&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-35&quot;&gt;&lt;a href=&quot;#cb58-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-36&quot;&gt;&lt;a href=&quot;#cb58-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-37&quot;&gt;&lt;a href=&quot;#cb58-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-38&quot;&gt;&lt;a href=&quot;#cb58-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-39&quot;&gt;&lt;a href=&quot;#cb58-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-40&quot;&gt;&lt;a href=&quot;#cb58-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-41&quot;&gt;&lt;a href=&quot;#cb58-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-42&quot;&gt;&lt;a href=&quot;#cb58-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-43&quot;&gt;&lt;a href=&quot;#cb58-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-44&quot;&gt;&lt;a href=&quot;#cb58-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure label = Begin label empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-45&quot;&gt;&lt;a href=&quot;#cb58-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-46&quot;&gt;&lt;a href=&quot;#cb58-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-47&quot;&gt;&lt;a href=&quot;#cb58-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-48&quot;&gt;&lt;a href=&quot;#cb58-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-49&quot;&gt;&lt;a href=&quot;#cb58-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-50&quot;&gt;&lt;a href=&quot;#cb58-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-51&quot;&gt;&lt;a href=&quot;#cb58-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-52&quot;&gt;&lt;a href=&quot;#cb58-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Induction: pure id &amp;lt;*&amp;gt; v = v&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-53&quot;&gt;&lt;a href=&quot;#cb58-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-54&quot;&gt;&lt;a href=&quot;#cb58-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-55&quot;&gt;&lt;a href=&quot;#cb58-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-56&quot;&gt;&lt;a href=&quot;#cb58-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-57&quot;&gt;&lt;a href=&quot;#cb58-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-58&quot;&gt;&lt;a href=&quot;#cb58-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-59&quot;&gt;&lt;a href=&quot;#cb58-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-60&quot;&gt;&lt;a href=&quot;#cb58-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-61&quot;&gt;&lt;a href=&quot;#cb58-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-62&quot;&gt;&lt;a href=&quot;#cb58-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-63&quot;&gt;&lt;a href=&quot;#cb58-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-64&quot;&gt;&lt;a href=&quot;#cb58-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-65&quot;&gt;&lt;a href=&quot;#cb58-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-66&quot;&gt;&lt;a href=&quot;#cb58-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Simplify&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-67&quot;&gt;&lt;a href=&quot;#cb58-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-68&quot;&gt;&lt;a href=&quot;#cb58-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-69&quot;&gt;&lt;a href=&quot;#cb58-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-70&quot;&gt;&lt;a href=&quot;#cb58-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-71&quot;&gt;&lt;a href=&quot;#cb58-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Functor identity law:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-72&quot;&gt;&lt;a href=&quot;#cb58-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-73&quot;&gt;&lt;a href=&quot;#cb58-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap id = id&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-74&quot;&gt;&lt;a href=&quot;#cb58-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; label0X) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; xs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-75&quot;&gt;&lt;a href=&quot;#cb58-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-76&quot;&gt;&lt;a href=&quot;#cb58-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `id`:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-77&quot;&gt;&lt;a href=&quot;#cb58-77&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-78&quot;&gt;&lt;a href=&quot;#cb58-78&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- id x = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-79&quot;&gt;&lt;a href=&quot;#cb58-79&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0X (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; xs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-80&quot;&gt;&lt;a href=&quot;#cb58-80&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-81&quot;&gt;&lt;a href=&quot;#cb58-81&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `v`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-82&quot;&gt;&lt;a href=&quot;#cb58-82&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-83&quot;&gt;&lt;a href=&quot;#cb58-83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- v = Begin label0X (Choice xs)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb58-84&quot;&gt;&lt;a href=&quot;#cb58-84&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second &lt;code&gt;Applicative&lt;/code&gt; law requires that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb59&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb59-1&quot;&gt;&lt;a href=&quot;#cb59-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; w &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (v &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; w)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Proof:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb60&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb60-1&quot;&gt;&lt;a href=&quot;#cb60-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; v &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; w&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-2&quot;&gt;&lt;a href=&quot;#cb60-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-3&quot;&gt;&lt;a href=&quot;#cb60-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Define:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-4&quot;&gt;&lt;a href=&quot;#cb60-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-5&quot;&gt;&lt;a href=&quot;#cb60-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- u = Begin label0U (Choice us)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-6&quot;&gt;&lt;a href=&quot;#cb60-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- v = Begin label0V (Choice vs)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-7&quot;&gt;&lt;a href=&quot;#cb60-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- w = Begin label0W (Choice ws)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-8&quot;&gt;&lt;a href=&quot;#cb60-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-9&quot;&gt;&lt;a href=&quot;#cb60-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-10&quot;&gt;&lt;a href=&quot;#cb60-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-11&quot;&gt;&lt;a href=&quot;#cb60-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-12&quot;&gt;&lt;a href=&quot;#cb60-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-13&quot;&gt;&lt;a href=&quot;#cb60-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-14&quot;&gt;&lt;a href=&quot;#cb60-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-15&quot;&gt;&lt;a href=&quot;#cb60-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-16&quot;&gt;&lt;a href=&quot;#cb60-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-17&quot;&gt;&lt;a href=&quot;#cb60-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-18&quot;&gt;&lt;a href=&quot;#cb60-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-19&quot;&gt;&lt;a href=&quot;#cb60-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-20&quot;&gt;&lt;a href=&quot;#cb60-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; ((&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) label0U) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptF empty &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-21&quot;&gt;&lt;a href=&quot;#cb60-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-22&quot;&gt;&lt;a href=&quot;#cb60-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-23&quot;&gt;&lt;a href=&quot;#cb60-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-24&quot;&gt;&lt;a href=&quot;#cb60-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptF (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-25&quot;&gt;&lt;a href=&quot;#cb60-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptF (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelF restF) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-26&quot;&gt;&lt;a href=&quot;#cb60-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-27&quot;&gt;&lt;a href=&quot;#cb60-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelF restF &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-28&quot;&gt;&lt;a href=&quot;#cb60-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-29&quot;&gt;&lt;a href=&quot;#cb60-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-30&quot;&gt;&lt;a href=&quot;#cb60-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-31&quot;&gt;&lt;a href=&quot;#cb60-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-32&quot;&gt;&lt;a href=&quot;#cb60-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-33&quot;&gt;&lt;a href=&quot;#cb60-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-34&quot;&gt;&lt;a href=&quot;#cb60-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f empty = empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-35&quot;&gt;&lt;a href=&quot;#cb60-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; ((&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) label0U) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-36&quot;&gt;&lt;a href=&quot;#cb60-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-37&quot;&gt;&lt;a href=&quot;#cb60-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-38&quot;&gt;&lt;a href=&quot;#cb60-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-39&quot;&gt;&lt;a href=&quot;#cb60-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-40&quot;&gt;&lt;a href=&quot;#cb60-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-41&quot;&gt;&lt;a href=&quot;#cb60-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-42&quot;&gt;&lt;a href=&quot;#cb60-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-43&quot;&gt;&lt;a href=&quot;#cb60-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-44&quot;&gt;&lt;a href=&quot;#cb60-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-45&quot;&gt;&lt;a href=&quot;#cb60-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; label0V)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-46&quot;&gt;&lt;a href=&quot;#cb60-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptFU (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us) &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-47&quot;&gt;&lt;a href=&quot;#cb60-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-48&quot;&gt;&lt;a href=&quot;#cb60-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-49&quot;&gt;&lt;a href=&quot;#cb60-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-50&quot;&gt;&lt;a href=&quot;#cb60-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-51&quot;&gt;&lt;a href=&quot;#cb60-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-52&quot;&gt;&lt;a href=&quot;#cb60-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-53&quot;&gt;&lt;a href=&quot;#cb60-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-54&quot;&gt;&lt;a href=&quot;#cb60-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-55&quot;&gt;&lt;a href=&quot;#cb60-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-56&quot;&gt;&lt;a href=&quot;#cb60-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-57&quot;&gt;&lt;a href=&quot;#cb60-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-58&quot;&gt;&lt;a href=&quot;#cb60-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-59&quot;&gt;&lt;a href=&quot;#cb60-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-60&quot;&gt;&lt;a href=&quot;#cb60-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-61&quot;&gt;&lt;a href=&quot;#cb60-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-62&quot;&gt;&lt;a href=&quot;#cb60-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-63&quot;&gt;&lt;a href=&quot;#cb60-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-64&quot;&gt;&lt;a href=&quot;#cb60-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; ((&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) label0U) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-65&quot;&gt;&lt;a href=&quot;#cb60-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-66&quot;&gt;&lt;a href=&quot;#cb60-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-67&quot;&gt;&lt;a href=&quot;#cb60-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-68&quot;&gt;&lt;a href=&quot;#cb60-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; label0V)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-69&quot;&gt;&lt;a href=&quot;#cb60-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptFU (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us) &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-70&quot;&gt;&lt;a href=&quot;#cb60-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-71&quot;&gt;&lt;a href=&quot;#cb60-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-72&quot;&gt;&lt;a href=&quot;#cb60-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-73&quot;&gt;&lt;a href=&quot;#cb60-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-74&quot;&gt;&lt;a href=&quot;#cb60-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-75&quot;&gt;&lt;a href=&quot;#cb60-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-76&quot;&gt;&lt;a href=&quot;#cb60-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-77&quot;&gt;&lt;a href=&quot;#cb60-77&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-78&quot;&gt;&lt;a href=&quot;#cb60-78&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-79&quot;&gt;&lt;a href=&quot;#cb60-79&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-80&quot;&gt;&lt;a href=&quot;#cb60-80&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-81&quot;&gt;&lt;a href=&quot;#cb60-81&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-82&quot;&gt;&lt;a href=&quot;#cb60-82&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-83&quot;&gt;&lt;a href=&quot;#cb60-83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-84&quot;&gt;&lt;a href=&quot;#cb60-84&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-85&quot;&gt;&lt;a href=&quot;#cb60-85&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-86&quot;&gt;&lt;a href=&quot;#cb60-86&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-87&quot;&gt;&lt;a href=&quot;#cb60-87&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-88&quot;&gt;&lt;a href=&quot;#cb60-88&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-89&quot;&gt;&lt;a href=&quot;#cb60-89&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-90&quot;&gt;&lt;a href=&quot;#cb60-90&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-91&quot;&gt;&lt;a href=&quot;#cb60-91&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (fmap g x) = fmap (f . g) x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-92&quot;&gt;&lt;a href=&quot;#cb60-92&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; label0V)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-93&quot;&gt;&lt;a href=&quot;#cb60-93&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (adaptFU &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; adaptU) us &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-94&quot;&gt;&lt;a href=&quot;#cb60-94&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-95&quot;&gt;&lt;a href=&quot;#cb60-95&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-96&quot;&gt;&lt;a href=&quot;#cb60-96&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-97&quot;&gt;&lt;a href=&quot;#cb60-97&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-98&quot;&gt;&lt;a href=&quot;#cb60-98&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-99&quot;&gt;&lt;a href=&quot;#cb60-99&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-100&quot;&gt;&lt;a href=&quot;#cb60-100&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-101&quot;&gt;&lt;a href=&quot;#cb60-101&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-102&quot;&gt;&lt;a href=&quot;#cb60-102&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFU restFU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-103&quot;&gt;&lt;a href=&quot;#cb60-103&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-104&quot;&gt;&lt;a href=&quot;#cb60-104&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-105&quot;&gt;&lt;a href=&quot;#cb60-105&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFU restFU &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-106&quot;&gt;&lt;a href=&quot;#cb60-106&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-107&quot;&gt;&lt;a href=&quot;#cb60-107&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-108&quot;&gt;&lt;a href=&quot;#cb60-108&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-109&quot;&gt;&lt;a href=&quot;#cb60-109&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-110&quot;&gt;&lt;a href=&quot;#cb60-110&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-111&quot;&gt;&lt;a href=&quot;#cb60-111&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-112&quot;&gt;&lt;a href=&quot;#cb60-112&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-113&quot;&gt;&lt;a href=&quot;#cb60-113&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-114&quot;&gt;&lt;a href=&quot;#cb60-114&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-115&quot;&gt;&lt;a href=&quot;#cb60-115&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Consolidate (adaptFU . adaptU)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-116&quot;&gt;&lt;a href=&quot;#cb60-116&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; label0V) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-117&quot;&gt;&lt;a href=&quot;#cb60-117&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-118&quot;&gt;&lt;a href=&quot;#cb60-118&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-119&quot;&gt;&lt;a href=&quot;#cb60-119&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-120&quot;&gt;&lt;a href=&quot;#cb60-120&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-121&quot;&gt;&lt;a href=&quot;#cb60-121&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-122&quot;&gt;&lt;a href=&quot;#cb60-122&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-123&quot;&gt;&lt;a href=&quot;#cb60-123&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-124&quot;&gt;&lt;a href=&quot;#cb60-124&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-125&quot;&gt;&lt;a href=&quot;#cb60-125&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-126&quot;&gt;&lt;a href=&quot;#cb60-126&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-127&quot;&gt;&lt;a href=&quot;#cb60-127&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-128&quot;&gt;&lt;a href=&quot;#cb60-128&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-129&quot;&gt;&lt;a href=&quot;#cb60-129&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-130&quot;&gt;&lt;a href=&quot;#cb60-130&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-131&quot;&gt;&lt;a href=&quot;#cb60-131&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-132&quot;&gt;&lt;a href=&quot;#cb60-132&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-133&quot;&gt;&lt;a href=&quot;#cb60-133&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-134&quot;&gt;&lt;a href=&quot;#cb60-134&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-135&quot;&gt;&lt;a href=&quot;#cb60-135&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-136&quot;&gt;&lt;a href=&quot;#cb60-136&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-137&quot;&gt;&lt;a href=&quot;#cb60-137&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-138&quot;&gt;&lt;a href=&quot;#cb60-138&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptFUV (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-139&quot;&gt;&lt;a href=&quot;#cb60-139&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-140&quot;&gt;&lt;a href=&quot;#cb60-140&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-141&quot;&gt;&lt;a href=&quot;#cb60-141&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-142&quot;&gt;&lt;a href=&quot;#cb60-142&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-143&quot;&gt;&lt;a href=&quot;#cb60-143&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-144&quot;&gt;&lt;a href=&quot;#cb60-144&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-145&quot;&gt;&lt;a href=&quot;#cb60-145&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-146&quot;&gt;&lt;a href=&quot;#cb60-146&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-147&quot;&gt;&lt;a href=&quot;#cb60-147&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-148&quot;&gt;&lt;a href=&quot;#cb60-148&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-149&quot;&gt;&lt;a href=&quot;#cb60-149&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-150&quot;&gt;&lt;a href=&quot;#cb60-150&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-151&quot;&gt;&lt;a href=&quot;#cb60-151&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-152&quot;&gt;&lt;a href=&quot;#cb60-152&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-153&quot;&gt;&lt;a href=&quot;#cb60-153&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-154&quot;&gt;&lt;a href=&quot;#cb60-154&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-155&quot;&gt;&lt;a href=&quot;#cb60-155&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-156&quot;&gt;&lt;a href=&quot;#cb60-156&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-157&quot;&gt;&lt;a href=&quot;#cb60-157&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-158&quot;&gt;&lt;a href=&quot;#cb60-158&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-159&quot;&gt;&lt;a href=&quot;#cb60-159&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-160&quot;&gt;&lt;a href=&quot;#cb60-160&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-161&quot;&gt;&lt;a href=&quot;#cb60-161&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-162&quot;&gt;&lt;a href=&quot;#cb60-162&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-163&quot;&gt;&lt;a href=&quot;#cb60-163&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-164&quot;&gt;&lt;a href=&quot;#cb60-164&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-165&quot;&gt;&lt;a href=&quot;#cb60-165&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-166&quot;&gt;&lt;a href=&quot;#cb60-166&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-167&quot;&gt;&lt;a href=&quot;#cb60-167&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-168&quot;&gt;&lt;a href=&quot;#cb60-168&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-169&quot;&gt;&lt;a href=&quot;#cb60-169&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-170&quot;&gt;&lt;a href=&quot;#cb60-170&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; label0V)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-171&quot;&gt;&lt;a href=&quot;#cb60-171&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-172&quot;&gt;&lt;a href=&quot;#cb60-172&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-173&quot;&gt;&lt;a href=&quot;#cb60-173&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-174&quot;&gt;&lt;a href=&quot;#cb60-174&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-175&quot;&gt;&lt;a href=&quot;#cb60-175&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-176&quot;&gt;&lt;a href=&quot;#cb60-176&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-177&quot;&gt;&lt;a href=&quot;#cb60-177&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptFUV (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-178&quot;&gt;&lt;a href=&quot;#cb60-178&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-179&quot;&gt;&lt;a href=&quot;#cb60-179&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-180&quot;&gt;&lt;a href=&quot;#cb60-180&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-181&quot;&gt;&lt;a href=&quot;#cb60-181&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-182&quot;&gt;&lt;a href=&quot;#cb60-182&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-183&quot;&gt;&lt;a href=&quot;#cb60-183&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-184&quot;&gt;&lt;a href=&quot;#cb60-184&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-185&quot;&gt;&lt;a href=&quot;#cb60-185&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-186&quot;&gt;&lt;a href=&quot;#cb60-186&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-187&quot;&gt;&lt;a href=&quot;#cb60-187&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-188&quot;&gt;&lt;a href=&quot;#cb60-188&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-189&quot;&gt;&lt;a href=&quot;#cb60-189&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-190&quot;&gt;&lt;a href=&quot;#cb60-190&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-191&quot;&gt;&lt;a href=&quot;#cb60-191&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-192&quot;&gt;&lt;a href=&quot;#cb60-192&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-193&quot;&gt;&lt;a href=&quot;#cb60-193&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-194&quot;&gt;&lt;a href=&quot;#cb60-194&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-195&quot;&gt;&lt;a href=&quot;#cb60-195&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-196&quot;&gt;&lt;a href=&quot;#cb60-196&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-197&quot;&gt;&lt;a href=&quot;#cb60-197&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-198&quot;&gt;&lt;a href=&quot;#cb60-198&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-199&quot;&gt;&lt;a href=&quot;#cb60-199&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-200&quot;&gt;&lt;a href=&quot;#cb60-200&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-201&quot;&gt;&lt;a href=&quot;#cb60-201&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-202&quot;&gt;&lt;a href=&quot;#cb60-202&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-203&quot;&gt;&lt;a href=&quot;#cb60-203&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-204&quot;&gt;&lt;a href=&quot;#cb60-204&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-205&quot;&gt;&lt;a href=&quot;#cb60-205&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-206&quot;&gt;&lt;a href=&quot;#cb60-206&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-207&quot;&gt;&lt;a href=&quot;#cb60-207&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-208&quot;&gt;&lt;a href=&quot;#cb60-208&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-209&quot;&gt;&lt;a href=&quot;#cb60-209&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-210&quot;&gt;&lt;a href=&quot;#cb60-210&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-211&quot;&gt;&lt;a href=&quot;#cb60-211&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-212&quot;&gt;&lt;a href=&quot;#cb60-212&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-213&quot;&gt;&lt;a href=&quot;#cb60-213&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-214&quot;&gt;&lt;a href=&quot;#cb60-214&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (x &amp;lt;|&amp;gt; y) = fmap f x &amp;lt;|&amp;gt; fmap f y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-215&quot;&gt;&lt;a href=&quot;#cb60-215&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-216&quot;&gt;&lt;a href=&quot;#cb60-216&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-217&quot;&gt;&lt;a href=&quot;#cb60-217&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptFUV (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-218&quot;&gt;&lt;a href=&quot;#cb60-218&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptFUV (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-219&quot;&gt;&lt;a href=&quot;#cb60-219&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-220&quot;&gt;&lt;a href=&quot;#cb60-220&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-221&quot;&gt;&lt;a href=&quot;#cb60-221&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-222&quot;&gt;&lt;a href=&quot;#cb60-222&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-223&quot;&gt;&lt;a href=&quot;#cb60-223&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-224&quot;&gt;&lt;a href=&quot;#cb60-224&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-225&quot;&gt;&lt;a href=&quot;#cb60-225&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-226&quot;&gt;&lt;a href=&quot;#cb60-226&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-227&quot;&gt;&lt;a href=&quot;#cb60-227&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-228&quot;&gt;&lt;a href=&quot;#cb60-228&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-229&quot;&gt;&lt;a href=&quot;#cb60-229&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-230&quot;&gt;&lt;a href=&quot;#cb60-230&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-231&quot;&gt;&lt;a href=&quot;#cb60-231&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-232&quot;&gt;&lt;a href=&quot;#cb60-232&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-233&quot;&gt;&lt;a href=&quot;#cb60-233&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-234&quot;&gt;&lt;a href=&quot;#cb60-234&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-235&quot;&gt;&lt;a href=&quot;#cb60-235&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-236&quot;&gt;&lt;a href=&quot;#cb60-236&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-237&quot;&gt;&lt;a href=&quot;#cb60-237&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-238&quot;&gt;&lt;a href=&quot;#cb60-238&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-239&quot;&gt;&lt;a href=&quot;#cb60-239&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-240&quot;&gt;&lt;a href=&quot;#cb60-240&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-241&quot;&gt;&lt;a href=&quot;#cb60-241&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-242&quot;&gt;&lt;a href=&quot;#cb60-242&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-243&quot;&gt;&lt;a href=&quot;#cb60-243&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-244&quot;&gt;&lt;a href=&quot;#cb60-244&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-245&quot;&gt;&lt;a href=&quot;#cb60-245&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-246&quot;&gt;&lt;a href=&quot;#cb60-246&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-247&quot;&gt;&lt;a href=&quot;#cb60-247&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-248&quot;&gt;&lt;a href=&quot;#cb60-248&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-249&quot;&gt;&lt;a href=&quot;#cb60-249&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-250&quot;&gt;&lt;a href=&quot;#cb60-250&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-251&quot;&gt;&lt;a href=&quot;#cb60-251&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-252&quot;&gt;&lt;a href=&quot;#cb60-252&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-253&quot;&gt;&lt;a href=&quot;#cb60-253&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-254&quot;&gt;&lt;a href=&quot;#cb60-254&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-255&quot;&gt;&lt;a href=&quot;#cb60-255&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (fmap g x) = fmap (f . g) x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-256&quot;&gt;&lt;a href=&quot;#cb60-256&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-257&quot;&gt;&lt;a href=&quot;#cb60-257&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-258&quot;&gt;&lt;a href=&quot;#cb60-258&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (adaptFUV &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; adaptU) us&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-259&quot;&gt;&lt;a href=&quot;#cb60-259&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (adaptFUV &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; adaptV) vs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-260&quot;&gt;&lt;a href=&quot;#cb60-260&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-261&quot;&gt;&lt;a href=&quot;#cb60-261&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-262&quot;&gt;&lt;a href=&quot;#cb60-262&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-263&quot;&gt;&lt;a href=&quot;#cb60-263&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-264&quot;&gt;&lt;a href=&quot;#cb60-264&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-265&quot;&gt;&lt;a href=&quot;#cb60-265&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-266&quot;&gt;&lt;a href=&quot;#cb60-266&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-267&quot;&gt;&lt;a href=&quot;#cb60-267&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-268&quot;&gt;&lt;a href=&quot;#cb60-268&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-269&quot;&gt;&lt;a href=&quot;#cb60-269&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-270&quot;&gt;&lt;a href=&quot;#cb60-270&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-271&quot;&gt;&lt;a href=&quot;#cb60-271&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-272&quot;&gt;&lt;a href=&quot;#cb60-272&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-273&quot;&gt;&lt;a href=&quot;#cb60-273&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-274&quot;&gt;&lt;a href=&quot;#cb60-274&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-275&quot;&gt;&lt;a href=&quot;#cb60-275&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-276&quot;&gt;&lt;a href=&quot;#cb60-276&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-277&quot;&gt;&lt;a href=&quot;#cb60-277&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-278&quot;&gt;&lt;a href=&quot;#cb60-278&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-279&quot;&gt;&lt;a href=&quot;#cb60-279&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-280&quot;&gt;&lt;a href=&quot;#cb60-280&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-281&quot;&gt;&lt;a href=&quot;#cb60-281&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptFUV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-282&quot;&gt;&lt;a href=&quot;#cb60-282&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-283&quot;&gt;&lt;a href=&quot;#cb60-283&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-284&quot;&gt;&lt;a href=&quot;#cb60-284&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-285&quot;&gt;&lt;a href=&quot;#cb60-285&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-286&quot;&gt;&lt;a href=&quot;#cb60-286&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-287&quot;&gt;&lt;a href=&quot;#cb60-287&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-288&quot;&gt;&lt;a href=&quot;#cb60-288&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-289&quot;&gt;&lt;a href=&quot;#cb60-289&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-290&quot;&gt;&lt;a href=&quot;#cb60-290&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-291&quot;&gt;&lt;a href=&quot;#cb60-291&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-292&quot;&gt;&lt;a href=&quot;#cb60-292&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-293&quot;&gt;&lt;a href=&quot;#cb60-293&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-294&quot;&gt;&lt;a href=&quot;#cb60-294&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-295&quot;&gt;&lt;a href=&quot;#cb60-295&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-296&quot;&gt;&lt;a href=&quot;#cb60-296&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Consolidate (adaptFUV . adaptU) and (adaptFUV . adaptV)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-297&quot;&gt;&lt;a href=&quot;#cb60-297&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-298&quot;&gt;&lt;a href=&quot;#cb60-298&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-299&quot;&gt;&lt;a href=&quot;#cb60-299&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-300&quot;&gt;&lt;a href=&quot;#cb60-300&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-301&quot;&gt;&lt;a href=&quot;#cb60-301&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-302&quot;&gt;&lt;a href=&quot;#cb60-302&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-303&quot;&gt;&lt;a href=&quot;#cb60-303&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-304&quot;&gt;&lt;a href=&quot;#cb60-304&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-305&quot;&gt;&lt;a href=&quot;#cb60-305&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-306&quot;&gt;&lt;a href=&quot;#cb60-306&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-307&quot;&gt;&lt;a href=&quot;#cb60-307&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-308&quot;&gt;&lt;a href=&quot;#cb60-308&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-309&quot;&gt;&lt;a href=&quot;#cb60-309&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-310&quot;&gt;&lt;a href=&quot;#cb60-310&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-311&quot;&gt;&lt;a href=&quot;#cb60-311&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-312&quot;&gt;&lt;a href=&quot;#cb60-312&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-313&quot;&gt;&lt;a href=&quot;#cb60-313&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-314&quot;&gt;&lt;a href=&quot;#cb60-314&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-315&quot;&gt;&lt;a href=&quot;#cb60-315&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-316&quot;&gt;&lt;a href=&quot;#cb60-316&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-317&quot;&gt;&lt;a href=&quot;#cb60-317&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-318&quot;&gt;&lt;a href=&quot;#cb60-318&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-319&quot;&gt;&lt;a href=&quot;#cb60-319&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-320&quot;&gt;&lt;a href=&quot;#cb60-320&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-321&quot;&gt;&lt;a href=&quot;#cb60-321&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-322&quot;&gt;&lt;a href=&quot;#cb60-322&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-323&quot;&gt;&lt;a href=&quot;#cb60-323&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-324&quot;&gt;&lt;a href=&quot;#cb60-324&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-325&quot;&gt;&lt;a href=&quot;#cb60-325&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-326&quot;&gt;&lt;a href=&quot;#cb60-326&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-327&quot;&gt;&lt;a href=&quot;#cb60-327&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-328&quot;&gt;&lt;a href=&quot;#cb60-328&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-329&quot;&gt;&lt;a href=&quot;#cb60-329&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-330&quot;&gt;&lt;a href=&quot;#cb60-330&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-331&quot;&gt;&lt;a href=&quot;#cb60-331&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-332&quot;&gt;&lt;a href=&quot;#cb60-332&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-333&quot;&gt;&lt;a href=&quot;#cb60-333&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-334&quot;&gt;&lt;a href=&quot;#cb60-334&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure label = Begin label empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-335&quot;&gt;&lt;a href=&quot;#cb60-335&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-336&quot;&gt;&lt;a href=&quot;#cb60-336&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-337&quot;&gt;&lt;a href=&quot;#cb60-337&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-338&quot;&gt;&lt;a href=&quot;#cb60-338&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-339&quot;&gt;&lt;a href=&quot;#cb60-339&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-340&quot;&gt;&lt;a href=&quot;#cb60-340&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-341&quot;&gt;&lt;a href=&quot;#cb60-341&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-342&quot;&gt;&lt;a href=&quot;#cb60-342&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-343&quot;&gt;&lt;a href=&quot;#cb60-343&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-344&quot;&gt;&lt;a href=&quot;#cb60-344&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-345&quot;&gt;&lt;a href=&quot;#cb60-345&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-346&quot;&gt;&lt;a href=&quot;#cb60-346&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-347&quot;&gt;&lt;a href=&quot;#cb60-347&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-348&quot;&gt;&lt;a href=&quot;#cb60-348&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-349&quot;&gt;&lt;a href=&quot;#cb60-349&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-350&quot;&gt;&lt;a href=&quot;#cb60-350&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-351&quot;&gt;&lt;a href=&quot;#cb60-351&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-352&quot;&gt;&lt;a href=&quot;#cb60-352&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-353&quot;&gt;&lt;a href=&quot;#cb60-353&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-354&quot;&gt;&lt;a href=&quot;#cb60-354&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-355&quot;&gt;&lt;a href=&quot;#cb60-355&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-356&quot;&gt;&lt;a href=&quot;#cb60-356&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-357&quot;&gt;&lt;a href=&quot;#cb60-357&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-358&quot;&gt;&lt;a href=&quot;#cb60-358&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-359&quot;&gt;&lt;a href=&quot;#cb60-359&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-360&quot;&gt;&lt;a href=&quot;#cb60-360&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-361&quot;&gt;&lt;a href=&quot;#cb60-361&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-362&quot;&gt;&lt;a href=&quot;#cb60-362&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-363&quot;&gt;&lt;a href=&quot;#cb60-363&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-364&quot;&gt;&lt;a href=&quot;#cb60-364&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-365&quot;&gt;&lt;a href=&quot;#cb60-365&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-366&quot;&gt;&lt;a href=&quot;#cb60-366&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-367&quot;&gt;&lt;a href=&quot;#cb60-367&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-368&quot;&gt;&lt;a href=&quot;#cb60-368&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-369&quot;&gt;&lt;a href=&quot;#cb60-369&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-370&quot;&gt;&lt;a href=&quot;#cb60-370&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Induction: pure (.) &amp;lt;*&amp;gt; u &amp;lt;*&amp;gt; v &amp;lt;*&amp;gt; w = u &amp;lt;*&amp;gt; (v &amp;lt;*&amp;gt; w)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-371&quot;&gt;&lt;a href=&quot;#cb60-371&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-372&quot;&gt;&lt;a href=&quot;#cb60-372&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-373&quot;&gt;&lt;a href=&quot;#cb60-373&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-374&quot;&gt;&lt;a href=&quot;#cb60-374&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-375&quot;&gt;&lt;a href=&quot;#cb60-375&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-376&quot;&gt;&lt;a href=&quot;#cb60-376&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-377&quot;&gt;&lt;a href=&quot;#cb60-377&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-378&quot;&gt;&lt;a href=&quot;#cb60-378&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-379&quot;&gt;&lt;a href=&quot;#cb60-379&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-380&quot;&gt;&lt;a href=&quot;#cb60-380&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-381&quot;&gt;&lt;a href=&quot;#cb60-381&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-382&quot;&gt;&lt;a href=&quot;#cb60-382&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-383&quot;&gt;&lt;a href=&quot;#cb60-383&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-384&quot;&gt;&lt;a href=&quot;#cb60-384&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (   &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-385&quot;&gt;&lt;a href=&quot;#cb60-385&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-386&quot;&gt;&lt;a href=&quot;#cb60-386&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-387&quot;&gt;&lt;a href=&quot;#cb60-387&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-388&quot;&gt;&lt;a href=&quot;#cb60-388&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-389&quot;&gt;&lt;a href=&quot;#cb60-389&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUV restFUV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-390&quot;&gt;&lt;a href=&quot;#cb60-390&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-391&quot;&gt;&lt;a href=&quot;#cb60-391&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUV restFUV &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-392&quot;&gt;&lt;a href=&quot;#cb60-392&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-393&quot;&gt;&lt;a href=&quot;#cb60-393&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (   &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-394&quot;&gt;&lt;a href=&quot;#cb60-394&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-395&quot;&gt;&lt;a href=&quot;#cb60-395&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-396&quot;&gt;&lt;a href=&quot;#cb60-396&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-397&quot;&gt;&lt;a href=&quot;#cb60-397&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-398&quot;&gt;&lt;a href=&quot;#cb60-398&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFUVW restFUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-399&quot;&gt;&lt;a href=&quot;#cb60-399&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-400&quot;&gt;&lt;a href=&quot;#cb60-400&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFUVW restFUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-401&quot;&gt;&lt;a href=&quot;#cb60-401&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-402&quot;&gt;&lt;a href=&quot;#cb60-402&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (   &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-403&quot;&gt;&lt;a href=&quot;#cb60-403&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-404&quot;&gt;&lt;a href=&quot;#cb60-404&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-405&quot;&gt;&lt;a href=&quot;#cb60-405&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-406&quot;&gt;&lt;a href=&quot;#cb60-406&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Unfactor up `adaptV` into `adaptVW . adaptV` and `adaptW` into&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-407&quot;&gt;&lt;a href=&quot;#cb60-407&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- `adaptVW . adaptW`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-408&quot;&gt;&lt;a href=&quot;#cb60-408&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-409&quot;&gt;&lt;a href=&quot;#cb60-409&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-410&quot;&gt;&lt;a href=&quot;#cb60-410&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-411&quot;&gt;&lt;a href=&quot;#cb60-411&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptVW (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-412&quot;&gt;&lt;a href=&quot;#cb60-412&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptVW (adaptW ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-413&quot;&gt;&lt;a href=&quot;#cb60-413&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-414&quot;&gt;&lt;a href=&quot;#cb60-414&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-415&quot;&gt;&lt;a href=&quot;#cb60-415&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-416&quot;&gt;&lt;a href=&quot;#cb60-416&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-417&quot;&gt;&lt;a href=&quot;#cb60-417&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUVW restUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-418&quot;&gt;&lt;a href=&quot;#cb60-418&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-419&quot;&gt;&lt;a href=&quot;#cb60-419&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelUVW restUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-420&quot;&gt;&lt;a href=&quot;#cb60-420&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-421&quot;&gt;&lt;a href=&quot;#cb60-421&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (   &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-422&quot;&gt;&lt;a href=&quot;#cb60-422&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-423&quot;&gt;&lt;a href=&quot;#cb60-423&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-424&quot;&gt;&lt;a href=&quot;#cb60-424&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-425&quot;&gt;&lt;a href=&quot;#cb60-425&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptVW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-426&quot;&gt;&lt;a href=&quot;#cb60-426&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptVW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUVW restUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-427&quot;&gt;&lt;a href=&quot;#cb60-427&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-428&quot;&gt;&lt;a href=&quot;#cb60-428&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelUVW restUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-429&quot;&gt;&lt;a href=&quot;#cb60-429&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-430&quot;&gt;&lt;a href=&quot;#cb60-430&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-431&quot;&gt;&lt;a href=&quot;#cb60-431&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-432&quot;&gt;&lt;a href=&quot;#cb60-432&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-433&quot;&gt;&lt;a href=&quot;#cb60-433&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-434&quot;&gt;&lt;a href=&quot;#cb60-434&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-435&quot;&gt;&lt;a href=&quot;#cb60-435&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-436&quot;&gt;&lt;a href=&quot;#cb60-436&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-437&quot;&gt;&lt;a href=&quot;#cb60-437&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-438&quot;&gt;&lt;a href=&quot;#cb60-438&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-439&quot;&gt;&lt;a href=&quot;#cb60-439&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-440&quot;&gt;&lt;a href=&quot;#cb60-440&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; lableVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-441&quot;&gt;&lt;a href=&quot;#cb60-441&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-442&quot;&gt;&lt;a href=&quot;#cb60-442&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f (x &amp;lt;|&amp;gt; y) = fmap f x &amp;lt;|&amp;gt; fmap f y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-443&quot;&gt;&lt;a href=&quot;#cb60-443&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-444&quot;&gt;&lt;a href=&quot;#cb60-444&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-445&quot;&gt;&lt;a href=&quot;#cb60-445&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-446&quot;&gt;&lt;a href=&quot;#cb60-446&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptVW (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-447&quot;&gt;&lt;a href=&quot;#cb60-447&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-448&quot;&gt;&lt;a href=&quot;#cb60-448&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-449&quot;&gt;&lt;a href=&quot;#cb60-449&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-450&quot;&gt;&lt;a href=&quot;#cb60-450&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-451&quot;&gt;&lt;a href=&quot;#cb60-451&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUVW restUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-452&quot;&gt;&lt;a href=&quot;#cb60-452&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-453&quot;&gt;&lt;a href=&quot;#cb60-453&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelUVW restUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-454&quot;&gt;&lt;a href=&quot;#cb60-454&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-455&quot;&gt;&lt;a href=&quot;#cb60-455&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (   &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-456&quot;&gt;&lt;a href=&quot;#cb60-456&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-457&quot;&gt;&lt;a href=&quot;#cb60-457&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-458&quot;&gt;&lt;a href=&quot;#cb60-458&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-459&quot;&gt;&lt;a href=&quot;#cb60-459&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptVW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-460&quot;&gt;&lt;a href=&quot;#cb60-460&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptVW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUVW restUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-461&quot;&gt;&lt;a href=&quot;#cb60-461&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-462&quot;&gt;&lt;a href=&quot;#cb60-462&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelUVW restUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-463&quot;&gt;&lt;a href=&quot;#cb60-463&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-464&quot;&gt;&lt;a href=&quot;#cb60-464&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-465&quot;&gt;&lt;a href=&quot;#cb60-465&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-466&quot;&gt;&lt;a href=&quot;#cb60-466&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-467&quot;&gt;&lt;a href=&quot;#cb60-467&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-468&quot;&gt;&lt;a href=&quot;#cb60-468&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-469&quot;&gt;&lt;a href=&quot;#cb60-469&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-470&quot;&gt;&lt;a href=&quot;#cb60-470&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-471&quot;&gt;&lt;a href=&quot;#cb60-471&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-472&quot;&gt;&lt;a href=&quot;#cb60-472&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-473&quot;&gt;&lt;a href=&quot;#cb60-473&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-474&quot;&gt;&lt;a href=&quot;#cb60-474&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; lableVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-475&quot;&gt;&lt;a href=&quot;#cb60-475&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-476&quot;&gt;&lt;a href=&quot;#cb60-476&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-477&quot;&gt;&lt;a href=&quot;#cb60-477&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0U (label0V label0W))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-478&quot;&gt;&lt;a href=&quot;#cb60-478&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-479&quot;&gt;&lt;a href=&quot;#cb60-479&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (   &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-480&quot;&gt;&lt;a href=&quot;#cb60-480&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptVW (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-481&quot;&gt;&lt;a href=&quot;#cb60-481&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-482&quot;&gt;&lt;a href=&quot;#cb60-482&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-483&quot;&gt;&lt;a href=&quot;#cb60-483&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-484&quot;&gt;&lt;a href=&quot;#cb60-484&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-485&quot;&gt;&lt;a href=&quot;#cb60-485&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUVW restUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-486&quot;&gt;&lt;a href=&quot;#cb60-486&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-487&quot;&gt;&lt;a href=&quot;#cb60-487&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelUVW restUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-488&quot;&gt;&lt;a href=&quot;#cb60-488&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-489&quot;&gt;&lt;a href=&quot;#cb60-489&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0V label0W)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-490&quot;&gt;&lt;a href=&quot;#cb60-490&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-491&quot;&gt;&lt;a href=&quot;#cb60-491&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-492&quot;&gt;&lt;a href=&quot;#cb60-492&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptVW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-493&quot;&gt;&lt;a href=&quot;#cb60-493&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptVW (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUVW restUVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-494&quot;&gt;&lt;a href=&quot;#cb60-494&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-495&quot;&gt;&lt;a href=&quot;#cb60-495&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelUVW restUVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-496&quot;&gt;&lt;a href=&quot;#cb60-496&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-497&quot;&gt;&lt;a href=&quot;#cb60-497&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-498&quot;&gt;&lt;a href=&quot;#cb60-498&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-499&quot;&gt;&lt;a href=&quot;#cb60-499&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-500&quot;&gt;&lt;a href=&quot;#cb60-500&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-501&quot;&gt;&lt;a href=&quot;#cb60-501&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-502&quot;&gt;&lt;a href=&quot;#cb60-502&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-503&quot;&gt;&lt;a href=&quot;#cb60-503&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-504&quot;&gt;&lt;a href=&quot;#cb60-504&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-505&quot;&gt;&lt;a href=&quot;#cb60-505&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-506&quot;&gt;&lt;a href=&quot;#cb60-506&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-507&quot;&gt;&lt;a href=&quot;#cb60-507&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; lableVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-508&quot;&gt;&lt;a href=&quot;#cb60-508&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-509&quot;&gt;&lt;a href=&quot;#cb60-509&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-510&quot;&gt;&lt;a href=&quot;#cb60-510&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-511&quot;&gt;&lt;a href=&quot;#cb60-511&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (label0V label0W)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-512&quot;&gt;&lt;a href=&quot;#cb60-512&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptV vs &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptW ws))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-513&quot;&gt;&lt;a href=&quot;#cb60-513&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-514&quot;&gt;&lt;a href=&quot;#cb60-514&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-515&quot;&gt;&lt;a href=&quot;#cb60-515&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelV restV) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-516&quot;&gt;&lt;a href=&quot;#cb60-516&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-517&quot;&gt;&lt;a href=&quot;#cb60-517&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelV restV &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-518&quot;&gt;&lt;a href=&quot;#cb60-518&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-519&quot;&gt;&lt;a href=&quot;#cb60-519&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptW (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-520&quot;&gt;&lt;a href=&quot;#cb60-520&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptV (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelW restW) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelVW restVW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-521&quot;&gt;&lt;a href=&quot;#cb60-521&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-522&quot;&gt;&lt;a href=&quot;#cb60-522&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; lableVW restVW &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelW restW&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-523&quot;&gt;&lt;a href=&quot;#cb60-523&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-524&quot;&gt;&lt;a href=&quot;#cb60-524&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-525&quot;&gt;&lt;a href=&quot;#cb60-525&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;     &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0U (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-526&quot;&gt;&lt;a href=&quot;#cb60-526&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (   &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0V (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; vs)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-527&quot;&gt;&lt;a href=&quot;#cb60-527&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; label0W (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; ws)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-528&quot;&gt;&lt;a href=&quot;#cb60-528&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-529&quot;&gt;&lt;a href=&quot;#cb60-529&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-530&quot;&gt;&lt;a href=&quot;#cb60-530&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `u`, `v`, `w`, in reverse:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-531&quot;&gt;&lt;a href=&quot;#cb60-531&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-532&quot;&gt;&lt;a href=&quot;#cb60-532&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- u = Begin label0U (Choice us)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-533&quot;&gt;&lt;a href=&quot;#cb60-533&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- v = Begin label0V (Choice vs)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-534&quot;&gt;&lt;a href=&quot;#cb60-534&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- w = Begin label0W (Choice ws)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb60-535&quot;&gt;&lt;a href=&quot;#cb60-535&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; (v &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; w)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The third &lt;code&gt;Applicative&lt;/code&gt; law requires that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb61&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb61-1&quot;&gt;&lt;a href=&quot;#cb61-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (f x)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Proof:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb62&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb62-1&quot;&gt;&lt;a href=&quot;#cb62-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-2&quot;&gt;&lt;a href=&quot;#cb62-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-3&quot;&gt;&lt;a href=&quot;#cb62-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-4&quot;&gt;&lt;a href=&quot;#cb62-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-5&quot;&gt;&lt;a href=&quot;#cb62-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure label = Begin label empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-6&quot;&gt;&lt;a href=&quot;#cb62-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; f empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; x empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-7&quot;&gt;&lt;a href=&quot;#cb62-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-8&quot;&gt;&lt;a href=&quot;#cb62-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-9&quot;&gt;&lt;a href=&quot;#cb62-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (f x) (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptF empty &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptX empty)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-10&quot;&gt;&lt;a href=&quot;#cb62-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-11&quot;&gt;&lt;a href=&quot;#cb62-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptF (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; resultF) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; resultF&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-12&quot;&gt;&lt;a href=&quot;#cb62-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptF (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelF restF) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-13&quot;&gt;&lt;a href=&quot;#cb62-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-14&quot;&gt;&lt;a href=&quot;#cb62-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelF restF &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; x empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-15&quot;&gt;&lt;a href=&quot;#cb62-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-16&quot;&gt;&lt;a href=&quot;#cb62-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; resultX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; resultX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-17&quot;&gt;&lt;a href=&quot;#cb62-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptX (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelX restX) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelFX restFX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-18&quot;&gt;&lt;a href=&quot;#cb62-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-19&quot;&gt;&lt;a href=&quot;#cb62-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelFX restFX &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; f empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelX restX&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-20&quot;&gt;&lt;a href=&quot;#cb62-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-21&quot;&gt;&lt;a href=&quot;#cb62-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f empty = empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-22&quot;&gt;&lt;a href=&quot;#cb62-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (f x) (empty &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; empty)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-23&quot;&gt;&lt;a href=&quot;#cb62-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-24&quot;&gt;&lt;a href=&quot;#cb62-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- empty &amp;lt;|&amp;gt; empty = empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-25&quot;&gt;&lt;a href=&quot;#cb62-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (f x) empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-26&quot;&gt;&lt;a href=&quot;#cb62-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-27&quot;&gt;&lt;a href=&quot;#cb62-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-28&quot;&gt;&lt;a href=&quot;#cb62-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-29&quot;&gt;&lt;a href=&quot;#cb62-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure label = Begin label empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb62-30&quot;&gt;&lt;a href=&quot;#cb62-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (f x)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The fourth &lt;code&gt;Applicative&lt;/code&gt; law requires that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb63&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb63-1&quot;&gt;&lt;a href=&quot;#cb63-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; u&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Proof:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb64&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb64-1&quot;&gt;&lt;a href=&quot;#cb64-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;u &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-2&quot;&gt;&lt;a href=&quot;#cb64-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-3&quot;&gt;&lt;a href=&quot;#cb64-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Define:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-4&quot;&gt;&lt;a href=&quot;#cb64-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-5&quot;&gt;&lt;a href=&quot;#cb64-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- u = Begin labelU0 (Choice us)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-6&quot;&gt;&lt;a href=&quot;#cb64-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU0 (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-7&quot;&gt;&lt;a href=&quot;#cb64-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-8&quot;&gt;&lt;a href=&quot;#cb64-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-9&quot;&gt;&lt;a href=&quot;#cb64-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-10&quot;&gt;&lt;a href=&quot;#cb64-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure label = Begin label empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-11&quot;&gt;&lt;a href=&quot;#cb64-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU0 (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; y empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-12&quot;&gt;&lt;a href=&quot;#cb64-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-13&quot;&gt;&lt;a href=&quot;#cb64-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-14&quot;&gt;&lt;a href=&quot;#cb64-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (labelU0 y) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptY empty)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-15&quot;&gt;&lt;a href=&quot;#cb64-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-16&quot;&gt;&lt;a href=&quot;#cb64-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-17&quot;&gt;&lt;a href=&quot;#cb64-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-18&quot;&gt;&lt;a href=&quot;#cb64-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-19&quot;&gt;&lt;a href=&quot;#cb64-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; y empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-20&quot;&gt;&lt;a href=&quot;#cb64-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-21&quot;&gt;&lt;a href=&quot;#cb64-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptY (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-22&quot;&gt;&lt;a href=&quot;#cb64-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptY (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelY restY) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-23&quot;&gt;&lt;a href=&quot;#cb64-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-24&quot;&gt;&lt;a href=&quot;#cb64-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU0 (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelY restY&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-25&quot;&gt;&lt;a href=&quot;#cb64-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-26&quot;&gt;&lt;a href=&quot;#cb64-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- fmap f empty = empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-27&quot;&gt;&lt;a href=&quot;#cb64-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (labelU0 y) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-28&quot;&gt;&lt;a href=&quot;#cb64-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-29&quot;&gt;&lt;a href=&quot;#cb64-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-30&quot;&gt;&lt;a href=&quot;#cb64-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-31&quot;&gt;&lt;a href=&quot;#cb64-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-32&quot;&gt;&lt;a href=&quot;#cb64-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; y empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-33&quot;&gt;&lt;a href=&quot;#cb64-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-34&quot;&gt;&lt;a href=&quot;#cb64-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-35&quot;&gt;&lt;a href=&quot;#cb64-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-36&quot;&gt;&lt;a href=&quot;#cb64-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- pure label = Begin label empty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-37&quot;&gt;&lt;a href=&quot;#cb64-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (labelU0 y) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-38&quot;&gt;&lt;a href=&quot;#cb64-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-39&quot;&gt;&lt;a href=&quot;#cb64-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-40&quot;&gt;&lt;a href=&quot;#cb64-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-41&quot;&gt;&lt;a href=&quot;#cb64-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-42&quot;&gt;&lt;a href=&quot;#cb64-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-43&quot;&gt;&lt;a href=&quot;#cb64-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-44&quot;&gt;&lt;a href=&quot;#cb64-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Induction: u &amp;lt;*&amp;gt; pure y = pure ($ y) &amp;lt;*&amp;gt; u&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-45&quot;&gt;&lt;a href=&quot;#cb64-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (labelU0 y) (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; adaptU us))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-46&quot;&gt;&lt;a href=&quot;#cb64-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-47&quot;&gt;&lt;a href=&quot;#cb64-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Done&lt;/span&gt; result&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-48&quot;&gt;&lt;a href=&quot;#cb64-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adaptU (&lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelU restU) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-49&quot;&gt;&lt;a href=&quot;#cb64-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-50&quot;&gt;&lt;a href=&quot;#cb64-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Yield&lt;/span&gt; labelUY restUY &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU restU&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-51&quot;&gt;&lt;a href=&quot;#cb64-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-52&quot;&gt;&lt;a href=&quot;#cb64-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;lt;*&amp;gt;)`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-53&quot;&gt;&lt;a href=&quot;#cb64-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) empty &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU0 (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-54&quot;&gt;&lt;a href=&quot;#cb64-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-55&quot;&gt;&lt;a href=&quot;#cb64-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `pure`, in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-56&quot;&gt;&lt;a href=&quot;#cb64-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Begin&lt;/span&gt; labelU0 (&lt;span class=&quot;dt&quot;&gt;Choice&lt;/span&gt; us)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-57&quot;&gt;&lt;a href=&quot;#cb64-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-58&quot;&gt;&lt;a href=&quot;#cb64-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `u`, in reverse:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-59&quot;&gt;&lt;a href=&quot;#cb64-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-60&quot;&gt;&lt;a href=&quot;#cb64-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- u = Begin labelU0 (Choice us)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb64-61&quot;&gt;&lt;a href=&quot;#cb64-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; y) &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; u&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/6961915750240123520/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/03/modeling-pluscal-in-haskell-using.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6961915750240123520"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6961915750240123520"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/03/modeling-pluscal-in-haskell-using.html" title="Modeling PlusCal in Haskell using Cartesian products of NFAs"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-3989587820759658706</id><published>2022-03-12T07:46:00.004-08:00</published><updated>2022-03-14T07:23:37.091-07:00</updated><title type="text">The hard part of type-checking Nix</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;The hard part of type-checking Nix&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;An survey on the challenges designing a type system for Nix&quot; /&gt;  &lt;title&gt;The hard part of type-checking Nix&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;I’ve been banging my head for a while on the challenge of building a type checker for Nix. The purpose of this post is to summarize my thoughts on this subject so far since they might prove useful to other people grappling with the same problem. In this post I’ll assume familiarity with Nix idioms and the Nix ecosystem.&lt;/p&gt;&lt;h4 id=&quot;stack-traces-are-not-enough&quot;&gt;Stack traces are not enough&lt;/h4&gt;&lt;p&gt;Nix has one key advantage: purity. This means that you can safely detect errors in code by just running the code (with some caveats I won’t go into) and if anything goes wrong you get a stack trace.&lt;/p&gt;&lt;p&gt;This approach to error detection still has some limitations, which I wrote about in a prior blog post:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2021/01/dynamic-type-errors-lack-relevance.html&quot;&gt;Dynamic type errors lack relevance&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… but Nix’s stack traces still set the bar for any type-checker, meaning that any proposed type checker needs to produce error messages which are clearer and more informative than the stack traces that Nix currently produces.&lt;/p&gt;&lt;p&gt;“What’s the problem with stack traces?”, you might ask.&lt;/p&gt;&lt;p&gt;The issue is that stack traces do not work well for understanding errors “in the large”. Interpreting a typical stack trace requires a fairly sophisticated mental model of your dependencies, so the more dependencies you have (and the more complicated they are) the more difficulty interpreting the stack trace.&lt;/p&gt;&lt;p&gt;I’ll illustrate this using the following example which is inspired by a real error I ran into at work:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ./module0.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;nixpkgs.overlays&lt;/span&gt; = [&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;co&quot;&gt;# This is a common idiom in Nixpkgs to wrap Haskell packages in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;co&quot;&gt;# `justStaticExecutables` at the top level&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;fast-tags&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;self.haskell.lib.justStaticExecutables&lt;/span&gt; self.haskellPackages.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ./module1.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;nixpkgs.overlays&lt;/span&gt; = [&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;co&quot;&gt;# In a separate overlay, create a variation on the `fast-tags` build with&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;co&quot;&gt;# tests disabled&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; = self.haskell.lib.dontCheck super.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ./example.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;nixos&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs/nixos&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;configuration.imports&lt;/span&gt; = [&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;./module1.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;./module0.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;nixos.pkgs.fast-tags-no-tests&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above &lt;code&gt;./example.nix&lt;/code&gt; builds just fine:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix build &lt;span class=&quot;at&quot;&gt;--file&lt;/span&gt; ./example.nix&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; ./result/bin/fast-tags &lt;span class=&quot;at&quot;&gt;--version&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;fast-tags,&lt;/span&gt; version 2.0.1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but now suppose that I modify &lt;code&gt;./example.nix&lt;/code&gt; to sort the import list:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ./example.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;nixos&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs/nixos&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;configuration.imports&lt;/span&gt; = [&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;./module0.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;./module1.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-7&quot;&gt;&lt;a href=&quot;#cb5-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-8&quot;&gt;&lt;a href=&quot;#cb5-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-9&quot;&gt;&lt;a href=&quot;#cb5-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-10&quot;&gt;&lt;a href=&quot;#cb5-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-11&quot;&gt;&lt;a href=&quot;#cb5-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;nixos.pkgs.fast-tags-no-tests&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now it fails to build, with the following error:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;error:&lt;/span&gt; attribute &lt;span class=&quot;st&quot;&gt;&amp;#39;fast-tags&amp;#39;&lt;/span&gt; missing&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;at&lt;/span&gt; /private/tmp/test/module1.nix:5:55:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;# tests disabled&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; = self.haskell.lib.dontCheck super.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;                                                       &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;er&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;--show-trace&amp;#39;&lt;/span&gt; to show detailed location information&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Okay, so why is the &lt;code&gt;fast-tags&lt;/code&gt; attribute missing? Let me add &lt;code&gt;--show-trace&lt;/code&gt; like the error message suggests to see what is going wrong:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;error:&lt;/span&gt; attribute &lt;span class=&quot;st&quot;&gt;&amp;#39;fast-tags&amp;#39;&lt;/span&gt; missing&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;at&lt;/span&gt; /private/tmp/test/module1.nix:5:55:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;# tests disabled&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; = self.haskell.lib.dontCheck super.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;                                                       &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-8&quot;&gt;&lt;a href=&quot;#cb7-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;er&quot;&gt;})&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-9&quot;&gt;&lt;a href=&quot;#cb7-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-10&quot;&gt;&lt;a href=&quot;#cb7-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt; while evaluating &lt;span class=&quot;st&quot;&gt;&amp;#39;overrideCabal&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-11&quot;&gt;&lt;a href=&quot;#cb7-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-12&quot;&gt;&lt;a href=&quot;#cb7-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;at&lt;/span&gt; /nix/store/dchfgixlmxwq0w495w7xc39d65dyqg42-nixpkgs-22.05pre352357.98bb5b77c8c/nixpkgs/pkgs/development/haskell-modules/lib/compose.nix:38:22:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-13&quot;&gt;&lt;a href=&quot;#cb7-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-14&quot;&gt;&lt;a href=&quot;#cb7-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;ex&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-15&quot;&gt;&lt;a href=&quot;#cb7-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;ex&quot;&gt;overrideCabal&lt;/span&gt; = f: drv: &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;drv.override&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;args:&lt;/span&gt; args // {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-16&quot;&gt;&lt;a href=&quot;#cb7-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;                      &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-17&quot;&gt;&lt;a href=&quot;#cb7-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;39&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;ex&quot;&gt;mkDerivation&lt;/span&gt; = drv: &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;args.mkDerivation&lt;/span&gt; drv&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;.override&lt;/span&gt; f&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-18&quot;&gt;&lt;a href=&quot;#cb7-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-19&quot;&gt;&lt;a href=&quot;#cb7-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt; from call site&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-20&quot;&gt;&lt;a href=&quot;#cb7-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-21&quot;&gt;&lt;a href=&quot;#cb7-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;at&lt;/span&gt; /private/tmp/test/module1.nix:5:28:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-22&quot;&gt;&lt;a href=&quot;#cb7-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-23&quot;&gt;&lt;a href=&quot;#cb7-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;# tests disabled&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-24&quot;&gt;&lt;a href=&quot;#cb7-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; = self.haskell.lib.dontCheck super.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-25&quot;&gt;&lt;a href=&quot;#cb7-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;                            &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-26&quot;&gt;&lt;a href=&quot;#cb7-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-27&quot;&gt;&lt;a href=&quot;#cb7-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-28&quot;&gt;&lt;a href=&quot;#cb7-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt; while evaluating the attribute &lt;span class=&quot;st&quot;&gt;&amp;#39;pkgs.fast-tags-no-tests&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-29&quot;&gt;&lt;a href=&quot;#cb7-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-30&quot;&gt;&lt;a href=&quot;#cb7-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;at&lt;/span&gt; /private/tmp/test/module1.nix:5:7:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-31&quot;&gt;&lt;a href=&quot;#cb7-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-32&quot;&gt;&lt;a href=&quot;#cb7-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;co&quot;&gt;# tests disabled&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-33&quot;&gt;&lt;a href=&quot;#cb7-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; = self.haskell.lib.dontCheck super.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-34&quot;&gt;&lt;a href=&quot;#cb7-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;       &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-35&quot;&gt;&lt;a href=&quot;#cb7-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-36&quot;&gt;&lt;a href=&quot;#cb7-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-37&quot;&gt;&lt;a href=&quot;#cb7-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt; while evaluating the file &lt;span class=&quot;st&quot;&gt;&amp;#39;./example.nix&amp;#39;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hmmm 🤔. That still does really not explain what went wrong.&lt;/p&gt;&lt;p&gt;The &lt;em&gt;actual&lt;/em&gt; reason for the type error is that the order of overlays matters, but there’s no way that you would know that from looking at the stack trace. You would have to first understand how NixOS modules work and how the Nixpkgs overlay system works in order to correctly pinpoint the problem and even then it would still be tricky. I know because I am an experienced Nix user myself yet I still stumbled on an error message like this, albeit in the context of a larger codebase.&lt;/p&gt;&lt;p&gt;Moreover, the above example is not a contrived example that I hand-picked to make Nix look bad. This is idiomatic Nix code that uses modern conventions from Nixpkgs and NixOS exactly as the maintainers intended them to be used. The only thing that’s not idiomatic is using the NixOS module system to build just one package instead of building an entire NixOS system, but that’s only because I minimized this example from real code that built a complete NixOS system.&lt;/p&gt;&lt;h4 id=&quot;types-to-the-rescue&quot;&gt;Types to the rescue?&lt;/h4&gt;&lt;p&gt;There’s a deeper issue, though, which is that even if Nix had a type system the equivalent type error would have been almost as uninformative!&lt;/p&gt;&lt;p&gt;To see why, let’s imagine what a hypothetical informative type error might have looked like.&lt;/p&gt;&lt;p&gt;A great type error (for a command-line type checker) would have been something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;The&lt;/span&gt; fast-tags attribute defined within this overlay:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;./module0.nix:7:6:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;fast-tags&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;self.haskell.lib.justStaticExecutables&lt;/span&gt; self.haskellPackages.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-8&quot;&gt;&lt;a href=&quot;#cb8-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-9&quot;&gt;&lt;a href=&quot;#cb8-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt; is not in scope within this other overlay:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-10&quot;&gt;&lt;a href=&quot;#cb8-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-11&quot;&gt;&lt;a href=&quot;#cb8-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;./module1.nix:7:6:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-12&quot;&gt;&lt;a href=&quot;#cb8-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-13&quot;&gt;&lt;a href=&quot;#cb8-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                                                            &lt;span class=&quot;ex&quot;&gt;↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-14&quot;&gt;&lt;a href=&quot;#cb8-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; = self.haskell.lib.dontCheck super.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-15&quot;&gt;&lt;a href=&quot;#cb8-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-16&quot;&gt;&lt;a href=&quot;#cb8-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt; because the latter overlay is ordered before the former overlay.&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-17&quot;&gt;&lt;a href=&quot;#cb8-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-18&quot;&gt;&lt;a href=&quot;#cb8-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Suggestion:&lt;/span&gt; Perhaps wrap the latter overlay in &lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;lib.mkAfter&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;, like this:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-19&quot;&gt;&lt;a href=&quot;#cb8-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-20&quot;&gt;&lt;a href=&quot;#cb8-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;lib,&lt;/span&gt; ... }:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-21&quot;&gt;&lt;a href=&quot;#cb8-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-22&quot;&gt;&lt;a href=&quot;#cb8-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;nixpkgs.overlays&lt;/span&gt; = lib.mkAfter [&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-23&quot;&gt;&lt;a href=&quot;#cb8-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-24&quot;&gt;&lt;a href=&quot;#cb8-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;co&quot;&gt;# In a separate overlay, create a variation on the `fast-tags` build with&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-25&quot;&gt;&lt;a href=&quot;#cb8-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;co&quot;&gt;# tests disabled&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-26&quot;&gt;&lt;a href=&quot;#cb8-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; = self.haskell.lib.dontCheck super.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-27&quot;&gt;&lt;a href=&quot;#cb8-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-28&quot;&gt;&lt;a href=&quot;#cb8-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-29&quot;&gt;&lt;a href=&quot;#cb8-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nobody expects a type-checker for Nix to be &lt;em&gt;that&lt;/em&gt; smart, but it’s instructive to consider why not.&lt;/p&gt;&lt;p&gt;Obviously, there’s no way for the type-checker to know that the user’s intent was to refer to the &lt;code&gt;fast-tags&lt;/code&gt; attribute in some other overlay defined within some unrelated file. Or is there?&lt;/p&gt;&lt;p&gt;Well, what if we had written the following simpler example that doesn’t use overlays and instead uses ordinary &lt;code&gt;let&lt;/code&gt; definitions to build up the final desired package:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { }&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;fast-tags&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.justStaticExecutables&lt;/span&gt; pkgs.haskellPackages.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.dontCheck&lt;/span&gt; fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-11&quot;&gt;&lt;a href=&quot;#cb9-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As an aside, let’s admire how much more clear that example is. However, there are good reasons why Nixpkgs discourages this approach in the large which I won’t get into.&lt;/p&gt;&lt;p&gt;Now let’s take that example and reorder the two &lt;code&gt;let&lt;/code&gt; bindings:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { }&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.dontCheck&lt;/span&gt; fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-7&quot;&gt;&lt;a href=&quot;#cb10-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;fast-tags&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-8&quot;&gt;&lt;a href=&quot;#cb10-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.justStaticExecutables&lt;/span&gt; pkgs.haskellPackages.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-9&quot;&gt;&lt;a href=&quot;#cb10-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-10&quot;&gt;&lt;a href=&quot;#cb10-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-11&quot;&gt;&lt;a href=&quot;#cb10-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, actually that still works 😅 because Nix permits out-of-order &lt;code&gt;let&lt;/code&gt; bindings so long as they are in the same &lt;code&gt;let&lt;/code&gt; block, but we can force the ordering by nesting the latter &lt;code&gt;let&lt;/code&gt; binding:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { }&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-5&quot;&gt;&lt;a href=&quot;#cb11-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.dontCheck&lt;/span&gt; fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-6&quot;&gt;&lt;a href=&quot;#cb11-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-7&quot;&gt;&lt;a href=&quot;#cb11-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-8&quot;&gt;&lt;a href=&quot;#cb11-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-9&quot;&gt;&lt;a href=&quot;#cb11-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;fast-tags&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-10&quot;&gt;&lt;a href=&quot;#cb11-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.justStaticExecutables&lt;/span&gt; pkgs.haskellPackages.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-11&quot;&gt;&lt;a href=&quot;#cb11-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-12&quot;&gt;&lt;a href=&quot;#cb11-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-13&quot;&gt;&lt;a href=&quot;#cb11-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which gives the following error we expected:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;error:&lt;/span&gt; undefined variable &lt;span class=&quot;st&quot;&gt;&amp;#39;fast-tags&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;at&lt;/span&gt; /private/tmp/test/example.nix:5:32:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.dontCheck&lt;/span&gt; fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-7&quot;&gt;&lt;a href=&quot;#cb12-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;                                &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-8&quot;&gt;&lt;a href=&quot;#cb12-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This type error is already easier for the user to interpret, not because of any type system, but rather because using ordinary &lt;code&gt;let&lt;/code&gt; bindings forced us to structure our code so that a human can more easily discern what’s wrong. Now the &lt;code&gt;let&lt;/code&gt; bindings are plainly out of order, lexically.&lt;/p&gt;&lt;p&gt;Moreover, now a type-checker can easily look ahead and detect that there was a &lt;code&gt;fast-tags&lt;/code&gt; identifier defined shortly downstream that the user might have intended to use, so it’s completely realistic to expect an error message like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;error:&lt;/span&gt; undefined variable &lt;span class=&quot;st&quot;&gt;&amp;#39;fast-tags&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;at&lt;/span&gt; /private/tmp/test/example.nix:5:32:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;ex&quot;&gt;fast-tags-no-tests&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.dontCheck&lt;/span&gt; fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;                                &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-10&quot;&gt;&lt;a href=&quot;#cb13-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Hint:&lt;/span&gt; Did you mean to refer to this &lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;fast-tags&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt; identifier defined afterwards&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-11&quot;&gt;&lt;a href=&quot;#cb13-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;within&lt;/span&gt; the same file&lt;span class=&quot;pp&quot;&gt;?&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-12&quot;&gt;&lt;a href=&quot;#cb13-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-13&quot;&gt;&lt;a href=&quot;#cb13-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;ex&quot;&gt;fast-tags&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-14&quot;&gt;&lt;a href=&quot;#cb13-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;ex&quot;&gt;^&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-15&quot;&gt;&lt;a href=&quot;#cb13-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;ex&quot;&gt;pkgs.haskell.lib.justStaticExecutables&lt;/span&gt; pkgs.haskellPackages.fast-tags&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By restructuring definitions as ordinary &lt;code&gt;let&lt;/code&gt; bindings we’ve greatly reduced the difficulty of producing a great error message. No longer does the type-checker require a deep understanding of Nixpkgs overlays or NixOS modules; the type-checker only needs to understand how Nix the language works (specifically &lt;code&gt;let&lt;/code&gt; bindings).&lt;/p&gt;&lt;p&gt;Equally important, &lt;strong&gt;the end user&lt;/strong&gt; also no longer requires an understanding of Nixpkgs overlays or NixOS modules to understand the type error. Even our hypothetical “great” error message still required our user to have some literacy with Nixpkgs and NixOS in order to interpret the error (albeit, not as much as the original stack trace).&lt;/p&gt;&lt;h4 id=&quot;the-actual-problem&quot;&gt;The actual problem&lt;/h4&gt;&lt;p&gt;The real issue with Nix isn’t the lack of a type checker. The absence of a type-checker is problematic, but in my view this is a symptom of a larger issue.&lt;/p&gt;&lt;p&gt;The fundamental problem that plagues all type-checking attempts for Nix is that nobody actually uses &lt;strong&gt;Nix the language&lt;/strong&gt; at any significant scale. Instead, the community has adopted two sub-languages embedded within Nix for programming “in the large”:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Nixpkgs overlays&lt;/p&gt;&lt;p&gt;This is an embedded language that simulates object-oriented programming with inheritance / late binding / dynamic scope (depending on how you think about it)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;NixOS modules&lt;/p&gt;&lt;p&gt;This is an embedded language that roughly emulates &lt;a href=&quot;https://github.com/hashicorp/terraform&quot;&gt;Terraform&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Carefully note that these are not language features built into Nix; rather they are embedded domain-specific languages implemented within Nix. Consequently, a type-checker for “Nix the language” is not necessarily equipped to type-check these two sub-languages.&lt;/p&gt;&lt;h4 id=&quot;what-about-row-polymorphism&quot;&gt;What about row polymorphism?&lt;/h4&gt;&lt;p&gt;Let’s focus on one of those two sub-languages, the Nixpkgs overlay system, to see if we can still salvage things somewhat. The reason I suggest this is because the Nixpkgs overlay system is the far simpler sub-language of the two and the implementation of overlays is simple and tiny.&lt;/p&gt;&lt;p&gt;Technically, all you need to type-check the Nixpkgs overlays system is type system support for anonymous records and Nix’s &lt;code&gt;//&lt;/code&gt; operator. Modern type systems can support both of those features through the use of &lt;a href=&quot;https://en.wikipedia.org/wiki/Row_polymorphism&quot;&gt;row polymorphism&lt;/a&gt;. This section assumes familiarity with row polymorphism, and you can skip this section if you aren’t familiar (it’s not essential), but if you would like to learn more, you can read the following resources:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hgiasac.github.io/posts/2018-11-18-Record-Row-Type-and-Row-Polymorphism.html&quot;&gt;Record, Row Types, and Row Polymorphism&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://ckoster22.medium.com/advanced-types-in-elm-extensible-records-67e9d804030d&quot;&gt;Advanced Types in Elm: Extensible Records&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Most people who are familiar with row polymorphism will wonder: can we use a type system with support for row polymorphism to type-check Nixpkgs overlays?&lt;/p&gt;&lt;p&gt;The answer is: sort of. We run into the same problems as stack traces: we catch errors, but the error messages and inferred types are less informative than we would hope.&lt;/p&gt;&lt;p&gt;To illustrate this, consider the default entrypoint to Nixpkgs, which is a function that takes an &lt;code&gt;overlays&lt;/code&gt; argument containing a list of overlays, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  overlay0 &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; super&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    cowsay &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; super&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;cowsay&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;overrideAttrs (old&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      doCheck &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; false;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    });&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  };&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-7&quot;&gt;&lt;a href=&quot;#cb14-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-8&quot;&gt;&lt;a href=&quot;#cb14-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  overlay1 &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; super&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-9&quot;&gt;&lt;a href=&quot;#cb14-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    hello &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; super&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;hello&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;overrideAttrs (old&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-10&quot;&gt;&lt;a href=&quot;#cb14-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      postInstall &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;${self.cowsay}/bin/cowsay &amp;#39;Installation complete&amp;#39;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-11&quot;&gt;&lt;a href=&quot;#cb14-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    });&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-12&quot;&gt;&lt;a href=&quot;#cb14-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  };&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-13&quot;&gt;&lt;a href=&quot;#cb14-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-14&quot;&gt;&lt;a href=&quot;#cb14-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  pkgs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &amp;lt;nixpkgs&amp;gt; { overlays = [ overlay0 overlay1 ]; };&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-15&quot;&gt;&lt;a href=&quot;#cb14-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-16&quot;&gt;&lt;a href=&quot;#cb14-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-17&quot;&gt;&lt;a href=&quot;#cb14-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  pkgs&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;hello&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, ask yourself the following questions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;What would be the type of an overlay?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What would be the type of a list of overlays?&lt;/p&gt;&lt;p&gt;… such as &lt;code&gt;[ overlay0 overlay1 ]&lt;/code&gt; in the above example&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What type should the &lt;code&gt;&amp;lt;nixpkgs&amp;gt;&lt;/code&gt; function expect for its &lt;code&gt;overlays&lt;/code&gt; argument?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;How do the answers to the above questions affect inferred types and error messages?&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I found these questions surprisingly difficult to answer! Again, the above example is not a contrived example I chose as a type-checking puzzle. This is the recommended way to use Nixpkgs.&lt;/p&gt;&lt;p&gt;I will go ahead and share what I think are the “right” answers that will get us closest to a type-checker for Nixpkgs with the fewest intrusive changes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;What would be the type of an overlay?&lt;/p&gt;&lt;p&gt;There would be no such thing as an “overlay type”. Each overlay would have a distinct type, but in every case an overlay would be a function from strongly-typed and row-polymorphic record inputs to a strongly-typed record output.&lt;/p&gt;&lt;p&gt;For example, the types of the above &lt;code&gt;overlay0&lt;/code&gt; and &lt;code&gt;overlay1&lt;/code&gt; functions would be something like this (using a pseudo-notation I made up inspired by &lt;a href=&quot;https://github.com/Gabriel439/grace&quot;&gt;Fall-from-Grace&lt;/a&gt; because no existing language has great syntax for this):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;overlay0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;:&lt;/span&gt;  forall &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;a&lt;/span&gt; b c : Fields&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;o&lt;/span&gt; : Type&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt;  { a }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-4&quot;&gt;&lt;a href=&quot;#cb15-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay :&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-5&quot;&gt;&lt;a href=&quot;#cb15-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;overrideAttrs&lt;/span&gt; :&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-6&quot;&gt;&lt;a href=&quot;#cb15-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { doCheck : Bool }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { c, doCheck : Bool }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-7&quot;&gt;&lt;a href=&quot;#cb15-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; c&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-8&quot;&gt;&lt;a href=&quot;#cb15-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-9&quot;&gt;&lt;a href=&quot;#cb15-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-10&quot;&gt;&lt;a href=&quot;#cb15-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-11&quot;&gt;&lt;a href=&quot;#cb15-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay : { c, doCheck : Bool } }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-12&quot;&gt;&lt;a href=&quot;#cb15-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-13&quot;&gt;&lt;a href=&quot;#cb15-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;overlay1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-14&quot;&gt;&lt;a href=&quot;#cb15-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;:&lt;/span&gt; forall &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;a&lt;/span&gt; b c : Fields&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;o&lt;/span&gt; : Type&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-15&quot;&gt;&lt;a href=&quot;#cb15-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt;  { a }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-16&quot;&gt;&lt;a href=&quot;#cb15-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { hello :&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-17&quot;&gt;&lt;a href=&quot;#cb15-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;overrideAttrs&lt;/span&gt; :&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-18&quot;&gt;&lt;a href=&quot;#cb15-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { postInstall : Text }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { c, postInstall : Text }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-19&quot;&gt;&lt;a href=&quot;#cb15-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; c&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-20&quot;&gt;&lt;a href=&quot;#cb15-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-21&quot;&gt;&lt;a href=&quot;#cb15-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-22&quot;&gt;&lt;a href=&quot;#cb15-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-23&quot;&gt;&lt;a href=&quot;#cb15-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { hello : { c, postInstall : Text } }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Don’t sweat it if you don’t follow that notation I just made up. The purpose is just to informally illustrate that we can assign row-polymorphic types to &lt;code&gt;overlay0&lt;/code&gt; and &lt;code&gt;overlay1&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What would be the type of a list of overlays?&lt;/p&gt;&lt;p&gt;There would be no such thing as a list of overlays, for the same reason that there would be no “overlay type”.&lt;/p&gt;&lt;p&gt;To be totally pedantic, you could in theory model a list of heterogeneously-typed overlays using a type-indexed list, but I don’t believe that’s the right path forward for Nixpkgs.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What type should the &lt;code&gt;&amp;lt;nixpkgs&amp;gt;&lt;/code&gt; function expect for its &lt;code&gt;overlays&lt;/code&gt; argument?&lt;/p&gt;&lt;p&gt;The &lt;code&gt;&amp;lt;nixpkgs&amp;gt;&lt;/code&gt; entrypoint function would no longer take a list of overlays (because there would be no such thing as a list of overlays). It would take a single overlay as input and you would have to precompose overlays using &lt;code&gt;lib.composeExtensions&lt;/code&gt; if you wanted to supply more than one overlay as input to &lt;code&gt;&amp;lt;nixpkgs&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;For example, if you were to compose &lt;code&gt;overlay0&lt;/code&gt; and &lt;code&gt;overlay1&lt;/code&gt;, you would end up with a new composite overlay of the following type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;lib.composeExtensions&lt;/span&gt; overlay0 overlay1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;:&lt;/span&gt; forall &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;a&lt;/span&gt; b c d : Fields&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;o&lt;/span&gt; : Type&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;.&lt;/span&gt;  { a }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay :&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;overrideAttrs&lt;/span&gt; :&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { doCheck : Bool }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { c, doCheck : Bool }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; c&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-8&quot;&gt;&lt;a href=&quot;#cb16-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-9&quot;&gt;&lt;a href=&quot;#cb16-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;hello&lt;/span&gt; : &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-10&quot;&gt;&lt;a href=&quot;#cb16-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;overrideAttrs&lt;/span&gt; :&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-11&quot;&gt;&lt;a href=&quot;#cb16-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;at&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { postInstall : Text }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { d, postInstall : Text }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-12&quot;&gt;&lt;a href=&quot;#cb16-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; d&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-13&quot;&gt;&lt;a href=&quot;#cb16-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-14&quot;&gt;&lt;a href=&quot;#cb16-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-15&quot;&gt;&lt;a href=&quot;#cb16-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;     &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-16&quot;&gt;&lt;a href=&quot;#cb16-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay : { c, doCheck : Bool }, hello : { d, postInstall : Text } }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the &lt;code&gt;&amp;lt;nixpkgs&amp;gt;&lt;/code&gt; entrypoint function type would be something like:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;bu&quot;&gt;:&lt;/span&gt; forall &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;a&lt;/span&gt; : Fields&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;overlay&lt;/span&gt; : &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;              &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;cowsay&lt;/span&gt; : …, hello : …, …, a }  &lt;span class=&quot;co&quot;&gt;# Enormous type goes here&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-5&quot;&gt;&lt;a href=&quot;#cb17-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay : …, hello : …, … }     &lt;span class=&quot;co&quot;&gt;# Similarly enormous type&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-6&quot;&gt;&lt;a href=&quot;#cb17-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { a }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-7&quot;&gt;&lt;a href=&quot;#cb17-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; …  &lt;span class=&quot;co&quot;&gt;# Other &amp;lt;nixpkgs&amp;gt; arguments we&amp;#39;ll ignore for now&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-8&quot;&gt;&lt;a href=&quot;#cb17-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-9&quot;&gt;&lt;a href=&quot;#cb17-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay : …, hello : …, …, a }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;How do the answers to the above questions affect inferred types and error messages?&lt;/p&gt;&lt;p&gt;The inferred types would be enormous (especially for the &lt;code&gt;&amp;lt;nixpkgs&amp;gt;&lt;/code&gt; entrypoint function). They might even be infinitely large without some form of information hiding, because these derivations are infinitely deep records that refer to themselves:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix repl&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nix-repl&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; pkgs = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;nix-repl&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; pkgs.hello.out.out.out.out.out.…  &lt;span class=&quot;co&quot;&gt;# … ad infinitum&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The error messages would be &lt;em&gt;slightly&lt;/em&gt; better than current stack traces but would still have great difficulty explaining to the user what actually went wrong because the type-checker is still not operating on the same abstraction level as the overlay system. The main improvement over stack traces is that the user would now be able to annotate expressions with types to help narrow down the cause of type errors.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I would like to dwell a little bit on the incredibly large inferred type for the &lt;code&gt;&amp;lt;nixpkgs&amp;gt;&lt;/code&gt; entrypoint, because this is essentially the same problem as the one highlighted in the previous section.&lt;/p&gt;&lt;p&gt;Implementing the Nixpkgs overlay system as an embedded language within Nix means that implementation details (like scope) are exposed to the user in a way that they wouldn’t have been exposed to if they were built-in language features.&lt;/p&gt;&lt;p&gt;For example, this type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;bu&quot;&gt;:&lt;/span&gt; forall &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;a&lt;/span&gt; : Fields&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-3&quot;&gt;&lt;a href=&quot;#cb19-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;overlay&lt;/span&gt; : &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-4&quot;&gt;&lt;a href=&quot;#cb19-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;cowsay&lt;/span&gt; : …, hello : …, …, a }  &lt;span class=&quot;co&quot;&gt;# Enormous type goes here&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-5&quot;&gt;&lt;a href=&quot;#cb19-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay : …, hello : …, … }     &lt;span class=&quot;co&quot;&gt;# Similarly enormous type&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-6&quot;&gt;&lt;a href=&quot;#cb19-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;             &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { a }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-7&quot;&gt;&lt;a href=&quot;#cb19-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;,&lt;/span&gt; …  &lt;span class=&quot;co&quot;&gt;# Other &amp;lt;nixpkgs&amp;gt; arguments we&amp;#39;ll ignore for now&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-8&quot;&gt;&lt;a href=&quot;#cb19-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-9&quot;&gt;&lt;a href=&quot;#cb19-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { cowsay : …, hello : …, …, a }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… is essentially saying “our input overlay is a value that has all of these packages in scope (such as &lt;code&gt;cowsay&lt;/code&gt;, &lt;code&gt;hello&lt;/code&gt;, and every other package from Nixpkgs), and then adds some new packages to the scope.&lt;/p&gt;&lt;p&gt;That’s cool and all that we can reify this information in the language and the type, but I want to point out how awkward this is compared to good old-fashioned lexical scope natively supported by the Nix language. Let’s revisit the same example using plain-old &lt;code&gt;let&lt;/code&gt; bindings:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { }&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;cowsay&lt;/span&gt; = pkgs.cowsay.overrideAttrs &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;old:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;doCheck&lt;/span&gt; = false&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-6&quot;&gt;&lt;a href=&quot;#cb20-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-7&quot;&gt;&lt;a href=&quot;#cb20-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-8&quot;&gt;&lt;a href=&quot;#cb20-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;hello&lt;/span&gt; = pkgs.hello.overrideAttrs &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;old:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-9&quot;&gt;&lt;a href=&quot;#cb20-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;postInstall&lt;/span&gt; = &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${cowsay}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/bin/cowsay &amp;#39;Installation complete&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-10&quot;&gt;&lt;a href=&quot;#cb20-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-11&quot;&gt;&lt;a href=&quot;#cb20-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-12&quot;&gt;&lt;a href=&quot;#cb20-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-13&quot;&gt;&lt;a href=&quot;#cb20-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;hello&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If I were to ask the type-checker what the type of &lt;code&gt;cowsay&lt;/code&gt; is, I would hope that the type-checker would respond with something like:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;cowsay&lt;/code&gt; is a &lt;code&gt;Derivation&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;… and not:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;cowsay&lt;/code&gt; is an expression that begins from a context containing a value named &lt;code&gt;pkgs&lt;/code&gt; of this enormous type and then ends with a new context that is also enormous, but now extended with an additional value named &lt;code&gt;cowsay&lt;/code&gt; of type &lt;code&gt;Derivation&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;You see the problem here? By implementing this overlays sub-language within Nix we’re needlessly polluting the user experience with internal implementation details of that sub-language (such as scope and context). This is why a type-checker for Nix is not adequately equipped to explain to the user what is happening within the Nixpkgs overlay system because it’s type-checking things at the wrong abstraction level.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;So what’s the path forward for Nix? I’m not entirely sure, but here is what I think are the possible outcomes, in roughly ascending order of difficulty:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solution A:&lt;/strong&gt; Don’t implement a type system for Nix&lt;/p&gt;&lt;p&gt;Instead, try to improve the quality of stack traces and dynamic type errors.&lt;/p&gt;&lt;p&gt;For example, this is essentially the approach taken by the recent work to improve the user experience for stack traces:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/bburdette/nix-error-proposal/blob/master/proposal.md&quot;&gt;Nix Error Enhancement&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solution B:&lt;/strong&gt; Only type-check Nix “in the small”&lt;/p&gt;&lt;p&gt;This seems to be the approach that &lt;a href=&quot;https://github.com/tweag/nickel&quot;&gt;Nickel&lt;/a&gt; is taking and this also seems to be the same way that people are using &lt;a href=&quot;https://www.haskellforall.com/2017/01/typed-nix-programming-using-dhall.html&quot;&gt;dhall-to-nix&lt;/a&gt;. Users settle for type-checking smaller fragments of Nix (like individual packages or NixOS modules), but any issues that arise across package/module boundaries are still not effectively addressed.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solution C:&lt;/strong&gt; Type-check Nixpkgs overlays using a type system supporting row polymorphism&lt;/p&gt;&lt;p&gt;Some users might be willing to settle for really complicated row-polymorphic types as long as they can still statically detect packaging issues in the large.&lt;/p&gt;&lt;p&gt;I haven’t yet thought through how to type-check the NixOS module system as an embedded language, so I’m leaving that out for now, but it might be possible to also type-check that using row polymorphism 🤷🏻‍♀️.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solution D:&lt;/strong&gt; Implement the two sub-languages in an external language&lt;/p&gt;&lt;p&gt;In other words, implement the Nixpkgs overlay system and NixOS module system in a separate language that is not Nix so that overlays and modules are supported by the language along with a type system that natively understands these features. Then you could compile this external language to ordinary Nix code that is compatible with the existing Nixpkgs overlay system or NixOS module system.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solution E:&lt;/strong&gt; Like Solution D, but upstream these features into the Nix language&lt;/p&gt;&lt;p&gt;You could add Nix language support for overlays/modules, instead of implementing them as embedded domain-specific languages.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solution F:&lt;/strong&gt; Like Solution D, but without Nix as an intermediate language&lt;/p&gt;&lt;p&gt;Basically, design a new front-end programming language for the Nix store that isn’t Nix. This language would natively understand overlays and NixOS modules and would generate derivations directly without going through Nix as an intermediate language.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solution G:&lt;/strong&gt; Don’t use overlays or NixOS modules at all&lt;/p&gt;&lt;p&gt;In other words, rethink the ecosystem from the ground up to use plain old Nix the language. Obviously, this is a massive amount of work to reinvent all of Nixpkgs and NixOS and it’s not clear that people would even want this.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;My best guess is that “Solution C” or “Solution D” are the two most promising approaches that strike the right balance between how difficult they are to implement and actually addressing what users want in a type-checker. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/3989587820759658706/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/03/the-hard-part-of-type-checking-nix.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/3989587820759658706"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/3989587820759658706"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/03/the-hard-part-of-type-checking-nix.html" title="The hard part of type-checking Nix"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-1902734694250544306</id><published>2022-03-02T07:16:00.008-08:00</published><updated>2022-03-03T11:56:51.405-08:00</updated><title type="text">Applicatives should usually implement Semigroup and Monoid</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;lift-monoid&lt;/title&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@flickr&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Applicatives should usually implement Semigroup and Monoid&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;A post that explains why and when Applicative type constructors should provide lifted Semigroup and Monoid instances&quot; /&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;The gist of this post is that any type constructor &lt;code&gt;F&lt;/code&gt; that implements &lt;code&gt;Applicative&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… should &lt;em&gt;usually&lt;/em&gt; also implement the following &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;F&lt;/span&gt; a) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; liftA2 (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;F&lt;/span&gt; a) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which one can also derive using &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Monoid.html#t:Ap&quot;&gt;the &lt;code&gt;Data.Monoid.Ap&lt;/code&gt; type&lt;/a&gt;, which was created for this purpose:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt;) via (&lt;span class=&quot;dt&quot;&gt;Ap&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;F&lt;/span&gt; a)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since each type constructor that implements &lt;code&gt;Monad&lt;/code&gt; also implements &lt;code&gt;Applicative&lt;/code&gt;, this recommendation also applies for all &lt;code&gt;Monad&lt;/code&gt;s, too.&lt;/p&gt;&lt;h4 id=&quot;why-are-these-instances-useful&quot;&gt;Why are these instances useful?&lt;/h4&gt;&lt;p&gt;The above instances come in handy in conjunction with utilities from Haskell’s standard library that work with &lt;code&gt;Monoid&lt;/code&gt;s.&lt;/p&gt;&lt;p&gt;For example, a common idiom I see when doing code review is something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    …&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; process ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        process a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            …&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; bs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; inputs ::&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        inputs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; …&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    bss &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mapM&lt;/span&gt; process inputs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;concat&lt;/span&gt; bss)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but if you implemented the suggested &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances then you could replace this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    bss &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mapM&lt;/span&gt; process inputs&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;concat&lt;/span&gt; bss)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… with this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;foldMap&lt;/span&gt; process inputs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These instances also come in handy when you need to supply an empty action or empty handler for some callback.&lt;/p&gt;&lt;p&gt;For example, the &lt;code&gt;lsp&lt;/code&gt; package provides a &lt;code&gt;sendRequest&lt;/code&gt; utility which has the following type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;sendRequest&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;MonadLsp&lt;/span&gt; config f&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;SServerMethod&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;MessageParams&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;ResponseError&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;ResponseResult&lt;/span&gt; m) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ This is the callback function&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (&lt;span class=&quot;dt&quot;&gt;LspId&lt;/span&gt; m)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I won’t go into too much detail about what the type means other than to point out that this function lets a language server send a request to the client and then execute a callback function when the client responds. The callback function you provide has type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;ResponseError&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;ResponseResult&lt;/span&gt; m) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sometimes you’re not interested in the client’s response, meaning that you want to supply an empty callback that does nothing. Well, if the type constructor &lt;code&gt;f&lt;/code&gt; implements the suggested &lt;code&gt;Monoid&lt;/code&gt; instance then the empty callback is: &lt;code&gt;mempty&lt;/code&gt;.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Error&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;ResponseResult&lt;/span&gt; m) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this works because of the following three &lt;code&gt;Monoid&lt;/code&gt; instances that are automatically chained together by the compiler:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- The suggested Monoid instance that `f` would ideally provide&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (f a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In fact, certain &lt;code&gt;Applicative&lt;/code&gt;/&lt;code&gt;Monad&lt;/code&gt;-related utilites become special cases of simpler &lt;code&gt;Monoid&lt;/code&gt;-related utilities once you have this instance. For example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;You can sometimes replace &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Foldable.html#v:traverse_&quot;&gt;&lt;code&gt;traverse_&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Control-Monad.html#v:mapM_&quot;&gt;&lt;code&gt;mapM_&lt;/code&gt;&lt;/a&gt; with the simpler &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Foldable.html#v:foldMap&quot;&gt;&lt;code&gt;foldMap&lt;/code&gt;&lt;/a&gt; utility&lt;/p&gt;&lt;p&gt;Specifically, if you specialize the type of &lt;code&gt;traverse_&lt;/code&gt; / &lt;code&gt;mapM_&lt;/code&gt; to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;traverse&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt; t, &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; t a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mapM_&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt; t, &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;       f) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; t a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then &lt;code&gt;foldMap&lt;/code&gt; behaves the same way when the &lt;code&gt;Applicative&lt;/code&gt; &lt;code&gt;f&lt;/code&gt; implements the suggested instances:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;foldMap&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt; t, &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; t a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can sometimes replace &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Foldable.html#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt; / &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Control-Monad.html#v:sequence_&quot;&gt;&lt;code&gt;sequence_&lt;/code&gt;&lt;/a&gt; with the simpler &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Foldable.html#v:fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; utility&lt;/p&gt;&lt;p&gt;Specifically, if you specialize the type of &lt;code&gt;sequenceA_&lt;/code&gt; / &lt;code&gt;sequence_&lt;/code&gt; to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;sequenceA_ ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt; t, &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; t (f ()) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;sequence_&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;  ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt; t, &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt;       f) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; t (f ()) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then &lt;code&gt;fold&lt;/code&gt; behaves the same way when the &lt;code&gt;Applicative&lt;/code&gt; &lt;code&gt;f&lt;/code&gt; implements the’ suggested instances:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;fold ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Foldable&lt;/span&gt; t, &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m) &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; t m &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;You can sometimes replace &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Control-Monad.html#v:replicateM_&quot;&gt;&lt;code&gt;replicateM_&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;https://hackage.haskell.org/package/base/docs/Data-Semigroup.html#v:mtimesDefault&quot;&gt;&lt;code&gt;mtimesDefault&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Specifically, if you specialize the type of &lt;code&gt;replicateM_&lt;/code&gt; to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;replicateM_ ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f () &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then &lt;code&gt;mtimesDefault&lt;/code&gt; behaves the same way when the &lt;code&gt;Applicative&lt;/code&gt; &lt;code&gt;f&lt;/code&gt; implements the suggested instances:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;mtimesDefault ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;And you also gain access to new functionality which doesn’t currently exist in &lt;code&gt;Control.Monad&lt;/code&gt;. For example, the following specializations hold when &lt;code&gt;f&lt;/code&gt; implements the suggested instances:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- This specialization is similar to the original `foldMap` example&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;fold ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; [f [b]] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f [b]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- You can combine two handlers into a single handler&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-5&quot;&gt;&lt;a href=&quot;#cb17-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;lt;&amp;gt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ()) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-6&quot;&gt;&lt;a href=&quot;#cb17-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-7&quot;&gt;&lt;a href=&quot;#cb17-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- a.k.a. `pass` in the `relude` package&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-8&quot;&gt;&lt;a href=&quot;#cb17-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;when-should-one-not-do-this&quot;&gt;When should one not do this?&lt;/h4&gt;&lt;p&gt;You sometimes don’t want to implement the suggested &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances when other law-abiding instances are possible. For example, sometimes the &lt;code&gt;Applicative&lt;/code&gt; type constructor permits a different &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instance.&lt;/p&gt;&lt;p&gt;The classic example is lists, where the &lt;code&gt;Semigroup&lt;/code&gt; / &lt;code&gt;Monoid&lt;/code&gt; instances behave like list concatenation. Also, most of the exceptions that fall in this category are list-like, in the sense that they use the &lt;code&gt;Semigroup&lt;/code&gt; / &lt;code&gt;Monoid&lt;/code&gt; instances to model some sort of element-agnostic concatenation.&lt;/p&gt;&lt;p&gt;I view these “non-lifted” &lt;code&gt;Monoid&lt;/code&gt; instances as a missed opportunity, because these same type constructors will typically also implement the exact same behavior for their &lt;code&gt;Alternative&lt;/code&gt; instance, too, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Alternative&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;SomeListLikeType&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    empty &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (&lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which means that you have two instances doing the exact same thing, when one of those instances could have potentially have been used to support different functionality. I view the &lt;code&gt;Alternative&lt;/code&gt; instance as the more natural instance for element-agnostic concatenation since that is the only behavior the &lt;code&gt;Alternative&lt;/code&gt; class signature permits. By process of elimination, the &lt;code&gt;Monoid&lt;/code&gt; and &lt;code&gt;Semigroup&lt;/code&gt; instances should in principle be reserved for the “lifted” implementation suggested by this post.&lt;/p&gt;&lt;p&gt;However, I also understand it would be far too disruptive at this point to change these list-like &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances and expectations around them, so I think the pragmatic approach is to preserve the current Haskell ecosystem conventions, even if they strike me as less elegant.&lt;/p&gt;&lt;h4 id=&quot;why-not-use-ap-exclusively&quot;&gt;Why not use &lt;code&gt;Ap&lt;/code&gt; exclusively?&lt;/h4&gt;&lt;p&gt;The most commonly cited objection to these instances is that you technically don’t need to add these lifted &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances because you can access them “on the fly” by wrapping expressions in the &lt;code&gt;Ap&lt;/code&gt; newtype before combining them.&lt;/p&gt;&lt;p&gt;For example, even if we didn’t have a &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instance, we could still write our original example using &lt;code&gt;foldMap&lt;/code&gt;, albeit with more newtype-coercion boilerplate:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; getAp (&lt;span class=&quot;fu&quot;&gt;foldMap&lt;/span&gt; process (&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Ap&lt;/span&gt; inputs))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… or perhaps using the &lt;code&gt;newtype&lt;/code&gt; package on Hackage:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ala &lt;span class=&quot;dt&quot;&gt;Ap&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;foldMap&lt;/span&gt; process inputs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This solution is not convincing to me for a few reasons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;It’s unergonomic in general&lt;/p&gt;&lt;p&gt;There are some places where &lt;code&gt;Ap&lt;/code&gt; works just fine (such as in conjunction with &lt;code&gt;deriving via&lt;/code&gt;), but typically using &lt;code&gt;Ap&lt;/code&gt; directly within term-level code is a solution worse than the original problem; the newtype wrapping and unwrapping boilerplate more than counteracts the ergonomic improvements from using the &lt;code&gt;Semigroup&lt;/code&gt; / &lt;code&gt;Monoid&lt;/code&gt; instances.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;In my view, there’s no downside to adding &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances&lt;/p&gt;&lt;p&gt;… when only one law-abiding implementation of these instances is possible. See the caveat in the previous section.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;This line of reasoning would eliminate many other useful instances&lt;/p&gt;&lt;p&gt;For example, one might remove the &lt;code&gt;Applicative&lt;/code&gt; instance for list since it’s not the only possible instance and you could in theory always use a &lt;code&gt;newtype&lt;/code&gt; to select the desired instance.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;proof-of-laws&quot;&gt;Proof of laws&lt;/h4&gt;&lt;p&gt;For completeness, I should also mention that the suggested &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances are guaranteed to always be law-abiding instances. You can find the proof in Appendix B of my &lt;a href=&quot;https://www.haskellforall.com/2014/07/equational-reasoning-at-scale.html&quot;&gt;Equational reasoning at scale&lt;/a&gt; post.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/1902734694250544306/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/03/applicatives-should-usually-implement.html#comment-form" title="1 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1902734694250544306"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1902734694250544306"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/03/applicatives-should-usually-implement.html" title="Applicatives should usually implement Semigroup and Monoid"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-4451582993468121707</id><published>2022-02-27T18:03:00.004-08:00</published><updated>2022-03-01T18:25:08.148-08:00</updated><title type="text">What is a monad morphism (in Haskell)?</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;What is a monad morphism (in Haskell)?&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;An educational post explaining monad morphisms and their laws&quot; /&gt;  &lt;title&gt;monad-morphism&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post briefly explains what a monad morphism is in the context of Haskell, since I wanted a succinct explanation that I could refer to for other posts. In order to keep things short, I will assume that you are already comfortable with Haskell’s &lt;code&gt;Monad&lt;/code&gt; class and &lt;code&gt;do&lt;/code&gt; notation.&lt;/p&gt;&lt;p&gt;A monad morphism is:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;… a natural transformation&lt;/li&gt;&lt;li&gt;… that obeys two laws&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… so first I’ll explain what a natural transformation is followed by an explanation of the two monad morphism laws.&lt;/p&gt;&lt;h4 id=&quot;natural-transformations&quot;&gt;Natural transformations&lt;/h4&gt;&lt;p&gt;A natural transformation in Haskell is a function whose type can be expressed in terms of the following type-level operator:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE TypeOperators #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE RankNTypes    #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; m &lt;span class=&quot;op&quot;&gt;~&amp;gt;&lt;/span&gt; n &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; a &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; m a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; n a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, a natural transformation is a function that converts a value of type &lt;code&gt;m a&lt;/code&gt; into a value of type &lt;code&gt;n a&lt;/code&gt; such that it works for any possible type &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Here are some examples of natural transformations in the wild whose types could be written in terms of the above &lt;code&gt;(~&amp;gt;)&lt;/code&gt; type-level operator:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Control.Error.Util.hush&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; e a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- Either e ~&amp;gt; Maybe&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Data.Maybe.listToMaybe&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; [a] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- [] ~&amp;gt; Maybe&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;UnliftIO.Exception.fromEither&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Exception&lt;/span&gt; e &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; e a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- Exception e =&amp;gt; Either e ~&amp;gt; IO&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;Control.Monad.State.UnificationExtras.liftReaderT&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-14&quot;&gt;&lt;a href=&quot;#cb2-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monad&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;ReaderT&lt;/span&gt; e m a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;StateT&lt;/span&gt; e m a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-15&quot;&gt;&lt;a href=&quot;#cb2-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- Monad m =&amp;gt; ReaderT e m ~&amp;gt; StateT e m&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;laws&quot;&gt;Laws&lt;/h4&gt;&lt;p&gt;Now that we’ve defined what a natural transformation is we can define what a monad morphism is.&lt;/p&gt;&lt;p&gt;A monad morphism is a special case of a natural transformation (which we will denote &lt;code&gt;nat&lt;/code&gt;) that satisfies the following two laws, known as the monad morphism laws:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat (&lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; x) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat (&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; m; f x }) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; nat m; nat (f x) }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, a monad morphism “distributes over” &lt;code&gt;Monad&lt;/code&gt; operations, leaving them undisturbed, which is a useful guarantee.&lt;/p&gt;&lt;p&gt;Three of the above example natural transformations (&lt;code&gt;hush&lt;/code&gt;, &lt;code&gt;fromEither&lt;/code&gt;, and &lt;code&gt;liftReaderT&lt;/code&gt;) are also monad morphisms, since they satisfy those two monad morphism laws.  In contrast, &lt;code&gt;listToMaybe&lt;/code&gt; is an example of a natural transformation that is not a monad morphism.&lt;/p&gt;&lt;h4 id=&quot;example-proof-of-laws&quot;&gt;Example proof of laws&lt;/h4&gt;&lt;p&gt;Here is an example of how you would prove the monad morphism laws for the &lt;code&gt;hush&lt;/code&gt; function, which is defined like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;hush ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; e a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;hush (&lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt;  _) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;hush (&lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; x) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We’ll begin by proving the first monad morphism law:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;hush (&lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Add a type annotation to note that `hush` only accepts an `Either` as input&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (&lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; x ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Either&lt;/span&gt; e a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-5&quot;&gt;&lt;a href=&quot;#cb5-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-6&quot;&gt;&lt;a href=&quot;#cb5-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- return x :: Either e a = Right x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-7&quot;&gt;&lt;a href=&quot;#cb5-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-8&quot;&gt;&lt;a href=&quot;#cb5-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-9&quot;&gt;&lt;a href=&quot;#cb5-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `hush`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-10&quot;&gt;&lt;a href=&quot;#cb5-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-11&quot;&gt;&lt;a href=&quot;#cb5-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-12&quot;&gt;&lt;a href=&quot;#cb5-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- return x :: Maybe a = Just x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-13&quot;&gt;&lt;a href=&quot;#cb5-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt; x ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-14&quot;&gt;&lt;a href=&quot;#cb5-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-15&quot;&gt;&lt;a href=&quot;#cb5-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Drop the type annotation&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-16&quot;&gt;&lt;a href=&quot;#cb5-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and here is how we prove the second monad morphism law:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;hush (&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; m; f x })&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Desugar `do` notation&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;hush (m &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- There are two possible cases: `m = Left l` or `m = Right r`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;↳ &lt;span class=&quot;co&quot;&gt;-- Case: `m = Left l`:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; l &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;gt;&amp;gt;=)` for `Either e` `Monad`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-12&quot;&gt;&lt;a href=&quot;#cb6-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; l)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-13&quot;&gt;&lt;a href=&quot;#cb6-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-14&quot;&gt;&lt;a href=&quot;#cb6-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Definition of `hush`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-15&quot;&gt;&lt;a href=&quot;#cb6-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-16&quot;&gt;&lt;a href=&quot;#cb6-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-17&quot;&gt;&lt;a href=&quot;#cb6-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;gt;&amp;gt;=)` for `Maybe` `Monad`, but in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-18&quot;&gt;&lt;a href=&quot;#cb6-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; hush (f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-19&quot;&gt;&lt;a href=&quot;#cb6-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-20&quot;&gt;&lt;a href=&quot;#cb6-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Definition of `hush`, but in reverse  &lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-21&quot;&gt;&lt;a href=&quot;#cb6-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; l) &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; hush (f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-22&quot;&gt;&lt;a href=&quot;#cb6-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-23&quot;&gt;&lt;a href=&quot;#cb6-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Resugar `do` notation&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-24&quot;&gt;&lt;a href=&quot;#cb6-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; l); hush (f x) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-25&quot;&gt;&lt;a href=&quot;#cb6-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-26&quot;&gt;&lt;a href=&quot;#cb6-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- `m = Left l` in this case&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-27&quot;&gt;&lt;a href=&quot;#cb6-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; hush m; hush (f x) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-28&quot;&gt;&lt;a href=&quot;#cb6-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-29&quot;&gt;&lt;a href=&quot;#cb6-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;↳ &lt;span class=&quot;co&quot;&gt;-- Case: `m = Right r`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-30&quot;&gt;&lt;a href=&quot;#cb6-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-31&quot;&gt;&lt;a href=&quot;#cb6-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-32&quot;&gt;&lt;a href=&quot;#cb6-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;gt;&amp;gt;=)` for `Either e` `Monad`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-33&quot;&gt;&lt;a href=&quot;#cb6-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (f r)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-34&quot;&gt;&lt;a href=&quot;#cb6-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-35&quot;&gt;&lt;a href=&quot;#cb6-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;gt;&amp;gt;=)` for `Maybe` `Monad`, but in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-36&quot;&gt;&lt;a href=&quot;#cb6-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Just&lt;/span&gt; r &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; hush (f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-37&quot;&gt;&lt;a href=&quot;#cb6-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-38&quot;&gt;&lt;a href=&quot;#cb6-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Definition of `hush`, but in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-39&quot;&gt;&lt;a href=&quot;#cb6-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; r) &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; hush (f x)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-40&quot;&gt;&lt;a href=&quot;#cb6-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-41&quot;&gt;&lt;a href=&quot;#cb6-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- Resugar `do` notation&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-42&quot;&gt;&lt;a href=&quot;#cb6-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; hush (&lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; r); hush (f x) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-43&quot;&gt;&lt;a href=&quot;#cb6-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-44&quot;&gt;&lt;a href=&quot;#cb6-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;co&quot;&gt;-- `m = Right r` in this case&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-45&quot;&gt;&lt;a href=&quot;#cb6-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; hush m; hush (f x) }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;rationale-behind-the-laws&quot;&gt;Rationale behind the laws&lt;/h4&gt;&lt;p&gt;The reason we choose those laws is because they are similar to the &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/The_Functor_class#The_functor_laws&quot;&gt;functor laws&lt;/a&gt; when viewed through the appropriate lens.&lt;/p&gt;&lt;p&gt;As a recap, the functor laws say that any implementation of Haskell’s &lt;code&gt;Functor&lt;/code&gt; class must obey these two laws:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; (f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; g) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; g&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;fmap&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, the category theory notion of a functor is more general than the Haskell notion of a functor. Specifically, the more general notion of a functor lets you replace &lt;code&gt;(.)&lt;/code&gt; with any associative operator, meaning that the following law still holds:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; g) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; h &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (g &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; h)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and also lets you replace &lt;code&gt;id&lt;/code&gt; with any expression that is the identity of the corresponding &lt;code&gt;(.)&lt;/code&gt; operator, meaning that the following two laws still hold:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;f &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once we allow ourselves to introduce more exotic analogs to &lt;code&gt;(.)&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; then we can similarly introduce more exotic analogs to &lt;code&gt;fmap&lt;/code&gt; that don’t fit into the mold of Haskell’s &lt;code&gt;Functor&lt;/code&gt; class.&lt;/p&gt;&lt;p&gt;A monad morphism is one such exotic analog to &lt;code&gt;fmap&lt;/code&gt;, where we:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;… substitute &lt;code&gt;(.)&lt;/code&gt; with the &lt;code&gt;(&amp;gt;=&amp;gt;)&lt;/code&gt; operator from &lt;code&gt;Control.Monad&lt;/code&gt;&lt;/li&gt;&lt;li&gt;… substitute &lt;code&gt;id&lt;/code&gt; with &lt;code&gt;return&lt;/code&gt; from the &lt;code&gt;Monad&lt;/code&gt; class&lt;/li&gt;&lt;li&gt;… substitute &lt;code&gt;fmap&lt;/code&gt; with &lt;code&gt;(nat .)&lt;/code&gt; where &lt;code&gt;nat&lt;/code&gt; is any monad morphism&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This works out because the &lt;code&gt;(&amp;gt;=&amp;gt;)&lt;/code&gt; operator is associative:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; g) &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; h &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; (g &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; h)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and &lt;code&gt;return&lt;/code&gt; is the identity of the &lt;code&gt;(&amp;gt;=&amp;gt;)&lt;/code&gt; operator:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… so if we restate the functor laws with those substitutions, we get:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) (f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; g) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) g&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and those are the monad morphism laws, just stated in a different way.&lt;/p&gt;&lt;p&gt;We can see the correspondence to the original monad morphism laws if we simplify things a bit. We’ll begin by simplifying the first equation to get back the original first monad morphism law:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) (f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; g) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) g&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Reparenthesize things, for clarity:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (f &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; g) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; f) &lt;span class=&quot;op&quot;&gt;&amp;gt;=&amp;gt;&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; g)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(&amp;gt;=&amp;gt;)`:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- f &amp;gt;=&amp;gt; g = \x -&amp;gt; f x &amp;gt;&amp;gt;= \y -&amp;gt; g y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; g y) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; f) x &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; g) y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-10&quot;&gt;&lt;a href=&quot;#cb13-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-11&quot;&gt;&lt;a href=&quot;#cb13-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Apply both sides to `x`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-12&quot;&gt;&lt;a href=&quot;#cb13-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; g y)) x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; f) x &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; g) y&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-13&quot;&gt;&lt;a href=&quot;#cb13-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-14&quot;&gt;&lt;a href=&quot;#cb13-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(.)`:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-15&quot;&gt;&lt;a href=&quot;#cb13-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-16&quot;&gt;&lt;a href=&quot;#cb13-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (f . g) x = f (g x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-17&quot;&gt;&lt;a href=&quot;#cb13-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat ((\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; g y) x) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; nat (f x) &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; nat (g y)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-18&quot;&gt;&lt;a href=&quot;#cb13-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-19&quot;&gt;&lt;a href=&quot;#cb13-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- β-reduce&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-20&quot;&gt;&lt;a href=&quot;#cb13-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat (f x &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; g y) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; nat (f x) &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; nat (g y)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-21&quot;&gt;&lt;a href=&quot;#cb13-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-22&quot;&gt;&lt;a href=&quot;#cb13-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Replace `f x` with `m`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-23&quot;&gt;&lt;a href=&quot;#cb13-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat (m &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; g y) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; nat m &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; nat (g y)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-24&quot;&gt;&lt;a href=&quot;#cb13-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-25&quot;&gt;&lt;a href=&quot;#cb13-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Resugar using `do` notation&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-26&quot;&gt;&lt;a href=&quot;#cb13-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat (&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { y &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; m; g y }) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { y &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; nat m; nat (g y) }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-27&quot;&gt;&lt;a href=&quot;#cb13-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-28&quot;&gt;&lt;a href=&quot;#cb13-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Rename `y` to `x` and rename `g` to `f`, for consistency with original laws&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-29&quot;&gt;&lt;a href=&quot;#cb13-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat (&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; m; f x }) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt; { x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; nat m; nat (f x) }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Similarly, we can simplify the second equation to get back the original second monad morphism law:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;) &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Remove unnecessary parentheses&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Apply both sides to `x`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-7&quot;&gt;&lt;a href=&quot;#cb14-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(nat &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt;) x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-8&quot;&gt;&lt;a href=&quot;#cb14-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-9&quot;&gt;&lt;a href=&quot;#cb14-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Definition of `(.)`:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-10&quot;&gt;&lt;a href=&quot;#cb14-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-11&quot;&gt;&lt;a href=&quot;#cb14-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- (f . g) x = f (g x)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-12&quot;&gt;&lt;a href=&quot;#cb14-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nat (&lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; x) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, the monad morphism laws are functor laws in disguise.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/4451582993468121707/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/02/what-is-monad-morphism-in-haskell.html#comment-form" title="3 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4451582993468121707"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4451582993468121707"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/02/what-is-monad-morphism-in-haskell.html" title="What is a monad morphism (in Haskell)?"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-6474332043487026674</id><published>2022-01-26T07:02:00.001-08:00</published><updated>2022-01-26T07:02:43.539-08:00</updated><title type="text">Nixpkgs overlays are monoids</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;overlay-monoid&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Nixpkgs supports overriding sets of packages using &lt;a href=&quot;https://nixos.wiki/wiki/Overlays&quot;&gt;overlays&lt;/a&gt; and these overrides bear many similarities to object-oriented inheritance.&lt;/p&gt;&lt;p&gt;As a simple example, I can disable tests for the &lt;code&gt;hello&lt;/code&gt; package in Nixpkgs using code that superficially resembles a subclass overriding a superclass method:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ./example.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;overlay&lt;/span&gt; = self: super: {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;hello&lt;/span&gt; = super.hello.overrideAttrs &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;old:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;doCheck&lt;/span&gt; = false&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { overlays = [ overlay ]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs.hello&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here the &lt;code&gt;super&lt;/code&gt; identifier plays a role similar to an object-oriented superclass: if you squint and view the package set preceding the override as the “superclass” then the above code defines the &lt;code&gt;hello&lt;/code&gt; package for my “subclass” as being the same as the &lt;code&gt;hello&lt;/code&gt; package from the “superclass” except without tests.&lt;/p&gt;&lt;p&gt;Also, just like in object-oriented programming, your “methods” (i.e. packages) can refer to other “methods” from within the same “class”, using &lt;code&gt;self&lt;/code&gt;. For example, I can specify that I want the &lt;code&gt;hello&lt;/code&gt; package to gratuitously run &lt;code&gt;cowsay&lt;/code&gt; after the installation phase, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# ./example.nix&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;overlay&lt;/span&gt; = self: super: {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;hello&lt;/span&gt; = super.hello.overrideAttrs &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;old:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;postInstall&lt;/span&gt; = &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${self&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;.cowsay&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/bin/cowsay &amp;#39;Installation complete&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-10&quot;&gt;&lt;a href=&quot;#cb2-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { overlays = [ overlay ]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-11&quot;&gt;&lt;a href=&quot;#cb2-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-12&quot;&gt;&lt;a href=&quot;#cb2-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-13&quot;&gt;&lt;a href=&quot;#cb2-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs.hello&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and if we build that we’ll see the output from &lt;code&gt;cowsay&lt;/code&gt; in the build logs:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nix-build ./example.nix&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt; &lt;span class=&quot;ex&quot;&gt;_______________________&lt;/span&gt; &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; Installation &lt;span class=&quot;bu&quot;&gt;complete&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt; &lt;span class=&quot;ex&quot;&gt;-----------------------&lt;/span&gt; &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;\ &lt;/span&gt;  ^__^&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;         &lt;span class=&quot;ex&quot;&gt;\ &lt;/span&gt; &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;oo&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;\_______&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;__&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;\ &lt;/span&gt;      &lt;span class=&quot;er&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;----w&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-10&quot;&gt;&lt;a href=&quot;#cb3-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt;     &lt;span class=&quot;kw&quot;&gt;||&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-11&quot;&gt;&lt;a href=&quot;#cb3-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;@nix&lt;/span&gt; { &lt;span class=&quot;st&quot;&gt;&amp;quot;action&amp;quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&amp;quot;setPhase&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;phase&amp;quot;&lt;/span&gt;: &lt;span class=&quot;st&quot;&gt;&amp;quot;fixupPhase&amp;quot;&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-12&quot;&gt;&lt;a href=&quot;#cb3-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;post-installation&lt;/span&gt; fixup&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-13&quot;&gt;&lt;a href=&quot;#cb3-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;gzipping&lt;/span&gt; man pages under /nix/store/xid1pxd0bccq8592pbjrb5b9k4qv3zzq-hello-2.10/&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-14&quot;&gt;&lt;a href=&quot;#cb3-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;fu&quot;&gt;strip&lt;/span&gt; is /nix/store/hm2qzyqh6bh872rwlpjl4kw7a1nk173d-clang-wrapper-11.1.0/bin/st&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-15&quot;&gt;&lt;a href=&quot;#cb3-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;stripping&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;with&lt;/span&gt; command strip and flags &lt;span class=&quot;at&quot;&gt;-S&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;/nix/store/xid1pxd0bccq8592pbjrb5&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-16&quot;&gt;&lt;a href=&quot;#cb3-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;patching&lt;/span&gt; script interpreter paths in /nix/store/xid1pxd0bccq8592pbjrb5b9k4qv3zzq&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-17&quot;&gt;&lt;a href=&quot;#cb3-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;/nix/store/xid1pxd0bccq8592pbjrb5b9k4qv3zzq-hello-2.10&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also combine multiple overlays, which lets you spread out these sorts of overrides into separate logical units. For example, we can create one overlay that disable tests for the &lt;code&gt;hello&lt;/code&gt; package and a second overlay that adds the &lt;code&gt;cowsay&lt;/code&gt; post-install step, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;bu&quot;&gt;let&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;overlay0&lt;/span&gt; = self: super: {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;hello&lt;/span&gt; = super.hello.overrideAttrs &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;old:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;doCheck&lt;/span&gt; = false&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;overlay1&lt;/span&gt; = self: super: {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;hello&lt;/span&gt; = super.hello.overrideAttrs &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;old:&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-10&quot;&gt;&lt;a href=&quot;#cb4-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ex&quot;&gt;postInstall&lt;/span&gt; = &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;${self&lt;/span&gt;&lt;span class=&quot;er&quot;&gt;.cowsay&lt;/span&gt;&lt;span class=&quot;va&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;/bin/cowsay &amp;#39;Installation complete&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-11&quot;&gt;&lt;a href=&quot;#cb4-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-12&quot;&gt;&lt;a href=&quot;#cb4-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-13&quot;&gt;&lt;a href=&quot;#cb4-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-14&quot;&gt;&lt;a href=&quot;#cb4-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs&lt;/span&gt; = import &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt;nixpkgs&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; { overlays = [ overlay0 overlay1 ]&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-15&quot;&gt;&lt;a href=&quot;#cb4-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-16&quot;&gt;&lt;a href=&quot;#cb4-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;er&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-17&quot;&gt;&lt;a href=&quot;#cb4-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;pkgs.hello&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Under the hood, when you specify multiple overlays they are combined using the &lt;code&gt;pkgs.lib.composeExtensions&lt;/code&gt; function (which will be relevant in just a second).&lt;/p&gt;&lt;h4 id=&quot;monoids&quot;&gt;Monoids&lt;/h4&gt;&lt;p&gt;Overlays are not only practical, but also theoretically cool, because overlays are monoids!&lt;/p&gt;&lt;p&gt;To see why, we have to first establish the three things that constitute a monoid:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Every monoid has a corresponding type, which we’ll denote as &lt;code&gt;M&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Every monoid has an associative binary operator, which we’ll denote as &lt;code&gt;×&lt;/code&gt;&lt;/p&gt;&lt;p&gt;This operator has type: &lt;code&gt;M -&amp;gt; M -&amp;gt; M&lt;/code&gt; (using Haskell notation). In other words it is a function of two inputs of type &lt;code&gt;M&lt;/code&gt; and returns an output, also of type &lt;code&gt;M&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Every monoid has an “identity” of that operator, which we’ll denote as &lt;code&gt;1&lt;/code&gt;&lt;/p&gt;&lt;p&gt;This “identity” is a value of type &lt;code&gt;M&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;When we say that &lt;code&gt;×&lt;/code&gt; is associative, we mean that for any three values (e.g. &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt;) of type &lt;code&gt;M&lt;/code&gt;, the following equation is true:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(a × b) × c &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; a × (b × c)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, the way in which we group multiplication does not change the result. In fact, associativity means that we can elide the parentheses and the meaning of the expression is still unambiguous:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a × b × c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When we say that &lt;code&gt;1&lt;/code&gt; is the “identity” of &lt;code&gt;×&lt;/code&gt;, we mean that for any value (e.g. &lt;code&gt;a&lt;/code&gt;) of type &lt;code&gt;M&lt;/code&gt;, the following equations are true:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; × a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;a × &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;other-monoids&quot;&gt;Other monoids&lt;/h4&gt;&lt;p&gt;Here we use &lt;code&gt;×&lt;/code&gt; to denote the binary operator and &lt;code&gt;1&lt;/code&gt; to denote the corresponding identity value because we want to reuse our intuition that multiplication is associative and the number &lt;code&gt;1&lt;/code&gt; is the identity of multiplication. However, monoids are more general than numbers and multiplication; there might be other binary operators and identity elements that behave in the same way.&lt;/p&gt;&lt;p&gt;For example, Nix attribute sets are also monoids, if we replace &lt;code&gt;×&lt;/code&gt; with &lt;code&gt;//&lt;/code&gt; and replace &lt;code&gt;1&lt;/code&gt; with &lt;code&gt;{ }&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# // is an associative binary operator&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;a&lt;/span&gt; // b&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt; c = a // &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;b&lt;/span&gt; // c&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# … and { } is the identity of //&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt; a = a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;a&lt;/span&gt; // { } = a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also, as the title suggests, overlays from Nixpkgs are yet another example of a monoid! We can illustrate this by defining the three components of the “overlay monoid”:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The type &lt;code&gt;M&lt;/code&gt; (using Haskell notation) is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Nix derivations are not actually text, but this keeps the example simple&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … which we can expand out to the following equivalent type if we prefer:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The binary operator is &lt;code&gt;pkgs.lib.composeExtensions&lt;/code&gt; (the same function I mentioned earlier which combines overlays)&lt;/p&gt;&lt;p&gt;The &lt;code&gt;composeExtensions&lt;/code&gt; function is defined like this in Nixpkgs (refactored to improve the clarity of upcoming examples):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; = f: g:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;f&lt;/span&gt; self super // g self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using object-oriented terminology, you can read that as saying: “to combine the methods defined in both &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;g&lt;/code&gt;, first extend &lt;code&gt;g&lt;/code&gt;’s superclass with all of &lt;code&gt;f&lt;/code&gt;’s methods, then combine both sets of methods, giving precedence to methods defined in &lt;code&gt;g&lt;/code&gt;”.&lt;/p&gt;&lt;p&gt;The equivalent Haskell type and implementation would be:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;composeExtensions ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;composeExtensions f g &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \self super &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        Map.union (g self (Map.union (f self super) super)) (f self super)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Carefully note that in the above Haskell code:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;f&lt;/code&gt; has type &lt;code&gt;M&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;g&lt;/code&gt; has type &lt;code&gt;M&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Everything past the &lt;code&gt;=&lt;/code&gt; sign (i.e. &lt;code&gt;\self super -&amp;gt; …&lt;/code&gt;) has type &lt;code&gt;M&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It might help to expand out the Haskell type since the &lt;code&gt;M&lt;/code&gt; type synonym is hiding a lot of complexity:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- This larger type is equivalent to the previous type:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;composeExtensions&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;  ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;-- ← M&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;-- ← M&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;-- ← M&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-7&quot;&gt;&lt;a href=&quot;#cb12-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- We can expand things out further to this even larger equivalent type:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-8&quot;&gt;&lt;a href=&quot;#cb12-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;composeExtensions&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-9&quot;&gt;&lt;a href=&quot;#cb12-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;  ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-10&quot;&gt;&lt;a href=&quot;#cb12-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-11&quot;&gt;&lt;a href=&quot;#cb12-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The identity value is &lt;code&gt;(self: super: { })&lt;/code&gt; (the empty overlay)&lt;/p&gt;&lt;p&gt;The equivalent Haskell type and implementation would be:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;identityExtension ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;M&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;identityExtension &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \self super &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; Map.empty&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- The following types are also equivalent:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;identityExtension&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;identityExtension&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-10&quot;&gt;&lt;a href=&quot;#cb13-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;All we’re missing to establish that this is a bona-fide monoid is to prove that &lt;code&gt;composeExtensions&lt;/code&gt; is an associative function and that &lt;code&gt;identityExtension&lt;/code&gt; is its identity. We’ll do so using &lt;a href=&quot;https://www.haskellforall.com/2013/12/equational-reasoning.html&quot;&gt;equational reasoning&lt;/a&gt;, but in Nix rather than Haskell:&lt;/p&gt;&lt;p&gt;It’s easier to prove the identity laws, so we’ll start with those:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: { }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Replace composeExtensions with its definition&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-5&quot;&gt;&lt;a href=&quot;#cb14-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: { }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;self&lt;/span&gt; super&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-6&quot;&gt;&lt;a href=&quot;#cb14-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt;  f self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: { }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;self&lt;/span&gt; super&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-7&quot;&gt;&lt;a href=&quot;#cb14-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-8&quot;&gt;&lt;a href=&quot;#cb14-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# (self: super: e) self super = e&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-9&quot;&gt;&lt;a href=&quot;#cb14-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super: { } // f self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // { }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-10&quot;&gt;&lt;a href=&quot;#cb14-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-11&quot;&gt;&lt;a href=&quot;#cb14-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# { } // a = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-12&quot;&gt;&lt;a href=&quot;#cb14-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super: f self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // { }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-13&quot;&gt;&lt;a href=&quot;#cb14-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-14&quot;&gt;&lt;a href=&quot;#cb14-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# a // { } = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-15&quot;&gt;&lt;a href=&quot;#cb14-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super: f self super&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-16&quot;&gt;&lt;a href=&quot;#cb14-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-17&quot;&gt;&lt;a href=&quot;#cb14-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# η-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-18&quot;&gt;&lt;a href=&quot;#cb14-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The other identity law is equally simple to prove:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; f &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: { }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Replace composeExtensions with its definition&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-4&quot;&gt;&lt;a href=&quot;#cb15-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super: f self super // &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: { }&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-5&quot;&gt;&lt;a href=&quot;#cb15-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-6&quot;&gt;&lt;a href=&quot;#cb15-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# β-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-7&quot;&gt;&lt;a href=&quot;#cb15-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super: f self super // { }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-8&quot;&gt;&lt;a href=&quot;#cb15-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-9&quot;&gt;&lt;a href=&quot;#cb15-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# a // { } = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-10&quot;&gt;&lt;a href=&quot;#cb15-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super: f self super&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-11&quot;&gt;&lt;a href=&quot;#cb15-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-12&quot;&gt;&lt;a href=&quot;#cb15-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# η-reduction&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-13&quot;&gt;&lt;a href=&quot;#cb15-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, let’s prove that &lt;code&gt;composeExtensions&lt;/code&gt; is associative, which means proving that:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; f g&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;h&lt;/span&gt; =&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; f &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; g h&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We’ll begin from the left-hand side of the equation and keep rewriting until we reach the right-hand side of the equation:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode nix&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; f g&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Replace the inner composeExtensions with its definition&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   composeExtensions&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-5&quot;&gt;&lt;a href=&quot;#cb17-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: f self super // g self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-6&quot;&gt;&lt;a href=&quot;#cb17-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-7&quot;&gt;&lt;a href=&quot;#cb17-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-8&quot;&gt;&lt;a href=&quot;#cb17-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Replace the outer composeExtensions with its definition&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-9&quot;&gt;&lt;a href=&quot;#cb17-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-10&quot;&gt;&lt;a href=&quot;#cb17-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: f self super // g self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-11&quot;&gt;&lt;a href=&quot;#cb17-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;ex&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-12&quot;&gt;&lt;a href=&quot;#cb17-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-13&quot;&gt;&lt;a href=&quot;#cb17-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt;  h self&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-14&quot;&gt;&lt;a href=&quot;#cb17-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;   &lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-15&quot;&gt;&lt;a href=&quot;#cb17-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt;  &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-16&quot;&gt;&lt;a href=&quot;#cb17-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;ex&quot;&gt;f&lt;/span&gt; self super // g self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-17&quot;&gt;&lt;a href=&quot;#cb17-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-18&quot;&gt;&lt;a href=&quot;#cb17-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;ex&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-19&quot;&gt;&lt;a href=&quot;#cb17-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-20&quot;&gt;&lt;a href=&quot;#cb17-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-21&quot;&gt;&lt;a href=&quot;#cb17-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-22&quot;&gt;&lt;a href=&quot;#cb17-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# (self: super: e) self super = e&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-23&quot;&gt;&lt;a href=&quot;#cb17-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-24&quot;&gt;&lt;a href=&quot;#cb17-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;f&lt;/span&gt; self super&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-25&quot;&gt;&lt;a href=&quot;#cb17-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt;  g self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-26&quot;&gt;&lt;a href=&quot;#cb17-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt;  h self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super // g self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-27&quot;&gt;&lt;a href=&quot;#cb17-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-28&quot;&gt;&lt;a href=&quot;#cb17-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Factor out the three occurrences of `super // f self super` using a lambda&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-29&quot;&gt;&lt;a href=&quot;#cb17-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-30&quot;&gt;&lt;a href=&quot;#cb17-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;f&lt;/span&gt; self super&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-31&quot;&gt;&lt;a href=&quot;#cb17-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt;  &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super:&lt;/span&gt; g self super // h self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // g self super&lt;span class=&quot;kw&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-32&quot;&gt;&lt;a href=&quot;#cb17-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-33&quot;&gt;&lt;a href=&quot;#cb17-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-34&quot;&gt;&lt;a href=&quot;#cb17-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# e = (self: e) self&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-35&quot;&gt;&lt;a href=&quot;#cb17-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   self: super:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-36&quot;&gt;&lt;a href=&quot;#cb17-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;ex&quot;&gt;f&lt;/span&gt; self super&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-37&quot;&gt;&lt;a href=&quot;#cb17-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;//&lt;/span&gt;  &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: g self super // h self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // g self super&lt;span class=&quot;kw&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;ex&quot;&gt;self&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-38&quot;&gt;&lt;a href=&quot;#cb17-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // f self super&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-39&quot;&gt;&lt;a href=&quot;#cb17-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-40&quot;&gt;&lt;a href=&quot;#cb17-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Definition of composeExtensions, but in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-41&quot;&gt;&lt;a href=&quot;#cb17-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   composeExtensions&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-42&quot;&gt;&lt;a href=&quot;#cb17-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;ex&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-43&quot;&gt;&lt;a href=&quot;#cb17-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;self:&lt;/span&gt; super: g self super // h self &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;super&lt;/span&gt; // g self super&lt;span class=&quot;kw&quot;&gt;))&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-44&quot;&gt;&lt;a href=&quot;#cb17-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-45&quot;&gt;&lt;a href=&quot;#cb17-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;# Definition of composeExtensions, but in reverse&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-46&quot;&gt;&lt;a href=&quot;#cb17-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;=&lt;/span&gt;   composeExtensions f &lt;span class=&quot;er&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ex&quot;&gt;composeExtensions&lt;/span&gt; g h&lt;span class=&quot;kw&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;generalization&quot;&gt;Generalization&lt;/h4&gt;&lt;p&gt;In fact, the above implementation and the proofs of associativity/identity still work if you:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;replace &lt;code&gt;//&lt;/code&gt; with any associative operator&lt;/li&gt;&lt;li&gt;replace &lt;code&gt;{ }&lt;/code&gt; with the corresponding identity of the associative operator&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In other words, we can generalize our implementation by replace Nix attribute sets with any arbitrary monoid! We can codify this neat property with the following Haskell type and &lt;code&gt;Monoid&lt;/code&gt; instance:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- This generalizes our previous overlay type&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; runOverlay ::&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- The `(&amp;lt;&amp;gt;)` operator generalizes our previous `composeExtensions` function&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-5&quot;&gt;&lt;a href=&quot;#cb18-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; m) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-6&quot;&gt;&lt;a href=&quot;#cb18-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; g &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-7&quot;&gt;&lt;a href=&quot;#cb18-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; (\self super &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f self super &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; g self (super &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; f self super))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-8&quot;&gt;&lt;a href=&quot;#cb18-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-9&quot;&gt;&lt;a href=&quot;#cb18-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- `mempty` generalizes our previous `identityExtension`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-10&quot;&gt;&lt;a href=&quot;#cb18-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; m) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-11&quot;&gt;&lt;a href=&quot;#cb18-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; (\self super &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can prove that this code generalizes the previous code by showing how we can implement the old overlay type and functions in terms of the new ones. The old code becomes a special case of the new code when we replace the type parameter &lt;code&gt;m&lt;/code&gt; with &lt;code&gt;Dual (Map Text Derivation)&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE TypeApplications #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-3&quot;&gt;&lt;a href=&quot;#cb19-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Coerce&lt;/span&gt; (coerce)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-4&quot;&gt;&lt;a href=&quot;#cb19-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Map&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-5&quot;&gt;&lt;a href=&quot;#cb19-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Dual&lt;/span&gt;(..))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-6&quot;&gt;&lt;a href=&quot;#cb19-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-7&quot;&gt;&lt;a href=&quot;#cb19-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Text&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-8&quot;&gt;&lt;a href=&quot;#cb19-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-9&quot;&gt;&lt;a href=&quot;#cb19-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; runOverlay ::&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-10&quot;&gt;&lt;a href=&quot;#cb19-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-11&quot;&gt;&lt;a href=&quot;#cb19-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; m) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-12&quot;&gt;&lt;a href=&quot;#cb19-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; f &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; g &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-13&quot;&gt;&lt;a href=&quot;#cb19-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; (\self super &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f self super &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; g self (super &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; f self super))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-14&quot;&gt;&lt;a href=&quot;#cb19-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-15&quot;&gt;&lt;a href=&quot;#cb19-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; m) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-16&quot;&gt;&lt;a href=&quot;#cb19-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; (\self super &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-17&quot;&gt;&lt;a href=&quot;#cb19-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-18&quot;&gt;&lt;a href=&quot;#cb19-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-19&quot;&gt;&lt;a href=&quot;#cb19-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-20&quot;&gt;&lt;a href=&quot;#cb19-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Derivation&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-21&quot;&gt;&lt;a href=&quot;#cb19-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-22&quot;&gt;&lt;a href=&quot;#cb19-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-23&quot;&gt;&lt;a href=&quot;#cb19-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-24&quot;&gt;&lt;a href=&quot;#cb19-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;NewOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Overlay&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Dual&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;PackageSet&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-25&quot;&gt;&lt;a href=&quot;#cb19-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-26&quot;&gt;&lt;a href=&quot;#cb19-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;composeExtensions ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-27&quot;&gt;&lt;a href=&quot;#cb19-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;composeExtensions &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-28&quot;&gt;&lt;a href=&quot;#cb19-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    coerce &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;NewOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;NewOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;NewOverlay&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-29&quot;&gt;&lt;a href=&quot;#cb19-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-30&quot;&gt;&lt;a href=&quot;#cb19-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           (&lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-31&quot;&gt;&lt;a href=&quot;#cb19-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-32&quot;&gt;&lt;a href=&quot;#cb19-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;identityExtension ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-33&quot;&gt;&lt;a href=&quot;#cb19-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;identityExtension &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; coerce &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;NewOverlay&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;OldOverlay&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;I’m not sure if there would be any applications of this &lt;code&gt;Overlay&lt;/code&gt; type within the Haskell ecosystem, so I didn’t bother packaging up the latter &lt;code&gt;Overlay&lt;/code&gt; type and &lt;code&gt;Monoid&lt;/code&gt; instance. However, if you think this might be useful in your code then just let me know and I can create a tiny package for this purpose.&lt;/p&gt;&lt;p&gt;Hopefully this post illustrates how Nixpkgs overlays are actually a pretty principled system for overrides. Also, you might be able to formulate object-oriented inheritance in the same way, too, due to the similarities between Nix’s overlay system and object-oriented programming. The main difference is that Nix’s overlay system is weakly-typed, so to really give this a proper OOP treatment, you’d probably have to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;replace Nix’s attribute sets with more strongly-typed records&lt;/li&gt;&lt;li&gt;replace the &lt;code&gt;Monoid&lt;/code&gt; with a more strongly-typed &lt;code&gt;Category&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… but I haven’t taken the time to fully flesh out that idea. Also, I’m not sure if it could be implemented in Haskell, since Haskell does not support anonymous records, but it might work just fine in PureScript.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/6474332043487026674/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2022/01/nixpkgs-overlays-are-monoids.html#comment-form" title="1 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6474332043487026674"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6474332043487026674"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2022/01/nixpkgs-overlays-are-monoids.html" title="Nixpkgs overlays are monoids"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-1580072390070953211</id><published>2021-12-13T08:25:00.000-08:00</published><updated>2021-12-13T08:25:59.194-08:00</updated><title type="text">Funding isn't the problem with open source</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;funding&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;I’m writing this partially in response to the recent &lt;a href=&quot;https://www.wired.com/story/log4j-flaw-hacking-internet/&quot;&gt;&lt;code&gt;log4j&lt;/code&gt; vulnerability&lt;/a&gt;, where I see several people suggest that funding open source projects could have prevented this security meltdown from happening. In this post I hope to convince you that the biggest problem with open source projects isn’t the lack of funding.&lt;/p&gt;&lt;p&gt;Don’t get me wrong: I do believe that open source contributors should be paid a comfortable wage so that they can contribute full-time to the project. However, there is a greater disease that afflicts open source projects and funding them in the wrong way will only worsen the affliction.&lt;/p&gt;&lt;p&gt;The true problem with open source projects is &lt;em&gt;catering to the needs of large and exploitative tech companies&lt;/em&gt;. Open source projects will continue to compromise on quality, ethics, and fair working conditions so long as they view adoption by these companies as the highest measure of success.&lt;/p&gt;&lt;h4 id=&quot;the-log4j-vulnerability&quot;&gt;The &lt;code&gt;log4j&lt;/code&gt; vulnerability&lt;/h4&gt;&lt;p&gt;I don’t mean to dunk on &lt;code&gt;log4j&lt;/code&gt; or its maintainers, but the &lt;code&gt;log4j&lt;/code&gt; vulnerability perfectly illustrates the problem with putting the needs of big business first.&lt;/p&gt;&lt;p&gt;The maintainers of the &lt;code&gt;log4j&lt;/code&gt; project knew that one of the lesser-known features was potentially problematic (although perhaps they underestimated the impact). However, did not remove the feature out of concern for breaking backwards compatibility. This is covered in more detail here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://crawshaw.io/blog/log4j&quot;&gt;log4j: between a rock and a hard place&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As the above post notes, if large tech companies had funded the &lt;code&gt;log4j&lt;/code&gt; project that would have only increased the pressure to not break backwards compatibility. Large companies are notorious for being loathe to migrate their codebases to accommodate breaking changes, to the point that they will significantly fall behind on upgrades or &lt;a href=&quot;https://gist.github.com/datagrok/8577287&quot;&gt;vendor&lt;/a&gt; an open source project. These companies consistently place their priorities ahead of the needs of the wider open source ecosystem.&lt;/p&gt;&lt;h4 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h4&gt;&lt;p&gt;The &lt;code&gt;log4j&lt;/code&gt; incident is a symptom of a larger problem: many large and publicly-traded companies are exploitative and abusive and open source projects that simp for these large companies aren’t doing themselves any favors.&lt;/p&gt;&lt;p&gt;Not all companies are bad, but we can all tell when a given company has lost all sense of ethics or social responsibility when they do things like:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;engaging in anti-competitive business practices&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;exposing sensitive user data through willful neglect&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;busting unions unscrupulously&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;doing business with authoritarian regimes&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;not even attempting to morally justify their actions&lt;/p&gt;&lt;p&gt;“The shareholders made us do it”&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Is having an ethically dubious logo on your project’s page really something to be proud of? Or is it actually a red flag? Think about it:&lt;/p&gt;&lt;p&gt;Do you believe that a company that asks their employees to cut corners won’t ask open source projects they sponsor to hack around problems?&lt;/p&gt;&lt;p&gt;Do you believe that a company that colludes with other employers to depress wages will agree to fair working conditions for the open source projects they depend on?&lt;/p&gt;&lt;p&gt;Do you believe that a company that has compromised on its own morals won’t pressure its dependencies to do the same?&lt;/p&gt;&lt;h4 id=&quot;free-software-vs-open-source&quot;&gt;Free software vs open source&lt;/h4&gt;&lt;p&gt;I’m not exaggerating when I say that businesses encourage open source developers to compromise on their morals, because this has already happened.&lt;/p&gt;&lt;p&gt;The most prominent example is that the predecessor to the open source movement was the &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_software_movement&quot;&gt;free software movement&lt;/a&gt;, which was not just about making source code freely available, but also securing certain freedoms for end users, such as the right to inspect, modify and run the software their lives depend on.&lt;/p&gt;&lt;p&gt;The free software movement is fundamentally a moral movement, and whether or not you agree with their goals, their stated purpose is grounded in ethical arguments, not a business justification. Richard Stallman discusses this in &lt;a href=&quot;https://www.gnu.org/philosophy/open-source-misses-the-point.en.html&quot;&gt;Why Open Source Misses the Point of Free Software&lt;/a&gt;:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;For the free software movement, free software is an ethical imperative, essential respect for the users’ freedom. By contrast, the philosophy of open source considers issues in terms of how to make software “better”—in a practical sense only. It says that nonfree software is an inferior solution to the practical problem at hand.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In contrast, the open source movement originated when businesses pressured developers to compromise on their ethical principles (especially copyleft licenses) in favor of being as easy to commercialize as possible (especially with permissive licenses). The same essay notes:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;That is, however, what the leaders of open source decided to do. They figured that by keeping quiet about ethics and freedom, and talking only about the immediate practical benefits of certain free software, they might be able to “sell” the software more effectively to certain users, especially business.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;… and they were successful, if you define success as wildly enriching tech companies.&lt;/p&gt;&lt;h4 id=&quot;solutions&quot;&gt;Solutions&lt;/h4&gt;&lt;p&gt;I’m not an expert on fixing this problem, but I also don’t believe that open source developers need to accept exploitative working conditions. I’ll briefly mention some alternatives that people have shared with me when I’ve brought up this subject in the past.&lt;/p&gt;&lt;p&gt;First off, funding is still important (despite this post’s title) and anybody interested in doing open source full-time should read:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/nayafia/lemonade-stand&quot;&gt;A handy guide to financial support for open source&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and if you do accept sponsorships, try to steer clear of accepting funding from companies with a dubious record. Even if they never explicitly threaten to withdraw their sponsorship the implicit risk will always loom over you and influence your actions.&lt;/p&gt;&lt;p&gt;If you form a business around your open source software you should prefer more ethical and sustainable business models. For example, consider staying away from venture capital and instead see if something like a co-op might be more appropriate, which is described in more detail here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://ncbaclusa.coop/resources/what-is-a-co-op/&quot;&gt;What is a co-op?&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This is more common than you think and you can find a list of open source projects backed by co-ops here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://coophub.io&quot;&gt;CoopHub&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;However, open source developers should first reflect upon what success looks likes for their project before pursuing funding. If your measure of success is “large companies use my project or fund my project”, you still run the risk of being taken advantage of by those same companies. If your goal is to be used then, well, you’ll be used.&lt;/p&gt;&lt;p&gt;More generally, I believe that open source development should return to its roots as a free software movement guided by moral principles. Doing so would help the open source community set better boundaries, which would in turn improve software quality, funding, and working conditions. Without a moral center to give developers a spine, they’ll continue to race to the bottom to please corporate interests.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/1580072390070953211/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/12/funding-isnt-problem-with-open-source.html#comment-form" title="3 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1580072390070953211"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/1580072390070953211"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/12/funding-isnt-problem-with-open-source.html" title="Funding isn't the problem with open source"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-4263477035183497980</id><published>2021-10-21T08:26:00.000-07:00</published><updated>2021-10-21T08:26:34.215-07:00</updated><title type="text">Co-Applicative programming style</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;coapplicative&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post showcases an upcoming addition to the &lt;code&gt;contravariant&lt;/code&gt; package that permits programming in a “co-&lt;code&gt;Applicative&lt;/code&gt;” (&lt;code&gt;Divisible&lt;/code&gt;) style that greatly resembles &lt;code&gt;Applicative&lt;/code&gt; style.&lt;/p&gt;&lt;p&gt;This post assumes that you are already familiar with programming in an &lt;code&gt;Applicative&lt;/code&gt; style, but if you don’t know what that is then I recommend reading:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.staff.city.ac.uk/~ross/papers/Applicative.html&quot;&gt;Applicative Programming with Effects&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;example&quot;&gt;Example&lt;/h4&gt;&lt;p&gt;The easiest way to motivate this is through a concrete example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE NamedFieldPuns #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Functor.Contravariant&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt;(..), (&amp;gt;$&amp;lt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Functor.Contravariant.Divisible&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Divisible&lt;/span&gt;, divided)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nonNegative ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegative &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; (&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;=&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; x ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;,&lt;span class=&quot;ot&quot;&gt; y ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;,&lt;span class=&quot;ot&quot;&gt; z ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nonNegativeOctant ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z } &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (x, (y, z))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | This operator will be available in the next `contravariant` release&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;*&amp;lt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Divisible&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (a, b)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; divided&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;infixr&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This code takes a &lt;code&gt;nonNegative&lt;/code&gt; &lt;code&gt;Predicate&lt;/code&gt; on &lt;code&gt;Double&lt;/code&gt;s that returns &lt;code&gt;True&lt;/code&gt; if the double is non-negative and then uses co-&lt;code&gt;Applicative&lt;/code&gt; (&lt;code&gt;Divisible&lt;/code&gt;) style to create a &lt;code&gt;nonNegativeOctant&lt;/code&gt; &lt;code&gt;Predicate&lt;/code&gt; on &lt;code&gt;Point&lt;/code&gt;s that returns &lt;code&gt;True&lt;/code&gt; if all three coordinates of a &lt;code&gt;Point&lt;/code&gt; are non-negative.&lt;/p&gt;&lt;p&gt;The key part to zoom in on is the &lt;code&gt;nonNegativeOctant&lt;/code&gt; &lt;code&gt;Predicate&lt;/code&gt;, whose implementation superficially resembles the &lt;code&gt;Applicative&lt;/code&gt; style that we know and love:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The difference is that instead of the &lt;code&gt;&amp;lt;$&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; operators we use &lt;code&gt;&amp;gt;$&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;*&amp;lt;&lt;/code&gt;, which are their &lt;del&gt;evil twins&lt;/del&gt; dual operators&lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;. For example, you can probably see the resemblance to the following code that uses &lt;code&gt;Applicative&lt;/code&gt; style:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;readDouble ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;readDouble &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readLn&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;readPoint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;readPoint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; readDouble &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; readDouble &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; readDouble&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;types&quot;&gt;Types&lt;/h4&gt;&lt;p&gt;I’ll walk through the types involved to help explain how this style works.&lt;/p&gt;&lt;p&gt;First, we will take this expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and explicitly parenthesize the expression instead of relying on operator precedence and associativity:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; (nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; (nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So the smallest sub-expression is this one:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;nonNegative &amp;gt;*&amp;lt; nonNegative&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;… and given that the type of &lt;code&gt;nonNegative&lt;/code&gt; is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nonNegative ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the type of the &lt;code&gt;(&amp;gt;*&amp;lt;)&lt;/code&gt; operator is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;*&amp;lt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Divisible&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (a, b)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then we can specialize the &lt;code&gt;f&lt;/code&gt; in that type to &lt;code&gt;Predicate&lt;/code&gt; (since &lt;code&gt;Predicate&lt;/code&gt; implements the &lt;code&gt;Divisible&lt;/code&gt; class):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;*&amp;lt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; (a, b)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and further specialize &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to &lt;code&gt;Double&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;*&amp;lt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and from that we can conclude that the type of our subexpression is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, &lt;code&gt;nonNegative &amp;gt;*&amp;lt; nonNegative&lt;/code&gt; is a &lt;code&gt;Predicate&lt;/code&gt; whose input is a pair of &lt;code&gt;Double&lt;/code&gt;s.&lt;/p&gt;&lt;p&gt;We can then repeat the process to infer the type of this larger subexpression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; (nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, now the input is a nested tuple of three &lt;code&gt;Double&lt;/code&gt;s.&lt;/p&gt;&lt;p&gt;However, we want to work with &lt;code&gt;Point&lt;/code&gt;s rather than nested tuples, so we pre-process the input using &lt;code&gt;&amp;gt;$&amp;lt;&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; (nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; (nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    adapt ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z } &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (x, (y, z))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this works because the type of &lt;code&gt;&amp;gt;$&amp;lt;&lt;/code&gt; is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;$&amp;lt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Contravariant&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and if we specialize &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;Predicate&lt;/code&gt;, we get:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;$&amp;lt;) ::&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and we can further specialize &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, (&lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which implies that our final type is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nonNegativeOctant ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; (nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; (nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z } &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (x, (y, z))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;duals&quot;&gt;Duals&lt;/h4&gt;&lt;p&gt;We can better understand the relationship between the two sets of operators by studying their types:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | These two operators are dual to one another:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;lt;$&amp;gt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Functor&lt;/span&gt;       f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;$&amp;lt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Contravariant&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-4&quot;&gt;&lt;a href=&quot;#cb18-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-5&quot;&gt;&lt;a href=&quot;#cb18-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | These two operators are similar in spirit, but they are not really dual:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-6&quot;&gt;&lt;a href=&quot;#cb18-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;lt;*&amp;gt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-7&quot;&gt;&lt;a href=&quot;#cb18-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;*&amp;lt;) ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Divisible&lt;/span&gt;   f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a        &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (a, b)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Okay, so &lt;code&gt;(&amp;gt;*&amp;lt;)&lt;/code&gt; is not exactly the dual operator of &lt;code&gt;(&amp;lt;*&amp;gt;)&lt;/code&gt;. &lt;code&gt;(&amp;gt;*&amp;lt;)&lt;/code&gt; is actually dual to &lt;code&gt;liftA2 (,)&lt;/code&gt;&lt;a href=&quot;#fn2&quot; class=&quot;footnote-ref&quot; id=&quot;fnref2&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;(&amp;gt;*&amp;lt;)      ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Divisible&lt;/span&gt;   f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (a, b)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;liftA2 (,)&lt;span class=&quot;ot&quot;&gt; ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Applicative&lt;/span&gt; f &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; f a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f (a, b)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In fact, if we were to hypothetically redefine &lt;code&gt;(&amp;lt;*&amp;gt;)&lt;/code&gt; to be &lt;code&gt;liftA2 (,)&lt;/code&gt; then we could write &lt;code&gt;Applicative&lt;/code&gt; code that is even more symmetric to the &lt;code&gt;Divisible&lt;/code&gt; code (albeit less ergonomic):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Applicative&lt;/span&gt; (liftA2)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Prelude&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;hiding&lt;/span&gt; ((&amp;lt;*&amp;gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(&lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; liftA2 (,)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-6&quot;&gt;&lt;a href=&quot;#cb20-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;infixr&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-7&quot;&gt;&lt;a href=&quot;#cb20-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-8&quot;&gt;&lt;a href=&quot;#cb20-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;readDouble ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Double&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-9&quot;&gt;&lt;a href=&quot;#cb20-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;readDouble &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readLn&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-10&quot;&gt;&lt;a href=&quot;#cb20-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-11&quot;&gt;&lt;a href=&quot;#cb20-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;readPoint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-12&quot;&gt;&lt;a href=&quot;#cb20-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;readPoint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; readDouble &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; readDouble &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; readDouble&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-13&quot;&gt;&lt;a href=&quot;#cb20-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-14&quot;&gt;&lt;a href=&quot;#cb20-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt (x, (y, z)) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-15&quot;&gt;&lt;a href=&quot;#cb20-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-16&quot;&gt;&lt;a href=&quot;#cb20-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Compare to:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-17&quot;&gt;&lt;a href=&quot;#cb20-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nonNegativeOctant ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-18&quot;&gt;&lt;a href=&quot;#cb20-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-19&quot;&gt;&lt;a href=&quot;#cb20-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-20&quot;&gt;&lt;a href=&quot;#cb20-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z } &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (x, (y, z))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It would be nice if we could create a &lt;code&gt;(&amp;gt;*&amp;lt;)&lt;/code&gt; operator that was dual to the real &lt;code&gt;(&amp;lt;*&amp;gt;)&lt;/code&gt; operator, but I could not figure out a good way to do this.&lt;/p&gt;&lt;p&gt;If you didn’t follow all of that, the main thing you should take away from this going into the next section is:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;the &lt;code&gt;Contravariant&lt;/code&gt; class is the dual of the &lt;code&gt;Functor&lt;/code&gt; class&lt;/li&gt;&lt;li&gt;the &lt;code&gt;Divisible&lt;/code&gt; class is the dual of the &lt;code&gt;Applicative&lt;/code&gt; class&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;syntactic-sugar&quot;&gt;Syntactic sugar&lt;/h4&gt;&lt;p&gt;GHC supports the &lt;code&gt;ApplicativeDo&lt;/code&gt; extension, which lets you use &lt;code&gt;do&lt;/code&gt; notation as syntactic sugar for &lt;code&gt;Applicative&lt;/code&gt; operators. For example, we could have written our &lt;code&gt;readPoint&lt;/code&gt; function like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE ApplicativeDo #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-2&quot;&gt;&lt;a href=&quot;#cb21-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-3&quot;&gt;&lt;a href=&quot;#cb21-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;readPoint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-4&quot;&gt;&lt;a href=&quot;#cb21-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;readPoint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-5&quot;&gt;&lt;a href=&quot;#cb21-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; readDouble&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-6&quot;&gt;&lt;a href=&quot;#cb21-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    y &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; readDouble&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-7&quot;&gt;&lt;a href=&quot;#cb21-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    z &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; readDouble&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-8&quot;&gt;&lt;a href=&quot;#cb21-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which behaves in the exact same way. Actually, we didn’t even need the &lt;code&gt;ApplicativeDo&lt;/code&gt; extension because &lt;code&gt;IO&lt;/code&gt; has a &lt;code&gt;Monad&lt;/code&gt; instance and anything that has a &lt;code&gt;Monad&lt;/code&gt; instance supports &lt;code&gt;do&lt;/code&gt; notation without any extensions.&lt;/p&gt;&lt;p&gt;However, the &lt;code&gt;ApplicativeDo&lt;/code&gt; language extension does change how the &lt;code&gt;do&lt;/code&gt; notation is desugared. Without the extension the above &lt;code&gt;readPoint&lt;/code&gt; function would desugar to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb22&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb22-1&quot;&gt;&lt;a href=&quot;#cb22-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;readPoint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-2&quot;&gt;&lt;a href=&quot;#cb22-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    readDouble &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-3&quot;&gt;&lt;a href=&quot;#cb22-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    readDouble &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-4&quot;&gt;&lt;a href=&quot;#cb22-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    readDouble &lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;=&lt;/span&gt; \z &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-5&quot;&gt;&lt;a href=&quot;#cb22-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but with the &lt;code&gt;ApplicativeDo&lt;/code&gt; extension the function instead desugars to only use &lt;code&gt;Applicative&lt;/code&gt; operations instead of &lt;code&gt;Monad&lt;/code&gt; operations:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb23&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb23-1&quot;&gt;&lt;a href=&quot;#cb23-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- I don&amp;#39;t know the exact desugaring logic, but I imagine it&amp;#39;s similar to this:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-2&quot;&gt;&lt;a href=&quot;#cb23-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;readPoint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;lt;$&amp;gt;&lt;/span&gt; readDouble &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; readDouble &lt;span class=&quot;op&quot;&gt;&amp;lt;*&amp;gt;&lt;/span&gt; readDouble&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-3&quot;&gt;&lt;a href=&quot;#cb23-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-4&quot;&gt;&lt;a href=&quot;#cb23-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt x y z &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So could there be such a thing as “&lt;code&gt;DivisibleDo&lt;/code&gt;” which would introduce syntactic sugar for &lt;code&gt;Divisible&lt;/code&gt; operations?&lt;/p&gt;&lt;p&gt;I think there could be such an extension, and there are several ways you could design the user experience.&lt;/p&gt;&lt;p&gt;One approach would be to permit code like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb24&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb24-1&quot;&gt;&lt;a href=&quot;#cb24-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DivisibleFrom #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-2&quot;&gt;&lt;a href=&quot;#cb24-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-3&quot;&gt;&lt;a href=&quot;#cb24-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nonNegativeOctant ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-4&quot;&gt;&lt;a href=&quot;#cb24-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-5&quot;&gt;&lt;a href=&quot;#cb24-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    from &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-6&quot;&gt;&lt;a href=&quot;#cb24-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-7&quot;&gt;&lt;a href=&quot;#cb24-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb24-8&quot;&gt;&lt;a href=&quot;#cb24-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        z &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which would desugar to the original code that we wrote:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb25&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb25-1&quot;&gt;&lt;a href=&quot;#cb25-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-2&quot;&gt;&lt;a href=&quot;#cb25-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb25-3&quot;&gt;&lt;a href=&quot;#cb25-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z } &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (x, (y, z))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another approach could be to make the syntax look exactly like &lt;code&gt;do&lt;/code&gt; notation, except that information flows in reverse:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb26&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb26-1&quot;&gt;&lt;a href=&quot;#cb26-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DivisibleDo #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb26-2&quot;&gt;&lt;a href=&quot;#cb26-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb26-3&quot;&gt;&lt;a href=&quot;#cb26-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;nonNegativeOctant ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Predicate&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb26-4&quot;&gt;&lt;a href=&quot;#cb26-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;nonNegativeOctant &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb26-5&quot;&gt;&lt;a href=&quot;#cb26-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    x &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb26-6&quot;&gt;&lt;a href=&quot;#cb26-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    y &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb26-7&quot;&gt;&lt;a href=&quot;#cb26-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    r &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; nonNegative&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb26-8&quot;&gt;&lt;a href=&quot;#cb26-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Point&lt;/span&gt;{ x, y, z } &lt;span class=&quot;co&quot;&gt;-- `return` here would actually be a special keyword&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I assume that most people will prefer the &lt;code&gt;from&lt;/code&gt; notation, so I’ll stick to that for now.&lt;/p&gt;&lt;p&gt;If we were to implement the former &lt;code&gt;DivisibleFrom&lt;/code&gt; notation then the &lt;code&gt;Divisible&lt;/code&gt; laws stated using &lt;code&gt;from&lt;/code&gt; notation would become:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb27&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb27-1&quot;&gt;&lt;a href=&quot;#cb27-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Left identity&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-2&quot;&gt;&lt;a href=&quot;#cb27-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  from x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-3&quot;&gt;&lt;a href=&quot;#cb27-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-4&quot;&gt;&lt;a href=&quot;#cb27-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; conquer&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-5&quot;&gt;&lt;a href=&quot;#cb27-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-6&quot;&gt;&lt;a href=&quot;#cb27-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-7&quot;&gt;&lt;a href=&quot;#cb27-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-8&quot;&gt;&lt;a href=&quot;#cb27-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-9&quot;&gt;&lt;a href=&quot;#cb27-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Right identity&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-10&quot;&gt;&lt;a href=&quot;#cb27-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  from x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-11&quot;&gt;&lt;a href=&quot;#cb27-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; conquer&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-12&quot;&gt;&lt;a href=&quot;#cb27-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-13&quot;&gt;&lt;a href=&quot;#cb27-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-14&quot;&gt;&lt;a href=&quot;#cb27-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-15&quot;&gt;&lt;a href=&quot;#cb27-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-16&quot;&gt;&lt;a href=&quot;#cb27-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Associativity&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-17&quot;&gt;&lt;a href=&quot;#cb27-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  from (x, y, z)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-18&quot;&gt;&lt;a href=&quot;#cb27-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      (x, y) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; from (x, y)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-19&quot;&gt;&lt;a href=&quot;#cb27-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-20&quot;&gt;&lt;a href=&quot;#cb27-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; n&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-21&quot;&gt;&lt;a href=&quot;#cb27-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      z &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; o&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-22&quot;&gt;&lt;a href=&quot;#cb27-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-23&quot;&gt;&lt;a href=&quot;#cb27-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; from (x, y, z)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-24&quot;&gt;&lt;a href=&quot;#cb27-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-25&quot;&gt;&lt;a href=&quot;#cb27-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      (y, z) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; from (y, z)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-26&quot;&gt;&lt;a href=&quot;#cb27-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; n&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-27&quot;&gt;&lt;a href=&quot;#cb27-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    z &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; o&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-28&quot;&gt;&lt;a href=&quot;#cb27-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-29&quot;&gt;&lt;a href=&quot;#cb27-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; from (x, y, z)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-30&quot;&gt;&lt;a href=&quot;#cb27-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; m&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-31&quot;&gt;&lt;a href=&quot;#cb27-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; n&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb27-32&quot;&gt;&lt;a href=&quot;#cb27-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      z &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; o&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This explanation of how &lt;code&gt;DivisibleFrom&lt;/code&gt; would work is really hand-wavy, but if people were genuinely interested in such a language feature I might take a stab at making the semantics of &lt;code&gt;DivisibleFrom&lt;/code&gt; sufficiently precise.&lt;/p&gt;&lt;h4 id=&quot;history&quot;&gt;History&lt;/h4&gt;&lt;p&gt;The original motivation for the &lt;code&gt;(&amp;gt;*&amp;lt;)&lt;/code&gt; operator and &lt;code&gt;Divisible&lt;/code&gt; style was to support &lt;a href=&quot;https://hackage.haskell.org/package/dhall-1.40.1/docs/Dhall-Marshal-Encode.html#t:RecordEncoder&quot;&gt;compositional &lt;code&gt;RecordEncoder&lt;/code&gt;s&lt;/a&gt; for the &lt;code&gt;dhall&lt;/code&gt; package.&lt;/p&gt;&lt;p&gt;Dhall’s Haskell API defines a &lt;code&gt;RecordEncoder&lt;/code&gt; type which specifies how to convert a Haskell record to a Dhall syntax tree, and we wanted to be able to use the &lt;code&gt;Divisible&lt;/code&gt; operators to combine simpler &lt;code&gt;RecordEncoder&lt;/code&gt;s into larger &lt;code&gt;RecordEncoder&lt;/code&gt;s, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb28&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb28-1&quot;&gt;&lt;a href=&quot;#cb28-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Project&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-2&quot;&gt;&lt;a href=&quot;#cb28-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    {&lt;span class=&quot;ot&quot;&gt; name        ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-3&quot;&gt;&lt;a href=&quot;#cb28-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ,&lt;span class=&quot;ot&quot;&gt; description ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-4&quot;&gt;&lt;a href=&quot;#cb28-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ,&lt;span class=&quot;ot&quot;&gt; stars       ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-5&quot;&gt;&lt;a href=&quot;#cb28-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-6&quot;&gt;&lt;a href=&quot;#cb28-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-7&quot;&gt;&lt;a href=&quot;#cb28-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;injectProject ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Encoder&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Project&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-8&quot;&gt;&lt;a href=&quot;#cb28-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;injectProject &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-9&quot;&gt;&lt;a href=&quot;#cb28-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  recordEncoder&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-10&quot;&gt;&lt;a href=&quot;#cb28-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ( adapt &lt;span class=&quot;op&quot;&gt;&amp;gt;$&amp;lt;&lt;/span&gt; encodeFieldWith &lt;span class=&quot;st&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;        inject&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-11&quot;&gt;&lt;a href=&quot;#cb28-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; encodeFieldWith &lt;span class=&quot;st&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt; inject&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-12&quot;&gt;&lt;a href=&quot;#cb28-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;&amp;gt;*&amp;lt;&lt;/span&gt; encodeFieldWith &lt;span class=&quot;st&quot;&gt;&amp;quot;stars&amp;quot;&lt;/span&gt;       inject&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-13&quot;&gt;&lt;a href=&quot;#cb28-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-14&quot;&gt;&lt;a href=&quot;#cb28-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb28-15&quot;&gt;&lt;a href=&quot;#cb28-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    adapt &lt;span class=&quot;dt&quot;&gt;Project&lt;/span&gt;{&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;} &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; (name, (description, stars))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above example illustrates how one can assemble three smaller &lt;code&gt;RecordEncoder&lt;/code&gt;s (each of the &lt;code&gt;encodeFieldWith&lt;/code&gt; functions) into a &lt;code&gt;RecordEncoder&lt;/code&gt; for the &lt;code&gt;Project&lt;/code&gt; record by using the &lt;code&gt;Divisible&lt;/code&gt; operators.&lt;/p&gt;&lt;p&gt;If we had a &lt;code&gt;DivisibleFrom&lt;/code&gt; notation, then we could have instead written:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb29&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb29-1&quot;&gt;&lt;a href=&quot;#cb29-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;injectProject &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb29-2&quot;&gt;&lt;a href=&quot;#cb29-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    recordEncoder from &lt;span class=&quot;dt&quot;&gt;Project&lt;/span&gt;{&lt;span class=&quot;op&quot;&gt;..&lt;/span&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb29-3&quot;&gt;&lt;a href=&quot;#cb29-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        name        &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; encodeFieldWith &lt;span class=&quot;st&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;        inject&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb29-4&quot;&gt;&lt;a href=&quot;#cb29-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        description &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; encodeFieldWith &lt;span class=&quot;st&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt; inject&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb29-5&quot;&gt;&lt;a href=&quot;#cb29-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        stars       &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; encodeFieldWith &lt;span class=&quot;st&quot;&gt;&amp;quot;stars&amp;quot;&lt;/span&gt;       inject&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you’d like to view the original discussion that led to this idea you can check out the &lt;a href=&quot;https://github.com/dhall-lang/dhall-haskell/pull/775&quot;&gt;original pull request&lt;/a&gt;.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;I &lt;a href=&quot;https://github.com/ekmett/contravariant/pull/65&quot;&gt;upstreamed this &lt;code&gt;(&amp;gt;*&amp;lt;)&lt;/code&gt; operator into the &lt;code&gt;contravariant&lt;/code&gt; package&lt;/a&gt;, which means that you’ll be able to use the trick outlined in this post after the next &lt;code&gt;contravariant&lt;/code&gt; release.&lt;/p&gt;&lt;p&gt;Until then, you can define your own &lt;code&gt;(&amp;gt;*&amp;lt;)&lt;/code&gt; operator inline within your own project, which is what &lt;code&gt;dhall&lt;/code&gt; did while waiting for the operator to be upstreamed.&lt;/p&gt;&lt;section class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;&lt;hr /&gt;&lt;ol&gt;&lt;li id=&quot;fn1&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;Alright, they’re not categorically dual in a rigorous sense, but I couldn’t come up with a better term to describe their relationship to the original operators.&lt;a href=&quot;#fnref1&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li id=&quot;fn2&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;I feel like &lt;code&gt;liftA2 (,)&lt;/code&gt; should have already been added to &lt;code&gt;Control.Applicative&lt;/code&gt; by now since I believe it’s a pretty fundamental operation from a theoretical standpoint.&lt;a href=&quot;#fnref2&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/4263477035183497980/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/10/co-applicative-programming-style.html#comment-form" title="3 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4263477035183497980"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4263477035183497980"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/10/co-applicative-programming-style.html" title="Co-Applicative programming style"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-4199621134830690658</id><published>2021-10-14T08:56:00.005-07:00</published><updated>2022-03-03T15:41:42.284-08:00</updated><title type="text">Advice for aspiring bloggers</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Advice for aspiring bloggers&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;This post contains miscellaneous tips I frequently share with new bloggers.&quot; /&gt;  &lt;title&gt;writing2&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;I’m writing this post to summarize blogging advice that I’ve shared with multiple people interested in blogging. My advice (and this post) won’t be very coherent, but I hope people will still find this useful.&lt;/p&gt;&lt;p&gt;Also, this advice is targeted towards blogging and not necessarily writing in general. For example, I have 10 years of experience blogging, but less experience with other forms of writing, such as writing books or academic publications.&lt;/p&gt;&lt;h4 id=&quot;motivation&quot;&gt;Motivation&lt;/h4&gt;&lt;p&gt;Motivation is everything when it comes to blogging. I believe you should focus on motivation before working on improving anything else about your writing. In particular, if you always force yourself to set aside time to write then (in my opinion) you’re needlessly making things hard on yourself.&lt;/p&gt;&lt;p&gt;Motivation can be &lt;em&gt;found&lt;/em&gt; or &lt;em&gt;cultivated&lt;/em&gt;. Many new writers start off by &lt;em&gt;finding&lt;/em&gt; motivation; inspiration strikes and they feel compelled to share what they learned with others. However, long-term consistent writers learn how to &lt;em&gt;cultivate&lt;/em&gt; motivation so that their writing process doesn’t become “feast or famine”.&lt;/p&gt;&lt;p&gt;There is no one-size-fits-all approach to cultivating motivation, because not everybody shares the same motivation for writing. However, the first step is always reflecting upon what motivates you to write, which could be:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;sharing exciting new things you learn&lt;/li&gt;&lt;li&gt;making money&lt;/li&gt;&lt;li&gt;evangelizing a new technology or innovation&lt;/li&gt;&lt;li&gt;launching or switching to a new career&lt;/li&gt;&lt;li&gt;changing the way people think&lt;/li&gt;&lt;li&gt;improving your own understanding by teaching others&lt;/li&gt;&lt;li&gt;settling a debate or score&lt;/li&gt;&lt;li&gt;sorting out your own thoughts&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The above list is not comprehensive, and people can blog for more than one reason. For example, I find that I’m most motivated to blog when I have just finished teaching someone something new or arguing with someone. When I conclude these conversations I feel highly inspired to write.&lt;/p&gt;&lt;p&gt;Once you clue in to what motivates you, use that knowledge to cultivate your motivation. For example, if teaching people inspires me then I’ll put myself in positions where I have more opportunities to mentor others, such as becoming an engineering manager, volunteering for Google Summer of Code, or mentoring friends earlier in their careers. Similarly, if arguing with people inspires me then I could hang out on social media with an axe to grind (although I don’t do that as much these days for obvious reasons…).&lt;/p&gt;&lt;h4 id=&quot;when-inspiration-strikes&quot;&gt;When inspiration strikes&lt;/h4&gt;&lt;p&gt;That doesn’t mean that you should never write when you’re not motivated. I still sometimes write when it doesn’t strike my fancy. Why? Because inspiration doesn’t always strike at a convenient time.&lt;/p&gt;&lt;p&gt;For example, sometimes I will get “hot” to write something in the middle of my workday (such as right after a 1-on-1 conversation) and I have to put a pin in it until I have more free time later.&lt;/p&gt;&lt;p&gt;One of the hardest things about writing is that inspiration doesn’t always strike at convenient times. There are a few ways to deal with this, all of which are valid:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Write anyway, despite the inconvenience&lt;/p&gt;&lt;p&gt;Sometimes writing entails reneging on your obligations and writing anyway. This can happen when you just know the idea has to come out one way or another and it won’t necessarily happen on a convenient schedule.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Write later&lt;/p&gt;&lt;p&gt;Some topics will always inspire you every time you revisit them, so even if your excitement wears off it will come back the next time you revisit the subject.&lt;/p&gt;&lt;p&gt;For example, sometimes I will start to write about something that I’m not excited about at the moment but I remember I was excited about it before. Then as I start to write everything comes flooding back and I recapture my original excitement.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Abandon the idea&lt;/p&gt;&lt;p&gt;Sometimes you just have to completely give up on writing something.&lt;/p&gt;&lt;p&gt;I’ve thrown away a lot of writing ideas that I was really attached to because I knew I would never have the time. It happens, it’s sad when it happens, but it’s a harsh reality of life.&lt;/p&gt;&lt;p&gt;Sometimes “abandon the idea” can become “write later” if I happen to revisit the subject years later at a more opportune time, but I generally try to abandon ideas completely, otherwise they will keep distracting me and do more harm than good.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I personally have done all of the above in roughly equal measure. There is no right answer to which approach is correct and I treat it as a judgment call.&lt;/p&gt;&lt;h4 id=&quot;quantity-over-quality&quot;&gt;Quantity over quality&lt;/h4&gt;&lt;p&gt;One common pattern I see is that new bloggers tend to “over-produce” some of their initial blog posts, especially for ideas they are exceptionally attached to. This is not necessarily a bad thing, but I usually advise against it. You don’t want to put all of your eggs in one basket and you should focus on writing more frequent and less ambitious posts rather than a few overly ambitious posts, especially when starting out.&lt;/p&gt;&lt;p&gt;One reason why is that people tend to be poor judges of their own work, in my experience. Not only do you not know when inspiration will strike, but you will also not know &lt;em&gt;when inspiration has truly struck&lt;/em&gt;. There will be some times when you think something you produce is your masterpiece, your magnum opus, and other people are like “meh”. There will be other times when you put out something that feels half-baked or like a shitpost and other people will tell you that it changed their life.&lt;/p&gt;&lt;p&gt;That’s not to say that you shouldn’t focus on quality at all. Quite the opposite: the quality of your writing will improve more quickly if you write more often instead of polishing a few posts to death. You’ll get more frequent feedback from a wider audience if you keep putting your work out there regularly.&lt;/p&gt;&lt;p&gt;Great writing is learning how to build empathy for the reader and you can’t do that if you’re not regularly interacting with your audience. The more they read your work and provide feedback the better your intuition will get for what your audience needs to hear and how your writing will resonate with them. As time goes on your favorite posts will become more likely to succeed, but there will always remain a substantial element of luck to the process.&lt;/p&gt;&lt;h4 id=&quot;constraints&quot;&gt;Constraints&lt;/h4&gt;&lt;p&gt;Writing is hard, even for experienced writers like me, because writing is so underconstrained.&lt;/p&gt;&lt;p&gt;Programming is so much easier than writing for me because I get:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Tooling support&lt;/p&gt;&lt;p&gt;… such as an IDE, syntax highlighting or type-checker&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Fast feedback loop&lt;/p&gt;&lt;p&gt;For many application domains I can run my code to see if it works or not&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Clearer demonstration of value&lt;/p&gt;&lt;p&gt;I can see firsthand that my program actually does what I created it to do&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Writing, on the other hand, is orders of magnitude more freeform and nebulous than code. There are so many ways to say or present the exact same idea, because you can vary things like:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Choice of words&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Conceptual approach&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Sentence / paragraph structure&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Scope&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Diagrams / figures&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Examples&lt;/p&gt;&lt;p&gt;Oh, don’t get me started on examples. I can spend hours or even days mulling over which example to use that is &lt;em&gt;just right&lt;/em&gt;. A &lt;strong&gt;LOT&lt;/strong&gt; of my posts in my drafts have run aground on the choice of example.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There also isn’t a best way to present an idea. One way of explaining things will resonate with some people better than others.&lt;/p&gt;&lt;p&gt;On top of that the feedback loop is sloooooow. Soliciting reviews from others can take days. Or you can publish blind and hope that your own editing process and intution is good enough.&lt;/p&gt;&lt;p&gt;The way I cope is to add artificial constraints to my writing, especially when first learning to write. I came up with a very opinionated way of structuring everything and saying everything so that I could focus more on &lt;em&gt;what&lt;/em&gt; I wanted to say instead of &lt;em&gt;how&lt;/em&gt; to say it.&lt;/p&gt;&lt;p&gt;The constraints I created for myself touched upon many of the above freeform aspects of writing. Here are some examples:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Choice of words&lt;/p&gt;&lt;p&gt;I would use a very limited vocabulary for common writing tasks. In fact, I still do in some ways. For example, I still use “For example,” when introducing an example, a writing habit which still lingers to this day.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Sentence / paragraph structure&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.americanscientist.org/blog/the-long-view/the-science-of-scientific-writing&quot;&gt;The Science of Scientific Writing&lt;/a&gt; is an excellent resource for how to improve writing structure in order to aid reader comprehension.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Diagrams / figures&lt;/p&gt;&lt;p&gt;I created ASCII diagrams for all of my technical writing. It was extremely low-tech, but it got the job done.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Examples&lt;/p&gt;&lt;p&gt;I had to have three examples. Not two. Not four. Three is the magic number.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In particular, one book stood out as exceptionally helpful in this regard:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Writing-Well-Classic-Guide-Nonfiction/dp/0060891548&quot;&gt;On Writing Well: The Classic Guide to Writing Nonfiction&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The above book provides several useful rules of thumb for writing that new writers can use as constraints to help better focus their writing. You might notice that this post touches only very lightly on the technical aspects of authoring and editing writing, and that’s because all of my advice would boil down to: “go read that book”.&lt;/p&gt;&lt;p&gt;As time went on and I got more comfortable I began to deviate from these rules I had created for myself and then I could more easily find my own “voice” and writing style. However, having those guardrails in place made a big difference to me early on to keep my writing on track.&lt;/p&gt;&lt;h4 id=&quot;stamina&quot;&gt;Stamina&lt;/h4&gt;&lt;p&gt;Sometimes you need to write something over an extended period of time, long after you are motivated to do so. Perhaps this because you are obligated to do so, such as writing a blog post for work.&lt;/p&gt;&lt;p&gt;My trick to sustaining interest in posts like these is to always begin each writing session by editing what I’ve written so far. This often puts me back in the same frame of mind that I had when I first wrote the post and gives me the momentum I need to continue writing.&lt;/p&gt;&lt;h4 id=&quot;editing&quot;&gt;Editing&lt;/h4&gt;&lt;p&gt;Do not underestimate the power of editing your writing! Editing can easily transform a mediocre post into a great post.&lt;/p&gt;&lt;p&gt;However, it’s hard to edit the post after you’re done writing. By that point you’re typically eager to publish to get it off your plate, but you should really take time to still edit what you’ve written. My rule of thumb is to sleep on a post at least once and edit in the morning before I publish, but if I have extra stamina then I keep editing each day until I feel like there’s nothing left to edit.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;I’d like to conclude this post by acknowledging the blog that inspired me to start blogging:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://blog.sigfpe.com/&quot;&gt;A neighborhood of infinity&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;That blog got me excited about the intersection of mathematics and programming and I’ve been blogging ever since trying to convey the same sense of wonder I got from reading about that.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/4199621134830690658/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/10/advice-for-aspiring-bloggers.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4199621134830690658"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4199621134830690658"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/10/advice-for-aspiring-bloggers.html" title="Advice for aspiring bloggers"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-8221151036070232655</id><published>2021-10-06T07:04:00.002-07:00</published><updated>2021-10-06T11:25:10.695-07:00</updated><title type="text">The &quot;return a command&quot; trick</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;return-command&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post illustrates a trick that I’ve taught a few times to minimize the “change surface” of a Haskell program. By “change surface” I mean the number of places Haskell code needs to be updated when adding a new feature.&lt;/p&gt;&lt;h4 id=&quot;the-motivation&quot;&gt;The motivation&lt;/h4&gt;&lt;p&gt;I’ll motivate the trick through the following example code for a simple REPL:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Applicative&lt;/span&gt; ((&amp;lt;|&amp;gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Void&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text.Megaparsec&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Parsec&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Char&lt;/span&gt;            &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;System.IO&lt;/span&gt;            &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text.Megaparsec&lt;/span&gt;      &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Megaparsec&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text.Megaparsec.Char&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Megaparsec&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parsec&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-12&quot;&gt;&lt;a href=&quot;#cb1-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Print&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Save&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;FilePath&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-13&quot;&gt;&lt;a href=&quot;#cb1-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-14&quot;&gt;&lt;a href=&quot;#cb1-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parsePrint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-15&quot;&gt;&lt;a href=&quot;#cb1-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parsePrint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-16&quot;&gt;&lt;a href=&quot;#cb1-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;print&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-17&quot;&gt;&lt;a href=&quot;#cb1-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-18&quot;&gt;&lt;a href=&quot;#cb1-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-19&quot;&gt;&lt;a href=&quot;#cb1-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-20&quot;&gt;&lt;a href=&quot;#cb1-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeRest&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-21&quot;&gt;&lt;a href=&quot;#cb1-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-22&quot;&gt;&lt;a href=&quot;#cb1-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Print&lt;/span&gt; string)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-23&quot;&gt;&lt;a href=&quot;#cb1-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-24&quot;&gt;&lt;a href=&quot;#cb1-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseSave ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-25&quot;&gt;&lt;a href=&quot;#cb1-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseSave &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-26&quot;&gt;&lt;a href=&quot;#cb1-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;save&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-27&quot;&gt;&lt;a href=&quot;#cb1-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-28&quot;&gt;&lt;a href=&quot;#cb1-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-29&quot;&gt;&lt;a href=&quot;#cb1-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-30&quot;&gt;&lt;a href=&quot;#cb1-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-31&quot;&gt;&lt;a href=&quot;#cb1-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-32&quot;&gt;&lt;a href=&quot;#cb1-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-33&quot;&gt;&lt;a href=&quot;#cb1-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-34&quot;&gt;&lt;a href=&quot;#cb1-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeRest&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-35&quot;&gt;&lt;a href=&quot;#cb1-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-36&quot;&gt;&lt;a href=&quot;#cb1-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Save&lt;/span&gt; file string)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-37&quot;&gt;&lt;a href=&quot;#cb1-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-38&quot;&gt;&lt;a href=&quot;#cb1-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseCommand ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-39&quot;&gt;&lt;a href=&quot;#cb1-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseCommand &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; parsePrint &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; parseSave&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-40&quot;&gt;&lt;a href=&quot;#cb1-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-41&quot;&gt;&lt;a href=&quot;#cb1-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;main ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-42&quot;&gt;&lt;a href=&quot;#cb1-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;main &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-43&quot;&gt;&lt;a href=&quot;#cb1-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;putStr&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-44&quot;&gt;&lt;a href=&quot;#cb1-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-45&quot;&gt;&lt;a href=&quot;#cb1-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    eof &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;isEOF&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-46&quot;&gt;&lt;a href=&quot;#cb1-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-47&quot;&gt;&lt;a href=&quot;#cb1-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; eof&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-48&quot;&gt;&lt;a href=&quot;#cb1-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-49&quot;&gt;&lt;a href=&quot;#cb1-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-50&quot;&gt;&lt;a href=&quot;#cb1-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-51&quot;&gt;&lt;a href=&quot;#cb1-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-52&quot;&gt;&lt;a href=&quot;#cb1-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            text &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getLine&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-53&quot;&gt;&lt;a href=&quot;#cb1-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-54&quot;&gt;&lt;a href=&quot;#cb1-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; Megaparsec.parse parseCommand &lt;span class=&quot;st&quot;&gt;&amp;quot;(input)&amp;quot;&lt;/span&gt; text &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-55&quot;&gt;&lt;a href=&quot;#cb1-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; e &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-56&quot;&gt;&lt;a href=&quot;#cb1-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;fu&quot;&gt;putStr&lt;/span&gt; (Megaparsec.errorBundlePretty e)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-57&quot;&gt;&lt;a href=&quot;#cb1-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-58&quot;&gt;&lt;a href=&quot;#cb1-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; command &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-59&quot;&gt;&lt;a href=&quot;#cb1-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; command &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-60&quot;&gt;&lt;a href=&quot;#cb1-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Print&lt;/span&gt; string &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-61&quot;&gt;&lt;a href=&quot;#cb1-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-62&quot;&gt;&lt;a href=&quot;#cb1-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-63&quot;&gt;&lt;a href=&quot;#cb1-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Save&lt;/span&gt; file string &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-64&quot;&gt;&lt;a href=&quot;#cb1-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;writeFile&lt;/span&gt; file string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-65&quot;&gt;&lt;a href=&quot;#cb1-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-66&quot;&gt;&lt;a href=&quot;#cb1-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This REPL supports two commands: &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt; print Hello, world!&lt;br /&gt;Hello, world!&lt;br /&gt;&amp;gt; save number.txt 42&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;print&lt;/code&gt; echoes back whatever string you supply and &lt;code&gt;save&lt;/code&gt; writes the given string to a file.&lt;/p&gt;&lt;p&gt;Now suppose that we wanted to add a new &lt;code&gt;load&lt;/code&gt; command to read and display the contents of a file. We would need to change our code in four places.&lt;/p&gt;&lt;p&gt;First, we would need to change the &lt;code&gt;Command&lt;/code&gt; type to add a new &lt;code&gt;Load&lt;/code&gt; constructor:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Print&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Save&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;FilePath&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Load&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;FilePath&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Second, we would need to add a new parser to parse the &lt;code&gt;load&lt;/code&gt; command:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseLoad ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseLoad &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;load&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Load&lt;/span&gt; file)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Third, we would need to add this new parser to &lt;code&gt;parseCommand&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseCommand ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseCommand &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; parsePrint &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; parseSave &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; parseLoad&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fourth, we would need to add logic for handling our new &lt;code&gt;Load&lt;/code&gt; constructor in our &lt;code&gt;main&lt;/code&gt; loop:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; command &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Print&lt;/span&gt; string &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Save&lt;/span&gt; file string &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;writeFile&lt;/span&gt; file string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Load&lt;/span&gt; file &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readFile&lt;/span&gt; file &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I’m not a fan of this sort of program structure because the logic for how to handle each command isn’t all in one place. However, we can make a small change to our program structure that will not only simplify the code but also consolidate the logic for each command.&lt;/p&gt;&lt;h4 id=&quot;the-trick&quot;&gt;The trick&lt;/h4&gt;&lt;p&gt;We can restructure our code by changing the type of all of our parsers from this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parsePrint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseSave ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseLoad ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseCommand ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… to this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parsePrint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseSave ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseLoad ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseCommand ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, our parsers now return an actual command (i.e. &lt;code&gt;IO ()&lt;/code&gt;) instead of returning a &lt;code&gt;Command&lt;/code&gt; data structure that still needs to be interpreted.&lt;/p&gt;&lt;p&gt;This entails the following changes to the implementation of our three command parsers:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE BlockArguments #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parsePrint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parsePrint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;print&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeRest&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-11&quot;&gt;&lt;a href=&quot;#cb9-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-12&quot;&gt;&lt;a href=&quot;#cb9-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-13&quot;&gt;&lt;a href=&quot;#cb9-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-14&quot;&gt;&lt;a href=&quot;#cb9-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseSave ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-15&quot;&gt;&lt;a href=&quot;#cb9-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseSave &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-16&quot;&gt;&lt;a href=&quot;#cb9-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;save&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-17&quot;&gt;&lt;a href=&quot;#cb9-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-18&quot;&gt;&lt;a href=&quot;#cb9-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-19&quot;&gt;&lt;a href=&quot;#cb9-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-20&quot;&gt;&lt;a href=&quot;#cb9-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-21&quot;&gt;&lt;a href=&quot;#cb9-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-22&quot;&gt;&lt;a href=&quot;#cb9-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-23&quot;&gt;&lt;a href=&quot;#cb9-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-24&quot;&gt;&lt;a href=&quot;#cb9-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeRest&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-25&quot;&gt;&lt;a href=&quot;#cb9-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-26&quot;&gt;&lt;a href=&quot;#cb9-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-27&quot;&gt;&lt;a href=&quot;#cb9-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;writeFile&lt;/span&gt; file string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-28&quot;&gt;&lt;a href=&quot;#cb9-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-29&quot;&gt;&lt;a href=&quot;#cb9-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseLoad ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-30&quot;&gt;&lt;a href=&quot;#cb9-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseLoad &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-31&quot;&gt;&lt;a href=&quot;#cb9-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;load&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-32&quot;&gt;&lt;a href=&quot;#cb9-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-33&quot;&gt;&lt;a href=&quot;#cb9-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-34&quot;&gt;&lt;a href=&quot;#cb9-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-35&quot;&gt;&lt;a href=&quot;#cb9-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-36&quot;&gt;&lt;a href=&quot;#cb9-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-37&quot;&gt;&lt;a href=&quot;#cb9-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-38&quot;&gt;&lt;a href=&quot;#cb9-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readFile&lt;/span&gt; file&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-39&quot;&gt;&lt;a href=&quot;#cb9-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-40&quot;&gt;&lt;a href=&quot;#cb9-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that each parser returns an &lt;code&gt;IO ()&lt;/code&gt; action, we no longer need the &lt;code&gt;Command&lt;/code&gt; type, so we can delete the following datatype definition:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Print&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Save&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;FilePath&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Load&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;FilePath&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, our &lt;code&gt;main&lt;/code&gt; loop gets much simpler, because we no longer need to specify how to handle each command. That means that instead of handling each &lt;code&gt;Command&lt;/code&gt; constructor:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; Megaparsec.parse parseCommand &lt;span class=&quot;st&quot;&gt;&amp;quot;(input)&amp;quot;&lt;/span&gt; text &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; e &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;fu&quot;&gt;putStr&lt;/span&gt; (Megaparsec.errorBundlePretty e)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-5&quot;&gt;&lt;a href=&quot;#cb11-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; command &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-6&quot;&gt;&lt;a href=&quot;#cb11-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; command &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-7&quot;&gt;&lt;a href=&quot;#cb11-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Print&lt;/span&gt; string &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-8&quot;&gt;&lt;a href=&quot;#cb11-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-9&quot;&gt;&lt;a href=&quot;#cb11-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-10&quot;&gt;&lt;a href=&quot;#cb11-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Save&lt;/span&gt; file string &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-11&quot;&gt;&lt;a href=&quot;#cb11-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;writeFile&lt;/span&gt; file string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-12&quot;&gt;&lt;a href=&quot;#cb11-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-13&quot;&gt;&lt;a href=&quot;#cb11-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                        &lt;span class=&quot;dt&quot;&gt;Load&lt;/span&gt; file &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-14&quot;&gt;&lt;a href=&quot;#cb11-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readFile&lt;/span&gt; file&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-15&quot;&gt;&lt;a href=&quot;#cb11-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-16&quot;&gt;&lt;a href=&quot;#cb11-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                            &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… we just run whatever &lt;code&gt;IO ()&lt;/code&gt; command was parsed, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; Megaparsec.parse parseCommand &lt;span class=&quot;st&quot;&gt;&amp;quot;(input)&amp;quot;&lt;/span&gt; text &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; e &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;fu&quot;&gt;putStr&lt;/span&gt; (Megaparsec.errorBundlePretty e)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; io &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    io&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we only need to make two changes to the code any time we add a new command. For example, all of the logic for the load command is right here:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseLoad ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseLoad &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;load&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-10&quot;&gt;&lt;a href=&quot;#cb13-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readFile&lt;/span&gt; file&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-11&quot;&gt;&lt;a href=&quot;#cb13-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-12&quot;&gt;&lt;a href=&quot;#cb13-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and here:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseCommand ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseCommand &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; parsePrint &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; parseSave &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; parseLoad&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                                         &lt;span class=&quot;co&quot;&gt;-- ↑&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that’s it. We no longer need to change our REPL loop or add a new constructor to our &lt;code&gt;Command&lt;/code&gt; datatype (because there is no &lt;code&gt;Command&lt;/code&gt; datatype any longer).&lt;/p&gt;&lt;p&gt;What’s neat about this trick is that the &lt;code&gt;IO ()&lt;/code&gt; command we return has direct access to variables extracted by the corresponding &lt;code&gt;Parser&lt;/code&gt;. For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseLoad &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;load&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-4&quot;&gt;&lt;a href=&quot;#cb15-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-5&quot;&gt;&lt;a href=&quot;#cb15-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-6&quot;&gt;&lt;a href=&quot;#cb15-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- The `file` variable that we parse here …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-7&quot;&gt;&lt;a href=&quot;#cb15-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-8&quot;&gt;&lt;a href=&quot;#cb15-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-9&quot;&gt;&lt;a href=&quot;#cb15-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-10&quot;&gt;&lt;a href=&quot;#cb15-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;-- … can be referenced by the corresponding `IO` action here&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-11&quot;&gt;&lt;a href=&quot;#cb15-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readFile&lt;/span&gt; file&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-12&quot;&gt;&lt;a href=&quot;#cb15-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-13&quot;&gt;&lt;a href=&quot;#cb15-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There’s no need to pack our variables into a data structure and then unpack them again later on when we need to use them. This technique promotes tight and “vertically integrated” code where all of the logic is one place.&lt;/p&gt;&lt;h4 id=&quot;final-encodings&quot;&gt;Final encodings&lt;/h4&gt;&lt;p&gt;This trick is a special case of a more general trick known as a “final encoding” and the following post does a good job of explaining what “initial encoding” and “final encoding” mean:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.foxhound.systems/blog/final-tagless/&quot;&gt;Final tagless encodings have little to do with typeclasses&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To briefly explain initial and final encodings in my own words:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;An “initial encoding” is one where you preserve as much information as possible in a data structure&lt;/p&gt;&lt;p&gt;This keeps your options as open as possible since you haven’t specified what to do with the data yet&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A “final encoding” is one where you encode information by how you intend to use it&lt;/p&gt;&lt;p&gt;This tends to simplify your program if you know in advance how the information will be used&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The initial example from this post was an initial encoding because each &lt;code&gt;Parser&lt;/code&gt; returned a &lt;code&gt;Command&lt;/code&gt; type which preserved as much information as possible without specifying what to do with it. The final example from this post was a final encoding because we encoded our commands by directly specifying what we planned to do with them.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;This trick is not limited to returning &lt;code&gt;IO&lt;/code&gt; actions from &lt;code&gt;Parser&lt;/code&gt;s. For example, the following post illustrates a similar trick in the context of implementing configuration “wizards”:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2018/02/the-wizard-monoid.html&quot;&gt;The wizard monoid&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… where a wizard has type &lt;code&gt;IO (IO ())&lt;/code&gt; (a command that returns another command).&lt;/p&gt;&lt;p&gt;More generally, you will naturally rediscover this trick if you stick to the principle of “keep each component’s logic all in one place”. In the above example the “components” were REPL commands, but this consolidation principle is useful for any sort of plugin-like system.&lt;/p&gt;&lt;h4 id=&quot;appendix&quot;&gt;Appendix&lt;/h4&gt;&lt;p&gt;Here is the complete code for the final version of the running example if you would like to test it out yourself:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE BlockArguments #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Applicative&lt;/span&gt; ((&amp;lt;|&amp;gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Void&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text.Megaparsec&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Parsec&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Char&lt;/span&gt;            &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-8&quot;&gt;&lt;a href=&quot;#cb16-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;System.IO&lt;/span&gt;            &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-9&quot;&gt;&lt;a href=&quot;#cb16-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text.Megaparsec&lt;/span&gt;      &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Megaparsec&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-10&quot;&gt;&lt;a href=&quot;#cb16-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;qualified&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text.Megaparsec.Char&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Megaparsec&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-11&quot;&gt;&lt;a href=&quot;#cb16-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-12&quot;&gt;&lt;a href=&quot;#cb16-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parsec&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Void&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-13&quot;&gt;&lt;a href=&quot;#cb16-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-14&quot;&gt;&lt;a href=&quot;#cb16-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parsePrint ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-15&quot;&gt;&lt;a href=&quot;#cb16-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parsePrint &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-16&quot;&gt;&lt;a href=&quot;#cb16-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;print&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-17&quot;&gt;&lt;a href=&quot;#cb16-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-18&quot;&gt;&lt;a href=&quot;#cb16-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-19&quot;&gt;&lt;a href=&quot;#cb16-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-20&quot;&gt;&lt;a href=&quot;#cb16-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeRest&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-21&quot;&gt;&lt;a href=&quot;#cb16-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-22&quot;&gt;&lt;a href=&quot;#cb16-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-23&quot;&gt;&lt;a href=&quot;#cb16-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-24&quot;&gt;&lt;a href=&quot;#cb16-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-25&quot;&gt;&lt;a href=&quot;#cb16-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseSave ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-26&quot;&gt;&lt;a href=&quot;#cb16-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseSave &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-27&quot;&gt;&lt;a href=&quot;#cb16-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;save&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-28&quot;&gt;&lt;a href=&quot;#cb16-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-29&quot;&gt;&lt;a href=&quot;#cb16-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-30&quot;&gt;&lt;a href=&quot;#cb16-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-31&quot;&gt;&lt;a href=&quot;#cb16-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-32&quot;&gt;&lt;a href=&quot;#cb16-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-33&quot;&gt;&lt;a href=&quot;#cb16-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-34&quot;&gt;&lt;a href=&quot;#cb16-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-35&quot;&gt;&lt;a href=&quot;#cb16-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeRest&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-36&quot;&gt;&lt;a href=&quot;#cb16-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-37&quot;&gt;&lt;a href=&quot;#cb16-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-38&quot;&gt;&lt;a href=&quot;#cb16-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;writeFile&lt;/span&gt; file string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-39&quot;&gt;&lt;a href=&quot;#cb16-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-40&quot;&gt;&lt;a href=&quot;#cb16-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseLoad ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-41&quot;&gt;&lt;a href=&quot;#cb16-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseLoad &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-42&quot;&gt;&lt;a href=&quot;#cb16-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.string &lt;span class=&quot;st&quot;&gt;&amp;quot;load&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-43&quot;&gt;&lt;a href=&quot;#cb16-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-44&quot;&gt;&lt;a href=&quot;#cb16-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    Megaparsec.space1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-45&quot;&gt;&lt;a href=&quot;#cb16-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-46&quot;&gt;&lt;a href=&quot;#cb16-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    file &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; Megaparsec.takeWhile1P &lt;span class=&quot;dt&quot;&gt;Nothing&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Char&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;isSpace&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-47&quot;&gt;&lt;a href=&quot;#cb16-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-48&quot;&gt;&lt;a href=&quot;#cb16-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-49&quot;&gt;&lt;a href=&quot;#cb16-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        string &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;readFile&lt;/span&gt; file&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-50&quot;&gt;&lt;a href=&quot;#cb16-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-51&quot;&gt;&lt;a href=&quot;#cb16-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; string&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-52&quot;&gt;&lt;a href=&quot;#cb16-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-53&quot;&gt;&lt;a href=&quot;#cb16-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;parseCommand ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Parser&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ())&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-54&quot;&gt;&lt;a href=&quot;#cb16-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;parseCommand &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; parsePrint &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; parseSave &lt;span class=&quot;op&quot;&gt;&amp;lt;|&amp;gt;&lt;/span&gt; parseLoad&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-55&quot;&gt;&lt;a href=&quot;#cb16-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-56&quot;&gt;&lt;a href=&quot;#cb16-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;main ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt; ()&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-57&quot;&gt;&lt;a href=&quot;#cb16-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;main &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-58&quot;&gt;&lt;a href=&quot;#cb16-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;putStr&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;gt; &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-59&quot;&gt;&lt;a href=&quot;#cb16-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-60&quot;&gt;&lt;a href=&quot;#cb16-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    eof &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;isEOF&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-61&quot;&gt;&lt;a href=&quot;#cb16-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-62&quot;&gt;&lt;a href=&quot;#cb16-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;if&lt;/span&gt; eof&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-63&quot;&gt;&lt;a href=&quot;#cb16-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-64&quot;&gt;&lt;a href=&quot;#cb16-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;fu&quot;&gt;putStrLn&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-65&quot;&gt;&lt;a href=&quot;#cb16-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-66&quot;&gt;&lt;a href=&quot;#cb16-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;kw&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-67&quot;&gt;&lt;a href=&quot;#cb16-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            text &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;getLine&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-68&quot;&gt;&lt;a href=&quot;#cb16-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-69&quot;&gt;&lt;a href=&quot;#cb16-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; Megaparsec.parse parseCommand &lt;span class=&quot;st&quot;&gt;&amp;quot;(input)&amp;quot;&lt;/span&gt; text &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-70&quot;&gt;&lt;a href=&quot;#cb16-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Left&lt;/span&gt; e &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-71&quot;&gt;&lt;a href=&quot;#cb16-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    &lt;span class=&quot;fu&quot;&gt;putStr&lt;/span&gt; (Megaparsec.errorBundlePretty e)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-72&quot;&gt;&lt;a href=&quot;#cb16-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-73&quot;&gt;&lt;a href=&quot;#cb16-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Right&lt;/span&gt; io &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-74&quot;&gt;&lt;a href=&quot;#cb16-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    io&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-75&quot;&gt;&lt;a href=&quot;#cb16-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-76&quot;&gt;&lt;a href=&quot;#cb16-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/8221151036070232655/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/10/the-return-command-trick.html#comment-form" title="3 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/8221151036070232655"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/8221151036070232655"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/10/the-return-command-trick.html" title="The &quot;return a command&quot; trick"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-4425805969638051792</id><published>2021-09-29T07:27:00.001-07:00</published><updated>2022-04-23T22:09:16.861-07:00</updated><title type="text">Fall-from-Grace: A ready-to-fork functional programming language</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;&lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;&lt;meta name=&quot;twitter:title&quot; content=&quot;Fall-from-Grace: A ready-to-fork functional programming language&quot; /&gt;&lt;meta name=&quot;twitter:description&quot; content=&quot;A reference implementation of a functional language with JSON-like syntax and Dhall-style imports&quot; /&gt;  &lt;title&gt;Fall-from-Grace: A ready-to-fork functional programming language&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;I’m publishing a repository containing a programming language implementation named Fall-from-Grace (or “Grace” for short). The goal of this language is to improve the quality of domain-specific languages by providing a useful starting point for implementers to fork and build upon.&lt;/p&gt;&lt;p&gt;You can visit &lt;a href=&quot;https://github.com/Gabriel439/grace&quot;&gt;the project repository&lt;/a&gt; if you want to cut to the chase. The &lt;code&gt;README&lt;/code&gt; already provides most of the information that you will need to begin using the language. This announcement post focuses more upon the history and motivation behind this project. Specifically, I imagine some people will want to understand how this work relates to my work on &lt;a href=&quot;https://dhall-lang.org/&quot;&gt;Dhall&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: I created a functional language that is a superset of JSON, sort of like Jsonnet but with types and bidirectional type inference.&lt;/p&gt;&lt;h4 id=&quot;the-motivation&quot;&gt;The motivation&lt;/h4&gt;&lt;p&gt;The original motivation for this project was very different than the goal I finally settled upon. My original goal was to build a type checker with type inference for Nix, since this is something that a lot of people wanted (myself included). However, I bit off more than I could chew because Nix permits all sorts of stuff that is difficult to type-check (like computed record fields or the &lt;code&gt;callPackages&lt;/code&gt; idiom in Nixpkgs).&lt;/p&gt;&lt;p&gt;I lost steam on my Nix type-checker (for now) but then I realized that I had still built a fairly sophisticated interpreter implementation along the way that other people might find useful. In particular, this was my first new interpreter project in years since I created &lt;a href=&quot;https://dhall-lang.org&quot;&gt;Dhall&lt;/a&gt;, and I had learned quite a few lessons from Dhall about interpreter best practices.&lt;/p&gt;&lt;p&gt;“So”, I thought, “why not publish what I had created so far?”&lt;/p&gt;&lt;p&gt;Well, I can think of one very good reason why not: I want to continue to support and improve upon Dhall because people are using Dhall in production and I have neither the time nor the inclination to build yet another ecosystem around a new programming language. But somebody else might!&lt;/p&gt;&lt;p&gt;So I took the project in a totally different direction: publish an instructive implementation of a programming language that others could fork and build upon.&lt;/p&gt;&lt;p&gt;Unlike Dhall, this new language would not be encumbered by the need to support a language standard or multiple independent implementations, so I could go nuts with adding features that I omitted from Dhall. Also, this language would not be published in any way so that I could keep the implementation clear, opinionated, and maintainable. In other words, this language would be like an “executable tutorial”.&lt;/p&gt;&lt;h4 id=&quot;the-starting-point&quot;&gt;The starting point&lt;/h4&gt;&lt;p&gt;I designed the initial feature set of this new language based on feedback I had received from Dhall’s skeptics. The rough language these people had in mind went something like this:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The language had to have bidirectional type inference&lt;/p&gt;&lt;p&gt;The most common criticism I received about Dhall was about Dhall’s limited type inference.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The language had to have JSON-compatible syntax&lt;/p&gt;&lt;p&gt;One of the things that had prevented people from using Dhall was that the migration story was not as smooth as, say, CUE (which is a superset of YAML) or Jsonnet (which is a superset of JSON), because Dhall was not a superset of any existing file format.&lt;/p&gt;&lt;p&gt;Also, many people indicated that JSON syntax would be easier for beginners to pick up, since they would likely be comfortable with JSON if they had prior experience working with JavaScript or Python.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The language had to have JSON-compatible types&lt;/p&gt;&lt;p&gt;JSON permits all sorts of silliness (like &lt;code&gt;[ 1, [] ]&lt;/code&gt;), and people wanted a type system that can cope with that stuff, while still getting most of the benefits of working with types. Basically, they wanted something sort of like TypeScript’s type system.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;They don’t want to run arbitrary code&lt;/p&gt;&lt;p&gt;TypeScript already checks off most of the above points, but these people were looking for alternatives because they didn’t want to permit users to run arbitrary JavaScript. In other words, they don’t want a language that is &lt;a href=&quot;https://twitter.com/edwinbrady/status/384671269490540544&quot;&gt;“Pac-Man complete”&lt;/a&gt; and instead want something more limited as a clean slate for building their own domain-specific languages.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;what-i-actually-built&quot;&gt;What I actually built&lt;/h4&gt;&lt;p&gt;I created the &lt;a href=&quot;https://github.com/Gabriel439/grace&quot;&gt;Fall-from-Grace&lt;/a&gt; language, which is my best attempt to approximate the Dhall alternative that most people were looking for.&lt;/p&gt;&lt;p&gt;Fall-from-Grace has:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;JSON-compatible syntax&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Bidirectional type-inference and type-checking&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A JSON-compatible type system&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Dhall-style filepath and URL imports&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Fast interpretation&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Open records and open unions&lt;/p&gt;&lt;p&gt;a.k.a. row polymorphism and polymorphic variants&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Universal quantification and existential quantification&lt;/p&gt;&lt;p&gt;a.k.a. “generics” and “typed holes”&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;One way to think of Grace is like “Dhall but with better type inference and JSON syntax”. For example, here is the Grace equivalent of the tutorial example from &lt;a href=&quot;https://dhall-lang.org/&quot;&gt;dhall-lang.org&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;# ./users.ffg&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; makeUser &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; \user &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; home       &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/home/&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; user&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; privateKey &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; home &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/.ssh/id_ed25519&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; publicKey  &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; privateKey &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;.pub&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-7&quot;&gt;&lt;a href=&quot;#cb1-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  { home&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; home, privateKey&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; privateKey, publicKey&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; publicKey }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-8&quot;&gt;&lt;a href=&quot;#cb1-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-9&quot;&gt;&lt;a href=&quot;#cb1-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  [ makeUser &lt;span class=&quot;st&quot;&gt;&amp;quot;bill&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-10&quot;&gt;&lt;a href=&quot;#cb1-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    , makeUser &lt;span class=&quot;st&quot;&gt;&amp;quot;jane&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-11&quot;&gt;&lt;a href=&quot;#cb1-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which produces this result:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; grace interpret ./users.ffg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode json&quot;&gt;&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;&amp;quot;home&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/home/bill&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;&amp;quot;privateKey&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/home/bill/.ssh/id_ed25519&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;&amp;quot;publicKey&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/home/bill/.ssh/id_ed25519.pub&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;&amp;quot;home&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/home/jane&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;&amp;quot;privateKey&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/home/jane/.ssh/id_ed25519&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;fu&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;&amp;quot;publicKey&amp;quot;&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;/home/jane/.ssh/id_ed25519.pub&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;fu&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-9&quot;&gt;&lt;a href=&quot;#cb3-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just like Dhall, Grace supports &lt;code&gt;let&lt;/code&gt; expressions and anonymous functions for simplifying repetitive expressions. However, there are two differences here compared to Dhall:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Grace uses JSON-like syntax for records (i.e. &lt;code&gt;:&lt;/code&gt; instead of &lt;code&gt;=&lt;/code&gt; to separate key-value pairs)&lt;/p&gt;&lt;p&gt;Because Grace is a superset of JSON you don’t need a separate &lt;code&gt;grace-to-json&lt;/code&gt; tool like Dhall. The result of interpreting Grace code is already valid JSON.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Grace has better type inference and doesn’t require annotating the type of the &lt;code&gt;user&lt;/code&gt; function argument&lt;/p&gt;&lt;p&gt;The interpreter can work backwards to infer that the &lt;code&gt;user&lt;/code&gt; function argument must have type &lt;code&gt;Text&lt;/code&gt; based on how &lt;code&gt;user&lt;/code&gt; is used.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Another way to think of Grace is as “Jsonnet + types + type inference”. Grace and Jsonnet are both &lt;a href=&quot;https://docs.dhall-lang.org/discussions/Programmable-configuration-files.html&quot;&gt;programmable configuration languages&lt;/a&gt; and they’re both supersets of JSON, but Grace has a type system whereas Jsonnet does not.&lt;/p&gt;&lt;p&gt;The following example Grace code illustrates this by fetching all post titles from the &lt;a href=&quot;https://www.reddit.com/r/haskell/&quot;&gt;Haskell subreddit&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;pp&quot;&gt;# ./reddit-haskell.ffg&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; input&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; https&lt;span class=&quot;op&quot;&gt;://&lt;/span&gt;www&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;reddit&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;r&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;haskell&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;json&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { &lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { children&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; { &lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { title&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; }, &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; }, &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; }, &lt;span class=&quot;op&quot;&gt;?&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;fu&quot;&gt;map&lt;/span&gt; (\child &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; child&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;title) input&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;children&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which at the time of this writing produces the following result:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; grace interpret ./reddit-haskell.ffg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode json&quot;&gt;&lt;code class=&quot;sourceCode json&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Monthly Hask Anything (September 2021)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Big problems at the timezone database&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;How can Haskell programmers tolerate Space Leaks?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;async graph traversal in haskell&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;[ANN] Call For Volunteers: Join The New &lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;Our Foundation Task Force&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Math lesson to be learned here?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;In search a functional job&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Integer coordinate from String&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;New to Haskell&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Variable not in scope error&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;HF Technical Track Elections - Announcements&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-12&quot;&gt;&lt;a href=&quot;#cb6-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Learning Haskell by building a static blog generator&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-13&quot;&gt;&lt;a href=&quot;#cb6-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Haskell Foundation Board meeting minutes 2021-09-23&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-14&quot;&gt;&lt;a href=&quot;#cb6-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Haskell extension 1.7.0 VS Code crashing&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-15&quot;&gt;&lt;a href=&quot;#cb6-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;[question] Nix/Obelisk with cabal packages intended for hackage&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-16&quot;&gt;&lt;a href=&quot;#cb6-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;George Wilson - Cultivating an Engineering Dialect (YOW! Lambda Jam 2021)&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-17&quot;&gt;&lt;a href=&quot;#cb6-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;A new programming game, Swarm by Brent Yorgey&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-18&quot;&gt;&lt;a href=&quot;#cb6-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Scheme in 48 hours, First chapter issue&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-19&quot;&gt;&lt;a href=&quot;#cb6-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Recursively delete JSON keys&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-20&quot;&gt;&lt;a href=&quot;#cb6-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Issue 282 :: Haskell Weekly newsletter&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-21&quot;&gt;&lt;a href=&quot;#cb6-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Haskell&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-22&quot;&gt;&lt;a href=&quot;#cb6-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Yaml parsing with preserved line numbers&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-23&quot;&gt;&lt;a href=&quot;#cb6-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;I would like some input on my code if anybody have time. I recently discovered that i can use variables in Haskell (thought one could not use them for some reason). Would just like some input on how i have done it.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-24&quot;&gt;&lt;a href=&quot;#cb6-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Diehl&amp;#39;s comments on Haskell numbers confuse...&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-25&quot;&gt;&lt;a href=&quot;#cb6-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Please explain this syntax&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-26&quot;&gt;&lt;a href=&quot;#cb6-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Can Haskell automatically fuse folds?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-27&quot;&gt;&lt;a href=&quot;#cb6-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we can see:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Dhall-style URL imports&lt;/p&gt;&lt;p&gt;We can import JSON (or any Grace code) from a URL just by pasting the URL into our code&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Any JSON expression (like &lt;code&gt;haskell.json&lt;/code&gt;) is also a valid Grace expression that we can transform&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;We can give a partial type signature with holes (i.e. &lt;code&gt;?&lt;/code&gt;) specifying which parts we care about and which parts to ignore&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Grace’s type system is even more sophisticated than that example lets on. For example, if you ask &lt;code&gt;grace&lt;/code&gt; for the type of this anonymous function from the example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\child &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; child&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;title&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then the interpreter will infer the most general type possible without any assistance from the programmer:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (b &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Fields&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (c &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Fields&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  { &lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { title&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; a, b }, c } &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is an example of row-polymorphism (what Grace calls “open records”).&lt;/p&gt;&lt;p&gt;Grace also supports polymorphic variants (what Grace calls “open unions”), so you can wrap values of different types in constructors without having to declare any union type in advance:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dt&quot;&gt;GitHub&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    { repository&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://github.com/Gabriel439/Haskell-Turtle-Library.git&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    , revision&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ae5edf227b515b34c1cb6c89d9c58ea0eece12d5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Local&lt;/span&gt; { path&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;~/proj/optparse-applicative&amp;quot;&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Local&lt;/span&gt; { path&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;~/proj/discrimination&amp;quot;&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Hackage&lt;/span&gt; { package&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;lens&amp;quot;&lt;/span&gt;, version&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;4.15.4&amp;quot;&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;GitHub&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    { repository&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://github.com/haskell/text.git&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    , revision&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ccbfabedea1cf5b38ff19f37549feaf01225e537&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-11&quot;&gt;&lt;a href=&quot;#cb9-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-12&quot;&gt;&lt;a href=&quot;#cb9-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Local&lt;/span&gt; { path&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;~/proj/servant-swagger&amp;quot;&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-13&quot;&gt;&lt;a href=&quot;#cb9-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Hackage&lt;/span&gt; { package&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;aeson&amp;quot;&lt;/span&gt;, version&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;1.2.3.0&amp;quot;&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-14&quot;&gt;&lt;a href=&quot;#cb9-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the interpreter automatically infers the most general type for that, too:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Alternatives&lt;/span&gt;) &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;GitHub&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { repository&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, revision&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-4&quot;&gt;&lt;a href=&quot;#cb10-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Local&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { path&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-5&quot;&gt;&lt;a href=&quot;#cb10-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Hackage&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { package&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, version&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-6&quot;&gt;&lt;a href=&quot;#cb10-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-7&quot;&gt;&lt;a href=&quot;#cb10-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Open records + opens unions + type inference mean that the language does not require any data declarations to process input. The interpreter infers the shape of the data from how the data is used.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;If you want to learn more about Grace then you should check out the &lt;a href=&quot;https://github.com/Gabriel439/grace#grace&quot;&gt;&lt;code&gt;README&lt;/code&gt;&lt;/a&gt;, which goes into more detail about the language features, and also includes a brief tutorial.&lt;/p&gt;&lt;p&gt;I also want to conclude by briefly mentioning some other secondary motivations for this project:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;I want to cement Haskell’s status as the language of choice for implementing interpreters&lt;/p&gt;&lt;p&gt;I gave a longer talk on this subject where I argue that Haskell can go mainstream by cornering the “market” for interpreted languages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=fNpsgTIpODA&quot;&gt;How to market Haskell to a mainstream programmer&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;I hope to promote certain Haskell best practices for implementing interpreters&lt;/p&gt;&lt;p&gt;Grace provides a model project for implementing an interpreted language in Haskell, including project organization, choice of dependencies, and choice of algorithms. Even if people choose to not fork Grace I hope that this project will provide some useful opinionated decisions to help get them going.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;I mentor several people learning programming language theory and I wanted instructive example code to reference when teaching them&lt;/p&gt;&lt;p&gt;One of the hardest parts about teaching programming language theory is that it’s hard to explain how to combine language features from more than one paper. Grace provides the complete picture by showing how to mix together multiple advanced features.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;I wanted to prototype a few language features for Dhall’s language standard&lt;/p&gt;&lt;p&gt;For example, I wanted to see how realistic it would be to standardize bidirectional type-checking for Dhall. I may write a follow-up post on what I learned regarding that.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;I also wanted to prototype a few implementation techniques for the Haskell implementation of Dhall&lt;/p&gt;&lt;p&gt;The Haskell implementation of Dhall is complicated enough that it’s hard to test drive some implementation improvements I had in mind, but Grace was small enough that I could learn and iterate on some ideas more quickly.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I don’t plan on building an ecosystem around Grace, although anybody who is interested in doing so can freely fork the language. Now that Grace is complete I plan on using what I learned from Grace to continue improving Dhall.&lt;/p&gt;&lt;p&gt;I also don’t plan on publishing Grace as a package to Hackage nor do I plan to provide an API for customizing the language behavior (other than forking the language). I view the project as an educational resource and not a package that people should depend on directly, because I don’t commit to supporting this project in production.&lt;/p&gt;&lt;p&gt;I do believe Grace can be forked to create a “Dhall 2.0”, but if that happens such an effort will need to be led by somebody else other than me. The main reason why is that I’d rather preserve Grace as a teaching tool and I don’t have the time to productionize Grace (productionizing Dhall was already a big lift for me).&lt;/p&gt;&lt;p&gt;However, I still might fork Grace in the future for other reasons (including a second attempt at implementing a type-checker for Nix).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/4425805969638051792/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/09/fall-from-grace-ready-to-fork.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4425805969638051792"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/4425805969638051792"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/09/fall-from-grace-ready-to-fork.html" title="Fall-from-Grace: A ready-to-fork functional programming language"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-795166114139782207</id><published>2021-09-09T07:02:00.004-07:00</published><updated>2021-09-09T07:34:30.784-07:00</updated><title type="text">Optics are monoids</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;lens-trick&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post documents my favorite &lt;code&gt;lens&lt;/code&gt; trick of all time. Also, this trick works for any optics package based on &lt;a href=&quot;https://www.twanvl.nl/blog/haskell/cps-functional-references&quot;&gt;van Laarhoven lenses&lt;/a&gt;, like &lt;code&gt;lens-family-core&lt;/code&gt; or &lt;code&gt;microlens&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;This post assumes some familiarity with lenses, so if you are new to lenses then you might want to first read:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://hackage.haskell.org/package/lens-tutorial-1.0.4/docs/Control-Lens-Tutorial.html&quot;&gt;&lt;code&gt;Control.Lens.Tutorial&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The title is slightly misleading and the precise statement is that &lt;code&gt;Fold&lt;/code&gt;s are &lt;code&gt;Monoid&lt;/code&gt;s, and all of the following optics are subtypes of &lt;code&gt;Fold&lt;/code&gt;s:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Getter&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Lens&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Traversal&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Prism&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Iso&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… but I couldn’t fit that all of that in the title.&lt;/p&gt;&lt;p&gt;That means that if you combine any of the above optic types using &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, you will get a new optic that can be used as a &lt;code&gt;Fold&lt;/code&gt; that combines their targets. For example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf _1 (&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;)          &lt;span class=&quot;co&quot;&gt;-- _1 is a Lens&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf _2 (&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;)          &lt;span class=&quot;co&quot;&gt;-- _2 is a Lens&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-5&quot;&gt;&lt;a href=&quot;#cb1-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf (_1 &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; _2) (&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;-- (_1 &amp;lt;&amp;gt; 2) is a Fold&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-6&quot;&gt;&lt;a href=&quot;#cb1-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also, &lt;code&gt;mempty&lt;/code&gt; is the “empty” &lt;code&gt;Fold&lt;/code&gt; that targets nothing:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There’s more to this trick, though, and we can build upon this idea to create optics that traverse complex data structures in a single pass.&lt;/p&gt;&lt;h4 id=&quot;realistic-example&quot;&gt;Realistic example&lt;/h4&gt;&lt;p&gt;To illustrate the trick, I’ll use a realistic example inspired by one of my interpreter side projects. I’ll keep things simple by reducing the original example to the following syntax tree for a toy lambda calculus implementation:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Let&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-8&quot;&gt;&lt;a href=&quot;#cb3-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now suppose we’d like to write a function that verifies that our syntax tree has no empty variable names. Without optics, we could write something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;wellFormed ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;null&lt;/span&gt; name)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name body) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-5&quot;&gt;&lt;a href=&quot;#cb4-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;null&lt;/span&gt; name) &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; wellFormed body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-6&quot;&gt;&lt;a href=&quot;#cb4-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function argument) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-7&quot;&gt;&lt;a href=&quot;#cb4-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    wellFormed function &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; wellFormed argument&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-8&quot;&gt;&lt;a href=&quot;#cb4-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed (&lt;span class=&quot;dt&quot;&gt;Let&lt;/span&gt; name assignment body) &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-9&quot;&gt;&lt;a href=&quot;#cb4-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;not&lt;/span&gt; (&lt;span class=&quot;fu&quot;&gt;null&lt;/span&gt; name) &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; wellFormed assignment &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; wellFormed body&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which works as expected on a few smoke tests:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; wellFormed example&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; wellFormed (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-4&quot;&gt;&lt;a href=&quot;#cb5-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This implementation is simple enough for now. However, real interpreters tend to add a whole bunch of other constructors to the syntax tree. For example, each new keyword or datatype we add to the language will add another constructor to the syntax tree and each new constructor increases the boilerplate code for functions like &lt;code&gt;wellFormed&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Thankfully, the &lt;code&gt;lens&lt;/code&gt; and &lt;code&gt;generic-lens&lt;/code&gt; packages provide useful utilities that simplify recursive functions like &lt;code&gt;wellFormed&lt;/code&gt;. All we have to do is derive &lt;code&gt;Plated&lt;/code&gt; and &lt;code&gt;Generic&lt;/code&gt; for our &lt;code&gt;Syntax&lt;/code&gt; type, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DeriveDataTypeable #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-2&quot;&gt;&lt;a href=&quot;#cb6-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DeriveGeneric      #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-3&quot;&gt;&lt;a href=&quot;#cb6-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-4&quot;&gt;&lt;a href=&quot;#cb6-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Example&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-5&quot;&gt;&lt;a href=&quot;#cb6-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-6&quot;&gt;&lt;a href=&quot;#cb6-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Generics.Product&lt;/span&gt; (the)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-7&quot;&gt;&lt;a href=&quot;#cb6-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Generics.Sum&lt;/span&gt; (_&lt;span class=&quot;dt&quot;&gt;As&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-8&quot;&gt;&lt;a href=&quot;#cb6-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;GHC.Generics&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Generic&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-9&quot;&gt;&lt;a href=&quot;#cb6-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-10&quot;&gt;&lt;a href=&quot;#cb6-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Lens&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-11&quot;&gt;&lt;a href=&quot;#cb6-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Data&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Data&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-12&quot;&gt;&lt;a href=&quot;#cb6-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-13&quot;&gt;&lt;a href=&quot;#cb6-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-14&quot;&gt;&lt;a href=&quot;#cb6-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-15&quot;&gt;&lt;a href=&quot;#cb6-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-16&quot;&gt;&lt;a href=&quot;#cb6-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-17&quot;&gt;&lt;a href=&quot;#cb6-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Let&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-18&quot;&gt;&lt;a href=&quot;#cb6-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Data&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Generic&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-19&quot;&gt;&lt;a href=&quot;#cb6-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-20&quot;&gt;&lt;a href=&quot;#cb6-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Plated&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-21&quot;&gt;&lt;a href=&quot;#cb6-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-22&quot;&gt;&lt;a href=&quot;#cb6-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb6-23&quot;&gt;&lt;a href=&quot;#cb6-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once we derive &lt;code&gt;Plated&lt;/code&gt; we can use the &lt;code&gt;cosmos&lt;/code&gt; lens to zoom in on all sub-expressions:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf cosmos example&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-2&quot;&gt;&lt;a href=&quot;#cb7-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[ &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-3&quot;&gt;&lt;a href=&quot;#cb7-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-4&quot;&gt;&lt;a href=&quot;#cb7-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-5&quot;&gt;&lt;a href=&quot;#cb7-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-6&quot;&gt;&lt;a href=&quot;#cb7-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;, &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb7-7&quot;&gt;&lt;a href=&quot;#cb7-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and when we derive &lt;code&gt;Generic&lt;/code&gt; we can further narrow down the results using &lt;code&gt;_As&lt;/code&gt; and &lt;code&gt;the&lt;/code&gt; from the &lt;code&gt;generic-lens&lt;/code&gt; package:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;set &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;XTypeApplications&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;set &lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;XDataKinds&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Variable&amp;quot;&lt;/span&gt;) example  &lt;span class=&quot;co&quot;&gt;-- Get all Variable names&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-6&quot;&gt;&lt;a href=&quot;#cb8-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Lambda&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) example  &lt;span class=&quot;co&quot;&gt;-- Get all Lambda names&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-7&quot;&gt;&lt;a href=&quot;#cb8-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-8&quot;&gt;&lt;a href=&quot;#cb8-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-9&quot;&gt;&lt;a href=&quot;#cb8-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Let&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) example  &lt;span class=&quot;co&quot;&gt;-- Get all Let names&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-10&quot;&gt;&lt;a href=&quot;#cb8-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So we can combine these tricks to implement our &lt;code&gt;wellFormed&lt;/code&gt; function using optics to handle the automatic tree traversal:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;wellFormed ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed syntax &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        hasn&amp;#39;t (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Variable&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) syntax&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  hasn&amp;#39;t (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Lambda&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) syntax&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  hasn&amp;#39;t (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Let&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) syntax&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but we’re not done here!&lt;/p&gt;&lt;p&gt;The &lt;code&gt;cosmos&lt;/code&gt; &lt;code&gt;Traversal&lt;/code&gt; factored away some of the repetition because we no longer need to recursively descend into subexpressions any longer. We also no longer need to explicitly handle constructors that have no variable names, like &lt;code&gt;Apply&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Our &lt;code&gt;wellFormed&lt;/code&gt; function is still repetitive, though, because three times in a row we write:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;hasn&amp;#39;t (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; … &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) syntax&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and we’d like to factor out this repetition.&lt;/p&gt;&lt;p&gt;Our first instinct might be to factor out the repetition with a helper function, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;wellFormed ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed syntax &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        noEmptyVariables (_As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Variable&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  noEmptyVariables (_As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Lambda&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) &lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-5&quot;&gt;&lt;a href=&quot;#cb11-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  noEmptyVariables (_As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Let&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-6&quot;&gt;&lt;a href=&quot;#cb11-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-7&quot;&gt;&lt;a href=&quot;#cb11-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    noEmptyVariables fold &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-8&quot;&gt;&lt;a href=&quot;#cb11-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        hasn&amp;#39;t (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; fold &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) syntax&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that does work, but there is actually a better way. We can instead use the fact that &lt;code&gt;Traversal&lt;/code&gt;s are also &lt;code&gt;Fold&lt;/code&gt;s and &lt;code&gt;Fold&lt;/code&gt;s are &lt;code&gt;Monoid&lt;/code&gt;s to write this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;wellFormed ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed syntax &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    hasn&amp;#39;t&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ( cosmos&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (   _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Variable&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Lambda&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-7&quot;&gt;&lt;a href=&quot;#cb12-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;  _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Let&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-8&quot;&gt;&lt;a href=&quot;#cb12-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-9&quot;&gt;&lt;a href=&quot;#cb12-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-10&quot;&gt;&lt;a href=&quot;#cb12-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-11&quot;&gt;&lt;a href=&quot;#cb12-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        syntax&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, we can take the following three &lt;code&gt;Traversal&lt;/code&gt;s that each focus on a different source of variable names:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;_As @&quot;Variable&quot;&lt;/code&gt; - Focus in on variable names&lt;/li&gt;&lt;li&gt;&lt;code&gt;_As @&quot;Lambda&quot; . the @1&lt;/code&gt; - Focus in on &lt;code&gt;Lambda&lt;/code&gt;-bound variables&lt;/li&gt;&lt;li&gt;&lt;code&gt;_As @&quot;Let&quot; . the @1&lt;/code&gt; - Focus in on &lt;code&gt;Let&lt;/code&gt;-bound variables&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and when we combine them using &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; we get a &lt;code&gt;Fold&lt;/code&gt; that focuses on all possible sources of variable names. We can then chain this composite &lt;code&gt;Fold&lt;/code&gt; in between &lt;code&gt;cosmos&lt;/code&gt; and &lt;code&gt;only&lt;/code&gt; to find all of the empty variable names.&lt;/p&gt;&lt;p&gt;In fact, we’re not limited to using &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;. Any utility that works on &lt;code&gt;Monoid&lt;/code&gt;s will work, like &lt;code&gt;mconcat&lt;/code&gt;, so we can refactor our code even further like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;wellFormed ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hasn&amp;#39;t (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; names &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | Get all variable names within the current constructor&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-5&quot;&gt;&lt;a href=&quot;#cb13-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;names ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Getting&lt;/span&gt; m &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-6&quot;&gt;&lt;a href=&quot;#cb13-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;names &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-7&quot;&gt;&lt;a href=&quot;#cb13-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mconcat&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-8&quot;&gt;&lt;a href=&quot;#cb13-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        [ _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Variable&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-9&quot;&gt;&lt;a href=&quot;#cb13-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Lambda&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-10&quot;&gt;&lt;a href=&quot;#cb13-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Let&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-11&quot;&gt;&lt;a href=&quot;#cb13-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ]   &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have factored out a useful and reusable &lt;code&gt;names&lt;/code&gt; &lt;code&gt;Fold&lt;/code&gt;&lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; that we can combine with &lt;code&gt;cosmos&lt;/code&gt; to get all names within our syntax tree:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; toListOf (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; names) example&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This means that any new contributor to our interpreter can register a new source of variable names by adding a &lt;code&gt;Traversal&lt;/code&gt; to that list and all downstream functions that use &lt;code&gt;names&lt;/code&gt; will automatically update to do the right thing.&lt;/p&gt;&lt;h4 id=&quot;why-this-trick&quot;&gt;Why this trick?&lt;/h4&gt;&lt;p&gt;I briefly touched on some other cool tricks in the course of this post, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The use of &lt;code&gt;Plated&lt;/code&gt; for simplifying recursive &lt;code&gt;Traversal&lt;/code&gt;s&lt;/li&gt;&lt;li&gt;The use of &lt;code&gt;generic-lens&lt;/code&gt; for boilerplate-free optics&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… so why do I consider “optics as monoids” to be the coolest trick of them all? After all, &lt;code&gt;Plated&lt;/code&gt; and &lt;code&gt;generic-lens&lt;/code&gt; did most of the heavy lifting in the above example.&lt;/p&gt;&lt;p&gt;The reason why I particularly love the &lt;code&gt;Monoid&lt;/code&gt; instance for lenses is because (as far as I know) &lt;em&gt;nobody ever designed lenses to do this&lt;/em&gt;; this is purely an emergent property of independent design choices spread out over time.&lt;/p&gt;&lt;p&gt;This shouldn’t surprise us too much, because Haskell’s mathematically inspired type classes sort of follow the Unix philosophy to &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_philosophy#Do_One_Thing_and_Do_It_Well&quot;&gt;Do one thing and do it well&lt;/a&gt;. If each piece does one small thing correctly, then if you combine multiple pieces then the composite result is correct by construction.&lt;/p&gt;&lt;p&gt;However, you don’t need to take my word for it. I’ll walk through in detail how this works, first at the type level and then at the term level.&lt;/p&gt;&lt;h4 id=&quot;type-level&quot;&gt;Type level&lt;/h4&gt;&lt;p&gt;The first piece of the puzzle is the following &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instances for functions in &lt;code&gt;base&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    (f &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; g) x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; f x &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; g x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-4&quot;&gt;&lt;a href=&quot;#cb15-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; b &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; b) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-5&quot;&gt;&lt;a href=&quot;#cb15-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; x &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These instances says that a function is a &lt;code&gt;Monoid&lt;/code&gt; if the function’s result is also a &lt;code&gt;Monoid&lt;/code&gt;. We combine two functions by combining their outputs (when given the same input) and the empty function ignores its input and produces an empty output.&lt;/p&gt;&lt;p&gt;The second piece of the puzzle is the &lt;code&gt;Const&lt;/code&gt; type (the constant &lt;code&gt;Functor&lt;/code&gt;), which has a &lt;code&gt;Semigroup&lt;/code&gt; and &lt;code&gt;Monoid&lt;/code&gt; instance, too:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; getConst ::&lt;/span&gt; a }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; a b) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; a b) &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; x &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; y &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; (x &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; y)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These instances are so simple that we could have just derived them (and indeed, that is what the &lt;code&gt;base&lt;/code&gt; package does):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; {&lt;span class=&quot;ot&quot;&gt; getConst ::&lt;/span&gt; a }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;newtype&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Semigroup&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, &lt;code&gt;Const a b&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt;. Combining two &lt;code&gt;Const&lt;/code&gt;s combines their stored value, and the empty &lt;code&gt;Const&lt;/code&gt; stores an empty value.&lt;/p&gt;&lt;p&gt;The final piece of the puzzle is that a &lt;code&gt;Fold&lt;/code&gt; from the &lt;code&gt;lens&lt;/code&gt; package is just a higher-order function over &lt;code&gt;Const&lt;/code&gt;s:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- This not the real type, but it&amp;#39;s equivalent&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Fold&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; m &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; (b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; m b) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; m a)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and that type is a valid &lt;code&gt;Monoid&lt;/code&gt;, because:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;(b -&amp;gt; Const m b) -&amp;gt; (a -&amp;gt; Const m a)&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt; if &lt;code&gt;(a -&amp;gt; Const m a)&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… according to the &lt;code&gt;Monoid&lt;/code&gt; instance for functions&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;a -&amp;gt; Const m a&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt; if &lt;code&gt;Const m a&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… also according to the &lt;code&gt;Monoid&lt;/code&gt; instance for functions&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Const m a&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt; if &lt;code&gt;m&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… according to the &lt;code&gt;Monoid&lt;/code&gt; instance for &lt;code&gt;Const&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;m&lt;/code&gt; is a &lt;code&gt;Monoid&lt;/code&gt;&lt;/p&gt;&lt;p&gt;… according to the &lt;code&gt;Monoid m =&amp;gt;&lt;/code&gt; constraint in the type of &lt;code&gt;Fold&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Therefore, all &lt;code&gt;Fold&lt;/code&gt;s are &lt;code&gt;Monoid&lt;/code&gt;s.&lt;/p&gt;&lt;h4 id=&quot;term-level&quot;&gt;Term level&lt;/h4&gt;&lt;p&gt;However, knowing that a &lt;code&gt;Fold&lt;/code&gt; type-checks as a &lt;code&gt;Monoid&lt;/code&gt; is not enough. We want to build an intuition for what happens when we use &lt;code&gt;Monoid&lt;/code&gt; operations on &lt;code&gt;Fold&lt;/code&gt;s.&lt;/p&gt;&lt;p&gt;The most compact way we can state our intuition is by the following two laws:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;toListOf (l &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; r) a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; toListOf l a &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; toListOf r a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-3&quot;&gt;&lt;a href=&quot;#cb19-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;toListOf &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In other words, if you combine two &lt;code&gt;Fold&lt;/code&gt;s then you combine their “targets”, and the empty &lt;code&gt;Fold&lt;/code&gt; has no targets.&lt;/p&gt;&lt;p&gt;These laws are also known as “monoid morphism laws”. In other words, &lt;code&gt;toListOf&lt;/code&gt; is a function that transforms one type of &lt;code&gt;Monoid&lt;/code&gt; (&lt;code&gt;Fold&lt;/code&gt;s) into another type of &lt;code&gt;Monoid&lt;/code&gt; (lists).&lt;/p&gt;&lt;p&gt;We can verify those two laws using &lt;a href=&quot;https://www.haskellforall.com/2013/12/equational-reasoning.html&quot;&gt;equational reasoning&lt;/a&gt;, but in order to do so we need to use the following simplified definition for &lt;code&gt;toListOf&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE RankNTypes #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Functor.Const&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt;(..))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-5&quot;&gt;&lt;a href=&quot;#cb20-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;toListOf ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Fold&lt;/span&gt; a b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; [b]&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-6&quot;&gt;&lt;a href=&quot;#cb20-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;toListOf fold a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst (fold (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) a)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The real &lt;code&gt;toListOf&lt;/code&gt; function from the &lt;code&gt;lens&lt;/code&gt; package has a different, but equivalent, implementation. The real implementation is more efficient, but takes more steps when proving things using equational reasoning, so I prefer to use this simpler implementation.&lt;/p&gt;&lt;p&gt;Now let’s prove the two monoid morphism laws. The proof for the first law is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;toListOf (l &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; r) a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-2&quot;&gt;&lt;a href=&quot;#cb21-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-3&quot;&gt;&lt;a href=&quot;#cb21-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Substitute `toListOf` with its definition&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-4&quot;&gt;&lt;a href=&quot;#cb21-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst ((l &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; r) (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-5&quot;&gt;&lt;a href=&quot;#cb21-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-6&quot;&gt;&lt;a href=&quot;#cb21-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- If `l` and `r` are functions, then according to the `Semigroup` instance for&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-7&quot;&gt;&lt;a href=&quot;#cb21-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- functions:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-8&quot;&gt;&lt;a href=&quot;#cb21-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-9&quot;&gt;&lt;a href=&quot;#cb21-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     (f &amp;lt;&amp;gt; g) x = f x &amp;lt;&amp;gt; g x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-10&quot;&gt;&lt;a href=&quot;#cb21-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-11&quot;&gt;&lt;a href=&quot;#cb21-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … where in this case:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-12&quot;&gt;&lt;a href=&quot;#cb21-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-13&quot;&gt;&lt;a href=&quot;#cb21-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     f = l&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-14&quot;&gt;&lt;a href=&quot;#cb21-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     g = r&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-15&quot;&gt;&lt;a href=&quot;#cb21-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     x = \b -&amp;gt; Const [b]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-16&quot;&gt;&lt;a href=&quot;#cb21-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst ((l (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; r (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b])) a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-17&quot;&gt;&lt;a href=&quot;#cb21-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-18&quot;&gt;&lt;a href=&quot;#cb21-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Use the `Semigroup` instance for functions again, except this time:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-19&quot;&gt;&lt;a href=&quot;#cb21-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-20&quot;&gt;&lt;a href=&quot;#cb21-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     f = l (\b -&amp;gt; Const [b])&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-21&quot;&gt;&lt;a href=&quot;#cb21-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     g = r (\b -&amp;gt; Const [b])&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-22&quot;&gt;&lt;a href=&quot;#cb21-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     x = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-23&quot;&gt;&lt;a href=&quot;#cb21-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst (l (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) a &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; r (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-24&quot;&gt;&lt;a href=&quot;#cb21-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-25&quot;&gt;&lt;a href=&quot;#cb21-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Now use the `Semigroup` instance for `Const`, which (essentially) says:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-26&quot;&gt;&lt;a href=&quot;#cb21-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-27&quot;&gt;&lt;a href=&quot;#cb21-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     getConst (x &amp;lt;&amp;gt; y) = getConst x &amp;lt;&amp;gt; getConst y&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-28&quot;&gt;&lt;a href=&quot;#cb21-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-29&quot;&gt;&lt;a href=&quot;#cb21-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … where:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-30&quot;&gt;&lt;a href=&quot;#cb21-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-31&quot;&gt;&lt;a href=&quot;#cb21-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     x = l (\b -&amp;gt; Const [b]) a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-32&quot;&gt;&lt;a href=&quot;#cb21-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     y = r (\b -&amp;gt; Const [b]) a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-33&quot;&gt;&lt;a href=&quot;#cb21-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst (l (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) a) &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; getConst (r (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-34&quot;&gt;&lt;a href=&quot;#cb21-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-35&quot;&gt;&lt;a href=&quot;#cb21-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Now apply the definition of `toListOf`, but in reverse:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-36&quot;&gt;&lt;a href=&quot;#cb21-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; toListOf l a &lt;span class=&quot;op&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; toListOf r a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the proof for the second law is:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb22&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb22-1&quot;&gt;&lt;a href=&quot;#cb22-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;toList &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-2&quot;&gt;&lt;a href=&quot;#cb22-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-3&quot;&gt;&lt;a href=&quot;#cb22-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Substitute `toListOf` with its definition&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-4&quot;&gt;&lt;a href=&quot;#cb22-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst (&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; (\b &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; [b]) a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-5&quot;&gt;&lt;a href=&quot;#cb22-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-6&quot;&gt;&lt;a href=&quot;#cb22-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- If `mempty` is a function, then according to the `Monoid` instance for&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-7&quot;&gt;&lt;a href=&quot;#cb22-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- functions:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-8&quot;&gt;&lt;a href=&quot;#cb22-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-9&quot;&gt;&lt;a href=&quot;#cb22-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     mempty x = mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-10&quot;&gt;&lt;a href=&quot;#cb22-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-11&quot;&gt;&lt;a href=&quot;#cb22-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- … where in this case:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-12&quot;&gt;&lt;a href=&quot;#cb22-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-13&quot;&gt;&lt;a href=&quot;#cb22-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     x = \b -&amp;gt; Const [b]&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-14&quot;&gt;&lt;a href=&quot;#cb22-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst (&lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt; a)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-15&quot;&gt;&lt;a href=&quot;#cb22-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-16&quot;&gt;&lt;a href=&quot;#cb22-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Use the `Monoid` instance for functions again, except this time:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-17&quot;&gt;&lt;a href=&quot;#cb22-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-18&quot;&gt;&lt;a href=&quot;#cb22-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--     x = a&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-19&quot;&gt;&lt;a href=&quot;#cb22-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-20&quot;&gt;&lt;a href=&quot;#cb22-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-21&quot;&gt;&lt;a href=&quot;#cb22-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- Now use the `Monoid` instance for `Const`, which says:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-22&quot;&gt;&lt;a href=&quot;#cb22-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-23&quot;&gt;&lt;a href=&quot;#cb22-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--    mempty = Const mempty&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-24&quot;&gt;&lt;a href=&quot;#cb22-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; getConst (&lt;span class=&quot;dt&quot;&gt;Const&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-25&quot;&gt;&lt;a href=&quot;#cb22-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-26&quot;&gt;&lt;a href=&quot;#cb22-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- getConst (Const x) = x&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb22-27&quot;&gt;&lt;a href=&quot;#cb22-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;mempty&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;Hopefully that gives you a taste for how slick and elegant Haskell’s &lt;code&gt;lens&lt;/code&gt; package is. If you like this post, you might also like these other posts:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.fpcomplete.com/haskell/tutorial/lens/&quot;&gt;FPComplete - Lenses&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.haskellforall.com/2013/05/program-imperatively-using-haskell.html&quot;&gt;Program imperatively using Haskell lenses&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also, I know that I skimmed through the subjects of &lt;code&gt;Plated&lt;/code&gt; and &lt;code&gt;generic-lens&lt;/code&gt;, which are interesting topics in their own right. I hope to cover those in more detail in future posts.&lt;/p&gt;&lt;p&gt;I don’t know if this trick can be made to work for &lt;code&gt;optics&lt;/code&gt; (an alternative to &lt;code&gt;lens&lt;/code&gt; that uses an abstract interface to improve error messages). I know that it does not work at the time of this writing, but perhaps a &lt;code&gt;Monoid&lt;/code&gt; instance could be added for the &lt;code&gt;Optic&lt;/code&gt; type? I also have no idea if this trick or a related trick works for &lt;code&gt;profunctor-optics&lt;/code&gt; (a different formulation of lenses based on profunctors).&lt;/p&gt;&lt;p&gt;I haven’t benchmarked whether combining &lt;code&gt;Fold&lt;/code&gt;s is faster than doing separate passes over the same data structure. I believe it’s more lazy, though, to process the data structure in a single pass using a composite &lt;code&gt;Fold&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;appendix&quot;&gt;Appendix&lt;/h4&gt;&lt;p&gt;Here is the complete code example if you want to test this out locally:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb23&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb23-1&quot;&gt;&lt;a href=&quot;#cb23-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DataKinds          #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-2&quot;&gt;&lt;a href=&quot;#cb23-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DeriveDataTypeable #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-3&quot;&gt;&lt;a href=&quot;#cb23-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE DeriveGeneric      #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-4&quot;&gt;&lt;a href=&quot;#cb23-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;{-# LANGUAGE TypeApplications   #-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-5&quot;&gt;&lt;a href=&quot;#cb23-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-6&quot;&gt;&lt;a href=&quot;#cb23-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Example&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-7&quot;&gt;&lt;a href=&quot;#cb23-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-8&quot;&gt;&lt;a href=&quot;#cb23-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Generics.Product&lt;/span&gt; (the)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-9&quot;&gt;&lt;a href=&quot;#cb23-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Generics.Sum&lt;/span&gt; (_&lt;span class=&quot;dt&quot;&gt;As&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-10&quot;&gt;&lt;a href=&quot;#cb23-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;GHC.Generics&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Generic&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-11&quot;&gt;&lt;a href=&quot;#cb23-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-12&quot;&gt;&lt;a href=&quot;#cb23-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Control.Lens&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-13&quot;&gt;&lt;a href=&quot;#cb23-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Data.Data&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Data&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-14&quot;&gt;&lt;a href=&quot;#cb23-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-15&quot;&gt;&lt;a href=&quot;#cb23-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-16&quot;&gt;&lt;a href=&quot;#cb23-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-17&quot;&gt;&lt;a href=&quot;#cb23-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-18&quot;&gt;&lt;a href=&quot;#cb23-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-19&quot;&gt;&lt;a href=&quot;#cb23-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Let&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-20&quot;&gt;&lt;a href=&quot;#cb23-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Data&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Generic&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-21&quot;&gt;&lt;a href=&quot;#cb23-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-22&quot;&gt;&lt;a href=&quot;#cb23-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Plated&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-23&quot;&gt;&lt;a href=&quot;#cb23-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-24&quot;&gt;&lt;a href=&quot;#cb23-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-25&quot;&gt;&lt;a href=&quot;#cb23-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-26&quot;&gt;&lt;a href=&quot;#cb23-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-27&quot;&gt;&lt;a href=&quot;#cb23-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;wellFormed ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-28&quot;&gt;&lt;a href=&quot;#cb23-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;wellFormed &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; hasn&amp;#39;t (cosmos &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; names &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; only &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-29&quot;&gt;&lt;a href=&quot;#cb23-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-30&quot;&gt;&lt;a href=&quot;#cb23-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;names ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Monoid&lt;/span&gt; m &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Getting&lt;/span&gt; m &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-31&quot;&gt;&lt;a href=&quot;#cb23-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;names &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-32&quot;&gt;&lt;a href=&quot;#cb23-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;mconcat&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-33&quot;&gt;&lt;a href=&quot;#cb23-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        [ _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Variable&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-34&quot;&gt;&lt;a href=&quot;#cb23-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Lambda&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-35&quot;&gt;&lt;a href=&quot;#cb23-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        , _As &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Let&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; the &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-36&quot;&gt;&lt;a href=&quot;#cb23-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;section class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;&lt;hr /&gt;&lt;ol&gt;&lt;li id=&quot;fn1&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;The type of &lt;code&gt;names&lt;/code&gt; is morally &lt;code&gt;Fold Syntax String&lt;/code&gt;, which according to &lt;a href=&quot;https://hackage.haskell.org/package/lens-5.0.1/docs/Control-Lens-Fold.html&quot;&gt;the &lt;code&gt;lens&lt;/code&gt; documentation&lt;/a&gt; is the essentially same type, but only the &lt;code&gt;Getting&lt;/code&gt; version of the type will type-check here.&lt;a href=&quot;#fnref1&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/795166114139782207/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/09/optics-are-monoids.html#comment-form" title="3 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/795166114139782207"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/795166114139782207"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/09/optics-are-monoids.html" title="Optics are monoids"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-6306846059870969872</id><published>2021-09-01T05:58:00.004-07:00</published><updated>2021-09-01T09:20:39.141-07:00</updated><title type="text">Forward and reverse proxies explained</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;proxy&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post explains what is the difference between a forward proxy and a reverse proxy. This post will likely be most useful for:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;engineers designing &lt;a href=&quot;https://en.wikipedia.org/wiki/On-premises_software&quot;&gt;on-premises&lt;/a&gt; enterprise software to forward traffic in restrictive networking environments&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;authors of forward and reverse proxy packages / frameworks&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;people who want to learn more about networking in general&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I’m writing this mainly because I had to puzzle through all of this when I was designing part of our product’s network architecture at work and I frequently explain what I learned to my coworkers. Most of the existing explanations of proxies were not helpful to me when I learned this for the first time, so I figured I would try to explain things in my own words so that I can reference this post when teaching others.&lt;/p&gt;&lt;p&gt;This post will not touch upon the use cases for forward and reverse proxies and instead will mostly focus on the architectural differences between them. If you are interested in learning more about how they are used in practice then I recommend reading the Wikipedia article on proxies:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_server&quot;&gt;Wikipedia - Proxy server&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Also, this post assumes some familiarity with the HTTP and HTTPS protocols.&lt;/p&gt;&lt;h4 id=&quot;the-difference&quot;&gt;The difference&lt;/h4&gt;&lt;p&gt;The simplest difference between the two types of proxies is that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A reverse proxy is a proxy where the proxy selects the origin server&lt;/li&gt;&lt;li&gt;A forward proxy is a proxy where the client selects the origin server&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and “origin server” means the server where the HTTP resource originates from that the proxy forwards the HTTP request to.&lt;/p&gt;&lt;p&gt;There are a few alternative definitions for forward proxy and reverse proxy, but in my experience the above definitions promote the correct intuition.&lt;/p&gt;&lt;h4 id=&quot;curl-examples&quot;&gt;&lt;code&gt;curl&lt;/code&gt; examples&lt;/h4&gt;&lt;p&gt;I sometimes explain the difference between forward and reverse proxies in terms of &lt;code&gt;curl&lt;/code&gt; commands.&lt;/p&gt;&lt;p&gt;For example, if I host a reverse proxy at &lt;code&gt;reverse.example.com&lt;/code&gt; that forwards requests to &lt;code&gt;google.com&lt;/code&gt;, then a sample HTTP request going through the reverse proxy might look like the following &lt;code&gt;curl&lt;/code&gt; command:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl https://reverse.example.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a reverse proxy, the client (e.g. &lt;code&gt;curl&lt;/code&gt;) does not select the origin server (e.g. &lt;code&gt;google.com&lt;/code&gt;). In this particular example the origin server is hard-coded into the reverse proxy and there would be no way for the client to specify that the HTTP request should be forwarded to &lt;code&gt;github.com&lt;/code&gt; instead.&lt;/p&gt;&lt;p&gt;The data flow for such a request looks something like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;┌──────────────────────────────────┐&lt;br /&gt;│                                  │&lt;br /&gt;│            google.com            │&lt;br /&gt;│                                  │&lt;br /&gt;└──────────────────────────────────┘&lt;br /&gt;         ↑                ↓&lt;br /&gt; &amp;quot;GET / HTTP/1.1&amp;quot; &amp;quot;HTTP/1.1 200 OK&amp;quot;&lt;br /&gt;         ↑                ↓&lt;br /&gt;┌──────────────────────────────────┐&lt;br /&gt;│                                  │&lt;br /&gt;│        reverse.example.com       │&lt;br /&gt;│                                  │&lt;br /&gt;└──────────────────────────────────┘&lt;br /&gt;         ↑                ↓&lt;br /&gt; &amp;quot;GET / HTTP/1.1&amp;quot; &amp;quot;HTTP/1.1 200 OK&amp;quot;&lt;br /&gt;         ↑                ↓&lt;br /&gt;┌──────────────────────────────────┐&lt;br /&gt;│                                  │&lt;br /&gt;│               curl               │&lt;br /&gt;│                                  │&lt;br /&gt;└──────────────────────────────────┘&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In other words:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The client (e.g. &lt;code&gt;curl&lt;/code&gt;) sends an HTTP request to the reverse proxy&lt;/li&gt;&lt;li&gt;The proxy (e.g. &lt;code&gt;reverse.example.com&lt;/code&gt;) forwards the HTTP request to the origin server&lt;/li&gt;&lt;li&gt;The origin server (e.g. &lt;code&gt;google.com&lt;/code&gt;) responds to the HTTP request&lt;/li&gt;&lt;li&gt;The proxy forwards the HTTP response back to the client&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Now suppose that I host a forward proxy at &lt;code&gt;forward.example.com&lt;/code&gt;. A sample HTTP request destined for &lt;code&gt;google.com&lt;/code&gt; going through the forward proxy might look like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl &lt;span class=&quot;at&quot;&gt;--proxy&lt;/span&gt; https://forward.example.com https://google.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a forward proxy, the client (e.g. &lt;code&gt;curl&lt;/code&gt;) selects the origin server (e.g. &lt;code&gt;google.com&lt;/code&gt;) and could have potentially selected a different origin server, such as &lt;code&gt;github.com&lt;/code&gt;, like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl &lt;span class=&quot;at&quot;&gt;--proxy&lt;/span&gt; https://forward.example.com https://github.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and then the forward proxy would forward the request to &lt;code&gt;github.com&lt;/code&gt; instead&lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The data flow for a request going through a forward proxy depends on whether the client connects to the origin server using HTTP or HTTPS.&lt;/p&gt;&lt;p&gt;If the client uses HTTP then the data flow for a forward proxy typically looks like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;┌──────────────────────────────────────────────────┐&lt;br /&gt;│                                                  │&lt;br /&gt;│                    google.com                    │&lt;br /&gt;│                                                  │&lt;br /&gt;└──────────────────────────────────────────────────┘&lt;br /&gt;                ↑                         ↓&lt;br /&gt;        &amp;quot;GET / HTTP/1.1&amp;quot;          &amp;quot;HTTP/1.1 200 OK&amp;quot;&lt;br /&gt;                ↑                         ↓&lt;br /&gt;┌──────────────────────────────────────────────────┐&lt;br /&gt;│                                                  │&lt;br /&gt;│                forward.example.com               │&lt;br /&gt;│                                                  │&lt;br /&gt;└──────────────────────────────────────────────────┘&lt;br /&gt;                ↑                         ↓&lt;br /&gt; &amp;quot;GET http://google.com HTTP/1.1&amp;quot; &amp;quot;HTTP/1.1 200 OK&amp;quot;&lt;br /&gt;                ↑                         ↓&lt;br /&gt;┌──────────────────────────────────────────────────┐&lt;br /&gt;│                                                  │&lt;br /&gt;│                       curl                       │&lt;br /&gt;│                                                  │&lt;br /&gt;└──────────────────────────────────────────────────┘&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In other words:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The client (e.g. &lt;code&gt;curl&lt;/code&gt;) sends an HTTP request to the proxy with the origin server in the request line&lt;/li&gt;&lt;li&gt;The proxy (e.g. &lt;code&gt;forward.example.com&lt;/code&gt;) forwards the request to the origin server specified on the request line&lt;/li&gt;&lt;li&gt;The origin server (e.g. &lt;code&gt;google.com&lt;/code&gt;) responds to the HTTP request&lt;/li&gt;&lt;li&gt;The proxy forwards the HTTP response back to the client&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The main difference from the previous example is the HTTP request line that &lt;code&gt;curl&lt;/code&gt; sends to &lt;code&gt;forward.example.com&lt;/code&gt;. Forward proxies receive an absolute URI from the client (e.g. &lt;code&gt;http://google.com&lt;/code&gt;) instead of a relative URI (like &lt;code&gt;/&lt;/code&gt;). This is how the forward proxy knows where to forward the client’s request.&lt;/p&gt;&lt;p&gt;Now contrast that with the data flow for a forward proxy when the client uses HTTPS:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;                             ┌────────────┐&lt;br /&gt;                             │            │&lt;br /&gt;                             │ google.com │&lt;br /&gt;                             │            │&lt;br /&gt;                             └────────────┘&lt;br /&gt;                                    ↑&lt;br /&gt;                                   TCP&lt;br /&gt;                                    │&lt;br /&gt;┌───────────────────────────────────│─┐&lt;br /&gt;│                                   │ │&lt;br /&gt;│          forward.example.com      │ │&lt;br /&gt;│                                   │ │&lt;br /&gt;└───────────────────────────────────│─┘&lt;br /&gt;                ↑                   │&lt;br /&gt; &amp;quot;CONNECT google.com:443 HTTP/1.1&amp;quot; TCP&lt;br /&gt;                ↑                   ↓&lt;br /&gt;┌─────────────────────────────────────┐&lt;br /&gt;│                                     │&lt;br /&gt;│                curl                 │&lt;br /&gt;│                                     │&lt;br /&gt;└─────────────────────────────────────┘&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is a different flow of information:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The client (e.g. &lt;code&gt;curl&lt;/code&gt;) sends a &lt;code&gt;CONNECT&lt;/code&gt; request to the proxy&lt;/li&gt;&lt;li&gt;The proxy (e.g. &lt;code&gt;forward.example.com&lt;/code&gt;) opens a TCP connection to the origin server (e.g. &lt;code&gt;google.com&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;The proxy forwards the rest of the client’s connection as raw TCP traffic directly to the origin server &lt;ul&gt;&lt;li&gt;This TCP connection is encrypted, so by default the proxy cannot intercept or modify HTTPS traffic&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;However, despite the difference in data flow both HTTP forward proxies and HTTPS forward proxies let the client select the origin server. This is why we still call them both forward proxies even though they are architecturally different server types.&lt;/p&gt;&lt;h4 id=&quot;nc-examples&quot;&gt;&lt;code&gt;nc&lt;/code&gt; examples&lt;/h4&gt;&lt;p&gt;If you’re curious, you can verify the difference in &lt;code&gt;curl&lt;/code&gt;’s behavior when using HTTP vs HTTPS forward proxies on the command line. If you set up &lt;code&gt;nc&lt;/code&gt; to listen on port 8000:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nc &lt;span class=&quot;at&quot;&gt;-l&lt;/span&gt; 8000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and then ask &lt;code&gt;curl&lt;/code&gt; to use &lt;code&gt;localhost:8000&lt;/code&gt; as a forward proxy, you’ll see different results depending on whether the origin server URI uses an HTTP or HTTPS scheme. For example, if you run:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl &lt;span class=&quot;at&quot;&gt;--proxy&lt;/span&gt; http://localhost:8000 &lt;span class=&quot;at&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;A secret!&amp;#39;&lt;/span&gt; http://example.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then &lt;code&gt;nc&lt;/code&gt; will print the following incoming request from &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ nc -l 8000&lt;br /&gt;POST http://example.com/ HTTP/1.1&lt;br /&gt;Host: example.com&lt;br /&gt;User-Agent: curl/7.64.1&lt;br /&gt;Accept: */*&lt;br /&gt;Proxy-Connection: Keep-Alive&lt;br /&gt;Content-Length: 9&lt;br /&gt;Content-Type: application/x-www-form-urlencoded&lt;br /&gt;&lt;br /&gt;A secret!&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the request line has an absolute URI specifying the origin server to connect to. Also, the HTTP forward proxy has complete access to the contents of the request (including the headers and payload) and can tamper with them before sending the request further upstream.&lt;/p&gt;&lt;p&gt;Contrast that with an HTTPS request that goes through a forward proxy:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl &lt;span class=&quot;at&quot;&gt;--proxy&lt;/span&gt; http://localhost:8000 &lt;span class=&quot;at&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;A secret!&amp;#39;&lt;/span&gt; https://example.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… where now &lt;code&gt;nc&lt;/code&gt; will print an incoming request that looks like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; nc &lt;span class=&quot;at&quot;&gt;-l&lt;/span&gt; 8000&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;CONNECT&lt;/span&gt; example.com:443 HTTP/1.1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Host:&lt;/span&gt; example.com:443&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;User-Agent:&lt;/span&gt; curl/7.64.1&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-5&quot;&gt;&lt;a href=&quot;#cb11-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;Proxy-Connection:&lt;/span&gt; Keep-Alive&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This time the HTTP method is &lt;code&gt;CONNECT&lt;/code&gt; (regardless of what the original method was) and the client only divulges enough information to the proxy to establish the TCP tunnel to &lt;code&gt;example.com&lt;/code&gt;.&lt;/p&gt;&lt;h4 id=&quot;blurring-the-line&quot;&gt;Blurring the line&lt;/h4&gt;&lt;p&gt;Sometimes people configure reverse proxies to behave like a “poor person’s forward proxy”. For example, you could imagine a reverse proxy configured to select the origin server based on the value of an HTTP header:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl &lt;span class=&quot;at&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;Origin: google.com&amp;#39;&lt;/span&gt; https://reverse.example.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… or based on the URI:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl https://reverse.example.com/&lt;span class=&quot;pp&quot;&gt;?&lt;/span&gt;url=google.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… or based on a subdomain (one per supported origin server):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# Yes, I have actually seen this in the wild&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ex&quot;&gt;$&lt;/span&gt; curl https://google.reverse.example.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This sort of thing is possible, and there are some constrained use cases for doing things this way, but you should err on the side of using a forward proxy if you intend to let the client select the origin server. Forward proxy software (like &lt;code&gt;squid&lt;/code&gt;) will better support this use case than reverse proxy software (like &lt;code&gt;haproxy&lt;/code&gt;) and HTTP clients (like your browser or &lt;code&gt;curl&lt;/code&gt;) will also better support forward proxies for this use case.&lt;/p&gt;&lt;h4 id=&quot;example-pseudocode&quot;&gt;Example pseudocode&lt;/h4&gt;&lt;p&gt;To further clarify the difference, here is some example pseudocode for how one would implement the various types of proxies.&lt;/p&gt;&lt;p&gt;The request handler for a hand-written reverse proxy might look something like the following Python pseudocode:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; handleRequest(request):&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# Forward the incoming request further upstream to some predefined origin&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# server (e.g. google.com), typically with some changes to the HTTP headers&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-4&quot;&gt;&lt;a href=&quot;#cb15-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# that we won&amp;#39;t cover in this post.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-5&quot;&gt;&lt;a href=&quot;#cb15-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    response &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; httpRequest(&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-6&quot;&gt;&lt;a href=&quot;#cb15-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        host &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;https://google.com&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-7&quot;&gt;&lt;a href=&quot;#cb15-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        method &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.method,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-8&quot;&gt;&lt;a href=&quot;#cb15-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        headers &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; fixRequestHeaders(request.headers),&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-9&quot;&gt;&lt;a href=&quot;#cb15-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        path &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.path,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-10&quot;&gt;&lt;a href=&quot;#cb15-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        query &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.query,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-11&quot;&gt;&lt;a href=&quot;#cb15-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-12&quot;&gt;&lt;a href=&quot;#cb15-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-13&quot;&gt;&lt;a href=&quot;#cb15-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-14&quot;&gt;&lt;a href=&quot;#cb15-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# Now forward the origin server&amp;#39;s response back to the client&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-15&quot;&gt;&lt;a href=&quot;#cb15-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    respond(&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-16&quot;&gt;&lt;a href=&quot;#cb15-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        headers &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; fixResponseHeaders(response.headers),&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-17&quot;&gt;&lt;a href=&quot;#cb15-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        statusCode &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; response.statusCode,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-18&quot;&gt;&lt;a href=&quot;#cb15-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; response.body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-19&quot;&gt;&lt;a href=&quot;#cb15-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The request handler for an HTTP forward proxy would look something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; handleRequest(request):&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# A request to an HTTP forward proxy has a request line with an absolute&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# URI:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-4&quot;&gt;&lt;a href=&quot;#cb16-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-5&quot;&gt;&lt;a href=&quot;#cb16-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;#     ${METHOD} ${SCHEME}://${HOST}${PATH} HTTP/1.1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-6&quot;&gt;&lt;a href=&quot;#cb16-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-7&quot;&gt;&lt;a href=&quot;#cb16-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# … which is how the proxy knows where to forward the request further&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-8&quot;&gt;&lt;a href=&quot;#cb16-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# upstream.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-9&quot;&gt;&lt;a href=&quot;#cb16-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    upstreamURI &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.absoluteURI&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-10&quot;&gt;&lt;a href=&quot;#cb16-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-11&quot;&gt;&lt;a href=&quot;#cb16-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; upstreamURI &lt;span class=&quot;kw&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-12&quot;&gt;&lt;a href=&quot;#cb16-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# Other than obtaining the origin server from the request line, the rest&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-13&quot;&gt;&lt;a href=&quot;#cb16-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;co&quot;&gt;# is similar to a reverse proxy.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-14&quot;&gt;&lt;a href=&quot;#cb16-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        response &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; httpRequest(&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-15&quot;&gt;&lt;a href=&quot;#cb16-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            host &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; upstreamURI.host,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-16&quot;&gt;&lt;a href=&quot;#cb16-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            method &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.method,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-17&quot;&gt;&lt;a href=&quot;#cb16-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            headers &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; fixRequestHeaders(request.headers),&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-18&quot;&gt;&lt;a href=&quot;#cb16-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            path &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; upstreamURI.path,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-19&quot;&gt;&lt;a href=&quot;#cb16-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            query &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; upstreamURI.query,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-20&quot;&gt;&lt;a href=&quot;#cb16-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.body,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-21&quot;&gt;&lt;a href=&quot;#cb16-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-22&quot;&gt;&lt;a href=&quot;#cb16-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-23&quot;&gt;&lt;a href=&quot;#cb16-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        respond(&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-24&quot;&gt;&lt;a href=&quot;#cb16-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            headers &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; fixResponseHeaders(response.headers),&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-25&quot;&gt;&lt;a href=&quot;#cb16-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            statusCode &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; response.statusCode,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-26&quot;&gt;&lt;a href=&quot;#cb16-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; response.body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-27&quot;&gt;&lt;a href=&quot;#cb16-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-28&quot;&gt;&lt;a href=&quot;#cb16-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-29&quot;&gt;&lt;a href=&quot;#cb16-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        respond(&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-30&quot;&gt;&lt;a href=&quot;#cb16-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            statusCode &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;400&lt;/span&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-31&quot;&gt;&lt;a href=&quot;#cb16-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;The request line did not have an absolute URI&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-32&quot;&gt;&lt;a href=&quot;#cb16-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On the other hand, a HTTPS forward proxy would look something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode python&quot;&gt;&lt;code class=&quot;sourceCode python&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;def&lt;/span&gt; handleRequest(request):&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;# A request to an HTTPS forward proxy has a request line of the form:&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;#     CONNECT ${HOST}:${PORT} HTTP/1.1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-5&quot;&gt;&lt;a href=&quot;#cb17-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;if&lt;/span&gt; request.&lt;span class=&quot;ex&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;va&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-6&quot;&gt;&lt;a href=&quot;#cb17-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       forwardTcp(&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-7&quot;&gt;&lt;a href=&quot;#cb17-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           host &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.&lt;span class=&quot;ex&quot;&gt;connect&lt;/span&gt;.host,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-8&quot;&gt;&lt;a href=&quot;#cb17-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           port &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.&lt;span class=&quot;ex&quot;&gt;connect&lt;/span&gt;.port,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-9&quot;&gt;&lt;a href=&quot;#cb17-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;           socket &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; request.socket&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-10&quot;&gt;&lt;a href=&quot;#cb17-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       )&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-11&quot;&gt;&lt;a href=&quot;#cb17-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;cf&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-12&quot;&gt;&lt;a href=&quot;#cb17-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        respond(&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-13&quot;&gt;&lt;a href=&quot;#cb17-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            statusCode &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;400&lt;/span&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-14&quot;&gt;&lt;a href=&quot;#cb17-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body &lt;span class=&quot;op&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;The HTTP method was not CONNECT&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-15&quot;&gt;&lt;a href=&quot;#cb17-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;combining-a-forward-and-reverse-proxy&quot;&gt;Combining a forward and reverse proxy&lt;/h4&gt;&lt;p&gt;This section illustrates a scenario where you might combine a forward proxy and a reverse proxy to further reinforce the difference between the two.&lt;/p&gt;&lt;p&gt;Suppose that we wish to create a forward proxy reachable at &lt;code&gt;https://both.example.com&lt;/code&gt; using &lt;code&gt;squid&lt;/code&gt;. The problem is that &lt;code&gt;squid&lt;/code&gt; does not provide out-of-the-box support for listening to HTTPS connections to &lt;code&gt;squid&lt;/code&gt; itself.&lt;/p&gt;&lt;p&gt;Carefully note that &lt;code&gt;squid&lt;/code&gt; can easily &lt;em&gt;forward&lt;/em&gt; an HTTPS connection (using a &lt;code&gt;CONNECT&lt;/code&gt; tunnel, as explained above), but &lt;code&gt;squid&lt;/code&gt; does not support encrypting the client’s initial HTTP request to &lt;code&gt;squid&lt;/code&gt; itself requesting the establishment of the &lt;code&gt;CONNECT&lt;/code&gt; tunnel.&lt;/p&gt;&lt;p&gt;However, we can run a reverse proxy that can handle &lt;a href=&quot;https://en.wikipedia.org/wiki/TLS_termination_proxy&quot;&gt;TLS termination&lt;/a&gt; (such as &lt;code&gt;haproxy&lt;/code&gt;) listening on &lt;code&gt;https://both.example.com&lt;/code&gt;. The reverse proxy’s sole job is to accept encrypted HTTPS requests sent to &lt;code&gt;https://both.example.com&lt;/code&gt; and then forward the decrypted HTTP request to the &lt;code&gt;squid&lt;/code&gt; service running on the same machine. &lt;code&gt;squid&lt;/code&gt; then forwards the request further depending on the origin server specified in the HTTP request line.&lt;/p&gt;&lt;p&gt;In this scenario, &lt;code&gt;squid&lt;/code&gt; is still acting as a forward proxy, in the sense that &lt;code&gt;squid&lt;/code&gt; uses the HTTP request line provided by the client to determine where to forward the request. Vice versa, &lt;code&gt;haproxy&lt;/code&gt; is acting as a reverse proxy because &lt;code&gt;haproxy&lt;/code&gt; always forwards all incoming requests to &lt;code&gt;squid&lt;/code&gt; regardless of what the client specifies.&lt;/p&gt;&lt;p&gt;This scenario illustrates one reason why I don’t define forward or reverse proxies in terms of which network or machine the proxy runs on. In this example, both the forward proxy and reverse proxy are running on the same network and machine.&lt;/p&gt;&lt;h4 id=&quot;related-reading&quot;&gt;Related reading&lt;/h4&gt;&lt;p&gt;There are other types of proxies that this post didn’t cover, but if you want to learn more you should also check out:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_server#Transparent_proxy&quot;&gt;Transparent proxies&lt;/a&gt;&lt;/p&gt;&lt;p&gt;These are proxies where the client doesn’t specify the proxy at all because it intercepts all client traffic. I personally view transparent proxies as a third type of forward proxy (the client still selects the origin server), although transparent proxies are architecturally very different from non-transparent forward proxies.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.paloaltonetworks.com/pan-os/8-1/pan-os-admin/decryption/decryption-concepts/ssl-forward-proxy&quot;&gt;SSL Forward Proxy&lt;/a&gt;&lt;/p&gt;&lt;p&gt;This is a variation on a forward proxy that can decrypt HTTPS traffic. However, this requires the client to opt into this decryption in some way.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;&lt;hr /&gt;&lt;ol&gt;&lt;li id=&quot;fn1&quot; role=&quot;doc-endnote&quot;&gt;&lt;p&gt;Some forward proxies do not forward all HTTP requests. Instead, a forward proxy might specify which hostnames, protocols, and ports to permit in an &lt;a href=&quot;https://en.wikipedia.org/wiki/Access-control_list&quot;&gt;access control list&lt;/a&gt;. This means that the example from the text would only work if the forward proxy’s access control lists permitted requests to &lt;code&gt;google.com&lt;/code&gt; and &lt;code&gt;github.com&lt;/code&gt;.&lt;a href=&quot;#fnref1&quot; class=&quot;footnote-back&quot; role=&quot;doc-backlink&quot;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/6306846059870969872/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/09/forward-and-reverse-proxies-explained.html#comment-form" title="3 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6306846059870969872"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6306846059870969872"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/09/forward-and-reverse-proxies-explained.html" title="Forward and reverse proxies explained"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-7712329497884133684</id><published>2021-08-27T08:22:00.001-07:00</published><updated>2021-08-27T08:22:33.127-07:00</updated><title type="text">Naming function arguments in Dhall</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;title&gt;doc-args&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;This post showcases some neat &lt;a href=&quot;https://dhall-lang.org/&quot;&gt;Dhall&lt;/a&gt; language features for improving the readability of types that I think other languages should steal.&lt;/p&gt;&lt;p&gt;To motivate this post, consider the following Haskell type for &lt;a href=&quot;https://hackage.haskell.org/package/text-1.2.5.0/docs/Data-Text.html#v:replace&quot;&gt;&lt;code&gt;Data.Text.replace&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;replace ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function replaces all occurrences of a substring with another substring, but you wouldn’t be able to easily guess which argument is which from the type alone.&lt;/p&gt;&lt;p&gt;Fortunately, the function does have Haddock-level documentation in the form of comments for each function argument:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;replace&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ @needle@ to search for.  If this string is empty, an&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- error will occur.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ @replacement@ to replace @needle@ with.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-7&quot;&gt;&lt;a href=&quot;#cb2-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-8&quot;&gt;&lt;a href=&quot;#cb2-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ @haystack@ in which to search.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb2-9&quot;&gt;&lt;a href=&quot;#cb2-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but what if you could provide a hint to what each argument does within the type itself?&lt;/p&gt;&lt;h4 id=&quot;naming-function-arguments-using-forall&quot;&gt;Naming function arguments using &lt;code&gt;∀&lt;/code&gt; / &lt;code&gt;forall&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;Well, in Dhall you can, and here is the equivalent Dhall type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; dhall repl&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;⊢ &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;replace&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;∀(needle &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) → ∀(replacement &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) → ∀(haystack &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) → &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… or if you prefer ASCII syntax then that is the same as this type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (needle &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-2&quot;&gt;&lt;a href=&quot;#cb4-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (replacement &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-3&quot;&gt;&lt;a href=&quot;#cb4-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; (haystack &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb4-4&quot;&gt;&lt;a href=&quot;#cb4-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;  &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we’ve tagged each function argument with the argument’s name. In fact, you don’t need to do this explicitly. Dhall will automatically infer named function argument types when you create user-defined functions:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;⊢ &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; λ(name &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) → &lt;span class=&quot;st&quot;&gt;&amp;quot;Hello, ${name}&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-2&quot;&gt;&lt;a href=&quot;#cb5-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb5-3&quot;&gt;&lt;a href=&quot;#cb5-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;∀(name &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) → &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In many cases these names are “cosmetic”, meaning that they have no effect on type-checking. For example, as far as the type-checker is concerned the following function type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;∀(name &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;) → &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… is the exact same as the following simpler function type (they are α-equivalent):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; → &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, sometimes these names are not cosmetic! The simplest example is a polymorphic function (a.k.a. a “generic” function), like the following polymorphic identity function:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; identity&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; ∀(a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → a → a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; λ(a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → λ(x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; a) → x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-5&quot;&gt;&lt;a href=&quot;#cb8-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  identity&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we’ve used the &lt;code&gt;∀&lt;/code&gt; to name the first function argument &lt;code&gt;a&lt;/code&gt;, which lets us reference that name downstream within the same type.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; identity&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-2&quot;&gt;&lt;a href=&quot;#cb9-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;co&quot;&gt;-- We&amp;#39;re naming our first function argument `a` …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-3&quot;&gt;&lt;a href=&quot;#cb9-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;co&quot;&gt;-- ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-4&quot;&gt;&lt;a href=&quot;#cb9-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; ∀(a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → a → a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-5&quot;&gt;&lt;a href=&quot;#cb9-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                   &lt;span class=&quot;co&quot;&gt;-- ↑   ↑&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-6&quot;&gt;&lt;a href=&quot;#cb9-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                   &lt;span class=&quot;co&quot;&gt;-- … so that we can reference the value of the first function&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-7&quot;&gt;&lt;a href=&quot;#cb9-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                   &lt;span class=&quot;co&quot;&gt;-- argument downstream within the same type&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-8&quot;&gt;&lt;a href=&quot;#cb9-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; λ(a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → λ(x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; a) → x&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-9&quot;&gt;&lt;a href=&quot;#cb9-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb9-10&quot;&gt;&lt;a href=&quot;#cb9-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt;  identity&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, unlike other languages, Dhall also lets us name the second function argument using the exact same syntax, even though our second function argument is not a &lt;code&gt;Type&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; identity&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; ∀(a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → ∀(x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; a) → a&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-3&quot;&gt;&lt;a href=&quot;#cb10-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; λ(a &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → λ(x &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; a) → x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In fact, this is actually the type that the interpreter would have inferred if we had omitted the type annotation. The name of this second function argument is cosmetic, though.&lt;/p&gt;&lt;p&gt;Another example where the argument name is not cosmetic is the following hypothetical Dhall type for a safe division function that rejects &lt;code&gt;0&lt;/code&gt; denominators at type-checking time:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;divide&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-2&quot;&gt;&lt;a href=&quot;#cb11-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; ∀(&lt;span class=&quot;fu&quot;&gt;denominator&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-3&quot;&gt;&lt;a href=&quot;#cb11-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ∀(proof &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;isZero &lt;span class=&quot;fu&quot;&gt;denominator&lt;/span&gt; ≡ &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-4&quot;&gt;&lt;a href=&quot;#cb11-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ∀(&lt;span class=&quot;fu&quot;&gt;numerator&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb11-5&quot;&gt;&lt;a href=&quot;#cb11-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This division function takes three arguments instead of the usual two:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The first argument is the denominator&lt;/p&gt;&lt;p&gt;… as you may have guessed from the helpful type-level name&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The second function argument requires a proof that &lt;code&gt;denominator&lt;/code&gt; is non-zero&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Side note: This proof obligation is satisfied by &lt;code&gt;assert : False ≡ False&lt;/code&gt; so long as &lt;code&gt;denominator&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The third argument is the numerator&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;By naming the first argument &lt;code&gt;denominator&lt;/code&gt;, we can refer to the &lt;em&gt;value&lt;/em&gt; of the first argument within the &lt;em&gt;type&lt;/em&gt; of the second argument:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;divide&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;--  We&amp;#39;re referring to the value of the first argument …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;--  ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; ∀(&lt;span class=&quot;fu&quot;&gt;denominator&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-5&quot;&gt;&lt;a href=&quot;#cb12-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;--                         … within the type of the second argument&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-6&quot;&gt;&lt;a href=&quot;#cb12-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;--                         ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-7&quot;&gt;&lt;a href=&quot;#cb12-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ∀(proof &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;/&lt;/span&gt;isZero &lt;span class=&quot;fu&quot;&gt;denominator&lt;/span&gt; ≡ &lt;span class=&quot;dt&quot;&gt;False&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-8&quot;&gt;&lt;a href=&quot;#cb12-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;--  ↑&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-9&quot;&gt;&lt;a href=&quot;#cb12-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;--  These names are still cosmetic, though&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-10&quot;&gt;&lt;a href=&quot;#cb12-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;--  ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-11&quot;&gt;&lt;a href=&quot;#cb12-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      ∀(&lt;span class=&quot;fu&quot;&gt;numerator&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-12&quot;&gt;&lt;a href=&quot;#cb12-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You might wonder why Dhall uses the &lt;code&gt;∀&lt;/code&gt; / &lt;code&gt;forall&lt;/code&gt; keyword for this purpose, since typically most languages only use &lt;code&gt;forall&lt;/code&gt; to create polymorphic (a.k.a. “generic”) functions. This is because Dhall is implemented as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_type_system&quot;&gt;pure type system&lt;/a&gt;, meaning that Dhall uniformly handles term-level function arguments and type-level function arguments in the exact same way. They’re both special cases of &lt;a href=&quot;https://en.wikipedia.org/wiki/Dependent_type#%CE%A0_type&quot;&gt;Π types&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The following paper does a really good job explaining pure type systems and Π types:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/research/wp-content/uploads/1997/01/henk.pdf&quot;&gt;Henk: a typed intermediate language&lt;/a&gt;,&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;… and that’s actually where I stole this trick from.&lt;/p&gt;&lt;p&gt;Really the correct symbol to use is &lt;code&gt;Π&lt;/code&gt; and not &lt;code&gt;∀&lt;/code&gt;, but there isn’t a great way to input &lt;code&gt;Π&lt;/code&gt; as ASCII. The Henk paper suggests using &lt;code&gt;|~|&lt;/code&gt; as the ASCII counterpart to &lt;code&gt;Π&lt;/code&gt;, but that didn’t seem right to me. I went with &lt;code&gt;∀&lt;/code&gt; / &lt;code&gt;forall&lt;/code&gt; because there’s already prior art for using those for type arguments.&lt;/p&gt;&lt;h4 id=&quot;anonymous-record-types&quot;&gt;Anonymous record types&lt;/h4&gt;&lt;p&gt;There is another approach to naming function arguments that doesn’t require a pure type system at all: anonymous record types.&lt;/p&gt;&lt;p&gt;For example, we could have changed the &lt;code&gt;Text/replace&lt;/code&gt; function to have this type:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;{ needle &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, replacement &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, haystack &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; } → &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That’s pretty clear, too, and can be done in any language that supports anonymous record types, including Dhall, &lt;a href=&quot;https://fsharp.org/&quot;&gt;F#&lt;/a&gt;, &lt;a href=&quot;https://www.purescript.org/&quot;&gt;PureScript&lt;/a&gt;, &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;, and &lt;a href=&quot;https://ocaml.org/&quot;&gt;OCaml&lt;/a&gt;.&lt;/p&gt;&lt;h4 id=&quot;naming-type-parameters&quot;&gt;Naming type parameters&lt;/h4&gt;&lt;p&gt;You can also use the above two tricks to name type arguments for type constructors, too.&lt;/p&gt;&lt;p&gt;For example, we can define a &lt;code&gt;Map&lt;/code&gt; type constructor to be a list of key-value pairs:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      λ(key &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      λ(value &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; { mapKey &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; key, mapValue &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; value }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which we would use like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;⊢ &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-2&quot;&gt;&lt;a href=&quot;#cb15-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb15-3&quot;&gt;&lt;a href=&quot;#cb15-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; { mapKey &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, mapValue &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and the inferred type names the arguments to our &lt;code&gt;Map&lt;/code&gt; type constructor:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;⊢ &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-2&quot;&gt;&lt;a href=&quot;#cb16-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb16-3&quot;&gt;&lt;a href=&quot;#cb16-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;∀(key &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → ∀(value &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;) → &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also use anonymous records to name type arguments, too! For example, we could have instead defined &lt;code&gt;Map&lt;/code&gt; as:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;      λ(args &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { key &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;, value &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt; }) →&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; { mapKey &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; args&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;key, mapValue &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; args&lt;span class=&quot;op&quot;&gt;.&lt;/span&gt;value }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which we would use like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;⊢ &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt; { key &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, value &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt; }&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-2&quot;&gt;&lt;a href=&quot;#cb18-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb18-3&quot;&gt;&lt;a href=&quot;#cb18-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;List&lt;/span&gt; { mapKey &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Text&lt;/span&gt;, mapValue &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Natural&lt;/span&gt; }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this latter &lt;code&gt;Map&lt;/code&gt; would have an inferred type of:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;⊢ &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Map&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-2&quot;&gt;&lt;a href=&quot;#cb19-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb19-3&quot;&gt;&lt;a href=&quot;#cb19-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;∀(args &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; { key &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;, value &lt;span class=&quot;op&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt; }) → &lt;span class=&quot;dt&quot;&gt;Type&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pretty neat! Not many languages can pass type constructor arguments as named fields of a record.&lt;/p&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;Hopefully this gives language designers some ideas for how they can add language support for naming function arguments.&lt;/p&gt;&lt;p&gt;Unfortunately, my favorite language (&lt;a href=&quot;https://www.haskell.org/&quot;&gt;Haskell&lt;/a&gt;) does not exactly support these features, so sometimes people work around this by using &lt;code&gt;newtype&lt;/code&gt;s to name function arguments. I’ve never been of fan of this approach, especially if the newtype is not opaque and this post does a good job of explaining why:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://lexi-lambda.github.io/blog/2020/11/01/names-are-not-type-safety/&quot;&gt;Names are not type safety&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;However, you can simulate this trick in Haskell using something like what the &lt;code&gt;vulkan&lt;/code&gt; package does, which is to use &lt;code&gt;DataKinds&lt;/code&gt; and &lt;code&gt;TypeOperators&lt;/code&gt; to create a type-level operator that lets you associate arbitrary name data with types:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;type&lt;/span&gt; (&lt;span class=&quot;ot&quot;&gt;name ::&lt;/span&gt; k) &lt;span class=&quot;op&quot;&gt;:::&lt;/span&gt; a &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which the package uses like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;cmdDraw&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-2&quot;&gt;&lt;a href=&quot;#cb21-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;forall&lt;/span&gt; io &lt;span class=&quot;op&quot;&gt;.&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;MonadIO&lt;/span&gt; io)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-3&quot;&gt;&lt;a href=&quot;#cb21-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;-- | @commandBuffer@ is the command buffer into which the command is&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-4&quot;&gt;&lt;a href=&quot;#cb21-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;co&quot;&gt;-- recorded.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-5&quot;&gt;&lt;a href=&quot;#cb21-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       &lt;span class=&quot;dt&quot;&gt;CommandBuffer&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-6&quot;&gt;&lt;a href=&quot;#cb21-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;-- | @vertexCount@ is the number of vertices to draw.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-7&quot;&gt;&lt;a href=&quot;#cb21-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       (&lt;span class=&quot;st&quot;&gt;&amp;quot;vertexCount&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Word32&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-8&quot;&gt;&lt;a href=&quot;#cb21-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;-- | @instanceCount@ is the number of instances to draw.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-9&quot;&gt;&lt;a href=&quot;#cb21-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       (&lt;span class=&quot;st&quot;&gt;&amp;quot;instanceCount&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Word32&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-10&quot;&gt;&lt;a href=&quot;#cb21-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;-- | @firstVertex@ is the index of the first vertex to draw.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-11&quot;&gt;&lt;a href=&quot;#cb21-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       (&lt;span class=&quot;st&quot;&gt;&amp;quot;firstVertex&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Word32&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-12&quot;&gt;&lt;a href=&quot;#cb21-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;-- | @firstInstance@ is the instance ID of the first instance to draw.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-13&quot;&gt;&lt;a href=&quot;#cb21-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;       (&lt;span class=&quot;st&quot;&gt;&amp;quot;firstInstance&amp;quot;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;:::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Word32&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb21-14&quot;&gt;&lt;a href=&quot;#cb21-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; io ()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These names are ignored by the type-checker, just like the equivalent cosmetic names in Dhall.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/7712329497884133684/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/08/naming-function-arguments-in-dhall.html#comment-form" title="0 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7712329497884133684"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/7712329497884133684"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/08/naming-function-arguments-in-dhall.html" title="Naming function arguments in Dhall"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-1777990983847811806.post-6319221858421997722</id><published>2021-08-13T08:07:00.003-07:00</published><updated>2022-05-18T06:56:03.434-07:00</updated><title type="text">Namespaced De Bruijn indices</title><content type="html">&lt;!DOCTYPE html&gt;&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;&quot; xml:lang=&quot;&quot;&gt;&lt;head&gt;  &lt;meta charset=&quot;utf-8&quot; /&gt;  &lt;meta name=&quot;generator&quot; content=&quot;pandoc&quot; /&gt;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, user-scalable=yes&quot; /&gt;  &lt;meta name=&quot;twitter:card&quot; content=&quot;summary&quot; /&gt;  &lt;meta name=&quot;twitter:site&quot; content=&quot;@GabriellaG439&quot; /&gt;  &lt;meta name=&quot;twitter:title&quot; content=&quot;Namespaced De Bruijn indices&quot; /&gt;  &lt;meta name=&quot;twitter:description&quot; content=&quot;An elegant trick for managing bound variables.&quot; /&gt;  &lt;title&gt;Namespaced De Bruijn indices&lt;/title&gt;  &lt;style&gt;    html {       line-height: 1.5;       font-family: Georgia, serif;       font-size: 20px;       color: #1a1a1a;       background-color: #fdfdfd;     }     body {       margin: 0 auto;       max-width: 36em;       padding-left: 50px;       padding-right: 50px;       padding-top: 50px;       padding-bottom: 50px;       hyphens: auto;       word-wrap: break-word;       text-rendering: optimizeLegibility;       font-kerning: normal;     }     @media (max-width: 600px) {       body {         font-size: 0.9em;         padding: 1em;       }     }     @media print {       body {         background-color: transparent;         color: black;         font-size: 12pt;       }       p, h2, h3 {         orphans: 3;         widows: 3;       }       h2, h3, h4 {         page-break-after: avoid;       }     }     p {       margin: 1em 0;     }     a {       color: #1a1a1a;     }     a:visited {       color: #1a1a1a;     }     img {       max-width: 100%;     }     h1, h2, h3, h4, h5, h6 {       margin-top: 1.4em;     }     h5, h6 {       font-size: 1em;       font-style: italic;     }     h6 {       font-weight: normal;     }     ol, ul {       padding-left: 1.7em;       margin-top: 1em;     }     li &gt; ol, li &gt; ul {       margin-top: 0;     }     blockquote {       margin: 1em 0 1em 1.7em;       padding-left: 1em;       border-left: 2px solid #e6e6e6;       color: #606060;     }     code {       font-family: Menlo, Monaco, 'Lucida Console', Consolas, monospace;       font-size: 85%;       margin: 0;     }     pre {       margin: 1em 0;       overflow: auto;     }     pre code {       padding: 0;       overflow: visible;     }     .sourceCode {      background-color: transparent;      overflow: visible;     }     hr {       background-color: #1a1a1a;       border: none;       height: 1px;       margin: 1em 0;     }     table {       margin: 1em 0;       border-collapse: collapse;       width: 100%;       overflow-x: auto;       display: block;       font-variant-numeric: lining-nums tabular-nums;     }     table caption {       margin-bottom: 0.75em;     }     tbody {       margin-top: 0.5em;       border-top: 1px solid #1a1a1a;       border-bottom: 1px solid #1a1a1a;     }     th {       border-top: 1px solid #1a1a1a;       padding: 0.25em 0.5em 0.25em 0.5em;     }     td {       padding: 0.125em 0.5em 0.25em 0.5em;     }     header {       margin-bottom: 4em;       text-align: center;     }     #TOC li {       list-style: none;     }     #TOC a:not(:hover) {       text-decoration: none;     }     code{white-space: pre-wrap;}     span.smallcaps{font-variant: small-caps;}     span.underline{text-decoration: underline;}     div.column{display: inline-block; vertical-align: top; width: 50%;}     div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}     ul.task-list{list-style: none;}     pre &gt; code.sourceCode { white-space: pre; position: relative; }     pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }     pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }     .sourceCode { overflow: visible; }     code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }     div.sourceCode { margin: 1em 0; }     pre.sourceCode { margin: 0; }     @media screen {     div.sourceCode { overflow: auto; }     }     @media print {     pre &gt; code.sourceCode { white-space: pre-wrap; }     pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }     }     pre.numberSource code       { counter-reset: source-line 0; }     pre.numberSource code &gt; span       { position: relative; left: -4em; counter-increment: source-line; }     pre.numberSource code &gt; span &gt; a:first-child::before       { content: counter(source-line);         position: relative; left: -1em; text-align: right; vertical-align: baseline;         border: none; display: inline-block;         -webkit-touch-callout: none; -webkit-user-select: none;         -khtml-user-select: none; -moz-user-select: none;         -ms-user-select: none; user-select: none;         padding: 0 4px; width: 4em;         color: #aaaaaa;       }     pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }     div.sourceCode       {   }     @media screen {     pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }     }     code span.al { color: #ff0000; font-weight: bold; } /* Alert */     code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */     code span.at { color: #7d9029; } /* Attribute */     code span.bn { color: #40a070; } /* BaseN */     code span.bu { } /* BuiltIn */     code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */     code span.ch { color: #4070a0; } /* Char */     code span.cn { color: #880000; } /* Constant */     code span.co { color: #60a0b0; font-style: italic; } /* Comment */     code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */     code span.do { color: #ba2121; font-style: italic; } /* Documentation */     code span.dt { color: #902000; } /* DataType */     code span.dv { color: #40a070; } /* DecVal */     code span.er { color: #ff0000; font-weight: bold; } /* Error */     code span.ex { } /* Extension */     code span.fl { color: #40a070; } /* Float */     code span.fu { color: #06287e; } /* Function */     code span.im { } /* Import */     code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     code span.kw { color: #007020; font-weight: bold; } /* Keyword */     code span.op { color: #666666; } /* Operator */     code span.ot { color: #007020; } /* Other */     code span.pp { color: #bc7a00; } /* Preprocessor */     code span.sc { color: #4070a0; } /* SpecialChar */     code span.ss { color: #bb6688; } /* SpecialString */     code span.st { color: #4070a0; } /* String */     code span.va { color: #19177c; } /* Variable */     code span.vs { color: #4070a0; } /* VerbatimString */     code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */     .display.math{display: block; text-align: center; margin: 0.5rem auto;}   &lt;/style&gt;  &lt;!--[if lt IE 9]&gt;    &lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&quot;&gt;&lt;/script&gt;  &lt;![endif]--&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;In this post I share a trick I use for dealing with bound variables in &lt;a href=&quot;https://dhall-lang.org/&quot;&gt;Dhall&lt;/a&gt; that I thought might be useful for other interpreted programming languages. I have no idea if this trick has been introduced before but if it has then just let me know and I’ll acknowledge any prior art here.&lt;/p&gt;&lt;p&gt;Edit: Todd Wilson points out that Mark-Oliver Stehr’s &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S1571066105801252&quot;&gt;CINNI&lt;/a&gt; originally introduced this idea.&lt;/p&gt;&lt;p&gt;The brief explanation of the trick is: instead of choosing between a named or a nameless representation for bound variables you can get the best of both worlds by namespacing De Bruijn indices by variable names. This simplifies the implementation and in some cases improves the end user’s experience.&lt;/p&gt;&lt;p&gt;The rest of this post is a longer explanation of the above summary, starting with an explanation of the trick and followed by a review of the benefits of this approach.&lt;/p&gt;&lt;h4 id=&quot;background&quot;&gt;Background&lt;/h4&gt;&lt;p&gt;I’d like to first explain what I mean by “named” and “nameless” representations before I explain the trick.&lt;/p&gt;&lt;p&gt;A named representation of the lambda calculus syntax tree typically looks something like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-3&quot;&gt;&lt;a href=&quot;#cb1-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb1-4&quot;&gt;&lt;a href=&quot;#cb1-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example, if the user wrote the following Haskell-like code:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\f &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then that would correspond to this syntax tree:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;f&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The named representation has the nice property that it preserves the original variable names … well, sort of. This representation definitely preserves the variable names when you initially parse the code into the syntax tree, but if you β-reduce an expression you can potentially run into problems.&lt;/p&gt;&lt;p&gt;For example, consider this expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb4&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb4-1&quot;&gt;&lt;a href=&quot;#cb4-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (\y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; y) x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which corresponds to this syntax tree:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb5&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb5-1&quot;&gt;&lt;a href=&quot;#cb5-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;))) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you try to β-reduce &lt;code&gt;(\y -&amp;gt; \x -&amp;gt; y) x&lt;/code&gt; without renaming any variables then you get the following incorrect result:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb6&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb6-1&quot;&gt;&lt;a href=&quot;#cb6-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This bug is known as “name capture” and capture-avoiding substitution requires renaming one of the variables named &lt;code&gt;x&lt;/code&gt; so that the inner &lt;code&gt;x&lt;/code&gt; does not shadow the outer &lt;code&gt;x&lt;/code&gt;. For example, we could fix the problem by renaming the outer &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;x1&lt;/code&gt; like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb7&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb7-1&quot;&gt;&lt;a href=&quot;#cb7-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x1 &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A nameless representation tries to work around these name capture issues by replacing the variable names with numeric indices (known as &lt;a href=&quot;https://en.wikipedia.org/wiki/De_Bruijn_index&quot;&gt;De Bruijn indices&lt;/a&gt;):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb8&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb8-1&quot;&gt;&lt;a href=&quot;#cb8-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-2&quot;&gt;&lt;a href=&quot;#cb8-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-3&quot;&gt;&lt;a href=&quot;#cb8-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb8-4&quot;&gt;&lt;a href=&quot;#cb8-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example, code like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb9&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb9-1&quot;&gt;&lt;a href=&quot;#cb9-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\f &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… corresponds to this nameless representation:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb10&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb10-1&quot;&gt;&lt;a href=&quot;#cb10-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;example ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb10-2&quot;&gt;&lt;a href=&quot;#cb10-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;example &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Carefully note that the &lt;code&gt;Lambda&lt;/code&gt; constructor now has no field for the bound variable name, so it’s as if the user had instead written:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb11&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb11-1&quot;&gt;&lt;a href=&quot;#cb11-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… using &lt;code&gt;@n&lt;/code&gt; to represent the variable whose De Bruijn index is &lt;code&gt;n&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;The numeric De Bruijn indices refer to bound variables. Specifically, the numeric index &lt;code&gt;0&lt;/code&gt; refers to the “closest” or “innermost” variable bound by a lambda:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb12&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb12-1&quot;&gt;&lt;a href=&quot;#cb12-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                This 0 index …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-2&quot;&gt;&lt;a href=&quot;#cb12-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-3&quot;&gt;&lt;a href=&quot;#cb12-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb12-4&quot;&gt;&lt;a href=&quot;#cb12-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--       ↑ … refers to the variable bound by this lambda&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and incrementing the index moves to the next outermost lambda:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb13&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb13-1&quot;&gt;&lt;a href=&quot;#cb13-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--             This 1 index …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-2&quot;&gt;&lt;a href=&quot;#cb13-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--             ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-3&quot;&gt;&lt;a href=&quot;#cb13-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb13-4&quot;&gt;&lt;a href=&quot;#cb13-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--  ↑ … refers to the variable bound by this lambda&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;De Bruijn indices avoid name collisions between bound variables, but they require you to do additional work if you wish to preserve the original variable names. There are several ways to do so, and I’ll present my preferred approach.&lt;/p&gt;&lt;h4 id=&quot;the-trick---part-1&quot;&gt;The trick - Part 1&lt;/h4&gt;&lt;p&gt;We can get the best of both worlds by combining the named and nameless representations into a hybrid representation like this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb14&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb14-1&quot;&gt;&lt;a href=&quot;#cb14-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-2&quot;&gt;&lt;a href=&quot;#cb14-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-3&quot;&gt;&lt;a href=&quot;#cb14-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb14-4&quot;&gt;&lt;a href=&quot;#cb14-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I call this representation “namespaced De Bruijn indices”.&lt;/p&gt;&lt;p&gt;This is almost the exact same as our named representation, except that we have now added an &lt;code&gt;Int&lt;/code&gt; field to the &lt;code&gt;Variable&lt;/code&gt; constructor. This &lt;code&gt;Int&lt;/code&gt; field is morally the same as the De Bruijn index in the nameless representation, except that this time the De Bruijn index is “namespaced” to a specific variable name.&lt;/p&gt;&lt;p&gt;The easiest way to explain this is with a few examples.&lt;/p&gt;&lt;p&gt;The following expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb15&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb15-1&quot;&gt;&lt;a href=&quot;#cb15-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… corresponds to this syntax tree:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb16&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb16-1&quot;&gt;&lt;a href=&quot;#cb16-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this curried function returns the third function argument:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb17&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb17-1&quot;&gt;&lt;a href=&quot;#cb17-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                    This …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-2&quot;&gt;&lt;a href=&quot;#cb17-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                    ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-3&quot;&gt;&lt;a href=&quot;#cb17-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb17-4&quot;&gt;&lt;a href=&quot;#cb17-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--               ↑ … refers to this bound variable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… because that is the innermost bound variable named &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Similarly, the following expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb18&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb18-1&quot;&gt;&lt;a href=&quot;#cb18-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… corresponds to this syntax tree:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb19&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb19-1&quot;&gt;&lt;a href=&quot;#cb19-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which returns the second function argument:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb20&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb20-1&quot;&gt;&lt;a href=&quot;#cb20-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                    This …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-2&quot;&gt;&lt;a href=&quot;#cb20-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                    ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-3&quot;&gt;&lt;a href=&quot;#cb20-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb20-4&quot;&gt;&lt;a href=&quot;#cb20-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--         ↑ … refers to this bound variable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… because that is the innermost bound variable named &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Carefully note that our variable still has a De Bruijn index of 0, but we ignore the innermost bound variable named &lt;code&gt;x&lt;/code&gt; because we also pair our De Bruijn index with name of the variable we are referring to (&lt;code&gt;y&lt;/code&gt;) so we only count bound variables named &lt;code&gt;y&lt;/code&gt; when resolving the De Bruijn index.&lt;/p&gt;&lt;p&gt;Finally, the following expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb21&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb21-1&quot;&gt;&lt;a href=&quot;#cb21-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… corresponds to this syntax tree:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb22&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb22-1&quot;&gt;&lt;a href=&quot;#cb22-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which returns the first function argument:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb23&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb23-1&quot;&gt;&lt;a href=&quot;#cb23-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                    This …&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-2&quot;&gt;&lt;a href=&quot;#cb23-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--                    ↓&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-3&quot;&gt;&lt;a href=&quot;#cb23-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb23-4&quot;&gt;&lt;a href=&quot;#cb23-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;--   ↑ … refers to this bound variable&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The De Bruijn index is 1, which means that it refers to the second innermost (0-indexed) bound variable named &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Notice how this representation lets us refer to &lt;a href=&quot;https://en.wikipedia.org/wiki/Variable_shadowing&quot;&gt;shadowed variables&lt;/a&gt; by their index. These De Bruijn indices are not an internal implementation detail, but are actually available to the user as part of the surface syntax of the language.&lt;/p&gt;&lt;p&gt;However, we want to avoid littering the code with these De Bruijn indices, which brings us to the second part of the trick.&lt;/p&gt;&lt;h4 id=&quot;the-trick---part-2&quot;&gt;The trick - Part 2&lt;/h4&gt;&lt;p&gt;The next step is to add syntactic sugar to the language by allowing users to omit the index in the source code, which defaults the index to &lt;code&gt;0&lt;/code&gt;. This means that an expression that never references shadowed variables never needs to specify a De Bruijn index.&lt;/p&gt;&lt;p&gt;For example, instead of writing this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb24&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb24-1&quot;&gt;&lt;a href=&quot;#cb24-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… we can elide the index to simplify the code to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb25&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb25-1&quot;&gt;&lt;a href=&quot;#cb25-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which will still parse as:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb26&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb26-1&quot;&gt;&lt;a href=&quot;#cb26-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Similarly, we can simplify this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb27&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb27-1&quot;&gt;&lt;a href=&quot;#cb27-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; y&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… to this:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb28&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb28-1&quot;&gt;&lt;a href=&quot;#cb28-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… which will still parse as:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb29&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb29-1&quot;&gt;&lt;a href=&quot;#cb29-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, we cannot use this syntactic sugar to simplify the final example:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb30&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb30-1&quot;&gt;&lt;a href=&quot;#cb30-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… since the index is non-zero. Any code that references a shadowed variable still needs to use an explicit De Bruijn index to do so.&lt;/p&gt;&lt;p&gt;Vice versa, we also omit zero indices when pretty-printing code. When we pretty-print this syntax tree:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb31&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb31-1&quot;&gt;&lt;a href=&quot;#cb31-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… we don’t include the index:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb32&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb32-1&quot;&gt;&lt;a href=&quot;#cb32-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This syntactic sugar ensures that most users do not need to be aware that indices exist at all when writing code. The user only encounters the indices in two scenarios:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;The user wishes to explicitly reference a shadowed variable&lt;/p&gt;&lt;p&gt;For example, in the following expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb33&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb33-1&quot;&gt;&lt;a href=&quot;#cb33-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… the user might prefer to use the built-in language support for disambiguating variables of the same name rather than renaming one of the two variables named &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;The indices appear in a β-reduced result&lt;/p&gt;&lt;p&gt;For example, this expression has no user-visible De Bruijn indices:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb34&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb34-1&quot;&gt;&lt;a href=&quot;#cb34-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; (\y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; y) x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… but if you β-reduce the expression (I’ll cover how in the &lt;a href=&quot;#appendix---implementation&quot;&gt;Appendix&lt;/a&gt;) and pretty-print the β-reduced expression then the result will introduce a non-zero De Bruijn index to disambiguate the two variables named &lt;code&gt;x&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb35&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb35-1&quot;&gt;&lt;a href=&quot;#cb35-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In fact, the latter scenario is the reason I originally adopted this trick: I wanted to be able to display β-reduced functions to the end user while preserving the original variable names as much as possible.&lt;/p&gt;&lt;p&gt;Note that De Bruijn indices don’t appear when a β-reduced expression does not reference any shadowed variables. For example, if you β-reduce this expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb36&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb36-1&quot;&gt;&lt;a href=&quot;#cb36-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;(\f &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; f f) (\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… the result has no De Bruijn index (because the index is 0 and is therefore elided by the pretty-printer):&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb37&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb37-1&quot;&gt;&lt;a href=&quot;#cb37-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;the-trick---part-3&quot;&gt;The trick - Part 3&lt;/h4&gt;&lt;p&gt;One of the benefits of the traditional nameless representation using (non-namespaced) De Bruijn indices is that you get α-equivalence for free. Two nameless expressions are α-equivalent if they are syntactically identical. We can build upon this useful property to derive a compact algorithm for α-equivalence of “namespaced De Bruijn indices”.&lt;/p&gt;&lt;p&gt;The trick is to recognize that namespaced De Bruijn indices reduce to ordinary De Bruijn indices in the degenerate case when you rename all variables to the same name. I’ll call this renaming process “α-reduction”.&lt;/p&gt;&lt;p&gt;For example, if we α-reduce the following expression by renaming all of the: variables to &lt;code&gt;_&lt;/code&gt;:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb38&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb38-1&quot;&gt;&lt;a href=&quot;#cb38-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… then we get this result:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb39&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb39-1&quot;&gt;&lt;a href=&quot;#cb39-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; \_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; _&lt;span class=&quot;op&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See the &lt;a href=&quot;#appendix---implementation&quot;&gt;Appendix&lt;/a&gt; for the α-reduction algorithm.&lt;/p&gt;&lt;p&gt;Equipped with α-reduction, then we can derive α-equivalence: two expressions are α-equivalent if their α-reduced forms are syntactically identical.&lt;/p&gt;&lt;p&gt;For example, this expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb40&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb40-1&quot;&gt;&lt;a href=&quot;#cb40-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\x &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… and this expression:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb41&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb41-1&quot;&gt;&lt;a href=&quot;#cb41-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\y &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; y&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… both α-reduce to:&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb42&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb42-1&quot;&gt;&lt;a href=&quot;#cb42-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;\_ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; _&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… so they are α-equivalent.&lt;/p&gt;&lt;h4 id=&quot;benefits&quot;&gt;Benefits&lt;/h4&gt;&lt;p&gt;There are a few benefits of using this trick that motivate me to use this in all of my interpreted languages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;This trick improves the readability of β-reduced functions&lt;/p&gt;&lt;p&gt;β-reduced functions preserve the original variable names and this trick doesn’t suffer from the rename-related name pollution that plagues other capture-avoiding substitution algorithms. In particular, β-reduced expressions only display De Bruijn indices when absolutely necessary (if they reference a shadowed variable) and they otherwise use the original pristine variable names.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;This trick simplifies the internal implementation&lt;/p&gt;&lt;p&gt;You don’t need to maintain two separate syntax trees for a named and nameless representation. You can use the same syntax tree for both since any named syntax tree can be α-reduced to give the equivalent nameless syntax tree.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;This trick enables userland support for referencing shadowed variables&lt;/p&gt;&lt;p&gt;I know some people think that referencing shadowed variable names is a misfeature. However, I personally feel that resolving name collisions by adding &lt;code&gt;'&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; characters to the end of variable names is less principled than having language support for resolving name collisions using optional De Bruijn indices.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(Not shown) This trick can sometimes improve type errors&lt;/p&gt;&lt;p&gt;To be precise, this trick improves the inferred types displayed in error messages when using explicit universal quantification.&lt;/p&gt;&lt;p&gt;Type variables also have to avoid name collisions, so if you use the same namespaced De Bruijn representation for your types then you avoid polluting your inferred types and error messages with junk type variables like &lt;code&gt;a14&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;This post doesn’t cover the equivalent type-level trick, but you can refer to the &lt;a href=&quot;https://github.com/dhall-lang/dhall-lang/tree/master/standard&quot;&gt;Dhall standard&lt;/a&gt; if you need an example of a language that uses this trick.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;&lt;p&gt;I believe that namespaced De Bruijn indices are most appropriate for languages that are (A) strongly normalizing (like Dhall) and (B) interpreted, because such languages tend to support pretty-printing β-reduced functions.&lt;/p&gt;&lt;p&gt;I think this trick is also useful to a lesser extent for all interpreted languages, if only because the implementation is (in my opinion) simpler and more elegant than other algorithms for capture-avoiding substitution (See the &lt;a href=&quot;#appendix---implementation&quot;&gt;Appendix&lt;/a&gt; below).&lt;/p&gt;&lt;p&gt;On the other hand, compiled languages will likely not benefit much from this trick since they typically have no need to preserve the original variable names and they also will use an intermediate representation that is very different from the concrete syntax tree.&lt;/p&gt;&lt;h4 id=&quot;appendix---implementation&quot;&gt;Appendix - Implementation&lt;/h4&gt;&lt;p&gt;This section provides Haskell code specifying how to α-reduce and β-reduce a syntax tree that uses namespaced De Bruijn indices.&lt;/p&gt;&lt;p&gt;This reference implementation is not the most efficient implementation, but it’s the simplest one which I use for pedagogical purposes. If you’re interested in efficiency then check out my &lt;a href=&quot;https://github.com/Gabriel439/grace&quot;&gt;Grace&lt;/a&gt; project, which mixes this trick with the more efficient &lt;a href=&quot;https://en.wikipedia.org/wiki/Normalisation_by_evaluation&quot;&gt;normalization-by-evaluation&lt;/a&gt; algorithm.&lt;/p&gt;&lt;p&gt;I also don’t include code for the parser or pretty-printer, because the only interesting part is the syntactic sugar for handling variables with a De Bruijn index of &lt;code&gt;0&lt;/code&gt;. Again, check out &lt;a href=&quot;https://github.com/Gabriel439/grace&quot;&gt;Grace&lt;/a&gt; if you want to refer to a more complete implementation.&lt;/p&gt;&lt;div class=&quot;sourceCode&quot; id=&quot;cb43&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb43-1&quot;&gt;&lt;a href=&quot;#cb43-1&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | Syntax tree&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-2&quot;&gt;&lt;a href=&quot;#cb43-2&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-3&quot;&gt;&lt;a href=&quot;#cb43-3&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-4&quot;&gt;&lt;a href=&quot;#cb43-4&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-5&quot;&gt;&lt;a href=&quot;#cb43-5&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-6&quot;&gt;&lt;a href=&quot;#cb43-6&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;deriving&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Eq&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Show&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-7&quot;&gt;&lt;a href=&quot;#cb43-7&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-8&quot;&gt;&lt;a href=&quot;#cb43-8&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;{-| Increase the index of all bound variables matching the given variable name&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-9&quot;&gt;&lt;a href=&quot;#cb43-9&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-10&quot;&gt;&lt;a href=&quot;#cb43-10&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    This is modified from the Shifting definition in Pierce&amp;#39;s \&amp;quot;Types and&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-11&quot;&gt;&lt;a href=&quot;#cb43-11&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    Programming Languages\&amp;quot; by adding an additional argument for the namespace&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-12&quot;&gt;&lt;a href=&quot;#cb43-12&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    to shift&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-13&quot;&gt;&lt;a href=&quot;#cb43-13&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-14&quot;&gt;&lt;a href=&quot;#cb43-14&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;shift&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-15&quot;&gt;&lt;a href=&quot;#cb43-15&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-16&quot;&gt;&lt;a href=&quot;#cb43-16&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The amount to shift by&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-17&quot;&gt;&lt;a href=&quot;#cb43-17&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-18&quot;&gt;&lt;a href=&quot;#cb43-18&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The variable name to match (a.k.a. the namespace)&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-19&quot;&gt;&lt;a href=&quot;#cb43-19&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-20&quot;&gt;&lt;a href=&quot;#cb43-20&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The minimum bound for which indices to shift&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-21&quot;&gt;&lt;a href=&quot;#cb43-21&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-22&quot;&gt;&lt;a href=&quot;#cb43-22&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The expression to shift&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-23&quot;&gt;&lt;a href=&quot;#cb43-23&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-24&quot;&gt;&lt;a href=&quot;#cb43-24&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;shift offset namespace minIndex syntax &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-25&quot;&gt;&lt;a href=&quot;#cb43-25&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; syntax &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-26&quot;&gt;&lt;a href=&quot;#cb43-26&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name index&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-27&quot;&gt;&lt;a href=&quot;#cb43-27&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-28&quot;&gt;&lt;a href=&quot;#cb43-28&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            index&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-29&quot;&gt;&lt;a href=&quot;#cb43-29&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; name &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; namespace &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; minIndex &lt;span class=&quot;op&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; offset&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-30&quot;&gt;&lt;a href=&quot;#cb43-30&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;otherwise&lt;/span&gt;                              &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-31&quot;&gt;&lt;a href=&quot;#cb43-31&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-32&quot;&gt;&lt;a href=&quot;#cb43-32&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name body &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name body&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-33&quot;&gt;&lt;a href=&quot;#cb43-33&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-34&quot;&gt;&lt;a href=&quot;#cb43-34&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            minIndex&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-35&quot;&gt;&lt;a href=&quot;#cb43-35&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; name &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; namespace &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; minIndex &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-36&quot;&gt;&lt;a href=&quot;#cb43-36&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;otherwise&lt;/span&gt;         &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; minIndex&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-37&quot;&gt;&lt;a href=&quot;#cb43-37&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-38&quot;&gt;&lt;a href=&quot;#cb43-38&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift offset namespace minIndex&amp;#39; body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-39&quot;&gt;&lt;a href=&quot;#cb43-39&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-40&quot;&gt;&lt;a href=&quot;#cb43-40&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function argument &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function&amp;#39; argument&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-41&quot;&gt;&lt;a href=&quot;#cb43-41&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-42&quot;&gt;&lt;a href=&quot;#cb43-42&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            function&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift offset namespace minIndex function&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-43&quot;&gt;&lt;a href=&quot;#cb43-43&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-44&quot;&gt;&lt;a href=&quot;#cb43-44&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            argument&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift offset namespace minIndex argument&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-45&quot;&gt;&lt;a href=&quot;#cb43-45&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-46&quot;&gt;&lt;a href=&quot;#cb43-46&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;{-| Substitute the given variable name and index with an expression&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-47&quot;&gt;&lt;a href=&quot;#cb43-47&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-48&quot;&gt;&lt;a href=&quot;#cb43-48&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    This is modified from the Substitution definition in Pierce&amp;#39;s \&amp;quot;Types and&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-49&quot;&gt;&lt;a href=&quot;#cb43-49&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    Programming Languages\&amp;quot; by adding an additional argument for the variable&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-50&quot;&gt;&lt;a href=&quot;#cb43-50&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;    index&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-51&quot;&gt;&lt;a href=&quot;#cb43-51&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-}&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-52&quot;&gt;&lt;a href=&quot;#cb43-52&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;substitute&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-53&quot;&gt;&lt;a href=&quot;#cb43-53&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;    ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-54&quot;&gt;&lt;a href=&quot;#cb43-54&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The expression to substitute into&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-55&quot;&gt;&lt;a href=&quot;#cb43-55&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-56&quot;&gt;&lt;a href=&quot;#cb43-56&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The name of the variable to replace&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-57&quot;&gt;&lt;a href=&quot;#cb43-57&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-58&quot;&gt;&lt;a href=&quot;#cb43-58&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The index of the variable to replace&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-59&quot;&gt;&lt;a href=&quot;#cb43-59&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-60&quot;&gt;&lt;a href=&quot;#cb43-60&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;co&quot;&gt;-- ^ The expression to substitute in place of the given variable&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-61&quot;&gt;&lt;a href=&quot;#cb43-61&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-62&quot;&gt;&lt;a href=&quot;#cb43-62&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;substitute expression name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; replacement &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-63&quot;&gt;&lt;a href=&quot;#cb43-63&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; expression &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-64&quot;&gt;&lt;a href=&quot;#cb43-64&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name&amp;#39; index&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-65&quot;&gt;&lt;a href=&quot;#cb43-65&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; name &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; name&amp;#39; &lt;span class=&quot;op&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; index&amp;#39; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; replacement&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-66&quot;&gt;&lt;a href=&quot;#cb43-66&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;otherwise&lt;/span&gt;                        &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name&amp;#39; index&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-67&quot;&gt;&lt;a href=&quot;#cb43-67&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-68&quot;&gt;&lt;a href=&quot;#cb43-68&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name&amp;#39; body &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name&amp;#39; body&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-69&quot;&gt;&lt;a href=&quot;#cb43-69&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-70&quot;&gt;&lt;a href=&quot;#cb43-70&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            index&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-71&quot;&gt;&lt;a href=&quot;#cb43-71&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; name &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; name&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-72&quot;&gt;&lt;a href=&quot;#cb43-72&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;op&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;otherwise&lt;/span&gt;     &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-73&quot;&gt;&lt;a href=&quot;#cb43-73&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-74&quot;&gt;&lt;a href=&quot;#cb43-74&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            shiftedBody &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; name&amp;#39; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; replacement&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-75&quot;&gt;&lt;a href=&quot;#cb43-75&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-76&quot;&gt;&lt;a href=&quot;#cb43-76&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; substitute body name index&amp;#39; shiftedBody&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-77&quot;&gt;&lt;a href=&quot;#cb43-77&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-78&quot;&gt;&lt;a href=&quot;#cb43-78&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function argument &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function&amp;#39; argument&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-79&quot;&gt;&lt;a href=&quot;#cb43-79&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-80&quot;&gt;&lt;a href=&quot;#cb43-80&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            function&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; substitute function name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; replacement&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-81&quot;&gt;&lt;a href=&quot;#cb43-81&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-82&quot;&gt;&lt;a href=&quot;#cb43-82&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            argument&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; substitute argument name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; replacement&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-83&quot;&gt;&lt;a href=&quot;#cb43-83&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-84&quot;&gt;&lt;a href=&quot;#cb43-84&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | β-reduce an expression&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-85&quot;&gt;&lt;a href=&quot;#cb43-85&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;betaReduce ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-86&quot;&gt;&lt;a href=&quot;#cb43-86&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;betaReduce syntax &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-87&quot;&gt;&lt;a href=&quot;#cb43-87&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; syntax &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-88&quot;&gt;&lt;a href=&quot;#cb43-88&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-89&quot;&gt;&lt;a href=&quot;#cb43-89&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-90&quot;&gt;&lt;a href=&quot;#cb43-90&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name body &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name body&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-91&quot;&gt;&lt;a href=&quot;#cb43-91&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-92&quot;&gt;&lt;a href=&quot;#cb43-92&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; betaReduce body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-93&quot;&gt;&lt;a href=&quot;#cb43-93&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-94&quot;&gt;&lt;a href=&quot;#cb43-94&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function argument &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-95&quot;&gt;&lt;a href=&quot;#cb43-95&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; function&amp;#39; &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-96&quot;&gt;&lt;a href=&quot;#cb43-96&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name body &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; body&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-97&quot;&gt;&lt;a href=&quot;#cb43-97&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                  &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-98&quot;&gt;&lt;a href=&quot;#cb43-98&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    shiftedArgument &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; name &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; argument&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-99&quot;&gt;&lt;a href=&quot;#cb43-99&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-100&quot;&gt;&lt;a href=&quot;#cb43-100&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    substitutedBody &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; substitute body name &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; shiftedArgument&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-101&quot;&gt;&lt;a href=&quot;#cb43-101&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-102&quot;&gt;&lt;a href=&quot;#cb43-102&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    unshiftedBody &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift (&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) name &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; substitutedBody&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-103&quot;&gt;&lt;a href=&quot;#cb43-103&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-104&quot;&gt;&lt;a href=&quot;#cb43-104&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                    body&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; betaReduce unshiftedBody&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-105&quot;&gt;&lt;a href=&quot;#cb43-105&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-106&quot;&gt;&lt;a href=&quot;#cb43-106&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;                _ &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function&amp;#39; argument&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-107&quot;&gt;&lt;a href=&quot;#cb43-107&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-108&quot;&gt;&lt;a href=&quot;#cb43-108&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            function&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; betaReduce function&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-109&quot;&gt;&lt;a href=&quot;#cb43-109&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-110&quot;&gt;&lt;a href=&quot;#cb43-110&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            argument&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; betaReduce argument&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-111&quot;&gt;&lt;a href=&quot;#cb43-111&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-112&quot;&gt;&lt;a href=&quot;#cb43-112&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | α-reduce an expression&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-113&quot;&gt;&lt;a href=&quot;#cb43-113&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;alphaReduce ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-114&quot;&gt;&lt;a href=&quot;#cb43-114&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;alphaReduce syntax &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-115&quot;&gt;&lt;a href=&quot;#cb43-115&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;kw&quot;&gt;case&lt;/span&gt; syntax &lt;span class=&quot;kw&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-116&quot;&gt;&lt;a href=&quot;#cb43-116&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; name &lt;span class=&quot;fu&quot;&gt;index&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-117&quot;&gt;&lt;a href=&quot;#cb43-117&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-118&quot;&gt;&lt;a href=&quot;#cb43-118&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; name body &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;_&amp;quot;&lt;/span&gt; body&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-119&quot;&gt;&lt;a href=&quot;#cb43-119&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-120&quot;&gt;&lt;a href=&quot;#cb43-120&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            shiftedBody &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;_&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; body&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-121&quot;&gt;&lt;a href=&quot;#cb43-121&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-122&quot;&gt;&lt;a href=&quot;#cb43-122&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            substitutedBody &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; substitute shiftedBody name &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; (&lt;span class=&quot;dt&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;_&amp;quot;&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-123&quot;&gt;&lt;a href=&quot;#cb43-123&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-124&quot;&gt;&lt;a href=&quot;#cb43-124&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            unshiftedBody &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; shift (&lt;span class=&quot;op&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) name &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; substitutedBody&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-125&quot;&gt;&lt;a href=&quot;#cb43-125&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-126&quot;&gt;&lt;a href=&quot;#cb43-126&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            body&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; alphaReduce unshiftedBody&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-127&quot;&gt;&lt;a href=&quot;#cb43-127&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-128&quot;&gt;&lt;a href=&quot;#cb43-128&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;        &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function argument &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Apply&lt;/span&gt; function&amp;#39; argument&amp;#39;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-129&quot;&gt;&lt;a href=&quot;#cb43-129&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;          &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-130&quot;&gt;&lt;a href=&quot;#cb43-130&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            function&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; alphaReduce function&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-131&quot;&gt;&lt;a href=&quot;#cb43-131&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-132&quot;&gt;&lt;a href=&quot;#cb43-132&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;            argument&amp;#39; &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; alphaReduce argument&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-133&quot;&gt;&lt;a href=&quot;#cb43-133&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-134&quot;&gt;&lt;a href=&quot;#cb43-134&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;co&quot;&gt;-- | Returns `True` if the two input expressions are α-equivalent&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-135&quot;&gt;&lt;a href=&quot;#cb43-135&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;alphaEquivalent ::&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Syntax&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Bool&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;cb43-136&quot;&gt;&lt;a href=&quot;#cb43-136&quot; aria-hidden=&quot;true&quot; tabindex=&quot;-1&quot;&gt;&lt;/a&gt;alphaEquivalent left right &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; alphaReduce left &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; alphaReduce right&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;appendix---history&quot;&gt;Appendix - History&lt;/h4&gt;&lt;p&gt;I actually first introduced this feature in &lt;a href=&quot;https://github.com/Gabriel439/Haskell-Morte-Library&quot;&gt;Morte&lt;/a&gt;, not Dhall. The idea originated from the discussion on this &lt;a href=&quot;https://github.com/Gabriel439/Haskell-Morte-Library/issues/1&quot;&gt;issue&lt;/a&gt;.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel="replies" type="application/atom+xml" href="https://www.haskellforall.com/feeds/6319221858421997722/comments/default" title="Post Comments"><link rel="replies" type="text/html" href="https://www.haskellforall.com/2021/08/namespaced-de-bruijn-indices.html#comment-form" title="3 Comments"><link rel="edit" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6319221858421997722"><link rel="self" type="application/atom+xml" href="https://www.blogger.com/feeds/1777990983847811806/posts/default/6319221858421997722"><link rel="alternate" type="text/html" href="https://www.haskellforall.com/2021/08/namespaced-de-bruijn-indices.html" title="Namespaced De Bruijn indices"><author><name>Gabriella Gonzalez</name><uri>http://www.blogger.com/profile/01917800488530923694</uri><email>noreply@blogger.com</email><gd:image rel="http://schemas.google.com/g/2005#thumbnail" width="32" height="29" src="//2.bp.blogspot.com/-r6IF4dS1CxQ/YS-qGjp2aCI/AAAAAAAAKFo/aotChBM0_0I4PVen4PrYvi3T5nNiZOiGwCK4BGAYYCw/s220/vlcsnap-2021-07-26-12h50m53s230.png"/></author><thr:total>3</thr:total></entry></feed>