<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="honeyryderchuck.gitlab.io/httpx/feed.xml" rel="self" type="application/atom+xml"><link href="honeyryderchuck.gitlab.io/httpx/" rel="alternate" type="text/html"><updated>2022-11-01T22:42:56+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/feed.xml</id><title type="html">HTTPX</title><subtitle>A client library for making HTTP requests from Ruby.</subtitle><entry><title type="html">How to “bundle install” in deployment mode, using bundler in docker</title><link href="honeyryderchuck.gitlab.io/httpx/2022/10/03/how-to-bundle-production-mode-in-docker.html" rel="alternate" type="text/html" title="How to “bundle install” in deployment mode, using bundler in docker"><published>2022-10-03T00:00:00+00:00</published><updated>2022-10-03T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2022/10/03/how-to-bundle-production-mode-in-docker</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2022/10/03/how-to-bundle-production-mode-in-docker.html">&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BUNDLE_PATH=$GEM_HOME&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I was recently setting up the deployment of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; service, in my employer’s production environment, which uses &lt;a href=&quot;https://aws.amazon.com/pt/eks/&quot;&gt;EKS on AWS&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/get-docker/&quot;&gt;docker&lt;/a&gt; containers. This time though, I wanted to try how hard would be to generate a production image, as well the dev/test one we use in CI, from the same &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/&quot;&gt;Dockerfile&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I figured that it was just a matter of juggling the right combination of &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/&quot;&gt;ARG&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/compose/environment-variables/&quot;&gt;ENV&lt;/a&gt; declarations. And while I was right, I thought the outcome was worth documenting in a blog post about, in order to spare the next rubyist suffering when going down the same path. And while I can still appreciate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt;’s role and leadership in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; community, and array of features and configurability, its defaults and user/permissions handling leave some to be desired.&lt;/p&gt;

&lt;h2 id=&quot;development-setup&quot;&gt;Development setup&lt;/h2&gt;

&lt;p&gt;The initial Dockerfile used for development looked roughly like this:&lt;/p&gt;

&lt;div class=&quot;language-Dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ruby:3.1.2-bullseye&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;LABEL&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; maintainer=me&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;adduser &lt;span class=&quot;nt&quot;&gt;--disabled-password&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--gecos&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; app &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /home/service &lt;span class=&quot;se&quot;&gt;\
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chown &lt;/span&gt;app:app /home/service

&lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; app:app&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /home/service&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; --chown=app:app Gemfile Gemfile.lock /home/service&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; --chown=app:app . .&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&quot;bundle&quot;, &quot;exec&quot;, &quot;start-it-up&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The Gemfile was very simple, with a test group:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Gemfile&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://rubygems.org&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rake&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;zeitwerk&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sentry-ruby&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minitest&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;standard&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;debug&quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This was all tied up locally using &lt;a href=&quot;https://docs.docker.com/get-started/08_using_compose/&quot;&gt;Docker Compose&lt;/a&gt;, where the service declaration looked like this:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# docker-compose.yml&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env_file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;.env&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./:/home/service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This setup worked well locally, and was reused to run the tests in CI (we use &lt;a href=&quot;https://docs.gitlab.com/runner/executors/docker.html&quot;&gt;Gitlab CI docker executors&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It was ready to go to production.&lt;/p&gt;

&lt;h2 id=&quot;bundler-in-production&quot;&gt;bundler in production&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bundler.io/guides/deploying.html&quot;&gt;Bundler how to deploy page&lt;/a&gt; gives you a simple advice: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install --deployment&lt;/code&gt; and you’re good to go. My use-case wasn’t as simple though, as I wanted to follow some best practices from the get-go, rather than retrofitting them when it’s too costly to do so.&lt;/p&gt;

&lt;p&gt;For once, I didn’t want to install test dependencies in the final production image (benefit: leaner production image, less exposure to vulnerabilities I don’t need in servers). I also didn’t want to use commmand-line options, as dealing with the development/production options would make my single Dockerfile harder to read. Fortunately, &lt;a href=&quot;https://bundler.io/man/bundle-config.1.html&quot;&gt;bundler covers that by supporting environment variables for configuration&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-Dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Dockerfile&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ruby:3.1.2-bullseye&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# to declare which bundler groups to ignore, aka bundle install --without&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ARG&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; BUNDLE_WITHOUT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# .gitlab-ci.yml&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;Build Production Image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;DOCKER_BUILD_ARGS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BUNDLE_DEPLOYMENT=1&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;BUNDLE_WITHOUT=test&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker build ${DOCKER_BUILD_ARGS} ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# kubernetes service.yml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;BUNDLE_WITHOUT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;test&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;BUNDLE_DEPLOYMENT&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Simple, right? So I thought, so I deployed. And the service didn’t boot. Looking at the logs, I was seeing a variation of the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-log&quot;&gt;Could not find rake-13.0.6, zeitwerk-2.6.0, ...(the rest) in any of the sources (Bundler::GemNotFound)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I couldn’t figure out. It worked on my machine. And I vaguely remembered doing similar work in the past. So I start googling for “ruby dockerfile setup”, only to find similar dockerfiles. I initialize a pod, and quickly check for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GEM_PATH&lt;/code&gt;, pointing to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/bundle&lt;/code&gt;, and nothing was there in fact.&lt;/p&gt;

&lt;p&gt;I then spent the next two days, playing with several other bundler flags, adding, removing, editing them, trying to get to a positive outcome, and in the process almost giving up the idea altogether.&lt;/p&gt;

&lt;p&gt;But this post is not about the journey. It’s about the solution. Which eventually became clear.&lt;/p&gt;

&lt;h2 id=&quot;root-non-root-bundler-and-rubygems&quot;&gt;Root, non-root, bundler, and rubygems&lt;/h2&gt;

&lt;p&gt;The main difference between my dockerfile, and most of the “ruby docker” examples on the web: I wasn’t running the process as root.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/docker-library/ruby/blob/master/3.1/bullseye/Dockerfile&quot;&gt;ruby base image&lt;/a&gt; sets up some variables, some of them involving &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rubygems&lt;/code&gt; (both ship with ruby as “bundled gems”):&lt;/p&gt;

&lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# from ruby 3.1.2 bullseye dockerfile&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# don't create &quot;.bundle&quot; in all our apps&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; GEM_HOME /usr/local/bundle&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; BUNDLE_SILENCE_ROOT_WARNING=1 \&lt;/span&gt;
	BUNDLE_APP_CONFIG=&quot;$GEM_HOME&quot;
&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; PATH $GEM_HOME/bin:$PATH&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# adjust permissions of a few directories for running &quot;gem install&quot; as an arbitrary user&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RUN &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GEM_HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;777 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GEM_HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;gems are installed in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$GEM_HOME&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;gem-installed binstubs are accessible in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$PATH&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt; configs can be found under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$GEM_HOME&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When I switch to a non-privileged user, as the initial Dockerfile shows, and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;, gems are installed under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$GEM_HOME/gems&lt;/code&gt;; executables are under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$GEM_HOME/bin&lt;/code&gt;. It works on my machine.&lt;/p&gt;

&lt;p&gt;But when I do it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BUNDLE_DEPLOYMENT=1&lt;/code&gt;? Gems still get installed in the same place. Executables too. But running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec&lt;/code&gt; breaks. That’s because, in deployment mode, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt; sets its internal bundle path, used for dependency resolution and lookup, &lt;a href=&quot;https://github.com/rubygems/rubygems/blob/def27af571af48f7375cc0bdc58b845122dcb5b4/bundler/lib/bundler/settings.rb#L4&quot;&gt;to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;vendor/bundle&quot;&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# from lib/bundler/settings.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;path&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;configs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;vendor/bundle&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;deployment&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But there’s nothing there, because as it was mentioned, gems were installed under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$GEM_HOME&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So the solution is right in the line above: just set the bundle path. The most straightforward way to do this in this setup was via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BUNDLE_PATH&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Dockerfile&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; BUNDLE_PATH $GEM_HOME&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# and now, you can bundle exec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it. Annoying, but simple to fix.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;While the solution was very straightforward (patch this environment variable and you’re good to go), it took me some time and a lot of trial and error to get there. Due to a combination of factors.&lt;/p&gt;

&lt;p&gt;First one is docker defaults and best practices; while it’s been known for some time in the security realm that &lt;a href=&quot;https://stackoverflow.com/questions/68155641/should-i-run-things-inside-a-docker-container-as-non-root-for-safety&quot;&gt;“thou shalt not run containers as root”&lt;/a&gt;, if I type “dockerfile ruby” in google, from the &lt;a href=&quot;https://lipanski.com/posts/dockerfile-ruby-best-practices&quot;&gt;first&lt;/a&gt; &lt;a href=&quot;https://semaphoreci.com/community/tutorials/dockerizing-a-ruby-on-rails-application&quot;&gt;5&lt;/a&gt; &lt;a href=&quot;https://www.cloudbees.com/blog/build-minimal-docker-container-ruby-apps&quot;&gt;relevant&lt;/a&gt; &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/containerizing-a-ruby-on-rails-application-for-development-with-docker-compose&quot;&gt;results&lt;/a&gt; &lt;a href=&quot;https://docs.docker.com/samples/rails/&quot;&gt;I&lt;/a&gt; get (the last one being docker official recommendation for using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compose&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails&lt;/code&gt;), only one of them sets a non-privileged user for running the container. And that single example does it &lt;strong&gt;after&lt;/strong&gt; running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Why is it important to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; as non-root? You can read the details in &lt;a href=&quot;https://snyk.io/blog/ruby-gem-installation-lockfile-injection-attacks/&quot;&gt;this Snyk blog post&lt;/a&gt;, but the tl;dr is, if the gem requires compiling C extensions, a &lt;a href=&quot;https://blog.costan.us/2008/11/post-install-post-update-scripts-for.html&quot;&gt;post-install callback can be invoked&lt;/a&gt; which allows arbitrary code to run with the privileges of the user invoking &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;, which becomes a privilege escalation attack when exploited.&lt;/p&gt;

&lt;p&gt;Why does &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt; default to setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;vendor/bundle&quot;&lt;/code&gt; as the default gems lookup dir, which is different than the default gem install dir, when deployment-mode is activated? I have no idea. I’d say it looks like a bug, as &lt;a href=&quot;https://github.com/rubygems/rubygems/blob/def27af571af48f7375cc0bdc58b845122dcb5b4/bundler/lib/bundler/man/bundle-install.1.ronn#deployment-mode&quot;&gt;the docs do say that gems are installed to “vendor/bundle” in deployment mode&lt;/a&gt;, and ruby docker defaults overriding &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GEM_HOME&lt;/code&gt; causes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt; to use it to install gems, but then it gets ignored for path lookups? But somehow works when user can &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt;? Do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rubygems&lt;/code&gt; still have a few misalignments to work out? &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundler&lt;/code&gt; defaults don’t seem to be the sanest, as &lt;a href=&quot;https://felipec.wordpress.com/2022/08/25/fixing-ruby-gems-installation/&quot;&gt;this blog post puts it, whether you agree with the tone or not&lt;/a&gt;, it can definitely do better.&lt;/p&gt;

&lt;p&gt;But don’t get me wrong, as it’s still better than dealing with the absolute scorched earth equivalent in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nodejs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;No bundler options were deprecated while performing these reproductions.&lt;/p&gt;</content><author><name/></author><summary type="html">tl;dr: BUNDLE_PATH=$GEM_HOME.</summary></entry><entry><title type="html">Standing on the shoulders of giants and leaky abstractions</title><link href="honeyryderchuck.gitlab.io/httpx/2022/05/04/standing-on-the-shoulders-of-giants-and-leaky-abstractions.html" rel="alternate" type="text/html" title="Standing on the shoulders of giants and leaky abstractions"><published>2022-05-04T00:00:00+00:00</published><updated>2022-05-04T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2022/05/04/standing-on-the-shoulders-of-giants-and-leaky-abstractions</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2022/05/04/standing-on-the-shoulders-of-giants-and-leaky-abstractions.html">&lt;p&gt;Recently, a &lt;a href=&quot;https://old.reddit.com/r/ruby/comments/tqlhsw/how_to_use_activerecord_in_a_library/&quot;&gt;blog post about how to use activerecord as a library was shared on r/ruby&lt;/a&gt;, which started an interesting discussion thread (where I was involved) from the premise “instead of using activerecord out of the rails, why not sequel”? While several arguments were made both for and against the premise, it felt that, at times, discussion deviated towards the merits of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt; vs. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activerecord&lt;/code&gt;, rather than using or building a gem on top of them, as a dependency; and as usual in the social network sphere, comments may have been misunderstood, everybody went their separate ways, and the Earth completed another orbit around the sun.&lt;/p&gt;

&lt;p&gt;While the topic of which of the ORMs &lt;a href=&quot;https://samsaffron.com/archive/2018/06/01/an-analysis-of-memory-bloat-in-active-record-5-2&quot;&gt;has better performance&lt;/a&gt;, &lt;a href=&quot;https://janko.io/ode-to-sequel/&quot;&gt;more useful features&lt;/a&gt;, &lt;a href=&quot;https://ruby.libhunt.com/compare-sequel-vs-activerecord&quot;&gt;is more popular&lt;/a&gt; or has more plugins, has been discussed &lt;em&gt;ad eternum&lt;/em&gt;, most of them start from the premise of the ORM as a primary dependency, exposed to the application developer. This usually leads to less technical, more “pragmatic” discussions, given how usually, constraints around the choice of tech stack is established by “less technical more political” reasons, i.e. whatever the CTO likes more, or whatever the team is most familiar with, what can the company find more specialists for, or risk appettite in experimenting with alternative stacks.&lt;/p&gt;

&lt;p&gt;But if you’re building a library, then picking any DB library/ORM as a dependency which does not “leak” to the end user (or just a little sometimes), can make one weigh alternatives differently. What’s the maintenance burden ratio gonna look like? How hard will it be to support the API as new versions come along? Will the API change a lot? Does it support all the features my library requires? Will it be community-friendly, will I get help maintaining it? These questions aren’t limited to the case of relying on a db library, they’re also valid when considering building on top of any 3rd party dependency, like a web framework or HTTP client.&lt;/p&gt;

&lt;p&gt;So on the topic, I’ll share my opinion on the matter based on my experience as an OSS maintainer building on top of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt; versus an alternative built for rails (and therefore, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activerecord&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;rodauth-oauth-vs-doorkeeper&quot;&gt;rodauth-oauth vs doorkeeper&lt;/h2&gt;

&lt;p&gt;I’m the maintainer of &lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth/&quot;&gt;rodauth-oauth&lt;/a&gt;, the most complete and featureful OAuth/OIDC provider framework in the ruby ecosystem. This claim is backed by it being the ruby gem implementing the most OAuth 2.0 and OIDC RFCs.&lt;/p&gt;

&lt;p&gt;It’s far from the most popular though, which is &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper&quot;&gt;doorkeeper&lt;/a&gt;. The huge gap between them in terms of popularity can be explained by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; having existed for +10 years and gone through the “ruby hype” years, whereas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; has only existed since 2020. But it’s nonetheless the reference implementation in the OAuth provider space, and both &lt;a href=&quot;https://gitlab.com/&quot;&gt;GitLab&lt;/a&gt; and &lt;a href=&quot;https://mastodon.social/about&quot;&gt;Mastodon&lt;/a&gt; are known products using it in production.&lt;/p&gt;

&lt;p&gt;Tech-wise, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; is built on top of the &lt;a href=&quot;http://rodauth.jeremyevans.net/&quot;&gt;rodauth&lt;/a&gt;/&lt;a href=&quot;http://roda.jeremyevans.net/&quot;&gt;roda&lt;/a&gt;/&lt;a href=&quot;http://sequel.jeremyevans.net/&quot;&gt;sequel&lt;/a&gt; stack, whereas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; is a rails-only gem, managed as a classic rails engine, just like &lt;a href=&quot;https://github.com/heartcombo/devise&quot;&gt;devise&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Product-wise, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; has more features and covers more of the &lt;a href=&quot;https://oauth.net/specs/&quot;&gt;OAuth&lt;/a&gt; and &lt;a href=&quot;https://openid.net/developers/specs/&quot;&gt;OpenID&lt;/a&gt; specs (check &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth/-/wikis/Home#comparisons&quot;&gt;this feature matrix&lt;/a&gt;); these are shipped and can be tested together. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; gem is not as comprehensive: it ships with support for opaque tokens only, the original 4 OAuth 2.0 grant flows (+ refresh code grant), and PKCE; it has a bigger community of both users and contributors, and some of the missing features are provided by the community as 3rd-party “entension” gems (which, as usual in such a setup, not always work well together. As an example, &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper-jwt/blob/master/doorkeeper-jwt.gemspec#L25&quot;&gt;doorkeeper-jwt&lt;/a&gt; and &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper-openid_connect/blob/master/doorkeeper-openid_connect.gemspec#L28&quot;&gt;doorkeeper-openid_connect&lt;/a&gt; don’t even agree on which JWT library to use).&lt;/p&gt;

&lt;h2 id=&quot;building-for-rails-vs-building-for-rodauth&quot;&gt;Building for rails vs. building for rodauth&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails&lt;/code&gt; being the most used framework in the ruby ecosystem, you’ll have a hard time getting your gem adopted if it doesn’t work on rails.&lt;/p&gt;

&lt;p&gt;Although built in a different stack, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; can be used with rails, thanks to &lt;a href=&quot;https://github.com/janko/rodauth-rails&quot;&gt;rodauth-rails&lt;/a&gt;, which does the heavy lifting of providing a sane default configuration for rails, as well as a few handy rake tasks (the author published &lt;a href=&quot;https://janko.io/how-i-enabled-sequel-to-reuse-active-record-connection/&quot;&gt;a blog post recently about how sequel reuses activerecord connection pool in rodauth-rails&lt;/a&gt; which is very enlightening).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; ships as a rails engine, and in a very similar way to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt;: a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper:install&lt;/code&gt; generator to bootstrap config files and database migrations, a route helper to load &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; routes, default views and controllers one may copy to app folders and costumize or not, and an initializer where most of the configuration happens. By using “vanilla rails” features, one can say that, at least from the “looking for an OAuth provider gem for my rails app” angle, that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; seems like the obvious choice.&lt;/p&gt;

&lt;p&gt;That said, building a gem targeting rails first brings a lot of maintenance baggage with it.&lt;/p&gt;

&lt;h3 id=&quot;release-policy&quot;&gt;Release policy&lt;/h3&gt;

&lt;p&gt;Every year since 2004, there’s a new major/minor version of rails which gets released to as much fanfare and enthusiasm by the people looking forward to new features, as well as dread and despair by the people in charge of upgrading the rails version in huge production apps. That’s because rails upgrades tend to change a lot of APIs, often in a breaking way, which may require months of multiple developers time to upgrade. While one can argue about the point of a few of those changes, or just repeat that rails does not follow SemVer, that’s just a fact. Which also impacts libraries built for rails.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; covers a lot of rails API “surface”, which means that, inevitably, it is affected by these changes, and a certain amount of time and energy has to be invested yearly in fixing and adapting them as well (this is not a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt;-only phenomenom, any gem building on rails goes through the same).&lt;/p&gt;

&lt;p&gt;Due to the simple and stable APIs and commmitment to backwards compatibility from the roda/sequel/rodauth stack, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; has not had to release a fix due to backwards-incompatible APIs yet. The rails integration bits have also been stable, although they cover less rails API “surface” in comparison (just generators and view templates).&lt;/p&gt;

&lt;p&gt;(Take this analysis with a grain of salt, as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; blast radius is wider.)&lt;/p&gt;

&lt;h3 id=&quot;community-practices&quot;&gt;Community practices&lt;/h3&gt;

&lt;p&gt;A lot of rails “convention over configuration” culture is all over &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activesupport&lt;/code&gt;. And a lot of practices exposed via its public APIs become teaching subject of “how to do” in rails, also sometimes called the Rails Way. The practice I’ll focus on is the “class to tag to class again”, whereas, given a class, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ToothPick&lt;/code&gt;, or an instance of it, certain operations (such as, i.e. calculating html tag ids) will automatically infer &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;tooth_pick&quot;&lt;/code&gt; (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:tooth_pick&lt;/code&gt;) by applying a sequence of operations on the class name, namely &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.demodulize&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.underscore&lt;/code&gt;, and in some other cases, such as deserialization, the inverse set of operations, i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;classify&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;constantize&lt;/code&gt;, will be applied to infer the class from the string tag.&lt;/p&gt;

&lt;p&gt;It’s, for instance, how you do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;form_for @tooth_pick&lt;/code&gt;, and a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form id=&quot;tooth_pick&quot;&amp;gt;&lt;/code&gt; tag is automatically created. This blueprint can be found all over rails and rails-only gems.&lt;/p&gt;

&lt;p&gt;Instead of telling what I find about this practice, I’ll show an example where this creates limitations, namely, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; inability of supporting the &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper/issues/764&quot;&gt;saml2 bearer grant&lt;/a&gt;, or any other assertion grant type &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7521#section-4.1&quot;&gt;as defined by the IETF&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; allows one to enable grant flows via an initializer option:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/initializers/doorkeeper.rb&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;grant_flows&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;client_credentials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;client_credentials&quot;&lt;/code&gt; grant flow is implemented by many resources with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ClientCredentials&lt;/code&gt; in its namespace: there’s a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Doorkeeper::Request::ClientCredentials&lt;/code&gt;, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Doorkeeper::OAuth::ClientCredentials::Validator&lt;/code&gt;, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Doorkeeper::OAuth::ClientCredentials::Issuer&lt;/code&gt;, and so on. All of these will be auto-inferred at some point in the execution of the program thanks to the sequence of the transformations explained above.&lt;/p&gt;

&lt;p&gt;This works well when your grant flow is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;client_credentials&quot;&lt;/code&gt;, but not when it’s called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;urn:ietf:params:oauth:grant-type:saml2-bearer&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This situation is exacerbated by the refusal of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; maintainers of supporting any of these features themselves, instead suggesting the community to rather do it as “extension” gems (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt; also does the same). This creates a problem of incentives, where a fundamental risky (and potentially breaking) change is required in the “base” gem for this extension to be unlocked, however the “base” gem gets little from it beyond burden of maintenance, so is thereby reluctant to commit the change, whereas someone willing to develop the extension gem may stop at the workarounds necessary to support an edge-case the “base” gem never considered, and the community gets nothing in the process.&lt;/p&gt;

&lt;p&gt;None of the above apply to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt;, given that grant flow identifiers do not have to map to anything internally (they’re just literals), and oauth extensions ship and are tested together (shipping extra functionality as a standalone gem is certainly possible, but I encourage anyone to contribute to mainline as long as it’s about OAuth).&lt;/p&gt;

&lt;p&gt;If we move away from the macro perspective of “building on top of a web/auth framework” back to “building on top of ActiveRecord vs. Sequel”, there are also interesting points to discuss.&lt;/p&gt;

&lt;h3 id=&quot;activerecord-vs-sequel&quot;&gt;ActiveRecord vs. Sequel&lt;/h3&gt;

&lt;p&gt;A point that arguably needs little discussion is that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt; is the most flexible and featureful DB toolkit in ruby, whereas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activerecord&lt;/code&gt; is certainly more popular and has more available plugins/extensions. And while the latter may turn the tables in favour of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activerecord&lt;/code&gt; when it comes to supporting a particular use-case or feature, in most cases, when building a library with DB functionality abstracted away from your end user, one will tilt to the solution which allows one to write the most terse, simple and maintainable code. In most cases, that’d be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt;, and that’s exactly the choice many libraries have made.&lt;/p&gt;

&lt;p&gt;Except if you’re building on top of rails, where it’s probably best to stick to the defaults, and your default will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activerecord&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; falls in the latter case; it ships with support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activerecord&lt;/code&gt;, although there are other community-maintained extensions supporting &lt;a href=&quot;https://github.com/nbulaj/doorkeeper-sequel&quot;&gt;sequel&lt;/a&gt; or &lt;a href=&quot;https://github.com/acaprojects/doorkeeper-couchbase&quot;&gt;couchbase&lt;/a&gt; (how well do they work? No idea, but one of them as seen no updates in 6 years).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; builds on top of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt;, which uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt; under the hood. However, what’s worth mentioning here is that the ORM layer isn’t used at all; instead, only the dataset API (aka &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel/core&lt;/code&gt;) is used. This has several performance benefits (lower memory footprint, faster by skipping &lt;em&gt;to-model&lt;/em&gt; transformations), while also allowing the maintainer to focus on “required data for the functionality” data access patterns, and keeping the other advantages of building on top of a general db library rather than the db client adapters directly (i.e. &lt;a href=&quot;http://sequel.jeremyevans.net/rdoc/files/doc/opening_databases_rdoc.html&quot;&gt;free support for a multitude of databases&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Recently, a &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper/pull/1542&quot;&gt;performance-related issue&lt;/a&gt; was reported in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; repo which got my attention.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt;, one can avoid creating multiple access tokens for the same account/client application, by reusing an existing and valid access token, via the &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper/issues/383&quot;&gt;reuse_access_token option&lt;/a&gt;. This works by performing a database lookup for an access token for the given account/client application which has not expired yet.&lt;/p&gt;

&lt;p&gt;The version prior to the pull request shared above used a fairly naive heuristic: it would load all access tokens for the given account/client application (in memory, AR instances), then it would return the first one which hadn’t expired. Hardly a problem while your tables are small, this could potentially grind your application to a halt as tables grow and a sufficiently ammount of access tokens have been emitted for each user.&lt;/p&gt;

&lt;p&gt;The solution was clear: eliminate the expired access tokens from the returned dataset. Given access tokens store the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expires_in&lt;/code&gt; seconds, this required reaching for SQL time-based operations to build a query which could accomplish that. There’s just one problem: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activerecord&lt;/code&gt; does not provide functions for that. So in order to fix the performance issue, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; had to &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper/blob/b67046ee2d81c1c1d5017d62b6550ca1d273e13e/lib/doorkeeper/models/concerns/expiration_time_sql_math.rb#L17&quot;&gt;drop down to raw SQL, for all supported database engines&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# mysql&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Arel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DATE_ADD(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.created_at, INTERVAL &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.expires_in SECOND)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# sqlite&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Arel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DATETIME(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.created_at, '+' || &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.expires_in || ' SECONDS')&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# postgres&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Arel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.created_at + &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.expires_in * INTERVAL '1 SECOND'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# and so on...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And so, in this way, some raw SQL just leaked.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; also supports this feature, but it does not suffer from the same issue, for 2 key reasons. First, it uses a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt; plugin which &lt;a href=&quot;http://sequel.jeremyevans.net/rdoc-plugins/files/lib/sequel/extensions/date_arithmetic_rb.html&quot;&gt;adds DSL to support SQL time-based math&lt;/a&gt; for supported databases. No need to drop down to SQL, the ORM does it for e.&lt;/p&gt;

&lt;p&gt;The second reason is, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; does not store the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;expires_in&lt;/code&gt; seconds, it instead calculates the expiration timestamp on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; (using the DSL mentioned above to perform a “current time + expires in” op), which is then used in subsequent queries as a simple and more optimizable filter (you can add indexes for it, which you can’t in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; variant, when the calculation happens on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# on insert&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;create_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oauth_tokens_expires_in_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sequel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;date_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sequel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;seconds: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oauth_token_expires_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oauth_tokens_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# on select&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oauth_tokens_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sequel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oauth_tokens_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oauth_tokens_expires_in_column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sequel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One could pick up this approach and implement it in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt;, at the cost of some backwards-incompatibility, which means it would require a data migration. But the fact that such an optimization wasn’t obvious from the get-go seems to arguably be a by-product of having the abstraction layer “obscuring” the generated SQL in a way that the costs aren’t visible until late in the road, where the cost of “redoing it the right way” may outweigh it.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This is not all to say that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; is better than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; (&lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth/wiki/FAQ&quot;&gt;Although I believe it is&lt;/a&gt;, after all, I maintain it :) ). &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt; can be objectively considered more mature, and if you’re looking for a solution for rails and you don’t require the extra features &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; provides, no one ever got fired for buying IBM. I could have picked up the same discussion using &lt;a href=&quot;https://github.com/collectiveidea/delayed_job&quot;&gt;delayed_job&lt;/a&gt; as an example, but I don’t maintain a similar database-backed background job framework, so any points made by me could be deemed as just “theoretical”.&lt;/p&gt;

&lt;p&gt;Bottom line, when it comes to how much the extra dependencies one builds on top of might influence its maintainability, overhead time spent on unrelated chores, and focus on building the best solution for whatever problem one wants to solve, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt; should definitely be up there in the consideration list.&lt;/p&gt;</content><author><name/></author><summary type="html">Recently, a blog post about how to use activerecord as a library was shared on r/ruby, which started an interesting discussion thread (where I was involved) from the premise “instead of using activerecord out of the rails, why not sequel”? While several arguments were made both for and against the premise, it felt that, at times, discussion deviated towards the merits of sequel vs. activerecord, rather than using or building a gem on top of them, as a dependency; and as usual in the social network sphere, comments may have been misunderstood, everybody went their separate ways, and the Earth completed another orbit around the sun.</summary></entry><entry><title type="html">HTTPX 0.19.0 - happy eyeballs, proxy improvements, curl to httpx</title><link href="honeyryderchuck.gitlab.io/httpx/2022/01/26/httpx-0-19-happy-eyeballs-curl-to-httpx.html" rel="alternate" type="text/html" title="HTTPX 0.19.0 - happy eyeballs, proxy improvements, curl to httpx"><published>2022-01-26T00:00:00+00:00</published><updated>2022-01-26T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2022/01/26/httpx-0-19-happy-eyeballs-curl-to-httpx</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2022/01/26/httpx-0-19-happy-eyeballs-curl-to-httpx.html">&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; v0.19.0, the first major (minor version) update of 2022 of the ruby HTTP “swiss-army-knife” client, has just been released. It brings a lot of improvements and bugfixes, as well as a feature that has been a long time coming.&lt;/p&gt;

&lt;p&gt;But first, I’d like to share with you my “weekend project”.&lt;/p&gt;

&lt;h2 id=&quot;curl-to-httpx&quot;&gt;curl to httpx&lt;/h2&gt;

&lt;p&gt;Presenting you the new addition to the &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/&quot;&gt;httpx website&lt;/a&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl to httpx&lt;/code&gt;, a small widget where you can paste a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; command and get the equivalent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; ruby code snippet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/curl-to-ruby.png&quot; alt=&quot;curl to ruby&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;why&quot;&gt;Why?&lt;/h3&gt;

&lt;p&gt;As the maintainer of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;, I mostly interact with users via bug reports, and focus on “making it work”. But sometimes, I get to see how others use it, and there’s things to point out usually: users tend to forget error handling (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;response.raise_for_status&lt;/code&gt;), reimplement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; native features (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http.post(url, body: JSON.parse(hash), headers: {&quot;content-type&quot; =&amp;gt; &quot;application/json&quot;})&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http.post(url, json: hash)&lt;/code&gt;, handling retries or redirects themselves…), among other things.&lt;/p&gt;

&lt;p&gt;Although there’s plenty of documentation (and a &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/wiki/home.html&quot;&gt;wiki&lt;/a&gt;), I’m mindful that most users don’t have the time to go through it, and “whatever works first” is a decent success metric. It could be better though. But how?&lt;/p&gt;

&lt;p&gt;Turns out I wasn’t the first to think about it. Recently I found &lt;a href=&quot;https://jhawthorn.github.io/curl-to-ruby/&quot;&gt;curl-to-ruby&lt;/a&gt;, a webform which translates &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt;-based commands (&lt;a href=&quot;https://curl.se/&quot;&gt;curl&lt;/a&gt; is used extensively to query HTTP APIs) into ruby code using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net-http&lt;/code&gt; standard library (this webform is itself based on &lt;a href=&quot;https://mholt.github.io/curl-to-go/&quot;&gt;curl-to-go&lt;/a&gt;, a similar tool for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go&lt;/code&gt; language). I found it pretty cool, because it diminishes the cognitive load (and inevitably going through several &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net-http&lt;/code&gt; cheatsheet and “how-to-make-sense-of-net-http” websites) of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;net-http&lt;/code&gt;’s terrible API, and still get the benefit of not installing another HTTP client gem.&lt;/p&gt;

&lt;p&gt;I’d like to think that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; API isn’t that terrible, however it’s still a pretty useful tool. So I looked on how to adapt it to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; instead. One issue though: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl-to-ruby&lt;/code&gt; code is Javascript. I wasn’t excited at the prospect of programming Javascript to generate ruby code.&lt;/p&gt;

&lt;p&gt;So I started looking into how to solve this problem using ruby instead.&lt;/p&gt;

&lt;h3 id=&quot;how&quot;&gt;How?&lt;/h3&gt;

&lt;p&gt;The first step was to develop a simple script, using stdlib’s &lt;a href=&quot;https://github.com/ruby/optparse&quot;&gt;optparse&lt;/a&gt;, which would “parse” the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; call and paste the ruby script using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; to standard out. That turned out to be straightforward, even if repetitive (there are &amp;gt;100 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; cli options):&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# something like:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;optparse&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;OptionParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--basic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#         Use HTTP Basic Authentication&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:basic_authentication&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:auth_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:basic_auth&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-F&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;--form NAME=CONTENT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;# ... and so one ...&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;curl_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to_httpx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The second step was to compile it to Javascript that could be used in the website. For that, I used &lt;a href=&quot;https://github.com/opal/opal&quot;&gt;opal&lt;/a&gt;, a known “ruby to javascript” compiler.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# the gist of how handling inputs via opal/js&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;on_txt_change&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evt&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;.target.value`&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to_httpx_output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;sx&quot;&gt;%x{
	var input = document.getElementById('curl-command-input');
	input.addEventListener('input', on_txt_change, false);
	input.addEventListener('change', on_txt_change, false);
}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I may switch to using WASM in the future, now that &lt;a href=&quot;https://bugs.ruby-lang.org/issues/18462&quot;&gt;ruby will support webassembly&lt;/a&gt;, but this works well for now.&lt;/p&gt;

&lt;p&gt;Then it was a matter of adding the HTML input tags in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll&lt;/code&gt; templates, and it was a wrap.&lt;/p&gt;

&lt;p&gt;(It took more than a weekend though 😂).&lt;/p&gt;

&lt;p&gt;Doing this type of integration using (mostly) ruby felt very enabling. Cheers to the commmunity! Hope you find the widget useful.&lt;/p&gt;

&lt;p&gt;Now, back to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.19.0&lt;/code&gt; feature announcements.&lt;/p&gt;

&lt;h2 id=&quot;happy-eyeballs-v2&quot;&gt;Happy Eyeballs v2&lt;/h2&gt;

&lt;p&gt;The main new feature coming in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.19.0&lt;/code&gt; is Happy Eyeballs support. If you want to know about it in detail &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8305&quot;&gt;you can read the RFC&lt;/a&gt;. But the tl;dr is: the DNS layer will request for IPv6 and IPv4 addresses in parallel, and privilege IPv6 connectivity whenever possible (under the conditions defined by the RFC).&lt;/p&gt;

&lt;h3 id=&quot;why-1&quot;&gt;Why?&lt;/h3&gt;

&lt;p&gt;Prior to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.19.0&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; would resolve hostnames by first attempting an IPv4 address resolution (DNS A record), and only if the request would fail it’d request for an IPv6 address (DNS AAAA record). In a nutshell, “IPv4 first”.&lt;/p&gt;

&lt;p&gt;This decision was taken a long time ago, due to personal experiences with poor quality IPv6-enabled networks, and an assumption that if you target “stable legacy” IPv4 connectivity, I’d have less worries about support.&lt;/p&gt;

&lt;p&gt;Yet this always seemed counter-intuitive to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; mission: it enables seamless HTTP/2, but it gets you stuck with IPv4? That sounds off. Sure, ruby’s mainly used in the cloud, where private networks have been IPv4-only for a long time, but &lt;a href=&quot;https://aws.amazon.com/pt/blogs/networking-and-content-delivery/dual-stack-ipv6-architectures-for-aws-and-hybrid-networks/&quot;&gt;that’s changing&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;how-1&quot;&gt;How?&lt;/h3&gt;

&lt;p&gt;All of the DNS strategies are using it now. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:native&lt;/code&gt; (default, pure ruby) resolver opens 2 sockets, one for each IP family, and uses them for each request; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:https&lt;/code&gt; (DoH) resolver uses the same HTTP/2 connection to multiplex both requests; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:system&lt;/code&gt; resolver was modified to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getaddrinfo&lt;/code&gt; (and doesn’t block anymore), which already does dual-stack under the hood. Caches are also dual-stack aware, as is the hosts resolver.&lt;/p&gt;

&lt;p&gt;One thing to note is that both the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:native&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:https&lt;/code&gt; resolver are &lt;a href=&quot;https://www.cloudflare.com/learning/performance/what-is-dns-load-balancing/&quot;&gt;DNS-based load balancing friendly&lt;/a&gt;, whereas the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:system&lt;/code&gt; resolver is not, due to its reliance on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getaddrinfo&lt;/code&gt;, which &lt;a href=&quot;https://access.redhat.com/solutions/22132&quot;&gt;orders IPs before handing them to the caller&lt;/a&gt;, thereby changing the order in which they were returned by the DNS server.&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap up&lt;/h2&gt;

&lt;p&gt;There were also &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/rdoc/files/doc/release_notes/0_19_0_md.html&quot;&gt;plenty of improvements in the proxy layer, and another round of bugfixes&lt;/a&gt;. Give it a try!&lt;/p&gt;</content><author><name/></author><summary type="html">httpx v0.19.0, the first major (minor version) update of 2022 of the ruby HTTP “swiss-army-knife” client, has just been released. It brings a lot of improvements and bugfixes, as well as a feature that has been a long time coming.</summary></entry><entry><title type="html">Build an OIDC provider with rodauth-oauth in rails, while keeping your authentication</title><link href="honeyryderchuck.gitlab.io/httpx/2021/09/08/using-rodauth-oauth-in-rails-without-rodauth-based-auth.html" rel="alternate" type="text/html" title="Build an OIDC provider with rodauth-oauth in rails, while keeping your authentication"><published>2021-09-08T00:00:00+00:00</published><updated>2021-09-08T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2021/09/08/using-rodauth-oauth-in-rails-without-rodauth-based-auth</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2021/09/08/using-rodauth-oauth-in-rails-without-rodauth-based-auth.html">&lt;p&gt;I’ve written before about rodauth-oauth and &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/2021/03/15/oidc-provider-on-rails-using-rodauth-oauth.html&quot;&gt;how to use it to make an OAuth2 or OIDC Connect provider out of a rails application&lt;/a&gt;, and where I &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth-demo-rails&quot;&gt;built a rails demo app based out of Janko Mahronic’s rodauth-rails demo app as a workable tutorial&lt;/a&gt;. It shows well what rodauth accomplishes, how integrating it in a rails app became significantly simpler thanks to &lt;a href=&quot;https://github.com/janko/rodauth-rails&quot;&gt;rodauth-rails&lt;/a&gt;, and how one can building an OAuth/OIDC provider using &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth&quot;&gt;rodauth-oauth&lt;/a&gt; on top of that.&lt;/p&gt;

&lt;p&gt;Recently, I got asked by a former co-worker what do I suggest for building an OAuth provider in a rails app. I suggested &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth&quot;&gt;rodauth-oauth&lt;/a&gt;. “But we already have our own authentication. Doesn’t &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth&quot;&gt;rodauth-oauth&lt;/a&gt; require that authentication is handled by &lt;a href=&quot;https://github.com/jeremyevans/rodauth/&quot;&gt;rodauth&lt;/a&gt;?”.&lt;/p&gt;

&lt;p&gt;I said “no, it does not, it just requires a few undocumented tweaks”. And then I realized that it’s not that obvious for anyone not familiar with the toolchain how this would get done, and how much of a barrier for adoption that is. A lot of Rails deployments rely on &lt;a href=&quot;https://github.com/heartcombo/devise&quot;&gt;devise&lt;/a&gt; or something else based on &lt;a href=&quot;https://github.com/wardencommunity/warden&quot;&gt;warden&lt;/a&gt; for authentication, and while it’s certainly reasonable to “sell” &lt;a href=&quot;https://github.com/jeremyevans/rodauth/&quot;&gt;rodauth&lt;/a&gt; as a much better alternative to consider, buying into &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth&quot;&gt;rodauth-oauth&lt;/a&gt; should not require a whole rewrite of the authentication system.&lt;/p&gt;

&lt;p&gt;So if you’d like to try &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth&quot;&gt;rodauth-oauth&lt;/a&gt; for OAuth and keep your authentication logic, this tutorial is for you.&lt;/p&gt;

&lt;h2 id=&quot;1-rails-and-devise-sitting-in-a-tree&quot;&gt;1. Rails and Devise sitting in a tree&lt;/h2&gt;

&lt;p&gt;The first is having an example rails app to work with. In order to do so, I’ll &lt;a href=&quot;https://janko.io/adding-authentication-in-rails-with-rodauth/&quot;&gt;follow what Janko used in his first rodauth post&lt;/a&gt; and use his blog bootstrapper example:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://gitlab.com/janko-m/rails_bootstrap_starter.git rodauth-oauth-devise-demo
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rodauth-oauth-devise-demo
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(This part was easier said than done. I have very little experience with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webpacker&lt;/code&gt;, but it seems that everytime I need it, running a command will always seem to fail and send me in a journey searching for workarounds in google. This one landed &lt;a href=&quot;https://stackoverflow.com/questions/69046801/brand-new-rails-6-1-4-1-fails-with-webpack-error-typeerror-class-constructor&quot;&gt;here&lt;/a&gt;, where I found out that latest-greatest &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webpack&lt;/code&gt; isn’t compatible with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webpacker&lt;/code&gt;. Always something…)&lt;/p&gt;

&lt;p&gt;Now, I will use &lt;a href=&quot;https://github.com/heartcombo/devise&quot;&gt;devise&lt;/a&gt; for this tutorial.&lt;/p&gt;

&lt;p&gt;(&lt;strong&gt;NOTE&lt;/strong&gt;: I know there are other alternatives, but &lt;a href=&quot;https://github.com/heartcombo/devise&quot;&gt;devise&lt;/a&gt; provides me with a “quick to prototype” bootstrap experience for this demo, while the tweaks can apply to any other framework):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle add devise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And run its initializers:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails generate devise:install &lt;span class=&quot;c&quot;&gt;# adds initializers, configs...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails generate devise User &lt;span class=&quot;c&quot;&gt;# creates the user model and migrations&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# will use devise defaults&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s add some useful links in the navbar:&lt;/p&gt;

&lt;div class=&quot;language-erb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- app/views/application/_navbar.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... ---&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_signed_in?&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dropdown&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btn btn-info dropdown-toggle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;data: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;toggle: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dropdown&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dropdown-menu dropdown-menu-right&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Change password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edit_user_password_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dropdown-item&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dropdown-divider&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sign out&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destroy_user_session_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;method: :delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dropdown-item&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sign in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_user_session_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btn btn-outline-primary&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sign up&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_user_registration_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btn btn-success&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... ---&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And lock the posts section for authenticated users:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PostsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:authenticate_user!&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/login-screen-1.png&quot; alt=&quot;login-screen-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that’s it, we’re set!&lt;/p&gt;

&lt;h2 id=&quot;2-install-rodauth-rails-but-not-use-it-for-authentication-and-rodauth-oauth&quot;&gt;2. Install rodauth-rails (but not use it for authentication) and rodauth-oauth&lt;/h2&gt;

&lt;p&gt;Installing is accomplished simply by doing:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle add rodauth-rails
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle add rodauth-oauth
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First thing we do is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-rails&lt;/code&gt; main initializers:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails generate rodauth:install
      create  db/migrate/20210906132849_create_rodauth.rb
      create  config/initializers/rodauth.rb
      create  config/initializers/sequel.rb
      create  app/lib/rodauth_app.rb
      create  app/controllers/rodauth_controller.rb
      create  app/models/account.rb
      create  app/mailers/rodauth_mailer.rb
      create  app/views/rodauth_mailer/email_auth.text.erb
      create  app/views/rodauth_mailer/password_changed.text.erb
      create  app/views/rodauth_mailer/reset_password.text.erb
      create  app/views/rodauth_mailer/unlock_account.text.erb
      create  app/views/rodauth_mailer/verify_account.text.erb
      create  app/views/rodauth_mailer/verify_login_change.text.erb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see from the output above, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-rails&lt;/code&gt; expects that you’ll start using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; for authentication. There are a few switches, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--json&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--jwt&lt;/code&gt;, but they’re not very useful for our use-case, which is “just initializers please”.&lt;/p&gt;

&lt;p&gt;So now it’s time to delete things :) Let’s start by removing the files we won’t need:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; app/views/rodauth_mailer/
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;app/mailers/rodauth_mailer.rb app/models/account.rb db/migrate/20210906132849_create_rodauth.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then update the auto-generated config files:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# lib/rodauth_app.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RodauthApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rodauth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;App&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# List of authentication features that are loaded.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:create_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:verify_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:verify_account_grace_period&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;      &lt;span class=&quot;ss&quot;&gt;:login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:logout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:remember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;      &lt;span class=&quot;ss&quot;&gt;:reset_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:change_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:change_password_notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;      &lt;span class=&quot;ss&quot;&gt;:change_login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:verify_login_change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;      &lt;span class=&quot;ss&quot;&gt;:close_account&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:base&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ... delete every other default option&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load_memory&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# only useful for auth-driven rodauth&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rodauth&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# route rodauth requests&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now it’s time to auto-generate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; files:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails generate rodauth:oauth:install
      create  db/migrate/20210906134332_create_rodauth_oauth.rb
      create  app/models/oauth_application.rb
      create  app/models/oauth_grant.rb
      create  app/models/oauth_token.rb


&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails generate rodauth:oauth:views &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;
      create  app/views/rodauth/authorize.html.erb
      create  app/views/rodauth/oauth_applications.html.erb
      create  app/views/rodauth/oauth_application.html.erb
      create  app/views/rodauth/new_oauth_application.html.erb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some changes will be required here as well before running the migrations, given that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt; created a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt; table, not an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accounts&lt;/code&gt; table like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; would have:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# db/migrate/20210906134332_create_rodauth_oauth.rb&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_applications&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account_id&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_grants&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account_id&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_tokens&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account_id&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now you’re good to go. Run the migrations:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And enable the respective &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; plugins:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# lib/rodauth_app.rb&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Declare public and private keys with which to verify the id_token&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# PRIV_KEY = OpenSSL::PKey::RSA.new(File.read(&quot;path/to/privkey.pem&quot;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# PUB_KEY = OpenSSL::PKey::RSA.new(File.read(&quot;path/to/pubkey.pem&quot;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oidc&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Make sure you hash the refresh tokens in the DB.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_tokens_refresh_token_hash_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:refresh_token_hash&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# list of OIDC and OAuth scopes you handle&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_application_scopes&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[openid email profile posts.read]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# default scopes to give to new applications, application-management specific&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_application_default_scope&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[openid email profile posts.read]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# by default you're only allowed to use https redirect URIs. But we're developing,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# so it's fine.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;development?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;oauth_valid_uri_schemes&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[http https]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# private key to sign ID Tokens with&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_jwt_key&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PRIV_KEY&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# public key with which applications can verify ID Tokens&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_jwt_public_key&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PUB_KEY&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_jwt_algorithm&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;RS256&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# this callback is executed when gathering OIDC claims to build the&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ID token with.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# You should return the values for each of these claims.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# This callback is called in a loop for all available claims, so make sure&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# you memoize access to to the database models to avoid the same query&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# multiple times.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get_oidc_param&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email_verified&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rodauth&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# route rodauth requests&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;oauth_applications&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;openid_configuration&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;webfinger&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# dirty hack, so that user has a name.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# &quot;john.doe@example.com&quot; -&amp;gt; &quot;John Doe&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-erb highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- app/views/application/_navbar.html.erb --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- ... ---&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
           &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Posts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
+        &lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_signed_in?&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
+          &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-item &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;active&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_page?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;oauth_applications_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
+            &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to_unless_current&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Client Applications&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;oauth_applications_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nav-link&quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
+          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
+        &lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s add some seed data we can test things with, such as a test user account:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# db/seed.rb&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;john.doe@example.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;password: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;title: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Post &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a story about post &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rails db:seed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we should be able to start registering our first OAuth application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/login-1.png&quot; alt=&quot;logging-in&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/logged-in-1.png&quot; alt=&quot;logged-in&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok, now let’s add a new OAuth Application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/oauth-applications-error-1.png&quot; alt=&quot;oauth-applications-error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here’s it is: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; couldn’t recognize the user is logged in. This is where we’ll start tweaking the configuration.&lt;/p&gt;

&lt;h2 id=&quot;4-user-is-account&quot;&gt;4. User is account&lt;/h2&gt;

&lt;p&gt;The main thing here to stress out is that the default configuration is tailored for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt;. However, it’s highly &lt;strong&gt;configurable&lt;/strong&gt;! The first thing was already done, namely defined &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accounts_table&lt;/code&gt; as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:users&lt;/code&gt; table where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt; writes. Now we have to tell &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; when the user is logged in. We do that by adding the following set of custom configs:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# lib/rodauth_app.rb&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ... after everything else...&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# to tell rodauth where to redirect if user is not logged in&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;require_login_redirect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/users/sign_in&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# reuse devise controller helper&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;logged_in?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rails_controller_instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_signed_in?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# tell rodauth where to get the user ID from devise's session cookie&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session_value&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;rails_controller_instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;session&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;warden.user.user.key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Long story short, we hoist a couple of calls expecting a rodauth cookie session being defined, to determine whether user is logged in and which user that is, and we “route” those to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt; entities (i.e. that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;warden.user.user.key&quot;&lt;/code&gt; cookie, which is where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt; puts the user ID). And once we do that:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/oauth-applications-1.png&quot; alt=&quot;oauth-applications-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Et Voilà, applications section unlocked. After filling up the form &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/2021/03/15/oidc-provider-on-rails-using-rodauth-oauth.html&quot;&gt;exactly in the same way that was described in the previous blog post&lt;/a&gt;, I end up with the OAuth application we’ll use for the following steps:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/oauth-application-1.png&quot; alt=&quot;oauth-application-1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-business-as-usual&quot;&gt;5. Business as usual&lt;/h2&gt;

&lt;p&gt;Now it’s time to hook our client application. For this purpose, we’ll do the same as described in the &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/2021/03/15/oidc-provider-on-rails-using-rodauth-oauth.html&quot;&gt;previous rodauth-oauth post&lt;/a&gt;, and &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth/-/blob/master/examples/oidc/client_application.rb&quot;&gt;reuse the same OIDC client application&lt;/a&gt;, a single-file single-page app listing some books, fetched via an API request authorized via the ID token.&lt;/p&gt;

&lt;p&gt;The same tweaks described there are applied, and the following script is ran for it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RESOURCE_SERVER_URI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:3000/posts
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;AUTHORIZATION_SERVER_URI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:3000
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLIENT_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WJ5hWI_h050Rw0Ve4834lFK2H9Z01urcXiBIs27A5lQ
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLIENT_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;owxhtwsruvcltsvhycamoqnmulvfqgdjgpdxappjgywamwnrqdkwpgdlqbonegdo
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;ruby scripts/client_application.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/client-application-1.png&quot; alt=&quot;client-application-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here we go:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/authorize-1.png&quot; alt=&quot;authorize-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/authorize-error-2.png&quot; alt=&quot;authorize-error-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The problem here is that access to posts controller is protected via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authenticate_user!&lt;/code&gt; before action from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt;. After the OIDC authentication however, requests are authenticated via ID token, which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt; doesn’t know about. It’s up to you now to provide a new set of before actions, or override the existing ones. For the sake of completeness, I’m going with the latter, but just bear in mind there are other ways to accomplish this.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/application_controller.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;authenticate_user!&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;session_value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user_signed_in?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logged_in?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;session_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RecordNotFound&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# another helper which could be used to specifically filter access only to Tokens&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# with the right permission claims.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;require_read_access&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require_oauth_authorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;posts.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s do this again:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/authorize-1.png&quot; alt=&quot;authorize-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/using-rodauth-oauth-devise-rails/authorized-1.png&quot; alt=&quot;authorized-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Success!&lt;/p&gt;

&lt;h2 id=&quot;6-conclusion&quot;&gt;6. Conclusion&lt;/h2&gt;

&lt;p&gt;As the article proves, it is possible to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; without actually using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; for authentication, with a few tweaks to the configuration. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;devise&lt;/code&gt; was used for demonstration purposes, but the same lessons can be replicated for any other authentication library (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sorcery&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;warden-rails&lt;/code&gt;, plain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;warden&lt;/code&gt;…).&lt;/p&gt;

&lt;p&gt;It’s now up to the user to decide whether these tweaks are worth it, compared to the alternative frameworks for OAuth or OIDC.&lt;/p&gt;

&lt;p&gt;And who knows, maybe you’ll like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt;’s approach so much so that you’ll start migrating your authentication system to it :) .&lt;/p&gt;

&lt;p&gt;You can find the demo app under &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth-devise-demo&quot;&gt;this gitlab repository&lt;/a&gt;.&lt;/p&gt;</content><author><name/></author><summary type="html">I’ve written before about rodauth-oauth and how to use it to make an OAuth2 or OIDC Connect provider out of a rails application, and where I built a rails demo app based out of Janko Mahronic’s rodauth-rails demo app as a workable tutorial. It shows well what rodauth accomplishes, how integrating it in a rails app became significantly simpler thanks to rodauth-rails, and how one can building an OAuth/OIDC provider using rodauth-oauth on top of that.</summary></entry><entry><title type="html">Tensorflow Serving with Ruby</title><link href="honeyryderchuck.gitlab.io/httpx/2021/08/26/tensorflow-serving-with-ruby.html" rel="alternate" type="text/html" title="Tensorflow Serving with Ruby"><published>2021-08-26T00:00:00+00:00</published><updated>2021-08-26T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2021/08/26/tensorflow-serving-with-ruby</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2021/08/26/tensorflow-serving-with-ruby.html">&lt;p&gt;The &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;Tensorflow framework&lt;/a&gt; is the most used framework when it comes to develop, train and deploy Machine Learning models. It ships with first class API support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C++&lt;/code&gt;, the former being a favourite of most data scientists, which explains the pervasiveness of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; in virtually all of the companies relying on ML for their products.&lt;/p&gt;

&lt;p&gt;When it comes to deploying ML-based web services, there are two options. The first one is to develop a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; web service, using something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flask&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;django&lt;/code&gt;, add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tensorflow&lt;/code&gt; as a dependency, and run the model from within it. This approach is straightforward, but it comes with its own set of problems: rolling out model upgrades has to be done for each application using it, and even ensuring that the same &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tensorflow&lt;/code&gt; library version is used everywhere tends to be difficult, it being a pretty heavy dependency, which often conflicts with other libraries in the python ecosystem, and is frequently the subject of CVEs. All of this introduces risk in the long run.&lt;/p&gt;

&lt;p&gt;The other approach is to deploy the models using &lt;a href=&quot;https://www.tensorflow.org/tfx/guide/serving&quot;&gt;Tensorflow Serving&lt;/a&gt; (&lt;a href=&quot;https://pytorch.org/serve/inference_api.html&quot;&gt;pytorch has something similar, torchserve&lt;/a&gt;). In short, it exposes the execution of the ML models over the network “as a service”. It supports model versioning, and can be interfaced with via gRPC or REST API, which solves the main integration issues from the previously described approach. It thus allows to compartimentalize the risks from the other approach, while also enabling the possibilitiy of throwing dedicated hardware at it.&lt;/p&gt;

&lt;p&gt;It also allows you to ditch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; when building applications.&lt;/p&gt;

&lt;h3 id=&quot;research-and-development&quot;&gt;Research and Development&lt;/h3&gt;

&lt;p&gt;Now, I’m not a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; hater. It’s an accessible programming language. It shares a lot of benefits and drawbacks with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt;. But by the time a company decides to invest in ML to improve their product, the tech team might already be heavily familiar with a different tech stack. Maybe it’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt;, maybe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java&lt;/code&gt;, maybe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go&lt;/code&gt;. It’s unreasonable to replace all of them with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; experts. It’s possible to ask them to use a bit of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;, but that comes at the cost of learning a new stack (thereby decreasing quality of delivery) and alienating the employees (thereby increasing turnover).&lt;/p&gt;

&lt;p&gt;It’s also unreasonable to ask from the new data science team to not use their preferred &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; tech stack. It’s an ML &lt;em&gt;lingua franca&lt;/em&gt;, and there’s way more years of investment and resources poured into libraries like &lt;a href=&quot;https://numpy.org/&quot;&gt;numpy&lt;/a&gt; or &lt;a href=&quot;https://scikit-learn.org/stable/index.html&quot;&gt;scikit&lt;/a&gt;. And although there’s definitely value in improving the state of ML in your preferred languages (shout out at the &lt;a href=&quot;http://sciruby.com/&quot;&gt;SciRuby&lt;/a&gt; folks) and diminish the overall industry dependency on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;, that should not come at the cost of decreasing the quality of your product.&lt;/p&gt;

&lt;p&gt;Therefore, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tensorflow-serving&lt;/code&gt; allows the tech team to focus on developing and shipping the best possible product, and the research team to focus on developing the best possible  models. Everyone’s productive and happy.&lt;/p&gt;

&lt;h3 id=&quot;tensorflow-serving-with-json&quot;&gt;Tensorflow Serving with JSON&lt;/h3&gt;

&lt;p&gt;As stated above, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tensorflow serving&lt;/code&gt; services are exposed using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gRPC&lt;/code&gt; and REST APIs. IF you didn’t use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gRPC&lt;/code&gt; before, you’ll probably privilege the latter; you’ve done HTTP JSON clients for other APIs before, how hard can it be creating an HTTP client for it?&lt;/p&gt;

&lt;p&gt;While certainly possible, going this route will come at a cost; besides ensuring that the HTTP layer works reliably, using persistent connections, timeouts, etc, there’s the cost of JSON.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tensorflow&lt;/code&gt; (and other ML frameworks in general) makes heavy use of “tensors”, multi-dimensional same-type arrays (vectors, matrixes…), describing, for example, the coordinates of a face recognized in an image. These tensors are represented in memory as contiguous array objects, and can be therefore easily serialized into a bytestream. Libraries like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numpy&lt;/code&gt; (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numo&lt;/code&gt; in ruby) take advantage of this memory layout to provide high-performance mathematical and logical operations.&lt;/p&gt;

&lt;p&gt;JSON is UTF-8, and can’t encode byte streams; in order to send and receive byte streams using the REST API interface, you’ll have to convert to and from base 64 notation. This means that, besides the CPU usage overhead for these operations, you should expect a ~33% increase in the transmitted payload.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tensorflow-serving&lt;/code&gt; REST API proxies to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gRPC&lt;/code&gt; layer, so there’s also this extra level of indirection to account for.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gRPC&lt;/code&gt; doesn’t suffer from these drawbacks; on top of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP/2&lt;/code&gt;, it not only improves connnectivity, it also solves multiplexing and streaming; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;protobufs&lt;/code&gt;, it has a typed message serialization protocol which supports byte streams.&lt;/p&gt;

&lt;p&gt;How can it be used in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; then?&lt;/p&gt;

&lt;h3 id=&quot;tensorflow-serving-with-protobufs&quot;&gt;Tensorflow Serving with Protobufs&lt;/h3&gt;

&lt;p&gt;Tensorflow Serving calls are performed using a standardized set of common protobufs, which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.proto&lt;/code&gt; definitions can be found both in the &lt;a href=&quot;https://github.com/tensorflow/tensorflow&quot;&gt;tensorflow&lt;/a&gt; repo, as well as in the &lt;a href=&quot;https://github.com/tensorflow/serving&quot;&gt;tensorflow-serving&lt;/a&gt; repo. The most important for our case are declared under &lt;a href=&quot;https://github.com/tensorflow/serving/blob/master/tensorflow_serving/apis/prediction_service.proto&quot;&gt;prediction_service.proto&lt;/a&gt;, which defines request and response protobufs declaring which model version to run, and how input and output tensors are laid out.&lt;/p&gt;

&lt;p&gt;Both libraries above already package the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; protobufs. To use them in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt;, you have to compile them yourself using the &lt;a href=&quot;https://github.com/ruby-protobuf/protobuf&quot;&gt;protobuf&lt;/a&gt; gem. For this particular case, compiling can be a pretty involved process, which looks like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# gem install grpc-tools&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;TF_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.5.0&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TF_SERVING_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2.5.1&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;path/to/protos
&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; pipefail

curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; tensorflow.zip https://github.com/tensorflow/tensorflow/archive/v&lt;span class=&quot;nv&quot;&gt;$TF_VERSION&lt;/span&gt;.zip
unzip tensorflow.zip &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;tensorflow.zip
&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;tensorflow-&lt;span class=&quot;nv&quot;&gt;$TF_VERSION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow

curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; tf-serving.zip https://github.com/tensorflow/serving/archive/&lt;span class=&quot;nv&quot;&gt;$TF_SERVING_VERSION&lt;/span&gt;.zip
unzip tf-serving.zip &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;tf-serving.zip
&lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;serving-&lt;span class=&quot;nv&quot;&gt;$TF_SERVING_VERSION&lt;/span&gt;/tensorflow_serving &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow


&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/ruby
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

grpc_tools_ruby_protoc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow/tensorflow/core/framework/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.proto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--ruby_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--grpc_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--proto_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow

grpc_tools_ruby_protoc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow/tensorflow/core/example/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.proto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--ruby_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--grpc_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--proto_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow

grpc_tools_ruby_protoc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow/tensorflow/core/protobuf/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.proto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--ruby_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--grpc_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--proto_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow

grpc_tools_ruby_protoc &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow/tensorflow_serving/apis/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.proto &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--ruby_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--grpc_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_SERVING_PROTO&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--proto_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PROTO_PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/tensorflow

&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TF_SERVING_PROTO&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: There’s also the &lt;a href=&quot;https://github.com/nubbel/tensorflow_serving_client-ruby&quot;&gt;tensorflow-serving-client&lt;/a&gt;, which already ships with the necessary &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; protobufs, however there hasn’t been any updates in more than 5 years, so I can’t attest to its state of maintenance. So if you want to use this in production, make sure you generate ruby stubs from the latest version of definitons.&lt;/p&gt;

&lt;p&gt;Once the protobufs are available, creating a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PredictRequest&lt;/code&gt; is simple. Here’s how you’d encode a request to a model called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mnist&lt;/code&gt;, taking a 784-wide float array as input:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path/to/protos/ruby/tensorflow_serving/apis/prediction_service_pb&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serving&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PredictRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;model_spec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serving&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ModelSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mnist'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'images'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TensorProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;float_val: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;tensor_shape: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TensorShapeProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;dim: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TensorShapeProto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;size: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TensorShapeProto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;size: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;784&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;dtype: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DataType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DT_FLOAT&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tensorflow&lt;/code&gt; python API ships with a very useful function called &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/make_tensor_proto&quot;&gt;make_tensor_proto&lt;/a&gt;, which could do the above as a “one-liner”. While it’s certainly possible to code a similar function in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt;, it’s a pretty involved process which is beyond the scope of this post.&lt;/p&gt;

&lt;p&gt;As an example, this one is easy to grasp. However, we’ll have to deal with much larger tensors in production, which is going to get heavier and slower to deal with using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; arrays.&lt;/p&gt;

&lt;h3 id=&quot;tensorflow-serving-with-numo-and-grpc&quot;&gt;Tensorflow Serving with Numo and GRPC&lt;/h3&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;, the standard for using n-dimensional arrays is &lt;a href=&quot;https://numpy.org/&quot;&gt;numpy&lt;/a&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; has a similar library called &lt;a href=&quot;https://github.com/ruby-numo/numo&quot;&gt;numo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It aims at providing the same APIs as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numpy&lt;/code&gt;, which is mostly an aspirational goal, as keeping up with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numpy&lt;/code&gt; is hard (progress can be tracked &lt;a href=&quot;https://github.com/ruby-numo/numo-narray/wiki/Numo-vs-numpy&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;A lot can be done already though, such as &lt;a href=&quot;https://github.com/yoshoku/magro&quot;&gt;image processing&lt;/a&gt;. If our model requires an image, this is how it can be done in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# using numpy
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;grpc&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PIL&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow_serving.apis&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predict_pb2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prediction_service_pb2_grpc&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test-image.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [512,512,3]
&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predict_pb2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PredictRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model_spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mnist&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'images'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CopyFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_tensor_proto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prediction_service_pb2_grpc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PredictionServiceStub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grpc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insecure_channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;localhost:9000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this is the equivalent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; code:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;grpc&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path/to/protos/ruby/tensorflow_serving/apis/prediction_service_pb&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# magro reads images to numo arrays&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;magro&quot;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_predict_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serving&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PredictRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;model_spec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serving&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ModelSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mnist'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'images'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TensorProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;binary_val: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_binary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;tensor_shape: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TensorShapeProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;dim: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TensorShapeProto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;size: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;dtype: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DataType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DT_UINT8&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Magro&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;imread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test-image.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [512,512,3]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# using tensorflow-serving-client example&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serving&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PredictionService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'localhost:9000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:this_channel_is_insecure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_predict_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;outputs&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# returns PredictResponses&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it!&lt;/p&gt;

&lt;h3 id=&quot;grpc-over-httpx&quot;&gt;GRPC over HTTPX&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/wiki/GRPC&quot;&gt;httpx ships with a grpc plugin&lt;/a&gt;. This being a blog mostly about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;, it’s only fitting I show how to do the above using it :) .&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;httpx&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;magro&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;path/to/protos/ruby/tensorflow_serving/apis/prediction_service_pb&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ... same as above ...&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:grpc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;build_stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost:9000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;service: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serving&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PredictionService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_predict_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;outputs&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# returns PredictResponses&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Hopefully you’ve gained enough interest about some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; ML toolchain to investigate further. Who knows, maybe you can teach your researcher friends about. However, the ML industry won’t move away from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; soon, so at least you know some more about how you can still use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; to build your services, while interfacing remotely with ML models, running on dedicated hardware, using the gRPC protocol.&lt;/p&gt;</content><author><name/></author><summary type="html">The Tensorflow framework is the most used framework when it comes to develop, train and deploy Machine Learning models. It ships with first class API support for python and C++, the former being a favourite of most data scientists, which explains the pervasiveness of python in virtually all of the companies relying on ML for their products.</summary></entry><entry><title type="html">HTTPX responses can be pattern matched</title><link href="honeyryderchuck.gitlab.io/httpx/2021/06/18/httpx-responses-can-be-pattern-matched.html" rel="alternate" type="text/html" title="HTTPX responses can be pattern matched"><published>2021-06-18T00:00:00+00:00</published><updated>2021-06-18T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2021/06/18/httpx-responses-can-be-pattern-matched</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2021/06/18/httpx-responses-can-be-pattern-matched.html">&lt;p&gt;TL;DR: starting with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v0.15.0&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; responses can be used with pattern matching, a feature which appeared experimentally in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; 2.7, and became an official feature in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; 3.&lt;/p&gt;

&lt;p&gt;Here’s the gist of it:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;httpx&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;399&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;success: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;499&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;client error: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;server error: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;error: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;error: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;unexpected: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;origin-story&quot;&gt;Origin story&lt;/h2&gt;

&lt;p&gt;Since the first release, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; followed the convention of other &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; HTTP libraries, of giving back a fully-featured response object:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# httpx&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# net/http&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;code&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# typhoeus&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Typhoeus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;code&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# excon&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Excon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# and the list goes on...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Most of these libraries return a response object if an HTTP response was answered back, regardless of status code, or raise an exception if something unexpected happened, such as failing to open a socket, timeouts, etc.. Some of them “wrap” the original low-level error in a library-specific error (i.e. excon swallowing Timeout::Error and bubbling up an Excon::Errors::Timeout), others just letting the low-level error surface, such as net/http:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# based on an example from https://janko.io/httprb-is-great/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SocketError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;EOFError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;IOError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;SystemCallError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;Timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTPBadResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTPHeaderSyntaxError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ProtocolError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;OpenSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SSLError&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# handle exception&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; works differently: because of its “multiple concurrent requests” feature, it can’t just raise exceptions, as that would interfere with multiplexing requests:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# If an exception would be raised, and the first two pages were downloaded, don't you want to do something about it?&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is why one of the initial design decisions was to return another type of response object, an “error response”, that users could inspect and work around:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is_a?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ErrorResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# or, response.respond_to?(:error)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This works, as it allows to keep the concurrent requests feature, while allowing the user to handle errors, at the expense of conditional checks around the response type.&lt;/p&gt;

&lt;p&gt;It kinda looks like go though. Network code wrapped in if error. Doesn’t look very friendly. Also, we’re writing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; not go, and the tuple-return-with-maybe-an-error convention is not a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; standard; idiomatic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; usually deals with the happy path and rescues potential exceptions. So I could see users forgetting to check. This led to a second attempt at “fixing” this.&lt;/p&gt;

&lt;h2 id=&quot;raise_for_status&quot;&gt;raise_for_status&lt;/h2&gt;

&lt;p&gt;Since version &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.0.3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; supports a method on all responses, #raise_for_status. This method was inspired by a similar feature from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; requests library, arguably the most popular HTTP client library for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; programming language. Like it, it’ll raise an exception if an error ocurred, or if the HTTP response is considered an error response (i.e. with 4XX or 5XX status code).&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;raise_for_status&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This solution ticks a lot of boxes: it’s terse, there is no if, it’s a known convention users might be familiar with.&lt;/p&gt;

&lt;p&gt;But you still need to “opt in”. I’ve seen code done by others using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;, and people tend to forget to call it.&lt;/p&gt;

&lt;p&gt;Maybe it’s the curse of the simplicity of the method call giving the illusion that it “just works”, nevermind the complexity inherent to network requests. Or maybe its just that this convention is “pythonic”, and I can’t expect rubyists to be familiar with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; libraries. Or maybe, users are just so used to older HTTP &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; libraries, that they refuse to change their ways.&lt;/p&gt;

&lt;p&gt;So I try to document it as much as possible, so that at least there are less questions asked when things don’t work as expected.&lt;/p&gt;

&lt;h2 id=&quot;the-case-for-pattern-matching&quot;&gt;The case for pattern matching&lt;/h2&gt;

&lt;p&gt;When &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; 2.7 was released, pattern matching featured prominently in the announcements, despite it being a experimental feature. I remember thinking this was a consequence of a “there and back again” journey to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Elixir&lt;/code&gt;, and an attempt at “hammering elixir-isms” into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt;. After all, pattern matching in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Elixir&lt;/code&gt; (and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Erlang&lt;/code&gt;, of course) is pervasive: you can use almost everywhere, even function signatures.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; introduced it only for case statements (although inline assignments are also supported, even if experimentally, in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; 3). It’s as simple as using in instead of when:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; 0&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; 1&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [2, 3]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first “real world use case” associated with it was for parsing JSON, i.e. destructuring big payloads:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;
{
  &quot;name&quot;: &quot;Alice&quot;,
  &quot;age&quot;: 30,
  &quot;children&quot;: [{ &quot;name&quot;: &quot;Bob&quot;, &quot;age&quot;: 2 }]
}
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;END&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;symbolize_names: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Alice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;children: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bob&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;age: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; 2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But sadly, there hasn’t been much excitement around it. Very few articles and blog posts. Very little “how ruby’s pattern matching helped me simplify my enterprise code”. Maybe we’re all just too busy carrying legacy apps in our laps, that there’s no time for shiny and new.&lt;/p&gt;

&lt;p&gt;So I hope this post changes that. I think that pattern matching has the potential to simplify a lot of code, and I think that it can improve the way we deal with HTTP interactions. It still requires one to buy into the feature, but hopefully this becomes second-nature with more pervasiveness of the feature.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; takes “light” inspiration in rack responses, when modelling what can get pattern-matched; it exposes:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;the status code
the headers (can also be pattern-matched)
the body (an instance of HTTPX::Response::Body, which can also be pattern-matched by a string)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;hasharray-patterns&quot;&gt;Hash/Array patterns&lt;/h3&gt;

&lt;p&gt;It can be matched both with hash and array patterns:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# hash&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;399&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# array&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;399&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;header-patterns&quot;&gt;Header patterns&lt;/h3&gt;

&lt;p&gt;Headers can also be matched:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://nghttp2.org/httpbin/get&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;399&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;content-type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;application/json&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;body-patterns&quot;&gt;Body patterns&lt;/h3&gt;

&lt;p&gt;Response bodies can be matched against a string or regexp:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://nghttp2.org/status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;not found&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;matched&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# or&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/found/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;matched&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There’s a caveat though: the body will be fully read into memory, in order to be pattern-matched. This can be a problem if the response body is heavy, so be sure to know what you’re doing.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Using pattern-matching for HTTP responses looks like a slick way to consolidate all the different ways HTTP clients use to expose response details. Given that this is the first attempt at doing so for an HTTP client, and given how easy it is to implement it (just define &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#deconstruct&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#deconstruct_keys(keys)&lt;/code&gt;), hopefully subsequent initiatives will follow the standard set by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’ll probably take some time for the community to embrace it though, given it’s a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; 3 feature, and how long it tends to catch up to the most up-to-date &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; version. Hopefully this real-world use-case for pattern-matching makes a strong reason for upgrading.&lt;/p&gt;</content><author><name/></author><summary type="html">TL;DR: starting with v0.15.0, httpx responses can be used with pattern matching, a feature which appeared experimentally in ruby 2.7, and became an official feature in ruby 3.</summary></entry><entry><title type="html">Introducing idnx</title><link href="honeyryderchuck.gitlab.io/httpx/2021/06/11/introducing-idnx.html" rel="alternate" type="text/html" title="Introducing idnx"><published>2021-06-11T00:00:00+00:00</published><updated>2021-06-11T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2021/06/11/introducing-idnx</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2021/06/11/introducing-idnx.html">&lt;p&gt;I’ve just published the first version of &lt;a href=&quot;https://github.com/HoneyryderChuck/idnx&quot;&gt;idnx&lt;/a&gt; to Rubygems. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;idnx&lt;/code&gt; is a ruby gem which converts Internationalized Domain Names into Punycode. The gist of it is:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;idnx&quot;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Idnx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_punycode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bücher.de&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; &quot;xn--bcher-kva.de&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it! That’s the announcement!&lt;/p&gt;

&lt;h2 id=&quot;why-yet-another-idn-gem&quot;&gt;Why yet another idn gem?&lt;/h2&gt;

&lt;p&gt;Let me spare you the work: here’s the &lt;a href=&quot;https://www.ruby-toolbox.com/search?q=idn&quot;&gt;ruby toolbox link&lt;/a&gt;. Yes, there have been many IDN-related gems over the years. Why yet another one?&lt;/p&gt;

&lt;p&gt;While researching on how to better support IDN domain names for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;, I asked myself, “what does cURL do?”. After a session of “look at the source”, I found out that cURL uses &lt;a href=&quot;https://github.com/libidn/libidn2&quot;&gt;libidn2&lt;/a&gt; in Unix environments, while it uses &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-idntoascii&quot;&gt;the winAPI IdnToAscii&lt;/a&gt; on Windows.&lt;/p&gt;

&lt;p&gt;After that, I searched for a ruby library that would support at least one of the above. To my surprise, I didn’t find any. In fact, I found out that most of the idn-related gems from that ruby toolbox list haven’t received much attention for years, and most of them use &lt;a href=&quot;https://www.gnu.org/software/libidn/&quot;&gt;libidn&lt;/a&gt;, the predecessor of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libidn2&lt;/code&gt;, which does not support IDNA 2008 Punycode protocol. Also, none of them supports Windows.&lt;/p&gt;

&lt;p&gt;So I decided to roll my own, the cURL way: provide bindings for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libidn2&lt;/code&gt;, while using Windows APIs for Windows, all via FFI, so that it’d transparently works with JRuby.&lt;/p&gt;

&lt;h2 id=&quot;why-no-punycode-to-idn-translation&quot;&gt;Why no punycode-to-idn translation?&lt;/h2&gt;

&lt;p&gt;The short answer is: because I don’t need it. If you do though, I’ll welcome a Pull Request introducing it.&lt;/p&gt;

&lt;h2 id=&quot;why-doesnt-ruby-provide-this&quot;&gt;Why doesn’t ruby provide this?&lt;/h2&gt;

&lt;p&gt;I’ve previously &lt;a href=&quot;https://bugs.ruby-lang.org/issues/17309&quot;&gt;discussed in the ruby bugs board&lt;/a&gt; about the lack of support for punycode, and that breaking the “principle of least astonishment” when using standard library APIs like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uri&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resolv&lt;/code&gt;. I understand that doing so would require &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby&lt;/code&gt; to be dependent on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libidn2&lt;/code&gt; (at least in Linux/BSD systems), and the core team has been pretty resistant when it comes to had more dependencies to the runtime. I understand that this’ll never happen, unless someone makes a convincing argument that satisfies the core team.&lt;/p&gt;

&lt;p&gt;Until then, you can use this gem, which, in case the day will come, can hopefully work as a template.&lt;/p&gt;

&lt;h2 id=&quot;will-i-need-idnx-to-use-httpx&quot;&gt;Will I need idnx to use httpx?&lt;/h2&gt;

&lt;p&gt;No. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;idnx&lt;/code&gt; will be a “weak” dependency, i.e. you’ll have to install it yourself, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; will hook on it if available. It’ll otherwise fallback to a &lt;a href=&quot;https://gitlab.com/honeyryderchuck/httpx/-/blob/master/lib/httpx/punycode.rb&quot;&gt;pure ruby punycode implementation imported from another ruby gem&lt;/a&gt; (it doesn’t support IDNA2008 however, so make sure to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;idnx&lt;/code&gt; if you require it).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;That’s it. Happy hacking!&lt;/p&gt;</content><author><name/></author><summary type="html">I’ve just published the first version of idnx to Rubygems. idnx is a ruby gem which converts Internationalized Domain Names into Punycode. The gist of it is:</summary></entry><entry><title type="html">How to build an OIDC provider using rodauth-oauth on Rails</title><link href="honeyryderchuck.gitlab.io/httpx/2021/03/15/oidc-provider-on-rails-using-rodauth-oauth.html" rel="alternate" type="text/html" title="How to build an OIDC provider using rodauth-oauth on Rails"><published>2021-03-15T00:00:00+00:00</published><updated>2021-03-15T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2021/03/15/oidc-provider-on-rails-using-rodauth-oauth</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2021/03/15/oidc-provider-on-rails-using-rodauth-oauth.html">&lt;p&gt;One of my most recent ruby open-source projects is &lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth&quot;&gt;rodauth-oauth&lt;/a&gt;, a rack-based toolkit to help easily build OAuth and OpenID Connect providers, built on top of &lt;a href=&quot;http://rodauth.jeremyevans.net/&quot;&gt;rodauth&lt;/a&gt; (the most advanced authentication provider library for ruby). I summarized my &lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth/wiki/FAQ&quot;&gt;initial motivation for “rolling my own” in the project Wiki&lt;/a&gt;, namely the lack of a decent framework-agnostic alternative (I didn’t want to have to use Rails), and what I perceived as the limitations of the “de-facto” OAuth provider Rails extension, “doorkeeper”.&lt;/p&gt;

&lt;p&gt;One less known “feature” of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt;, given the initial motivation, is that it can be used with Rails. In fact, around the same time I started working on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt;, &lt;a href=&quot;https://github.com/janko/rodauth-rails&quot;&gt;Janko Mahronic started rodauth-rails&lt;/a&gt;, which aimed at making the integration of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; in rails as seamless as any other rails-friendly authentication gem. So after I got my early proof-of-concept, I made supporting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-rails&lt;/code&gt; a priority. Both gems have grown since then.&lt;/p&gt;

&lt;p&gt;Although there’s enough documentation on how to set it up with Rails, I’ve never got to write any free-form HOW-TO guides. &lt;a href=&quot;https://janko.io/adding-multifactor-authentication-in-rails-with-rodauth/&quot;&gt;Janko has been actively releasing articles about rodauth-rails&lt;/a&gt;, so I think it’s time I should do the same as well.&lt;/p&gt;

&lt;p&gt;So, what does it take to start an OpenID Connect Provider on Rails using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Our first step would be to bootstrap a Rails app, integrate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; (via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-rails&lt;/code&gt;), add some basic CRUD/resources and authentication… sounds like a lot of work. Fortunately, &lt;a href=&quot;https://github.com/janko/rodauth-demo-rails&quot;&gt;Janko already did the work of providing such a demo app&lt;/a&gt;, that I will use as my starting point. It’s a very simple app, which manages posts behind some authentication-driven authorship.&lt;/p&gt;

&lt;p&gt;For more information about this example app, make sure to read:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://janko.io/adding-authentication-in-rails-with-rodauth/&quot;&gt;Adding Authentication in Rails 6 with Rodauth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://janko.io/adding-multifactor-authentication-in-rails-with-rodauth/&quot;&gt;Adding Multifactor Authentication in Rails 6 with Rodauth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to make this more interesting, this app will also be a “resource server” (in OAuth “parlance”), given access to user posts via the “posts.read” scope.&lt;/p&gt;

&lt;p&gt;So let’s get this started with!&lt;/p&gt;

&lt;h2 id=&quot;1-rodauth-rails&quot;&gt;1. rodauth-rails&lt;/h2&gt;

&lt;p&gt;After cloning the project, I ran the following commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; bundle install
&amp;gt; bundle exec rails db:create (make sure you have &quot;postgresql&quot; installed)
&amp;gt; bundle exec rails db:migrate
&amp;gt; bundle exec rails server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And my app is running under “http://localhost:3000”. I open my browser and:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/rails-error.png&quot; alt=&quot;Rails Error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Oh, bummer. I guess I need more “wheels” for rails 6. Thanks, rails.&lt;/p&gt;

&lt;p&gt;After a couple of searches about the topic, I run:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec rails webpacker:install&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec bin/webpack-dev-server&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have another look at the browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/rails-success.png&quot; alt=&quot;Rails Success&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we’re up and running! I create and verify a Tester acccount then:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/logged-in.png&quot; alt=&quot;Logged In&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we’re up and running!&lt;/p&gt;

&lt;h2 id=&quot;2-install-rodauth-oauth&quot;&gt;2. install rodauth-oauth&lt;/h2&gt;

&lt;p&gt;In order to integrate &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; in rails, we’re going to add the gem to our Gemfile and follow the &lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth/wiki/Rails&quot;&gt;instructions from the wiki&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Gemfile&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rodauth-oauth&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;21-run-the-db-level-generator&quot;&gt;2.1. run the db-level generator&lt;/h3&gt;

&lt;p&gt;Next we run the following command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; bundle exec rails generate rodauth:oauth:install
create  db/migrate/20210316141438_create_rodauth_oauth.rb
create  app/models/oauth_application.rb
create  app/models/oauth_grant.rb
create  app/models/oauth_token.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This generator creates all the following resources: the OAuth Token, Grant and Application models, and a single migration file to create all the related database-level resources. One is supposed to tweak this migration depending of the features to enable, so this is what a DB schema for an OIDC provider would look like:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# db/migrate/20210316141438_create_rodauth_oauth.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateRodauthOAuth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_applications&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:homepage_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:redirect_uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;index: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:client_secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;index: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:scopes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CURRENT_TIMESTAMP&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_grants&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_application_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_applications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :oauth_application_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:expires_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:redirect_uri&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:revoked_at&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:scopes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CURRENT_TIMESTAMP&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# for using access_types&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:access_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;offline&quot;&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# uncomment to enable PKCE&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# t.string :code_challenge&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# t.string :code_challenge_method&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# uncomment to use OIDC nonce&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:nonce&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%i[oauth_application_id code]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_tokens&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:account_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:accounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :account_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_grant_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_grants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :oauth_grant_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_token_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :oauth_token_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_application_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foreign_key&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_applications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;column: :oauth_application_id&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:refresh_token_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;token: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:expires_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:revoked_at&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:scopes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CURRENT_TIMESTAMP&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# uncomment to use OIDC nonce&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:nonce&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec rails db:migrate&lt;/code&gt; one more time.&lt;/p&gt;

&lt;h3 id=&quot;22-configure-oauthoidc-options&quot;&gt;2.2. Configure oauth/oidc options&lt;/h3&gt;

&lt;p&gt;Again, you should adjust this to the features you want to enable. This is an example of what I consider a “good enough” connfiguration for this tutorial:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# in lib/rodauth_app.rb&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Declare public and private keys with which to verify the id_token&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# PRIV_KEY = OpenSSL::PKey::RSA.new(File.read(&quot;path/to/privkey.pem&quot;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# PUB_KEY = OpenSSL::PKey::RSA.new(File.read(&quot;path/to/pubkey.pem&quot;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:create_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:verify_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.....&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oidc&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# Make sure you hash the refresh tokens in the DB.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_tokens_refresh_token_hash_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:refresh_token_hash&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# list of OIDC and OAuth scopes you handle&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_application_scopes&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[openid email profile posts.read]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# default scopes to give to new applications, application-management specific&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_application_default_scope&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[openid email profile posts.read]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# by default you're only allowed to use https redirect URIs. But we're developing,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# so it's fine.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;development?&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;oauth_valid_uri_schemes&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[http https]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# private key to sign ID Tokens with&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_jwt_key&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PRIV_KEY&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# public key with which applications can verify ID Tokens&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_jwt_public_key&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PUB_KEY&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;oauth_jwt_algorithm&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;RS256&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# this callback is executed when gathering OIDC claims to build the&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ID token with.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# You should return the values for each of these claims.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# This callback is called in a loop for all available claims, so make sure&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# you memoize access to to the database models to avoid the same query&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# multiple times.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get_oidc_param&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;account_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email_verified&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;verified&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rodauth&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# route rodauth requests&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;oauth_applications&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# oauth application management dashboard&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# OpenID specific, enable service discovery&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;openid_configuration&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rodauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;webfinger&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Consider reading the &lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth/wiki/Security-Considerations&quot;&gt;security recommendations at this point as well&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;23-generate-the-views&quot;&gt;2.3. Generate the views&lt;/h3&gt;

&lt;p&gt;Now I run the following command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; bundle exec rails generate rodauth:oauth:views -a
create  app/views/rodauth/authorize.html.erb
create  app/views/rodauth/oauth_applications.html.erb
create  app/views/rodauth/oauth_application.html.erb
create  app/views/rodauth/new_oauth_application.html.erb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I ran it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt; because I’ll be integrating &lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth/wiki/OAuth-applications-and-token-management&quot;&gt;Oauth Applications management, which is optional&lt;/a&gt;. If you prefer to bootstrap creating the OAuth Applications yourself via the command line, you are free to do so, in which case, only the Authorization Form will be initiated.&lt;/p&gt;

&lt;h2 id=&quot;3a-make-oauth-applications-management-available-optional&quot;&gt;3.a Make OAuth Applications Management available (optional)&lt;/h2&gt;

&lt;p&gt;At this point, your users should be able to navigate to the oauth applications management page, which means, there should be a link somewhere. Given that the demo app has a navbar, I’ll just add it there:&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gd&quot;&gt;&amp;lt;/li&amp;gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+ &amp;lt;% if rodauth.logged_in? %&amp;gt;
+   &amp;lt;li class=&quot;nav-item &amp;lt;%= &quot;active&quot; unless current_page?(rodauth.oauth_applications_path) %&amp;gt;&quot;&amp;gt;
+     &amp;lt;%= link_to_unless_current &quot;Client Applications&quot;, rodauth.oauth_applications_path, class: &quot;nav-link&quot; %&amp;gt;
+   &amp;lt;/li&amp;gt;
+ &amp;lt;% end %&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And voilà!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/applications-navbar.png&quot; alt=&quot;applications navbar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And when I follow the link:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/applications-empty.png&quot; alt=&quot;applications empty&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looks weird, I know. But hey, we have a dashboard for our test user’s oauth client applications. So let’s start filling it up:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/application-form-1.png&quot; alt=&quot;application form&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some things to pay attentionn to in this form:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Name” and “Description” fields can be used in the Authorization Form, to inform the user on which application is requesting which permissions.&lt;/li&gt;
  &lt;li&gt;“Homepage URL” and “Redirect URL” are URLs from the client application being registered, the second being the URL the user will be redirected to after authorizing the client application. In production, as per the configuration notes, these URLs &lt;strong&gt;must&lt;/strong&gt; be https. However, for demonstration purposes, we’ll be using a client application running in &lt;em&gt;http://localhost:9293&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;“Secret” is an input. By default, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; doesn’t generate a client secret for client applications, as this requires the OIDC provider to know how these are generated, thereby making it less secure (it’s the same as storing a password in plaintext). So, you’ll have to introduce yours, and keep it somewhere safe.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, I fill up the form:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/application-form-2.png&quot; alt=&quot;application form filled&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And I submit:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/application-page.png&quot; alt=&quot;application page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/applications-with-1.png&quot; alt=&quot;applications with 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And we have our first Client Application. Success!&lt;/p&gt;

&lt;h3 id=&quot;3b-manage-clients-via-the-manager&quot;&gt;3.b Manage clients via the manager&lt;/h3&gt;

&lt;p&gt;Ok, dashboards are nice, but sometimes you want to provide some “quick to market” OIDC provider solution, without going through the hassle of tinkering on the “self-serve” part of oauth application manangemennt, because you have no designer availability, there’s a short initial set of clients to integrate with, and you have account managers, who can collect the data offline and handover the credentials. That’s fine. You can skip 2.4 altogether, and write your own command line ruby script:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;urlsafe_base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;urlsafe_base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;client_account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CLIENT_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# you should know this one&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;OauthApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;account: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;client_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;client_secret: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BCrypt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Client Posts App&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;description: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A app showing my posts from this one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;redirect_uri: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9293/auth/openid_connect/callback&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;homepage_url: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost:9293&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;scopes: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;openid email profile books.read&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And decide how you want to pass the credentials to your costumers.&lt;/p&gt;

&lt;p&gt;And now, time to integrate with a client!&lt;/p&gt;

&lt;h1 id=&quot;4-client-integration&quot;&gt;4. Client Integration&lt;/h1&gt;

&lt;p&gt;Now we need that “Client Posts App” client to integrate with our OpenID provider. How shall we do this? Fortunately, I’ve got this covered: &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth/-/tree/master/examples&quot;&gt;rodauth-oauth ships with some examples for all supported scenarios&lt;/a&gt;, so in this case, I’ll &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth/-/blob/master/examples/oidc/client_application.rb&quot;&gt;just reuse the OIDC client application&lt;/a&gt;, which is a single-ruby-file single-page app listing some books, fetched via an API request authorized via the ID token. The OIDC integration is done via the &lt;a href=&quot;https://github.com/jjbohn/omniauth-openid-connect&quot;&gt;omniauth-openid-connect gem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A few tweaks need to be done though, so that this “book app” becomes a “posts app”.&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; AUTHORIZATION_SERVER = ENV.fetch(&quot;AUTHORIZATION_SERVER_URI&quot;, &quot;http://localhost:9292&quot;)
&lt;span class=&quot;gd&quot;&gt;-RESOURCE_SERVER = ENV.fetch(&quot;RESOURCE_SERVER_URI&quot;, &quot;http://localhost:9292/books&quot;)
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+RESOURCE_SERVER = ENV.fetch(&quot;RESOURCE_SERVER_URI&quot;, &quot;http://localhost:9292/posts&quot;)
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; ...
             crossorigin=&quot;anonymous&quot;&amp;gt;&amp;lt;/link&amp;gt;
&lt;span class=&quot;gd&quot;&gt;-      &amp;lt;title&amp;gt;Rodauth Oauth Demo - Book Store Client Application&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+      &amp;lt;title&amp;gt;Rodauth Client Posts App&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; ...
           &amp;lt;div class=&quot;main px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center&quot;&amp;gt;
&lt;span class=&quot;gd&quot;&gt;-            &amp;lt;h1 class=&quot;display-4&quot;&amp;gt;Book Store&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+            &amp;lt;h1 class=&quot;display-4&quot;&amp;gt;Posts&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; ...
&lt;span class=&quot;gi&quot;&gt;+                 @posts = json_request(:get, RESOURCE_SERVER, headers: { &quot;authorization&quot; =&amp;gt; &quot;Bearer #{token}&quot; })
&lt;/span&gt;                  &amp;lt;&amp;lt;-HTML
&lt;span class=&quot;gd&quot;&gt;-                  &amp;lt;div class=&quot;books-app&quot;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+                  &amp;lt;div class=&quot;posts-app&quot;&amp;gt;
&lt;/span&gt;                     &amp;lt;ul class=&quot;list-group&quot;&amp;gt;
&lt;span class=&quot;gd&quot;&gt;-                      &amp;lt;% @books.each do |book| %&amp;gt;
-                        &amp;lt;li class=&quot;list-group-item&quot;&amp;gt;&quot;&amp;lt;%= book[:name] %&amp;gt;&quot; by &amp;lt;b&amp;gt;&amp;lt;%= book[:author] %&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/li&amp;gt;
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+                      &amp;lt;% @posts.each do |post| %&amp;gt;
+                        &amp;lt;li class=&quot;list-group-item&quot;&amp;gt;&amp;lt;%= post[:title] %&amp;gt;: &amp;lt;i&amp;gt;&quot;&amp;lt;%= post[:body] %&amp;gt;&quot;&amp;lt;/i&amp;gt; %&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/li&amp;gt;
&lt;/span&gt;                       &amp;lt;% end %&amp;gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; you get the gist...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After adding the necessary dependencies to the Gemfile, I can run it simply as:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;RESOURCE_SERVER_URI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:3000/posts
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;AUTHORIZATION_SERVER_URI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost:3000
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLIENT_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;fLI0lAIjswWG0z4XpB0FCOPfC7Dr15d2kWErlgwQLds
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLIENT_SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dbjounabeequtxrtrslabkrvtcfpjswgdnntzmjtcmdacpxqwnhmjlbjpfvxqegi
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;ruby scripts/client_application.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(&lt;strong&gt;NOTE&lt;/strong&gt;: If you run this with ruby 3, make sure you bundle &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webrick&lt;/code&gt;, or some other rack server, as well).&lt;/p&gt;

&lt;p&gt;And then I browse “http://localhost:9293”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/client-application-1.png&quot; alt=&quot;client application 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you see, nothing much to click around besides that top-right big “Authenticate with OpenID” button. When you click it, you are then redirected to our OpenID provider authorization flow, which looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/authorization.png&quot; alt=&quot;authorization form&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here we have it: the name of the Client Application, the requested permissions, and the “Authorize” and “Cancel” buttons. Let’s authorize!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/client-application-2.png&quot; alt=&quot;client application 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And you’ve just been authenticated via OpenID Connect, congratulations! There’s your OIDC provider username on the top-right corner. And there’s the list of posts authored by you in the posts resource provider.&lt;/p&gt;

&lt;p&gt;That’s it. Simple, right?&lt;/p&gt;

&lt;h2 id=&quot;leveraging-rodauth&quot;&gt;Leveraging rodauth&lt;/h2&gt;

&lt;p&gt;The beauty of standing on the shoulders of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; is that most security and compliance extensions around authentication you’ll ever need are already built-in. Let’s say that your enterprise customers want to have users 2-factor-authenticated before granting access.&lt;/p&gt;

&lt;p&gt;No problem:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# in rodauth_app.rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;before_authorize&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# at this point they're already logged in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;require_two_factor_authenticated&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So now I setup TOTP in my test account:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/manage-mfa.png&quot; alt=&quot;manage MFA&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I logout and login again with email and password. I go back to my client application:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/client-application-1.png&quot; alt=&quot;client application 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I press “Authenticate with OpenID”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/auth-mfa.png&quot; alt=&quot;auth MFA&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I get requested for my TOTP code. I introduce it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/rodauth-oauth-rails/authorization-form-mfa.png&quot; alt=&quot;authorization MFA&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And I’m back to the Authorization form. It just worked!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It was a very positive experience to put myself on “the other side” and test-drive the integration. I actually ended up discovering a bug or two, which have been fixed in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; v0.5.1 . But overall, it felt good to see the integration unfold in a straightforward way.&lt;/p&gt;

&lt;p&gt;I hope that this tutorial delivered the promise of a simple introduction to building OAuth/OIDC providers in rails apps; using generators to “import” models and templates to your project, providing you with a starting point you can build up from, while also providing multiple knobs for oauth.related advanced features (check the &lt;a href=&quot;https://honeyryderchuck.gitlab.io/rodauth-oauth/wiki&quot;&gt;project’s wiki&lt;/a&gt; for that).&lt;/p&gt;

&lt;p&gt;You can find the demo app under &lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth-demo-rails&quot;&gt;this gitlab repository&lt;/a&gt;.&lt;/p&gt;</content><author><name/></author><summary type="html">One of my most recent ruby open-source projects is rodauth-oauth, a rack-based toolkit to help easily build OAuth and OpenID Connect providers, built on top of rodauth (the most advanced authentication provider library for ruby). I summarized my initial motivation for “rolling my own” in the project Wiki, namely the lack of a decent framework-agnostic alternative (I didn’t want to have to use Rails), and what I perceived as the limitations of the “de-facto” OAuth provider Rails extension, “doorkeeper”.</summary></entry><entry><title type="html">HTTPX AWS Sigv4 plugin - Use cases</title><link href="honeyryderchuck.gitlab.io/httpx/2021/02/22/httpx-aws-sigv4-released-use-cases.html" rel="alternate" type="text/html" title="HTTPX AWS Sigv4 plugin - Use cases"><published>2021-02-22T00:00:00+00:00</published><updated>2021-02-22T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2021/02/22/httpx-aws-sigv4-released-use-cases</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2021/02/22/httpx-aws-sigv4-released-use-cases.html">&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; v0.12.0 ships with &lt;a href=&quot;https://gitlab.com/honeyryderchuck/httpx/-/wikis/AWS-Sigv4&quot;&gt;new plugins to authenticate requests using AWS Sigv4 signatures&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;AWS Sigv4 is how requests are authenticated when using AWS services, such as when a file is uploaded to an S3 private bucket, or a message is pushed to an SQS queue (if you’re using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awscli&lt;/code&gt; or any of the SDKs, they’re doing it for you). &lt;a href=&quot;https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html&quot;&gt;It’s well specified&lt;/a&gt;, and is not a proprietary protocol, and Google Cloud Services is known to support it, along with other cloud providers, so it’s the &lt;em&gt;de-facto&lt;/em&gt; way of authenticating with cloud services APIs.&lt;/p&gt;

&lt;p&gt;This feature was inspired by a &lt;a href=&quot;https://www.mankier.com/3/CURLOPT_AWS_SIGV4&quot;&gt;recently integrated, similar feature in cURL&lt;/a&gt;, and was driven both by curiosity (what can I say, I’m a protocol sucker), and also by thinking about how &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; could be used to improve cloud-based workflows.&lt;/p&gt;

&lt;h2 id=&quot;aws-sdk-fog&quot;&gt;aws-sdk, fog&lt;/h2&gt;

&lt;p&gt;In the ruby ecosystem, both &lt;a href=&quot;https://github.com/aws/aws-sdk-ruby&quot;&gt;aws-sdk&lt;/a&gt; (the official AWS-supported ruby AWS SDK) and &lt;a href=&quot;https://github.com/fog/fog&quot;&gt;fog&lt;/a&gt; (multi cloud provider library, also supports some AWS services) already provide integration with some of the aforementioned cloud services.&lt;/p&gt;

&lt;p&gt;Both are organized the same way:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;full functionality is spread all over different gems (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws-sdk-core&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws-sdk-s3&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fog-aws&lt;/code&gt;…);&lt;/li&gt;
  &lt;li&gt;API interactions are “hidden” behind Ruby object façades:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fog&lt;/code&gt; example: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;directory.files.create(key: 'user/1/Gemfile', body: File.open('Gemfile')&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws-sdk&lt;/code&gt; example : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3.buckets.create('my-bucket')&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;“mocking” method calls is a library feature;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both are well-tested, mature and complete (for each use-case) implementations.&lt;/p&gt;

&lt;p&gt;These plugins aren’t supposed to replace them. If they work well for you, by all means, keep using them.&lt;/p&gt;

&lt;p&gt;So what are they for?&lt;/p&gt;

&lt;h2 id=&quot;its-only-http-but-i-like-it&quot;&gt;It’s only HTTP, but I like it!&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/mick.jpg&quot; alt=&quot;Mick Jagger&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All of these cloud providers serve their customers via HTTP APIs, and most of them provide SDKs, in their chosen batch of supported programming languages. For instance, AWS supports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws-sdk&lt;/code&gt; for ruby, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;boto3&lt;/code&gt; for python, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awssdk&lt;/code&gt; for Java, and the list goes on. They all interface with the same HTTP APIs.&lt;/p&gt;

&lt;p&gt;These SDKs tend to be idiomatic to the language, hence ruby’s is pretty much dominated by object oriented APIs, with its own sack of exceptions, result object… The devil is in the &lt;del&gt;details&lt;/del&gt; documentation.&lt;/p&gt;

&lt;p&gt;These SDKs do achieve the goal of lowering the entry barrier: most developers will much rather have an SDK with proper IDE integration and autocomplete hints, than spend their time searching in the API documentation for the correct URLs and mime type formats. They won’t care if the extra layer means they will miss on batching some work, or are going through many hops, as longs as it works and they can close that Jira ticket.&lt;/p&gt;

&lt;p&gt;But some developers live on the wire. They know how HTTP works. They won’t need the extra layer. Some just get it. They know &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s3.buckets.create('my-bucket')&lt;/code&gt; means &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PUT https://my-bucket.s3.amazonaws.com&lt;/code&gt;. Some of them probably need to know it: given an organization with certain scale, every extra hop might mean a christmas bonus for Jeff Bezos (or birthday present, because as we all know, Bezos is Jesus in disguise).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/bezesus.jpg&quot; alt=&quot;Jeff Bezos&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This plugin is for them!&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:aws_sdk_authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;aws_sdk_authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;service: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://my-bucket.s3.amazonaws.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# there's your S3 bucket&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;0-to-1-1-to-many&quot;&gt;0 to 1, 1 to many&lt;/h2&gt;

&lt;p&gt;I’ve worked in certain stacks which only use S3. In such cases, it might seem a bit overkill to use the SDKs, although YMMV.&lt;/p&gt;

&lt;p&gt;But where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; stands out is when you’d need to download/upload multiple files. Here’s how you’d hypothetically download all the seasons of “Seinfeld” from a known bucket:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# using aws sdk&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AWS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;S3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;upto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;season&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;season-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;season&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:'seinfeld'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;season-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;season&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;target: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#using httpx&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTPX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:aws_sdk_authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;aws_sdk_authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;service: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;s3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;responses&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;upto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://seinfeld.s3.amazonaws.com/season-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# they're already in the filesystem, but just for convenience:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;responses&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_with_index&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;copy_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/path/to/seinfeld/season-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/httpx/images/seinfeld.jpg&quot; alt=&quot;Seinfeld&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Besides the arguably better ergonomics, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; will target the more recent HTTP version to download items concurrently, which might not mean much right now for AWS (at the time of writing the article, S3 requests can only be made via HTTP/1.1), but certainly for other providers (GCP Storage, for example, supports HTTP/2, so put your Seinfelds there).&lt;/p&gt;

&lt;h2 id=&quot;multi-cloud-support&quot;&gt;Multi-cloud support&lt;/h2&gt;

&lt;p&gt;In case you’re targeting multiple cloud providers from the same application, having one client support both providers can become easier to maintain than two SDKs with different underlying APIs. It’s a non-common scenario, but again given enough scale, dollars can be squeezed by distributing data and lowering costs of storage.&lt;/p&gt;

&lt;p&gt;Also, data migrations. When moving data from AWS to GCP, and from GCP to Rackspace, having the same way of doing things will help you move faster when the time comes. And AWS Sigv4 and reasonably similar URIs is a much simpler lower common denominator to maintain than multiple SDK libraries, where one calls it “bucket” and the other calls it “directory”, and there’s always a different exception popping up.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The AWS Sigv4 plugins are just another layer in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; “swiss army knife”. Hope it’ll be of use to someone, as it’ll be for myself (I’ll be sure to integrate it in some of the S3 integrations I maintain).&lt;/p&gt;

&lt;p&gt;Hack on.&lt;/p&gt;</content><author><name/></author><summary type="html">httpx v0.12.0 ships with new plugins to authenticate requests using AWS Sigv4 signatures.</summary></entry><entry><title type="html">2020, a year in review</title><link href="honeyryderchuck.gitlab.io/httpx/2020/12/21/a-year-in-review.html" rel="alternate" type="text/html" title="2020, a year in review"><published>2020-12-21T00:00:00+00:00</published><updated>2020-12-21T00:00:00+00:00</updated><id>honeyryderchuck.gitlab.io/httpx/2020/12/21/a-year-in-review</id><content type="html" xml:base="honeyryderchuck.gitlab.io/httpx/2020/12/21/a-year-in-review.html">&lt;p&gt;2020 has been an incredibly changing year for humanity. Being thrown head-on into a pandemic no one was prepared to deal with, we were forced to clumsily speed-up the transition into the digital age, being more and more dependent of digital identity, online shopping, remote work, and more gifs and memes than we could ever imagine could exist in the ether. Commuting fatigue was replaced by “notifications” fatigue. For all of its faults, the internet backbone managed to assimilate annd withstand way more activity than naysayers ever thought it was prepared for, and I can tell for a fact that I experience way less interruptions in video calls in 2020 than I used to in 2018. We were unfortunately forced to keep in touch with our loved ones at a “safety distance”, in most cases a video chat. I just hope that, whenever we’re done with this state of affairs, we can retain the good habits, while swiftly eliminating the bad.&lt;/p&gt;

&lt;p&gt;For me, 2020 represented a lot of change as well. I moved mid-pandemic into a new apartment with my family, I also switched jobs, which has been refreshing due to the change in context (from “online crowdfunding” into “digital identity”), but also very challenging, as this has been the first time I onboarded remotely. My son grew from a baby into a pre-toddler. I’ve done significantly less travel than I was planning with my wife due to the restrictions, and this meant that my wife was unable to see her family this year. But on a positive note, we’re fine, we’re healthy, and good things shall eventually come. I’ve also attended my first Rubyconf, mostly due to it being remote (even without the pandemic, doing a short trip to the US would not have been within my plans).&lt;/p&gt;

&lt;p&gt;The switch to working from home also meant that I gained roughly 2 hours back, from commuting, and I’ve been using it in some personal activities, but also in my OSS projects. I’ve also restructured the way I do my “free” work, though: I now tend to do “short bursts” of activity, instead of draining my energy for hours, which has been my way of avoiding “OSS fatigue”. While this means that I take more days polishing something, I can use the intervals to evaluate what I have to do, making the time I spend in it much more valuable. I also don’t get a lot of issue reports, which means I don’t get overwhelmed with comms, so I’m thankful I’m not yet at the stage where I need to care more about “governance” than developing the products.&lt;/p&gt;

&lt;p&gt;While there was a lot going on in existing projects, I also found the time to bootstrap new ones.&lt;/p&gt;

&lt;h2 id=&quot;httpx&quot;&gt;&lt;a href=&quot;https://gitlab.com/honeyryderchuck/httpx&quot;&gt;httpx&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;, being my main ruby library, still gets a lot of attention: the last version released in 2019 was 0.6.3, while currently we’re at 0.10.2 .&lt;/p&gt;

&lt;p&gt;I’ve also been able to use it more for non-conventional workloads since I switched jobs, which was the reason some new features landed. This also means I’m doing more “dogfooding” than before.&lt;/p&gt;

&lt;h3 id=&quot;stability&quot;&gt;Stability&lt;/h3&gt;

&lt;p&gt;A lot of effort has been put into increasing the test coverage. Although it’s impractical to aim at 100% coverage (some error handling in network is almost impossible to replicate reliably), it’s close to 97%, which is pretty good.&lt;/p&gt;

&lt;p&gt;I’ve also decreased the number of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:nocov:&lt;/code&gt; annotations, thanks to a &lt;a href=&quot;https://github.com/simplecov-ruby/simplecov#merging-test-runs-under-different-execution-environments&quot;&gt;feature from simplecov I learned at work, .collate&lt;/a&gt;; previously, I was only showing real coverage numbers for the most recent supported version of ruby; now, I merge the coverage results of running tests with all supported ruby versions, which gives me more assurance about the workarounds and fixes I maintain for older rubies. I’ve seen copied this technique to all of my projects except one (more about that later).&lt;/p&gt;

&lt;p&gt;The test environment setup became more complex, with an HTTP (squid) and SOCKS (3proxy) to test the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:proxy&lt;/code&gt; plugins against, an HTTPS DNS server to test the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DoH&lt;/code&gt; features, and a second deployment of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nghttp2&lt;/code&gt;, to test &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Alt-Svc&lt;/code&gt; and HTTP/2 connection coalescing. Fortunately, docker-compose manages this complexity just fine.&lt;/p&gt;

&lt;p&gt;This also meant I found some really nasty bugs in code not covered by tests, so I definitely found a correlation about test coverage and overall stability. I can therefore safely say that the latest versions are the most stable.&lt;/p&gt;

&lt;p&gt;I can’t really compare with other ruby http libraries in this regard though, as I don’t know of any which makes coverage a priority, or a visible metric.&lt;/p&gt;

&lt;h3 id=&quot;performance&quot;&gt;Performance&lt;/h3&gt;

&lt;p&gt;Significant work was done for the 0.8 release to improve and diminish the frequency of IO operations, which greatly reduced the CPU consumption and put the performance of single requests on par with other ruby http libraries. This boost was a great lesson about the trade-offs and real impact of system calls and IO operations, and I’ll take this lesson into future projects.&lt;/p&gt;

&lt;h3 id=&quot;features&quot;&gt;Features&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; gained some new plugins this year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:expect&lt;/code&gt; plugin, for handling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expect: 100-continue&lt;/code&gt; scenarios reliably and retries when the server doesn’t support it, a la cURL (this plugin might be even loaded by default in a future breaking version);&lt;/li&gt;
  &lt;li&gt;the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:stream&lt;/code&gt; plugin, for handling streaming responses from a server, where we might want do deal with the payloads in chunks, rather than buffering them.&lt;/li&gt;
  &lt;li&gt;the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:rate_limiter&lt;/code&gt; plugins, which supports easy retrying on server which rate-limit you;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/wiki/Make-Requests#multiple-requests&quot;&gt;sending multiple requests with a body&lt;/a&gt; (such as POST requests) became not only possible, but also easier, due to several improvements done on the core requests API.&lt;/p&gt;

&lt;h3 id=&quot;forwards-compatibility&quot;&gt;Forwards compatibility&lt;/h3&gt;

&lt;p&gt;As soon as ruby 3 preview was available, I’ve made sure that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; runs it.&lt;/p&gt;

&lt;p&gt;I’ve also planned to prepare for its release, and looked at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbs&lt;/code&gt; in order to improve the stability of the library by using type checking. While typing the code, several bugs and missing features have been reported and contributed upstream, and it was refreshing to contribute to a project I believe will be critical in the years to come.&lt;/p&gt;

&lt;p&gt;The runtime type checking layer, which runs alongside the tests, helped fix some critical issues as well.&lt;/p&gt;

&lt;p&gt;Since v0.10.0, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; ships with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbs&lt;/code&gt; type signatures.&lt;/p&gt;

&lt;p&gt;The tests also run in “GC auto compact” mode.&lt;/p&gt;

&lt;h3 id=&quot;going-forward&quot;&gt;Going forward&lt;/h3&gt;

&lt;p&gt;A lot has been happening in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;; nevetheless, there’s still work to do. Several people asked for support in popular introspection and test libraries (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webmock&lt;/code&gt;, for example). &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; not being as popular as other projects, it won’t benefit from “community” contributions as much as other libraries, creating a common (in OSS) “chicken or egg” situation (can’t use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt; because it doesn’t support my favourite mocking library, won’t integrate my favourite mocking library because don’t use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;). The good news is, I’ve been personally feeling the need of those, so I’ve started the working of &lt;a href=&quot;https://honeyryderchuck.gitlab.io/httpx/wiki/home.html#adapters&quot;&gt;integrating with both &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webmock&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ddtrace&lt;/code&gt;, datadog’s SDK&lt;/a&gt;. Hopefully these examples will provide a good enough template for the next potential contributoor.&lt;/p&gt;

&lt;p&gt;A reason I believe less people contribute to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpx&lt;/code&gt;, is the project being hosted in gitlab rather than github; and although mirroring is enabled and I am open to contributions via Github, github has since “broken” gitlab’s mirroring, so I’ll have to wait before having it available in github again (TL;DR: Github disabled Basic Auth for API authentication, so now it’s on Gitlab to provide an alternative Authentication strategy).&lt;/p&gt;

&lt;p&gt;Overall, I’d like to achieve two ambitious goals: reduce all dependencies not maintained by me to 0; and support ALPN negotiation in Jruby to enable HTTP/2 (which on the other hand means a different TLS stack). I’d also like to start thinking about what a potential v1 would look like, but I’m not expecting it to become a reality this year.&lt;/p&gt;

&lt;h2 id=&quot;http-2-next&quot;&gt;&lt;a href=&quot;https://gitlab.com/honeyryderchuck/http-2-next&quot;&gt;http-2-next&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http-2-next&lt;/code&gt; was &lt;a href=&quot;https://github.com/igrigorik/http-2&quot;&gt;my fork of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http-2&lt;/code&gt; gem&lt;/a&gt; from igvita. I did it because I wanted complete h2spec compliance, along with missing HTTP/2 extension efforts such as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ORIGIN&lt;/code&gt; frame, and I felt that the owner didn’t have much interest in these initiatives, and or time for the project itself. I did it, knowing that if the situation would change, I could come back to it, so I didn’t make significant API changes. But 1 year has passed, and it’s clear that the upstream project isn’t actively maintained anymore, so I’m happy about my decision.&lt;/p&gt;

&lt;h3 id=&quot;stability-1&quot;&gt;Stability&lt;/h3&gt;

&lt;p&gt;After a few initial bumps (including an issue that involved a report to the AWS Cloudfront team), H2spec compliance was achieved, so I can actually tell for a fact that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http-2-next&lt;/code&gt; is the only complete implementation of the HTTP/2 protocol. These specs are run as part of the CI, so future changes don’t break the status quo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: It was brought to my attention that &lt;a href=&quot;https://github.com/socketry/protocol-http2&quot;&gt;protocol-http2&lt;/a&gt; also ships with an h2spec-compliant HTTP/2 parser.&lt;/p&gt;

&lt;h3 id=&quot;features-1&quot;&gt;Features&lt;/h3&gt;

&lt;p&gt;Support for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ORIGIN&lt;/code&gt; frame was added. It was a bittersweet endeavour though, as, such as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALTSVC&lt;/code&gt; frame before it, no known public server seems to use it yet, so it can’t even be tested. Bummer.&lt;/p&gt;

&lt;h3 id=&quot;improvements&quot;&gt;Improvements&lt;/h3&gt;

&lt;p&gt;Support for more recent rubies, including preparing for ruby 3 and RBS signatures, has been added. Overall, this library tries to use more performant ruby APIs than its parent project, although, to be fair, it’ll never compare to a C parser such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nghttpx&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;going-forward-1&quot;&gt;Going forward&lt;/h3&gt;

&lt;p&gt;Improving the performance will still be the main task here. The library is mostly “feature complete” (i.e. it implements the spec), so we can move from “make it work” and “make it work correctly” into “make it work fast”.&lt;/p&gt;

&lt;h2 id=&quot;rodauth-oauth&quot;&gt;&lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-oauth&quot;&gt;rodauth-oauth&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;One of the last projects I was involved in before switching jobs, was an OAuth provider. As that product was a Rails shop, the POC was done using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doorkeeper&lt;/code&gt;, a Rails-only solution. Nevertheless, when the time came to think about on how to build the actual solution, I thought that it would be a good opportunity to showcase &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; to my colleagues, and all the features it provided.&lt;/p&gt;

&lt;p&gt;But sadly, OAuth wasn’t one of them.&lt;/p&gt;

&lt;p&gt;Being proficient with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; codebase, having contributed previously, I though “screw it, I’ll do it myself”.&lt;/p&gt;

&lt;p&gt;And so &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt; was born.&lt;/p&gt;

&lt;p&gt;Initially, my goal was to implement the strictly necessary to support the project I was starting. I was wary that the managers all wanted to stick with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails&lt;/code&gt;, so I wanted to be sure it would integrate well. Fortunately, at the same time, &lt;a href=&quot;https://github.com/janko/rodauth-rails&quot;&gt;Janko Marohnic started working on rodauth-rails&lt;/a&gt;, and I immediately started incorporating it in the test suite.&lt;/p&gt;

&lt;p&gt;After the initial version, my focus was to research OAuth as a protocol, and implement what I thought could be a feature rich annd security-focused OAuth provider toolkit. Being built on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;roda-sequel&lt;/code&gt; stack, I knew I had a solid foundation. So I started, RFC by RFC, implementing them one by one. PKCE, check. Implicit Grant, optionally, check. JWT tokens, check.&lt;/p&gt;

&lt;p&gt;And then, I thought that it was a good idea to support OIDC on top of it as well. Check.&lt;/p&gt;

&lt;p&gt;I’m pretty happy that, although I’m not using it all in production, I was able to research so much about OAuth and able to implement it, and what came out was a very simple DSL that enables it all, courtesy of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt;. Part of its success is exactly this foundation, and Jeremy Evans, the maintainer of not only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt;, but also &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;roda&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sequel&lt;/code&gt;, deserves part of the credit.&lt;/p&gt;

&lt;p&gt;Sadly, the project I was supposed to build this for got cancelled due to the pandemic.&lt;/p&gt;

&lt;h3 id=&quot;going-forward-2&quot;&gt;Going forward&lt;/h3&gt;

&lt;p&gt;Having implemented most, if not all of the OAuth 2.0 family of RFCs, and being compliant with most of the recommendation of the OAuth 2.1 RFC, it’s safe to say that there’s not much more to do (unless you believe OAuth 3 will ever be more than vaporware).&lt;/p&gt;

&lt;p&gt;I think I’ll do some community support for now. People have been using and reporting issues, and being this a young project, some rough edges will have to be dealt with. But it being thoroughly tested (97% coverage) certainly helps.&lt;/p&gt;

&lt;p&gt;I’d also like to type-check it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbs&lt;/code&gt; at some point. Don’t know exactly how, due to the dynamic nature of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; plugins, though.&lt;/p&gt;

&lt;h2 id=&quot;rodauth-select-account&quot;&gt;&lt;a href=&quot;https://gitlab.com/honeyryderchuck/rodauth-select-account&quot;&gt;rodauth-select-account&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;While developing the OIDC layer of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-oauth&lt;/code&gt;, I realized that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; doesn’t support a “change account” feature for logged in users, the way you can have multiple accounts logged-in to Google, and be able to switch across them. I’m not sure if it’s a limitation of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; or just not that big of a use-case, as I don’t know of any other gem supporting it.&lt;/p&gt;

&lt;p&gt;So I decided to roll my own.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth-select-account&lt;/code&gt; is definitely less complex than my other gems, and that shows in lines of code, and even in test coverage (99%).&lt;/p&gt;

&lt;p&gt;But it does the job right, and comes with a bootstrap-enabled GUI to show what you can do with it.&lt;/p&gt;

&lt;h3 id=&quot;going-forward-3&quot;&gt;Going forward&lt;/h3&gt;

&lt;p&gt;I don’t have manny plans for it, as I consider this gem feature-complete. So, beyond the mandatory maintenance, I think that the only thing left to do is be able to run it against &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rodauth&lt;/code&gt; tests to ensure it doesn’t break other plugins.&lt;/p&gt;

&lt;h2 id=&quot;ruby-netsnmp&quot;&gt;&lt;a href=&quot;https://github.com/swisscom/ruby-netsnmp&quot;&gt;ruby-netsnmp&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;My oldest OSS project, still under the Github orga from the company I developed it for, it’s been the one requiring less of my attention over the years, due to the stability of the feature set it provides.&lt;/p&gt;

&lt;p&gt;In fact, there was no commit between Nov 2019 and Sep 2020.&lt;/p&gt;

&lt;p&gt;Ruby 3 brings significant kwargs breaking changes, which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby-netsnmp&lt;/code&gt; uses abundantly (not the greatest of decisions), which, surprise, broke its usage.&lt;/p&gt;

&lt;p&gt;And so the obligatory maintenances fixes came, along with the RBS signatures, until…&lt;/p&gt;

&lt;h3 id=&quot;travis&quot;&gt;Travis&lt;/h3&gt;

&lt;p&gt;By now, everyone following Github projects is tired of the “move from Travis to Github Actions” pull-request parade. It’s the biggest exodus since the Hebrew slaves were fred from Egypt. Which brings me to the other “not the greatest of decisions” moment.&lt;/p&gt;

&lt;p&gt;Having started the project in 2016, Github was still a relatively friendly OSS bazaar, and all projects I followed used this “Travis” platform to integrate CI in their projects. The UI was a bit janky, but it was dynamic, and a big departure from those Jenkins pages everyone was accostumed to. And the builds ran “in the cloud”, which was not as widespread at the time, and those YAMLs were, well, still YAML. But most important of all, it was free for OSS projects.&lt;/p&gt;

&lt;p&gt;I didn’t see any reason not to do as my peers were, and when I proposed my manager to go “open source”, I requested him to put me in touch with the Swisscom team managing the Github orga, and I asked them to create a repo for myself.&lt;/p&gt;

&lt;p&gt;It was the last project I primarily hosted at Github. Since then, I’ve become a Gitlab power user, as I liked having private repositories to develop ideas in quiet before deciding whether to release them (Github caught up with private repos recently). I found out Gitlab CI and was sold: being vertically integrated, I didn’t need to integrate with a 3rd-party CI platform. In fact, I’ve become so happy and productive with my gitlab flow, that I recommend it whenever I can. And given everything that’s happened, it was a decision that aged well: Github being acquired by Microsoft and the biggest Gitlab signup party ever had, Github contracts with dubious agencies, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl&lt;/code&gt; story…&lt;/p&gt;

&lt;p&gt;And now, “Travis”.&lt;/p&gt;

&lt;p&gt;“Travis” has been bought by Idera, a software corporate company, which proceeded to laying off a lot of its staff. There was a feeling in the air that greed would take the platform away from open source. And finally, it was announced: &lt;a href=&quot;https://blog.travis-ci.com/oss-announcement&quot;&gt;Travis would no longer provide free minutes to OSS projects&lt;/a&gt;. And so it began.&lt;/p&gt;

&lt;p&gt;Far away in my Gitlab-sponsored throne, I laughed and scorned at the mob running on top of each other, crying in despair, asking the community for a hand and a PR to migrate their CIs to either “Circle CI”, showing that they didn’t learn the lesson, or “Github Actions”, the recently released Gitlab CI clone.&lt;/p&gt;

&lt;p&gt;And then it came to me. “Oh, crap, ruby-netsnmp”.&lt;/p&gt;

&lt;p&gt;Given that it’s not up to me to move this project to Gitlab this time, I released a howl of resignation and moved on reluctantly.&lt;/p&gt;

&lt;h3 id=&quot;github-actions&quot;&gt;Github Actions&lt;/h3&gt;

&lt;p&gt;Coming from Gitlab CI, Github Actions is confusing, and rather limited. You have workflows, you gotta eat more of that YAML, you have this “step” thing, which “runs” this other thing, which is usually a 3rd-party versioned… “setup-r”? “prepare-r”? Dunno what to call it. Is there one of those for docker? Humm, apparently docker is already there…&lt;/p&gt;

&lt;p&gt;It was a bit hard, but I managed to replicate the multi ruby version matrix I use to run tests.&lt;/p&gt;

&lt;p&gt;And then I wanted to merge coverage results. Except, you can’t. So, you have this “workflow_run” tag to run workflows after a state transition in a previous workflow, but somehow, that doesn’t work for matrix tasks.&lt;/p&gt;

&lt;p&gt;So while I did manage to take a page from all those PRs and migrate the tests, I still don’t have a worthy coverage report to show for.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.community/t/workflow-run-not-triggering-for-matrix-job/150204&quot;&gt;I asked for help in a community forum, since Github makes it so hard to ask for help or questions&lt;/a&gt;. Still waiting for a reply though.&lt;/p&gt;

&lt;p&gt;All in all, Github Actions seems to fit application flows better (test-build-deploy) than libraries. So yeah, stick to Gitlab if you don’t want to dea so much with the “side-stuff”.&lt;/p&gt;

&lt;h3 id=&quot;going-forward-4&quot;&gt;Going forward&lt;/h3&gt;

&lt;p&gt;So, although I’d like to, moving out of Github is not an option. So I’ll keep reluctantly ranting from time to time, until the situation improves.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;A thing I’ve been working in is [a MIB parser]&lt;/td&gt;
      &lt;td&gt;(https://github.com/swisscom/ruby-netsnmp/pull/39), as I’d like to do some experimentation at home using SNMP, and the lack of MIB support is blocking me. This was the main unfinished business I left before leaving the company, so someone there will be happy to see this one sorted out soon.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;That’s it folks. Stay healthy!&lt;/p&gt;</content><author><name/></author><summary type="html">2020 has been an incredibly changing year for humanity. Being thrown head-on into a pandemic no one was prepared to deal with, we were forced to clumsily speed-up the transition into the digital age, being more and more dependent of digital identity, online shopping, remote work, and more gifs and memes than we could ever imagine could exist in the ether. Commuting fatigue was replaced by “notifications” fatigue. For all of its faults, the internet backbone managed to assimilate annd withstand way more activity than naysayers ever thought it was prepared for, and I can tell for a fact that I experience way less interruptions in video calls in 2020 than I used to in 2018. We were unfortunately forced to keep in touch with our loved ones at a “safety distance”, in most cases a video chat. I just hope that, whenever we’re done with this state of affairs, we can retain the good habits, while swiftly eliminating the bad.</summary></entry></feed>