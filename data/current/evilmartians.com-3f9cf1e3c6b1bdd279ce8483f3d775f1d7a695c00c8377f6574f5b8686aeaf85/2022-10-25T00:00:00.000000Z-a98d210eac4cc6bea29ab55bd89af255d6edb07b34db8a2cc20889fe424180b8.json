{
  "title":"OKLCH in CSS: why we moved from RGB and HSL",
  "date":"2022-10-25T00:00:00.000000Z",
  "author":"Andrey Sitnik",
  "id":"https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl",
  "link":"https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl",
  "content":"<article><section><strong>Authors: </strong>Andrey Sitnik, Author of PostCSS and Autoprefixer, Principal Frontend Engineer, and Travis Turner, Tech Editor</section><section><strong>Topics: </strong>Frontend, Design, OKLCH, CSS, PostCSS</section><a href=\"https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl\"><img src=\"https://evilmartians.com/static/cover-caa6f5d958eb42a7973294ef0862285b.png\" class=\"webfeedsFeaturedVisual\"></a><section><p><em>CSS Color Module 4 adds oklch(), and we gain P3 wide-gamut support, boost code readability, and improve developer-designer communication.</em></p><p></p><p>In CSS, we've been encoding colors with <code>rgb()</code> or hex (mostly for historical reasons). However, the new CSS Color 4 specification adds many better ways of declaring colors in CSS. Of these, <code>oklch()</code> is the most interesting oneâ€”this article explains why.</p><p></p></section><a href=\"https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl\">Read more</a></article>"
}