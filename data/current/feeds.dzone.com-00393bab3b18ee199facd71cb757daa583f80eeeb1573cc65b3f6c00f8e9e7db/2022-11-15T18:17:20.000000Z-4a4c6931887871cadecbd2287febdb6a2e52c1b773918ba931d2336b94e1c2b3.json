{
  "title":"The SQL Review Tool for Developers",
  "date":"2022-11-15T18:17:20.000000Z",
  "author":null,
  "id":"http://dzone.com/articles/3283012",
  "link":"http://dzone.com/articles/the-sql-review-tool-for-developers",
  "content":"<p>Treat SQL as code (&quot;<a href=\"https://blog.devgenius.io/why-google-treats-sql-like-code-and-you-should-too-53f97925037e\" rel=\"nofollow noopener noreferrer\">Why</a>?&quot; you may ask), which means all the reasons why we review other codes need to apply to SQL scripts. They interact straight with databases, and databases are too important. No matter how database vendors promise their products are stable and robust, databases are still pretty fragile. Even if we disregard the accidental &quot;DROP TABLE&quot; fiasco, ordinary queries like &quot;SELECT FROM&quot; can also overwhelm a database and bring it down. Let’s face it: databases are delicate, yet very few users understand how to treat them properly —  meaning we should discipline the users’ behavior to some degree.</p>\n<p>Here’s where SQL review comes in. It is the practice of reviewing DDL and DML statements before applying them to the database. It is one of the most critical aspects of database schema management. In the past, DBAs were in charge of the database. They know the database best and, thus, should be the ones reviewing the SQL. This is reasonable, but there is a contradiction: developers (database users) cannot understand the many restrictions and want the most freedom. At the same time, DBAs insist that stability triumphs over everything.</p>"
}