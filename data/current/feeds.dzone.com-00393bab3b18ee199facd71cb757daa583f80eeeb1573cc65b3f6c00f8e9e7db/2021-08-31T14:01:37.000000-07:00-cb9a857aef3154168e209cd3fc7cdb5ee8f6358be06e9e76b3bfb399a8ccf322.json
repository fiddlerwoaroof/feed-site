{
  "title":"Soft Deletion in Hibernate: Things You May Miss",
  "date":"2021-08-31T14:01:37.000000-07:00",
  "author":null,
  "id":"https://dzone.com/articles/3162152",
  "link":"https://dzone.com/articles/soft-deletion-in-hibernate-things-you-may-miss",
  "content":"<main> \n <div> \n  <p>Soft Deletion is a commonly used pattern in enterprise applications. Hibernate is a widely used persistence framework in the Java ecosystem. Therefore, it is not surprising that Hibernate provides a way to implement soft deletion. However, this approach has some awkward aspects, which are not highlighted by the docs and articles on that matter. In this article, we will dive into some details that you may miss.</p> \n  <h3>@SQLDelete + @Where</h3> \n  <p>If you Google 'soft deletion hibernate,' youâ€™ll most likely find tutorials by <a href=\"https://www.baeldung.com/spring-jpa-soft-delete\" rel=\"noopener noreferrer\">Eugen Paraschiv</a>, <a href=\"https://vladmihalcea.com/the-best-way-to-soft-delete-with-hibernate/\" rel=\"noopener noreferrer\">Vlad Mihalcea</a>, or <a href=\"https://thorben-janssen.com/implement-soft-delete-hibernate/\" rel=\"noopener noreferrer\">Thorben Janssen</a>. They suggest using Hibernate <code>@SQLDelete</code> and <code>@Where</code> annotations which let you automatically set the <code>deleted</code> flag and filter by it:</p></div></main>"
}