<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>DEV Community üë©‚Äçüíªüë®‚Äçüíª: Truemark Technology</title>
    <description>The latest articles on DEV Community üë©‚Äçüíªüë®‚Äçüíª by Truemark Technology (@truemark).</description>
    <link>https://dev.to/truemark</link>
    <image>
      <url>https://res.cloudinary.com/practicaldev/image/fetch/s--q7mhDYve--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2278/16c0058d-be3a-4902-bca7-22cc8e285091.png</url>
      <title>DEV Community üë©‚Äçüíªüë®‚Äçüíª: Truemark Technology</title>
      <link>https://dev.to/truemark</link>
    </image>
    <atom:link rel="self" type="application/rss+xml" href="https://dev.to/feed/truemark"/>
    <language>en</language>
    <item>
      <title>[Solved] Error while Installing mysql2 Gem in M1 Mac</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Mon, 19 Sep 2022 15:21:53 +0000</pubDate>
      <link>https://dev.to/truemark/solved-error-while-installing-mysql2-gem-in-m1-mac-1mab</link>
      <guid>https://dev.to/truemark/solved-error-while-installing-mysql2-gem-in-m1-mac-1mab</guid>
      <description>&lt;p&gt;In Ruby on Rails applications with mysql2 gem, mysql2 gem always threw error when trying in the new M1 Mac. The error always said &quot;ld: library not found for -lzstd&quot; and &quot;make failed&quot;.&lt;/p&gt;

&lt;p&gt;Let's resolve this issue today!&lt;/p&gt;

&lt;h2&gt;
  
  
  Assumptions
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;You are using rbenv for ruby&lt;/li&gt;
&lt;li&gt;You are using homebrew&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Error Message
&lt;/h2&gt;

&lt;p&gt;Whenever I did bundle install inside the project, I got the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;linking shared-object mysql2/mysql2.bundle
ld: library not found for -lzstd
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [mysql2.bundle] Error 1

make failed, exit code 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Solution
&lt;/h2&gt;

&lt;p&gt;To resolve the issue, you will have to provide the location for mysql installation in homebrew and install the mysql2 gem separately.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find out the version of mysql installed in your machine&lt;/p&gt;

&lt;p&gt;Run the following command in the command line:&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;$ mysql --version
mysql  Ver 8.0.27 for macos12.5 on arm64 (Homebrew)
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Note the mysql version; here 8.0.27 and move to next step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install mysql2 gem separately&lt;/p&gt;

&lt;p&gt;To resolve the make error we will have to install mysql2 gem separately. To do that run the following command by changing the mysql version you got in previous step.&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;rbenv exec gem install mysql2 -- \
--with-mysql-lib=/opt/homebrew/Cellar/mysql/8.0.27/lib \
--with-mysql-dir=/opt/homebrew/Cellar/mysql/8.0.27 \
--with-mysql-config=/opt/homebrew/Cellar/mysql/8.0.27/bin/mysql_config \
--with-mysql-include=/opt/homebrew/Cellar/mysql/8.0.27/include 
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &quot;bundle install&quot; from your project root&lt;/p&gt;

&lt;p&gt;Move to the project root and run &lt;code&gt;bundle install&lt;/code&gt; in the command line.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Still getting the same error?
&lt;/h2&gt;

&lt;p&gt;If you are still getting error, you need to also hit the command given below.&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  # check zstd version
  $ ls /opt/homebrew/Cellar/zstd
  1.5.0

  $ bundle config --local build.mysql2 \
    &quot;--with-ldflags=-L/opt/homebrew/Cellar/zstd/1.5.0/lib&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;bundle install&lt;/code&gt; again from inside the project root and the error should now go away.&lt;/p&gt;

&lt;h2&gt;
  
  
  Downside
&lt;/h2&gt;

&lt;p&gt;The downside of this solution is we have to run this command every time the mysql version is updated using homebrew.&lt;/p&gt;

&lt;p&gt;So for example if your mysql version changes from 8.0.27 to 8.0.30 then you will again get this error. And in that case you will have to install the mysql2 gem separately again by using the steps above.&lt;/p&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you have any other solutions for this problem, do let us know in the comment section below.&lt;/p&gt;

&lt;p&gt;Thank you for reading. Happy coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;[Stack Overflow] &lt;a href=&quot;https://stackoverflow.com/a/70053102/9359123&quot; rel=&quot;noopener&quot;&gt; An error occurred while installing mysql2 (0.4.8), and Bundler cannot continue&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;[Github] &lt;a href=&quot;https://github.com/brianmario/mysql2/issues/1175#issuecomment-846496862&quot; rel=&quot;noopener&quot;&gt;bundle install fails with Gem::Ext::BuildError&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@rubaitulazad?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Rubaitul Azad&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/mysql?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Setup Action Mailbox with SendGrid</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Sun, 22 May 2022 15:55:32 +0000</pubDate>
      <link>https://dev.to/truemark/setup-action-mailbox-with-sendgrid-490k</link>
      <guid>https://dev.to/truemark/setup-action-mailbox-with-sendgrid-490k</guid>
      <description>&lt;p&gt;Rails 6 released with many awesome features and action mailbox was one of them that has come to make the life easier. &lt;a href=&quot;https://guides.rubyonrails.org/action_mailbox_basics.html#introduction&quot;&gt;From Official Action Mailbox Guide:&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Action Mailbox routes incoming emails to controller-like mailboxes for processing in Rails. It ships with ingresses for Mailgun, Mandrill, Postmark, and SendGrid. You can also handle inbound mails directly via the built-in Exim, Postfix, and Qmail ingresses.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Basically, Action Mailbox can be used to forward all incoming emails to your Rails app and process it further as required like storing attachments, creating records from the email body in you database and many more.&lt;/p&gt;

&lt;p&gt;And today, we will be implementing Action Mailbox with &lt;a href=&quot;https://sendgrid.com/&quot;&gt;SendGrid&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  
  
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Setup Action Mailbox with SendGrid using the official Rails documentation&lt;/li&gt;
&lt;li&gt;Update DNS records to forward emails received in the mailbox towards our Rails app&lt;/li&gt;
&lt;li&gt;Test integration in development with built in UI provided by Rails&lt;/li&gt;
&lt;li&gt;Test integration in development with NGROK to ensure seamless production release&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Tested and working in
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ruby 3.0.0&lt;/li&gt;
&lt;li&gt;Rails 7.0.2.4&lt;/li&gt;
&lt;li&gt;Action Mailbox 7.0.2.4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  You should have
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Existing app built with Rails 7 or higher&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's start integrating Action Mailbox with SendGrid in our Rails app now.&lt;/p&gt;

&lt;h2&gt;
  
  
  Step 1: Setup action mailbox
&lt;/h2&gt;

&lt;p&gt;We will be following instructions from the &lt;a href=&quot;https://guides.rubyonrails.org/action_mailbox_basics.html#sendgrid&quot;&gt;Official Rails Guide for Action Mailbox&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install migrations needed for InboundEmail and ensure Active Storage is set up:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails action_mailbox:install
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Step 2: Add Ingress Configurations
&lt;/h2&gt;

&lt;p&gt;Tell Action Mailbox to accept emails from SendGrid by adding the following to both &quot;development.rb&quot; and &quot;production.rb&quot;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/environments/development.rb &amp;amp; config/environments/production.rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;action_mailbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ingress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:sendgrid&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Step 3: Generate Password for authenticating requests
&lt;/h2&gt;

&lt;p&gt;First of all, we should generate a strong password that Action Mailbox can use to authenticate requests to the SendGrid ingress.&lt;/p&gt;

&lt;p&gt;You can add any strong password or let Rails generate it for you. You can log into Rails console and generate a password for you:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;&amp;gt; rails c
irb &amp;gt; SecureRandom.alphanumeric
# =&amp;gt; &quot;Kk9YGvzdPN69bfiu&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that you can use &lt;code&gt;rails credentials:edit&lt;/code&gt; in the command line to add the password to your application's encrypted credentials under &lt;code&gt;action_mailbox.ingress_password&lt;/code&gt;, where Action Mailbox will automatically find it:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;ss&quot;&gt;action_mailbox:
  ingress_password: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;YOUR_STRONG_PASSWORD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are using &lt;strong&gt;nano&lt;/strong&gt; editor you can edit credentials with following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nv&quot;&gt;$ EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nano&quot;&lt;/span&gt; rails credentials:edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alternatively, you can also provide the password in the &lt;code&gt;RAILS_INBOUND_EMAIL_PASSWORD&lt;/code&gt; environment variable.&lt;/p&gt;

&lt;p&gt;If you are using &lt;code&gt;figaro&lt;/code&gt; gem you can add the following to your &quot;config/application.yml&quot;:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight yaml&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/application.yml&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;RAILS_INBOUND_EMAIL_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;YOUR_STRONG_PASSWORD'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Step 4: Setup a Mailbox
&lt;/h2&gt;

&lt;p&gt;Now we should setup a mailbox that will process all incoming emails through our Rails app.&lt;/p&gt;

&lt;p&gt;You can generate a new mailbox with:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bin/rails generate mailbox forwards
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create &lt;code&gt;forwards_mailbox&lt;/code&gt; inside &lt;code&gt;app/mailboxes&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/mailboxes/forwards_mailbox.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ForwardsMailbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationMailbox&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Step 5: Whitelist email domains
&lt;/h2&gt;

&lt;p&gt;We can configure our &lt;code&gt;application_mailbox&lt;/code&gt; to accept all incoming emails to our Rails app and forward it to our &lt;code&gt;forwards_mailbox&lt;/code&gt; for further processing.&lt;/p&gt;

&lt;p&gt;Action Mailbox also accepts regex to whitelist domains or match certain emails. Let's look at how we can configure all these alternatives:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Accept all incoming emails
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c1&quot;&gt;# app/mailboxes/application_mailbox.rb&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationMailbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionMailbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;routing&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:forwards&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Accept all emails from single domain
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c1&quot;&gt;# app/mailboxes/application_mailbox.rb&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationMailbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionMailbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;routing&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/.*@email-domain.com/i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:forwards&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Accept email from multiple domains
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/mailboxes/application_mailbox.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationMailbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionMailbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;routing&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/.*@primary-email-domain.com|.*@secondary-email-domain.com/i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:forwards&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This regex matching is telling application mailbox to forward all emails coming from &lt;code&gt;@email-domain.com&lt;/code&gt; to our &lt;code&gt;forwards_mailbox&lt;/code&gt;. For e.g. if we configure it to be &lt;code&gt;/.*@gmail.com/i&lt;/code&gt; and our Rails app receives email to &lt;code&gt;john-doe@gmail.com&lt;/code&gt; then it will be forwarded to our &lt;code&gt;forwards_mailbox&lt;/code&gt; where we can further process it since this email matches with the pattern &lt;code&gt;@gmail.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: Your mailbox name should match the name you've given it in the routing params i.e. &lt;code&gt;forwards&lt;/code&gt; will route to &lt;code&gt;forwards_mailbox&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  
  
  Step 6: Test in development
&lt;/h2&gt;

&lt;p&gt;Action Mailbox provides it's own set of UIs to test inbound emails in the development environment. To access this, let's fire up the Rails server first:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Visit &lt;a href=&quot;http://localhost:3000/rails/conductor/action_mailbox/inbound_emails&quot;&gt;Action Mailbox Inbound Emails Localhost URL&lt;/a&gt; and click on &lt;code&gt;New inbound email by form&lt;/code&gt;. Fill in all required details like From, To, Subject and Body. You can leave other fields blank.&lt;/p&gt;

&lt;p&gt;Before clicking on &lt;code&gt;Deliver inbound email&lt;/code&gt;, let's add &lt;code&gt;byebug&lt;/code&gt; (or any other debugging breakpoint e.g. binding.pry) to our &lt;code&gt;process&lt;/code&gt; method so we know action mailbox is actually forwarding our emails to the right place.&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/mailboxes/forwards_mailbox.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ForwardsMailbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationMailbox&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byebug&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should make sure that email in &lt;strong&gt;From&lt;/strong&gt; input box matches the email domain configured. Now when you click &lt;code&gt;Deliver inbound email&lt;/code&gt;, the execution of the server process should stop at the &lt;code&gt;process&lt;/code&gt; method since we have a breakpoint there. This means action mailbox is correctly forwarding incoming emails and our configurations are correct. You can perform further process as required in your app now.&lt;/p&gt;

&lt;p&gt;But wait. Dang, there is an error from Rails while testing inbound emails in development!&lt;/p&gt;

&lt;p&gt;Let's dig into what is happening.&lt;/p&gt;

&lt;h3&gt;
  
  
  Issue with Inbound Action Mailbox Testing in Development
&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--Kk3bawkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntb5j628xjlfjy5cdkk7.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--Kk3bawkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntb5j628xjlfjy5cdkk7.jpeg&quot; alt=&quot;Error while testing action mailbox in development due to empty attachment&quot; width=&quot;880&quot; height=&quot;235&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Error reads: &quot;undefined method 'original_filename' for &quot;&quot;:String&quot; and &quot;NoMethodError in Rails::Conductor::ActionMailbox::InboundEmailsController#create&quot;&lt;/p&gt;

&lt;p&gt;Looking at the code in Action Mailbox of core Rails, I found out that this error is occurring because controller is trying to process the empty attachment further. But finding out why Rails was submitting empty attachment when we haven't chosen any attachment was hard. Note that, this also happens even if you choose one or multiple attachments.&lt;/p&gt;

&lt;p&gt;In params, we get this &lt;code&gt;&quot;attachments&quot;=&amp;gt;[&quot;&quot;]&lt;/code&gt; and controller is trying to process it further with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new_mail&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:attachments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bcc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include_in_headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mail_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:attachments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;filename: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;content: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we are getting error in the line &lt;code&gt;mail.add_file(filename: attachment.original_filename, content: attachment.read)&lt;/code&gt; because &quot;attachment&quot; is empty string i.e. &quot;&quot; and not an object which has properties like &quot;original_filename&quot;. Hence the error.&lt;/p&gt;

&lt;p&gt;After looking into controller, my next stop for debugging the error was to look into the view because it shouldn't have sent the empty attachment in the first place.&lt;/p&gt;

&lt;p&gt;View was just using a normal file_upload tag:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;
  &amp;lt;%= form.label :attachments, &quot;Attachments&quot; %&amp;gt;&amp;lt;br&amp;gt;
  &amp;lt;%= form.file_field :attachments, multiple: true %&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There couldn't be any issue here, so I looked into the rendered HTML in the webpage and found out that there was a hidden tag for attachment:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight html&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mail[attachments][]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autocomplete=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;off&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;multiple=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;multiple&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;file&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mail[attachments][]&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mail_attachments&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence, the form is submitting empty attachment to the controller.&lt;/p&gt;

&lt;p&gt;This problem could be solved in controller by filtering out attachments that are empty and I was near to submitting a PR to Rails. But then I thought, if I am getting this issue, there are obviously other developers who have been into this since this is an issue in Rails core and not in the code I have written.&lt;/p&gt;

&lt;p&gt;Searching further, I found this issue titled &lt;a href=&quot;https://github.com/rails/rails/issues/43928&quot;&gt;Action Mailbox Conductor throws NoMethodError when creating inbound email&lt;/a&gt; submitted to Rails Core Github.&lt;/p&gt;

&lt;p&gt;And if there is an issue, there must also be a PR. YES, there was one already titled &lt;a href=&quot;https://github.com/rails/rails/pull/44008&quot;&gt;Cannot deliver new inbound email via form&lt;/a&gt; but it hadn't been merged yet. &lt;/p&gt;

&lt;p&gt;But for this tutorial and until PR is merged, we need this to work in our app. So, I was looking into how I can resolve it the best and searching for the solution that would work for all of us and not just me.&lt;/p&gt;

&lt;p&gt;Scrolling further into the issue, I found a monkey patching very suitable for our use case.&lt;/p&gt;

&lt;h3&gt;
  
  
  Monkey Patching the issue
&lt;/h3&gt;

&lt;p&gt;Add the following to your &lt;code&gt;config/application.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# monkey patching to resolve the issue of action mailbox inbound email sending empty attachment&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_prepare&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Conductor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ActionMailbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;InboundEmailsController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class_eval&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new_mail&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:attachments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bcc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include_in_headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mail_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:attachments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compact_blank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;mail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;filename: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;content: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to restart the server and reload the page. After that you can submit the form again.&lt;/p&gt;

&lt;p&gt;Voil√†!! It works ü•≥. &lt;/p&gt;

&lt;p&gt;Now, your server should have stuck in the debugging breakpoint.&lt;/p&gt;

&lt;p&gt;That's it, we have now successfully setup action mailbox and tested in development.&lt;/p&gt;

&lt;p&gt;Now let's test using NGROK so we know that our configuration will work seamlessly (pretty much) in our production environment.&lt;/p&gt;

&lt;h2&gt;
  
  
  Step 7: Setup NGROK
&lt;/h2&gt;

&lt;p&gt;Let's setup NGROK in our local machine:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the application&lt;/p&gt;

&lt;p&gt;You can download the application from this &lt;a href=&quot;https://ngrok.com/download&quot;&gt;download link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are on MacOS, I highly suggest downloading NGROK using homebrew with the command &lt;code&gt;brew install ngrok/ngrok/ngrok&lt;/code&gt;. It's easier than manual download and also don't normally give off any issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Serve your app using NGROK URL&lt;/p&gt;

&lt;p&gt;While keeping the rails server running as it is, open a new tab in your command line.&lt;/p&gt;

&lt;p&gt;You can then run the command &lt;code&gt;ngrok http 3000&lt;/code&gt;, which will give you an URL connecting your local Rails app running on port 3000 to the internet. You should look at the URL besides the &quot;Forwarding&quot; option, it will be something similar to &lt;code&gt;Forwarding https://e73a-27-34-12-7.in.ngrok.io -&amp;gt; http://localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When running the NGROK, you should see a screen similar to the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--WOxA4-B2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09zygap7kvicdnligmj9.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--WOxA4-B2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09zygap7kvicdnligmj9.jpeg&quot; alt=&quot;Screenshot of active NGROK session in command line&quot; width=&quot;880&quot; height=&quot;256&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access the Rails app with NGROK URL&lt;/p&gt;

&lt;p&gt;Open the URL you got before from NGROK e.g. &lt;code&gt;https://e73a-27-34-12-7.in.ngrok.io&lt;/code&gt; in your browser and you should be able to see the Rails welcome screen or whatever your default page for the app is.&lt;/p&gt;

&lt;p&gt;But, but, there is an error again üò≠&lt;/p&gt;

&lt;p&gt;Hah, don't worry. I have got you covered.&lt;/p&gt;

&lt;p&gt;You should be seeing the Error UI similar to what is in the screenshot below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--SuoK-WRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zahc5yalb7rlwg5xmd9h.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--SuoK-WRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zahc5yalb7rlwg5xmd9h.jpeg&quot; alt=&quot;Ngrok error page when trying to access rails app due to missing auth token&quot; width=&quot;880&quot; height=&quot;422&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This happens because of missing &quot;auth token&quot; which you can get after signing up to NGROK for free.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sign up to NGROK&lt;/p&gt;

&lt;p&gt;You can sign up to NGROK using this &lt;a href=&quot;https://dashboard.ngrok.com/signup&quot;&gt;signup link&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add NGROK auth-token to local configuration file&lt;/p&gt;

&lt;p&gt;After signing up, you are presented with a dashboard and you can copy the auth-token from setup-and-installation step number 2 called &quot;Connect you account&quot;&lt;/p&gt;

&lt;p&gt;Or you can follow this link to your &lt;a href=&quot;https://dashboard.ngrok.com/get-started/your-authtoken&quot;&gt;auth token page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Copy the token given and run the following in your command line:&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;$ ngrok config add-authtoken &amp;lt;your-authtoken&amp;gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Now restart your NGROK server and go to the new URL provided. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: URL changes each time you restart the NGROK server unless you use pro version and pay for the static URL.&lt;/p&gt;

&lt;p&gt;What, Error? Again!!! ü§ï&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resolving blocked host in Rails app&lt;/p&gt;

&lt;p&gt;After accessing the NGROK URL, you should see an error page similar to the one below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--bV1sw3aW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1m39gu9f1xuz9t7l4awh.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--bV1sw3aW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1m39gu9f1xuz9t7l4awh.jpeg&quot; alt=&quot;Blocked host error in Rails&quot; width=&quot;880&quot; height=&quot;115&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is because Rails blocks https access in development and unauthorized URLs overall.&lt;/p&gt;

&lt;p&gt;Let's add the NGROK URL to &quot;config/environments/development.rb&quot;&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/environments/development.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;add-your-ngrok-url&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Restart the rails server and reload the page in the browser. Now, you should be able to see the default page of your Rails app. This is what I see in mine since it's a new application just for this blog:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--VpZX5Dut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w23wefyup96y3v1u336o.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--VpZX5Dut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w23wefyup96y3v1u336o.jpeg&quot; alt=&quot;Welcome page in Rails&quot; width=&quot;880&quot; height=&quot;426&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Authorize all NGROK URLs in development&lt;/p&gt;

&lt;p&gt;Above, we only allowed current URL provided by NGROK and as I have already said this URL changes each time we restart the server.&lt;/p&gt;

&lt;p&gt;Changing it every time we restart the server is a hassle so we will add regex which will allow matching NGROK URLs to connect to our Rails app in development.&lt;/p&gt;

&lt;p&gt;Let's replace previous configuration with the following:&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/.+\.ngrok\.io/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Now, if you restart the rails server you should still be able to access the default page in your app. Also, try with restarting the NGROK server and accessing the page again which you should still be able to without getting blocked host error.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Step 8: Authenticate domain in SendGrid
&lt;/h2&gt;

&lt;p&gt;You can follow the &lt;a href=&quot;https://www.twilio.com/blog/how-to-set-up-domain-authentication-for-twilio-sendgrid&quot;&gt; official SendGrid tutorial&lt;/a&gt; to authenticate your domain in SendGrid.&lt;/p&gt;

&lt;p&gt;Part of the tutorial also goes through setting up MX records which we will go into detail here.&lt;/p&gt;

&lt;p&gt;You can authenticate your domain by following this link to the &lt;a href=&quot;https://app.sendgrid.com/settings/sender_auth/domain/create&quot;&gt;Domain Authentication page&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;You will receive list of CNAME and Values similar to what is listed below in the process where &lt;code&gt;prabinpoudel.com.np&lt;/code&gt; and &lt;code&gt;em1181&lt;/code&gt; will be different:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;em1181.prabinpoudel.com.np&lt;/li&gt;
&lt;li&gt;s1._domainkey.prabinpoudel.com.np&lt;/li&gt;
&lt;li&gt;s2._domainkey.prabinpoudel.com.np&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will come back to this page after next step again so don't close the page yet.&lt;/p&gt;

&lt;p&gt;Let's go to our DNS provider's dashboard and configure these records first.&lt;/p&gt;

&lt;h3&gt;
  
  
  Setup DNS Records
&lt;/h3&gt;

&lt;p&gt;We need to add DNS records from SendGrid to our DNS provider so our email is actually being processed by SendGrid and routed to our Rails app with Inbound Parse Hook.&lt;/p&gt;

&lt;p&gt;I use &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;CloudFlare&lt;/a&gt;, so I will be showing you process to setup MX record using the settings from CloudFlare as an example.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to DNS tab from the left menu&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--d-2MRVbj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4blxudrrgry3elrbg34.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--d-2MRVbj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4blxudrrgry3elrbg34.jpeg&quot; alt='Side Menu with menu item &quot;DNS&quot; active in Cloudflare' width=&quot;880&quot; height=&quot;553&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &quot;Add Record&quot; and choose MX from the dropdown then add the following values to each field&lt;/p&gt;

&lt;p&gt;a. Name: &quot;@&quot;&lt;br&gt;
b. Mail Server: &quot;mx.sendgrid.net&quot;&lt;br&gt;
c. TTL: &quot;auto&quot;&lt;br&gt;
d. Priority: &quot;10&quot;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--zt7BOMU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3cgd78jc9cbm4nctvdx5.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--zt7BOMU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3cgd78jc9cbm4nctvdx5.jpeg&quot; alt=&quot;Adding MX Record from SendGrid to Cloudflare&quot; width=&quot;880&quot; height=&quot;292&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find the instruction for adding MX record in the tutorial to &lt;a href=&quot;https://docs.sendgrid.com/for-developers/parsing-email/setting-up-the-inbound-parse-webhook#set-up-an-mx-record&quot;&gt;setup Inbound Parse Hook&lt;/a&gt; from SendGrid.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &quot;Add Record&quot; again and add all three CNAME records we got previously while authenticating the domain one by one&lt;/p&gt;

&lt;p&gt;Copy values from authenticating the domain page add them to CloudFlare:&lt;/p&gt;

&lt;p&gt;a. Type: CNAME&lt;br&gt;
b. Name: value from CNAME&lt;br&gt;
c. Target: value from VALUE&lt;br&gt;
d. Proxy Status: Turn the toggle button off (it will be on by default)&lt;br&gt;
e. TTL: Auto&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--R9JtKAkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6juj7jrkroj18a04fqo.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--R9JtKAkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6juj7jrkroj18a04fqo.jpeg&quot; alt=&quot;Adding CNAME Records from SendGrid to Cloudflare&quot; width=&quot;880&quot; height=&quot;328&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go back to domain authentication page and click on &quot;I've added these records&quot; and click on &quot;Verify&quot; button&lt;/p&gt;

&lt;p&gt;If everything was copied over correctly, you will see a page with the information &quot;It worked! Your authenticated domain for prabinpoudel.com.np was verified.&quot;&lt;/p&gt;

&lt;p&gt;Else you will get errors and you will have to fix those before moving forward.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Step 9: Configure Inbound Parse in SendGrid
&lt;/h2&gt;

&lt;p&gt;We will be following the &lt;a href=&quot;https://docs.sendgrid.com/for-developers/parsing-email/setting-up-the-inbound-parse-webhook&quot;&gt;official SendGrid doc&lt;/a&gt; for configuring inbound parse hook to forward inbound emails to &lt;code&gt;/rails/action_mailbox/sendgrid/inbound_emails&lt;/code&gt; with the username &quot;actionmailbox&quot; and the password we generated just before this.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;From your SendGrid Dashboard click Settings, and then click Inbound Parse. You are now on the Inbound Parse page. Or you can click on this &lt;a href=&quot;https://app.sendgrid.com/settings/parse&quot;&gt;Inbound Parse Link&lt;/a&gt; to go there directly.&lt;/li&gt;
&lt;li&gt;Click &quot;Add Host &amp;amp; URL&quot;&lt;/li&gt;
&lt;li&gt;You can add/leave the subdomain part as required. I have left it blank because I don't have any subdomain just for receiving emails&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Under &quot;Domain&quot;, choose your domain name that you just verified&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under the URL we will have to construct one and add it&lt;/p&gt;

&lt;p&gt;The format for the URL should be: &lt;code&gt;https://actionmailbox:&amp;lt;your_action_mailbox_ingress_password&amp;gt;@&amp;lt;rails_app_nginx_url&amp;gt;/rails/action_mailbox/sendgrid/inbound_emails&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For e.g. it will be &lt;code&gt;https://actionmailbox:my_strong_password@5829-2400-1a00-b050-3fb6-b0ce-5946-b9be.in.ngrok.io/rails/action_mailbox/sendgrid/inbound_emails&lt;/code&gt; for my Rails app.&lt;/p&gt;

&lt;p&gt;In production it can be a different URL so you should replace &lt;code&gt;rails_app_nginx_url&lt;/code&gt; with the URL from where your Rails application is accessible to the internet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--tT_pMKTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcl428ri2bonbwttjf5y.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--tT_pMKTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcl428ri2bonbwttjf5y.jpeg&quot; alt=&quot;Configure Inbound Parse Hook Page in SendGrid&quot; width=&quot;880&quot; height=&quot;756&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check &quot;POST the raw, full MIME message&quot; and click on Add&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now we are ready to test our integration with live email using SendGrid and Ngrok.&lt;/p&gt;

&lt;h2&gt;
  
  
  Step 10: Test if MX records are recognized by the internet
&lt;/h2&gt;

&lt;p&gt;Before we test our integration with live email, we need to make sure that MX records are recognized by the Internet.&lt;/p&gt;

&lt;p&gt;It may take some time for DNS records to be recognized throughout the world so email forwarding may yet not work for you. The maximum time period until this happens is 24 hours.&lt;/p&gt;

&lt;p&gt;You can test if DNS records for your domain is working correctly and recognized from the website &lt;a href=&quot;https://mxtoolbox.com/SuperTool.aspx&quot;&gt;MX Toolbox&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add your domain name e.g. prabinpoudel.com.np&lt;/li&gt;
&lt;li&gt;Click on &quot;MX Lookup&quot;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should see &quot;DNS Record Published&quot; status in the test result table&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--KjqImDfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxf5imz7idckmqrffg01.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--KjqImDfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxf5imz7idckmqrffg01.jpeg&quot; alt=&quot;Test result for MX records in the website of MX Toolbox&quot; width=&quot;880&quot; height=&quot;475&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  Step 11: Test incoming email with SendGrid and NGROK
&lt;/h2&gt;

&lt;p&gt;Finally, we are now at the last step. We will now send email to our mail server and we should receive it in our local Rails app and server should stop in our debugging breakpoint.&lt;/p&gt;

&lt;p&gt;From your favorite email provider e.g. Gmail, send a test email to your domain e.g. for me I will test it via &lt;a href=&quot;mailto:sendgrid-test@prabinpoudel.com.np&quot;&gt;sendgrid-test@prabinpoudel.com.np&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;It takes some time to process the email by SendGrid and receive in our Rails app, maximum ~1 minute.&lt;/p&gt;

&lt;p&gt;You can check if the email is being received by SendGrid or not from &lt;a href=&quot;https://app.sendgrid.com/statistics/parse_webhook&quot;&gt;Parse Webhook Statistics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--YonN3eaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgsz3sugwigimiyx7ks8.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--YonN3eaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgsz3sugwigimiyx7ks8.jpeg&quot; alt=&quot;Statistics of incoming emails received by SendGrid from the internet and forwarded to Rails App URL as per the configuration&quot; width=&quot;880&quot; height=&quot;426&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tada!! üéâ&lt;/p&gt;

&lt;p&gt;You should have received the email and rails server must have stopped in the debugging breakpoint.&lt;/p&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Congratulations!!! You have come a long way and gone through a lot of process to integrate Action Mailbox with SendGrid.&lt;/p&gt;

&lt;p&gt;You can find a working app for this blog at &lt;a href=&quot;https://github.com/coolprobn/action-mailbox-with-sendgrid-test&quot;&gt;Action Mailbox with SendGrid&lt;/a&gt;. You can view all changes I made for configuring SendGrid with Action Mailbox in the PR: &lt;a href=&quot;https://github.com/coolprobn/action-mailbox-with-sendgrid-test/pull/1&quot;&gt;Setting up Action Mailbox with SendGrid&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, you can deploy the app to staging or production and add new Inbound Parse URL in SendGrid to point to the URL of those applications.&lt;/p&gt;

&lt;p&gt;If you have any confusions, suggestions or issues while implementing any steps in this email, please let me know in comment section below and I will do my best to help you.&lt;/p&gt;

&lt;p&gt;Thanks for reading. Happy coding and tinkering!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/action_mailbox_basics.html&quot;&gt;Action Mailbox (Official Documentation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;https://dev.to/rob__race/using-action-mailbox-in-rails-6-to-receive-mail-2nje&quot;&gt;Using Action Mailbox in Rails 6 to Receive Mail&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails/issues/43928&quot;&gt;Action Mailbox Conductor throws NoMethodError when creating inbound email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rails/rails/pull/44008&quot;&gt;Cannot deliver new inbound email via form #44008&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.sendgrid.com/for-developers/parsing-email/setting-up-the-inbound-parse-webhook&quot;&gt;Setting Up The Inbound Parse Webhook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.twilio.com/blog/how-to-set-up-domain-authentication-for-twilio-sendgrid&quot;&gt;How to set up domain authentication for Twilio SendGrid&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Image Credits:&lt;/strong&gt; Cover Image by &lt;a href=&quot;https://unsplash.com/@ecees?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;erica steeves&lt;/a&gt; from &lt;a href=&quot;https://unsplash.com/s/photos/mail?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Run ESLint on git commit with Husky and Lint-Staged in ReactJS</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Wed, 20 Apr 2022 01:50:41 +0000</pubDate>
      <link>https://dev.to/truemark/run-eslint-on-git-commit-with-husky-and-lint-staged-in-reactjs-4oeb</link>
      <guid>https://dev.to/truemark/run-eslint-on-git-commit-with-husky-and-lint-staged-in-reactjs-4oeb</guid>
      <description>&lt;p&gt;How do you make sure that ESLint rules configured in your project are followed by all your team members and code with issues are not pushed to remote Git repository?&lt;/p&gt;

&lt;p&gt;Answer to the question is; using &lt;a href=&quot;https://github.com/typicode/husky&quot; rel=&quot;noopener&quot;&gt;Husky package&lt;/a&gt; with git hooks. &lt;a href=&quot;https://www.atlassian.com/git/tutorials/git-hooks&quot; rel=&quot;noopener&quot;&gt;Git hooks&lt;/a&gt; are one of the most popular way to trigger and enforce different side effects like ESLint rules. Husky depends on git hooks to trigger ESLint rules and make sure that all issues are resolved before you or anyone on your team can commit and push new changes to Git.&lt;/p&gt;

&lt;h2&gt;
  
  
  Assumptions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You have basic knowledge of ReactJS &lt;/li&gt;
&lt;li&gt;You have worked with ESLint previously and have required configuration file for ESLint in your project&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  What are Git Hooks?
&lt;/h2&gt;

&lt;p&gt;Git hooks are a set of scripts that Git executes before or after events such as: commit, push, and receive. Git hooks are a built-in feature - you don't need to download anything for them to work.&lt;/p&gt;

&lt;p&gt;When you initialize git in your project with &lt;code&gt;git init&lt;/code&gt;, git hooks are also automatically added. You can find sample files for each event under the folder &lt;code&gt;your_project_path/.git/hooks&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To view list of sample files for various types of hooks, you can hit the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  $ ls your_project_path/.git/hooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At &lt;a href=&quot;https://truemark.com.np&quot; rel=&quot;noopener&quot;&gt;Truemark&lt;/a&gt;, we normally use it to enforce coding standards and code quality by running ESLint before &quot;git commit&quot;.&lt;/p&gt;

&lt;h2&gt;
  
  
  What is Husky?
&lt;/h2&gt;

&lt;p&gt;One important thing to note for Git Hooks is, it is not version controlled, meaning whatever you add to hooks folder is only in your machine and not configured in the GIT. &lt;/p&gt;

&lt;p&gt;So, what happens when new member in your team clones the repository? &lt;br&gt;
Nothing, they will get sample files like I mentioned above.&lt;/p&gt;

&lt;p&gt;What?&lt;/p&gt;

&lt;p&gt;Then &quot;How do we as a team make sure that hooks are executed for everyone?&quot;&lt;/p&gt;

&lt;p&gt;The answer to that is &lt;strong&gt;husky&lt;/strong&gt; package.&lt;/p&gt;

&lt;p&gt;Husky package helps you and your team to manage and configure Git hooks in your projects. &lt;/p&gt;

&lt;p&gt;With &quot;husky&quot; installed in your project; after you clone the repo, you just have to hit the command &lt;code&gt;npm run prepare&lt;/code&gt; and all hooks are configured by husky in your machine.&lt;/p&gt;

&lt;p&gt;Husky makes git hooks much more manageable because you don't have to write scripts for hooks manually. You can just add the command you want to run e.g. run ESLint before commit inside the configuration file provided by Husky and everything else will be taken care by the package.&lt;/p&gt;
&lt;h2&gt;
  
  
  Install Husky
&lt;/h2&gt;

&lt;p&gt;Execute the following in the command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  npm install husky -D
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add the husky package to your package.json under &quot;devDependencies&quot;:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight json&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;husky&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^7.0.4&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Enable Git Hooks in your Project with Husky
&lt;/h2&gt;

&lt;p&gt;You can enable git hooks in your project by running the command provided by husky package. In your project root path run following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  npm set-script prepare &quot;husky install&quot;
  npm run prepare
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running above commands, you should see the following inside package.json:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight json&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prepare&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;husky install&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will also add required hooks in your project inside the folder &lt;code&gt;.git/hooks/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It will also add configuration files for Husky under the folder &lt;code&gt;.husky&lt;/code&gt; inside your project root. This file is used to control all git hooks configured in your project, and this is also where you will be adding configurations for running ESLint before commit.&lt;/p&gt;

&lt;h2&gt;
  
  
  Enable ESLint as Pre-Commit Hook with Husky
&lt;/h2&gt;

&lt;p&gt;Update scripts under package.json and add the script to run ESLint:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight json&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint .&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add a pre-commit hook to run eslint with husky by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  npx husky add .husky/pre-commit &quot;npm run lint&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see the following code inside &lt;code&gt;.husky/pre-commit&lt;/code&gt; file now:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/_/husky.sh&quot;&lt;/span&gt;

  npm run lint
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Run ESLint on git commit
&lt;/h2&gt;

&lt;p&gt;After you are done making changes to your code, try committing your code:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  git add .
  git commit -m &quot;your commit message&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Git hooks will run ESLint before commit and throw errors if any. If it didn't throw any error, add new code with issues manually and see the hook in action üôà&lt;/p&gt;

&lt;p&gt;This is something similar to what you will see in case there are issues in your code:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--VK_8TPhk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nv4pqv8isqoubilg4rt.jpeg&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--VK_8TPhk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nv4pqv8isqoubilg4rt.jpeg&quot; alt=&quot;Overcommit posts RuboCop errors for code with issues&quot; width=&quot;880&quot; height=&quot;562&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there are no errors then your code will be committed to git and you can push to the remote repository.&lt;/p&gt;

&lt;h2&gt;
  
  
  What is lint-staged?
&lt;/h2&gt;

&lt;p&gt;With Husky, ESLint is run on each and every file inside the project and if you ask me if that is a good idea; I will tell you that it's a very bad idea.&lt;/p&gt;

&lt;p&gt;Why? Because running ESLint on code that was not changed as part of the feature can lead to various unforeseen bugs.&lt;/p&gt;

&lt;p&gt;For big projects it can take a lot of time to run eslint on each and every file inside the project. Also in old projects, it doesn't make sense to sit and fix all best practice issues instead of shipping new features.&lt;/p&gt;

&lt;p&gt;So, how do we run ESLint only on the code that we changed?&lt;/p&gt;

&lt;p&gt;The answer is &lt;a href=&quot;https://github.com/okonet/lint-staged&quot; rel=&quot;noopener&quot;&gt;lint-staged&lt;/a&gt;. It is a package that helps in running pre-commit hooks only on files that have been changed in current commit.&lt;/p&gt;

&lt;h2&gt;
  
  
  Install lint-staged
&lt;/h2&gt;

&lt;p&gt;Run the following command to install lint-staged in the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  npm install lint-staged --save-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see the following in your package.json:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight json&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^12.3.8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Run ESLint on &quot;git commit&quot; with Husky and lint-staged
&lt;/h2&gt;

&lt;p&gt;You can configure lint-staged in separate file or inside package.json itself, since there is only one command I felt that it was not worth it to have a separate file for the configuration.&lt;/p&gt;

&lt;p&gt;You can view all supported options &lt;a href=&quot;https://github.com/okonet/lint-staged#configuration&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Add following to package.json just below scripts:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight json&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;react-scripts build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;react-scripts eject&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lint-staged&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;*.{js,jsx}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eslint --fix&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have added {js,jsx} so that staged files with only these extension are run through lint. You can update this to support other extensions like ts, tsx for typescript.&lt;/p&gt;

&lt;p&gt;Update pre-commit file to run lint-staged and remove other commands, your file should look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/_/husky.sh&quot;&lt;/span&gt;

  npx lint-staged
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will run lint-staged script which will show ESLint issues only on staged files.&lt;/p&gt;

&lt;p&gt;To test, you can now manually add new code with issues and see issues thrown only on changed files instead of in all files inside the project as what had happened previously before configuring lint-staged.&lt;/p&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With Husky package configured in your project, you will never have to worry about having to comment on issues in merge requests which could already have been detected by ESLint in local machine of developers. This way, you and your team can focus on having meaningful discussion in merge requests which leads to overall growth of the project and members in your team.&lt;/p&gt;

&lt;p&gt;Thanks for reading. Happy coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@wolfart32?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;WOLF Œõ R T&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/husky?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://githooks.com/&quot; rel=&quot;noopener&quot;&gt;Git Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typicode/husky&quot; rel=&quot;noopener&quot;&gt;Husky - Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/okonet/lint-staged&quot; rel=&quot;noopener&quot;&gt;Lint Staged - Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>[Solved] .rbenv/shims/ruby: Argument list too long</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Sun, 24 Oct 2021 04:09:47 +0000</pubDate>
      <link>https://dev.to/truemark/solved-rbenvshimsruby-argument-list-too-long-1i15</link>
      <guid>https://dev.to/truemark/solved-rbenvshimsruby-argument-list-too-long-1i15</guid>
      <description>&lt;p&gt;I couldn't access any ruby command in the linux server where we have hosted the Rails app for one of my client. I had to access rails console to update some database records manually but I couldn't and got stuck in this issue for over 2 days.&lt;/p&gt;

&lt;p&gt;I encountered two issues along the way:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ruby version not found&lt;/li&gt;
&lt;li&gt;.rbenv/shims/ruby: Argument list too long&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Solving the second issue solved the first issue too!&lt;/p&gt;

&lt;h2&gt;
  
  
  Problem
&lt;/h2&gt;

&lt;p&gt;Inside the root folder of the project , &lt;code&gt;ruby -v&lt;/code&gt; always returned that ruby 2.7.0 was not found and need to be installed. When I tried installing ruby 2.7.0 via rbenv, it said version already exists.&lt;/p&gt;

&lt;p&gt;I tried to execute &lt;code&gt;ruby -v&lt;/code&gt; outside of the project just to be sure that it was not a problem with ruby version. It took a really long time to process the command which returned with following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;&lt;code&gt;/home/deploy/.rbenv/libexec/rbenv-exec: line 47: /home/deploy/.rbenv/shims/ruby: Argument list too long
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Google searches didn't yield any relevant results.&lt;/p&gt;

&lt;p&gt;In the process (after searching more for around two days), I stumbled upon the rbenv issue &lt;a href=&quot;https://github.com/rbenv/rbenv/issues/759&quot; rel=&quot;noopener&quot;&gt;rbenv: cannot rehash&lt;/a&gt;. I had never imagined these issues to be related at all. I executed the command to rehash the rbenv to see if it executes successfully instead of throwing the error mentioned in the Github issue.&lt;/p&gt;

&lt;p&gt;Boom! same issue; rbenv could not be rehashed.&lt;/p&gt;

&lt;p&gt;Solution as mentioned in the replies was to delete the file &quot;.rbenv-shim&quot;, and rehash rbenv again. It worked!&lt;/p&gt;

&lt;h2&gt;
  
  
  Solution
&lt;/h2&gt;

&lt;p&gt;Execute the command &lt;code&gt;rbenv rehash&lt;/code&gt;. It will return the location of the file you have to delete:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight shell&quot;&gt;&lt;code&gt;rbenv: cannot rehash: /home/deploy/.rbenv/shims/.rbenv-shim exists
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &quot;/home/deploy/.rbenv/shims/.rbenv-shim&quot; is the location of the file in my machine and it could be different in your local machine.&lt;/p&gt;

&lt;p&gt;Remove the file to resolve the issue:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rm /home/deploy/.rbenv/shims/.rbenv-shim&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now when you run the command &lt;code&gt;ruby -v&lt;/code&gt; it will return the version of ruby currently installed in your machine.&lt;/p&gt;

&lt;h2&gt;
  
  
  Reason behind the issue
&lt;/h2&gt;

&lt;p&gt;It happens when previous rehash of the rbenv was killed prematurely.&lt;/p&gt;

&lt;p&gt;Quoting from &lt;a href=&quot;https://github.com/rbenv/rbenv/issues/759#issuecomment-124748535&quot; rel=&quot;noopener&quot;&gt;reply to the Github Issue&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;During the rehash process, rbenv writes out the temporary file .rbenv-shim to indicate that the rehash is in progress. Then, if a parallel rbenv rehash process tries to run at the same time, it will fail because the file already exists. This guards against race conditions in parallel rehashes.&lt;/p&gt;

&lt;p&gt;It seems like .rbenv-shim file was never cleaned up after a rehash that ran earlier. That earlier process might have been killed prematurely and never cleaned up after itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I am not sure if solution to the issue &lt;code&gt;.rbenv/shims/ruby: Argument list too long&lt;/code&gt; is always to delete the &quot;.rbenv-shim&quot; file but hey, it's worth a try.&lt;/p&gt;

&lt;p&gt;If the solution to your problem was different than this, please let us know below in the replies and I will be sure to include it in this blog so that it helps others.&lt;/p&gt;

&lt;p&gt;Thank you for reading. Happy coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv/issues/759&quot; rel=&quot;noopener&quot;&gt;rbenv: cannot rehash [Github]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@art_maltsev?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Artem Maltsev&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/frustration?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>Run RuboCop on git commit with Overcommit Gem</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Thu, 26 Aug 2021 12:09:08 +0000</pubDate>
      <link>https://dev.to/truemark/run-rubocop-on-git-commit-with-overcommit-gem-1mf3</link>
      <guid>https://dev.to/truemark/run-rubocop-on-git-commit-with-overcommit-gem-1mf3</guid>
      <description>&lt;p&gt;How do you make sure that RuboCop rules configured in your project are followed by all your team members and code with issues are not pushed to Git repository?&lt;/p&gt;

&lt;p&gt;Answer is using &lt;a href=&quot;https://github.com/sds/overcommit&quot; rel=&quot;noopener&quot;&gt;Overcommit gem&lt;/a&gt; with git hooks. Git hooks are one of the most popular way to trigger and enforce different side effects like RuboCop rules. Overcommit gem depends on git hooks to trigger RuboCop rules and make sure that all issues are resolved before you or anyone on your team can commit and push new changes to Git.&lt;/p&gt;

&lt;h2&gt;
  
  
  Assumptions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You have basic knowledge of Rails &lt;/li&gt;
&lt;li&gt;You have worked with RuboCop previously and have required configuration files for RuboCop in your project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Shameless Plug&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;If you are new to RuboCop, you can read about it with setup instructions in my another article - &lt;a href=&quot;https://prabinpoudel.com.np/articles/beginners-guide-to-rubocop-in-rails/&quot; rel=&quot;noopener&quot;&gt;Beginner's Guide to RuboCop in Rails&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  In this blog
&lt;/h2&gt;

&lt;p&gt;You will be learning the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are git hooks?&lt;/li&gt;
&lt;li&gt;Why use git hooks?&lt;/li&gt;
&lt;li&gt;What is overcommit gem?&lt;/li&gt;
&lt;li&gt;Install overcommit gem&lt;/li&gt;
&lt;li&gt;Enable git hooks in your project with overcommit gem&lt;/li&gt;
&lt;li&gt;Enable RuboCop as pre-commit hook with overcommit gem&lt;/li&gt;
&lt;li&gt;Update git hooks with overcommit gem&lt;/li&gt;
&lt;li&gt;Run RuboCop on &quot;git commit&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  What are Git Hooks?
&lt;/h2&gt;

&lt;p&gt;Git hooks are a set of scripts that Git executes before or after events such as: commit, push, and receive. Git hooks are a built-in feature - you don't need to download anything for them to work.&lt;/p&gt;

&lt;p&gt;When you initialize git in your project with &lt;code&gt;git init&lt;/code&gt;, git hooks are also automatically added. You can find sample files for each event under the folder &lt;code&gt;your_project_path/.git/hooks&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To view list of sample files for various types of hooks, you can hit the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  $ ls your_project_path/.git/hooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Why use Git Hooks?
&lt;/h2&gt;

&lt;p&gt;There are various use cases for git hooks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check the commit message for spelling errors&lt;/li&gt;
&lt;li&gt;Enforce pattern for commit messages&lt;/li&gt;
&lt;li&gt;Enforce project coding standards like RuboCop&lt;/li&gt;
&lt;li&gt;Email/SMS team members of a new commit&lt;/li&gt;
&lt;li&gt;Push the code to production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At &lt;a href=&quot;https://truemark.com.np&quot; rel=&quot;noopener&quot;&gt;Truemark&lt;/a&gt;, we normally use it to enforce coding standards and code quality by running RuboCop before &quot;git commit&quot;.&lt;/p&gt;

&lt;h2&gt;
  
  
  What is Overcommit Gem?
&lt;/h2&gt;

&lt;p&gt;One important thing to note for Git Hooks is it is not version controlled, meaning whatever you add to hooks folder is only in your machine. &lt;/p&gt;

&lt;p&gt;So, what happens when new member in your team clones the repository? &lt;br&gt;
Nothing, they will get sample files like I mentioned above.&lt;/p&gt;

&lt;p&gt;What?&lt;/p&gt;

&lt;p&gt;Then &quot;How do we as a team make sure that hooks are executed for everyone?&quot;&lt;/p&gt;

&lt;p&gt;The answer to that is &lt;strong&gt;overcommit&lt;/strong&gt; gem.&lt;/p&gt;

&lt;p&gt;Overcommit gem helps you and your team to manage and configure Git hooks in your projects. &lt;/p&gt;

&lt;p&gt;With overcommit gem installed in your project; after you clone the repo, you just have to hit the command &lt;code&gt;overcommit --install&lt;/code&gt; and all hooks are configured by overcommit in your machine.&lt;/p&gt;

&lt;p&gt;Overcommit gem makes git hooks much more manageable because you don't have to write scripts for hooks manually. You can just add the command you want to run e.g. run RuboCop before commit, inside the configuration file provided by overcommit gem and everything else will be taken care by the gem.&lt;/p&gt;
&lt;h2&gt;
  
  
  Install Overcommit Gem
&lt;/h2&gt;

&lt;p&gt;Add the following to your Gemfile:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# run rubocop before commit with overcommit and much more&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'overcommit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 0.58.0'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Enable Git Hooks in your Project with Overcommit Gem
&lt;/h2&gt;

&lt;p&gt;You can enable git hooks in your project by running the command provided by overcommit gem. From your project root path:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  overcommit --install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will add required hooks in your project inside the folder &lt;code&gt;.git/hooks/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will also add configuration file &lt;code&gt;.overcommit.yml&lt;/code&gt; inside your project root. This file is used to control all git hooks configured in your project, and this is also where you will be adding configurations for running rubocop before commit.&lt;/p&gt;

&lt;h2&gt;
  
  
  Enable RuboCop as Pre-Commit Hook with Overcommit
&lt;/h2&gt;

&lt;p&gt;You can remove everything inside the configuration file &lt;code&gt;.overcommit.yml&lt;/code&gt; and add the following inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight yaml&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Use this file to configure the Overcommit hooks you wish to use. This will&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# extend the default configuration defined in:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# https://github.com/sds/overcommit/blob/master/config/default.yml&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# At the topmost level of this YAML file is a key representing type of hook&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# being run (e.g. pre-commit, commit-msg, etc.). Within each type you can&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# customize each hook, such as whether to only run it on certain files (via&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# `include`), whether to only display output if it fails (via `quiet`), etc.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# For a complete list of hooks, see:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# https://github.com/sds/overcommit/tree/master/lib/overcommit/hook&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# For a complete list of options that you can use to customize hooks, see:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# https://github.com/sds/overcommit#configuration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Uncomment the following lines to make the configuration take effect.&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;PreCommit&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;na&quot;&gt;RuboCop&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;on_warn&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fail&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Treat all warnings as failures&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;problem_on_unmodified_line&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# run RuboCop only on modified code&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What's with all these configuration options?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&quot;PreCommit&quot;&lt;/p&gt;

&lt;p&gt;Git hooks will run &quot;rubocop&quot; to check issues in code when you try to commit your changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;on_warn: fail&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;All warnings will be treated as failures and you will have to resolve those warnings first before your code is committed to the remote git repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;problem_on_unmodified_line: ignore&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Tell overcommit to run RuboCop only on code that were changed in this commit.&lt;/p&gt;

&lt;p&gt;This is specially useful when you are adding overcommit in old projects and you don't want to sit fixing all the issues inside the project. This lets you fix issues that you introduced or issues you want to refactor/fix while you can fix old issues in your own time (ohh, will that time ever come?).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Update Git Hooks with Overcommit
&lt;/h2&gt;

&lt;p&gt;Now that you have added configurations for running RuboCop on pre-commit, you will need to tell overcommit gem to persist these changes to &quot;pre-commit&quot; script inside git hooks folder.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add changes inside overcommit.yml to git&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update scripts inside git hooks folder with overcommit gem&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;   overcommit --sign
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Run RuboCop on git commit
&lt;/h2&gt;

&lt;p&gt;After you are done making changes to your code and done with the part of &quot;git add&quot;, try committing your code:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  git commit -m &quot;your commit message&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Git hooks will run RuboCop before commit and throw errors if any. If it didn't throw any error, add new code with issues manually and see the hook in action üôà&lt;/p&gt;

&lt;p&gt;This is something similar to what you will see in case there are issues in your code:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--c61vp7OA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yh77y061xgnq0xjn1y71.png&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--c61vp7OA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yh77y061xgnq0xjn1y71.png&quot; alt=&quot;Overcommit posts RuboCop errors for code with issues&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there are no errors then your code will be committed to git and you can push to the remote repository.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--Ba4yJY6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn4lk814nzixe5hdzvtr.png&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--Ba4yJY6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn4lk814nzixe5hdzvtr.png&quot; alt=&quot;All checks passed when running hooks by Overcommit&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;With overcommit gem configured in your project, you will never have to worry about having to comment on issues in merge requests which could already have been detected by RuboCop in local machine of developers. This way, you and your team can focus on having meaningful discussion in the merge requests which leads to overall growth of the project and members in your team.&lt;/p&gt;

&lt;p&gt;If you use any other gem for managing git hooks, I would like to hear your opinions on what you think about the gem you are using in comparison to overcommit. Personally, I find overcommit gem much easier to use and with a lot of configuration options. (Oh boy! You haven't even tried other gems)&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@kellysikkema?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Kelly Sikkema&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/commitment?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://githooks.com/&quot; rel=&quot;noopener&quot;&gt;Git Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sds/overcommit&quot; rel=&quot;noopener&quot;&gt;Overcommit Gem - Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
      <category>git</category>
      <category>codereview</category>
    </item>
    <item>
      <title>Beginner's Guide to RuboCop in Rails</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Wed, 18 Aug 2021 12:24:55 +0000</pubDate>
      <link>https://dev.to/truemark/beginner-s-guide-to-rubocop-in-rails-3mj6</link>
      <guid>https://dev.to/truemark/beginner-s-guide-to-rubocop-in-rails-3mj6</guid>
      <description>&lt;p&gt;RuboCop is a static code analyzer which analyzes the code based on the best practices followed by the Ruby developers around the world and defined on the community &lt;a href=&quot;https://rubystyle.guide&quot; rel=&quot;noopener&quot;&gt;Ruby style guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apart from analyzing the code, it also provides us the feature of automatically formatting the code and fix warnings inside our code.&lt;/p&gt;

&lt;p&gt;If you are coming from Javascript background, you may have heard about ESLint.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;RuboCop is ESLint for Ruby&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apart from Ruby, RuboCop also provides gems for implementing rules on various extensions like Rails, Minitest, RSpec, etc.&lt;/p&gt;

&lt;h2&gt;
  
  
  Why RuboCop?
&lt;/h2&gt;

&lt;p&gt;It begs the question and curiosity among us, so why do we actually need RuboCop? What's the use of having RuboCop in our projects.&lt;/p&gt;

&lt;p&gt;Here are some reasons on why we would want to use RuboCop in our projects:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Clean code&lt;/p&gt;

&lt;p&gt;We all want to write clean code that adheres to best practices followed by developers around the world. Best practices comes from experience, it may take some years to know about the language and know the anti-patterns and good patterns to follow if we only rely on ourselves. &lt;/p&gt;

&lt;p&gt;With RuboCop, we have the advantage of not having the experience because best practices have been bundled as rules and shipped to us inside the &quot;rubocop&quot; gem. RuboCop throws warnings whenever we violate rules configured for best practices and after fixing these issues, our code is most of the time clean and easy to understand.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eases the code review process&lt;/p&gt;

&lt;p&gt;The main purpose of code review is to fix logics in the code, or fix security vulnerabilities or discuss the path we took to develop the feature.&lt;/p&gt;

&lt;p&gt;But hey, imagine a situation where we push a code with a typo and reviewer spots that, then comments on it for fixing because obviously no one wants to ship the code with typo to production!&lt;/p&gt;

&lt;p&gt;What's wrong with that? It takes significant time to review the code, and with typo or discussion about best practices in merge requests, we as a developer are wasting a lot of time which could have easily be solved with the help of RuboCop by configuring rules.&lt;/p&gt;

&lt;p&gt;RuboCop makes sure that code with issues never makes it to the merge/pull requests.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Best practice is no one size fits all&lt;/p&gt;

&lt;p&gt;Normally best practices means what we like or dislike about the code or pattern we follow when we write the code and it differs for each one of us. If we focus our energy in discussing these practices in the code for every feature, when will we ship features?&lt;/p&gt;

&lt;p&gt;With RuboCop, we can discuss with the team on what best practices should the team follow and disable or enable rules based on the conclusion, hence making everyone happy (well, you can never make everyone happy!).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Setup RuboCop in Rails
&lt;/h2&gt;

&lt;p&gt;In this article, we will be installing main 'rubocop' gem for implementing rules in Ruby code along with the extension 'rubocop-rails' for Rails specific code.&lt;/p&gt;

&lt;h3&gt;
  
  
  Add Gems to Gemfile
&lt;/h3&gt;

&lt;p&gt;Add the following to Gemfile inside the group &lt;code&gt;:development, :test&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# enforce rails best practice with rubocop&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rubocop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 1.18.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;require: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rubocop-performance'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 1.11.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;require: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rubocop-rails'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 2.11.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;require: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: Update gem versions based on what is latest at the time you are installing these gems in our project&lt;/p&gt;

&lt;p&gt;We have added the following gems to our Gemfile:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rubocop: For Ruby code&lt;/li&gt;
&lt;li&gt;rubocop-performance: For code performance related rules&lt;/li&gt;
&lt;li&gt;rubocop-rails: For Rails specific rules&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  
  
  Install Gems in the Project
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install rubocop globally&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install rubocop&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will help us in running commands provided by 'rubocop' gem like auto formatting, running rubocop in the project, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install new gems with &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  
  
  Add Configuration Files
&lt;/h3&gt;

&lt;p&gt;To control (enable/disable) rules, we need to create configuration files for each extension. If there is no file then RuboCop will enable default extensions. I like to have configuration files because it provides flexibility to team.&lt;/p&gt;

&lt;p&gt;Let's create configuration files for RuboCop and it's extensions:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  $ cd /path/to/our/project
  $ touch .rubocop.yml
  $ touch .rubocop-performance.yml
  $ touch .rubocop-rails.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Add Rules to Configuration files
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;I also have a blog written specifically for configuration files of RuboCop, you can find it at &lt;a href=&quot;https://prabinpoudel.com.np/articles/rubocop-configuration-files-for-rails/&quot; rel=&quot;noopener&quot;&gt;RuboCop Configuration Files for Rails&lt;/a&gt; if you want more options.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's update configuration files and add rules for Ruby and installed extensions.&lt;/p&gt;

&lt;h3&gt;
  
  
  Ruby
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight yaml&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# .rubocop.yml&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# The behavior of RuboCop can be controlled via the .rubocop.yml&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# configuration file. It makes it possible to enable/disable&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# certain cops (checks) and to alter their behavior if they accept&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# any parameters. The file can be placed either in your home&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# directory or in some project directory.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# RuboCop will start looking for the configuration file in the directory&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# where the inspected file is and continue its way up to the root directory.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;inherit_from&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.rubocop-performance.yml'&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.rubocop-rails.yml'&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rubocop-performance&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rubocop-rails&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;AllCops&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;TargetRubyVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.7&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;TargetRailsVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6.0&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Exclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/db/migrate/*'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;db/schema.rb'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/Gemfile.lock'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/Rakefile'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/rails'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/vendor/**/*'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/spec_helper.rb'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;node_modules/**/*'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bin/*'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###################### RuboCop ############################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# You can find all configuration options for rubocop here: https://docs.rubocop.org/rubocop/cops_bundler.html&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;####################### Gemspec ###########################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Gemspec/DateAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.10)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;######################## Layout ###########################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/ClassStructure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ExpectedOrder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;module_inclusion&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;constants&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;association&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;public_attribute_macros&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;public_delegate&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;macros&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;initializer&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;public_class_methods&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;public_methods&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;protected_attribute_macros&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;protected_methods&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;private_attribute_macros&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;private_delegate&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;private_methods&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/EmptyLineAfterMultilineCondition&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/EmptyLinesAroundAttributeAccessor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/FirstArrayElementIndentation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;consistent&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/FirstArrayElementLineBreak&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/FirstHashElementIndentation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;consistent&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/FirstHashElementLineBreak&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/LineEndStringConcatenationIndentation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.18)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/LineLength&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Exclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/spec/**/*'&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/MultilineArrayBraceLayout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;new_line&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/MultilineOperationIndentation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;indented&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/MultilineHashBraceLayout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;new_line&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/MultilineHashKeyLineBreaks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/MultilineMethodCallBraceLayout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;new_line&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/MultilineMethodDefinitionBraceLayout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;new_line&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/SpaceAroundMethodCallOperator&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/SpaceBeforeBrackets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Layout/SpaceInLambdaLiteral&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;require_space&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;######################## Lint #############################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/AmbiguousAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/AmbiguousBlockAssociation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Exclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/spec/**/*'&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/AssignmentInCondition&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;AllowSafeAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/BinaryOperatorWithIdenticalOperands&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/DeprecatedConstants&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.8)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/DeprecatedOpenSSLConstant&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/DuplicateBranch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.3)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/DuplicateElsifCondition&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/DuplicateRegexpCharacterClassElement&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.1)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/DuplicateRequire&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/DuplicateRescueException&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/EmptyBlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.1)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/EmptyClass&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.3)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/EmptyConditionalBody&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/EmptyFile&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/EmptyInPattern&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.16)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/FloatComparison&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/LambdaWithoutLiteralBlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.8)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/MissingSuper&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/MixedRegexpCaptureTypes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/NoReturnInBeginEndBlocks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.2)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/NumberConversion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/NumberedParameterAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/OrAssignmentToConstant&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/RaiseException&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/RedundantDirGlobSort&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.8)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/SelfAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/SymbolConversion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/ToEnumArguments&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.1)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/TrailingCommaInAttributeDeclaration&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/TripleQuotes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/UnexpectedBlockArity&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.5)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/UnmodifiedReduceAccumulator&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.1)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/UnusedBlockArgument&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;IgnoreEmptyBlocks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/UnusedMethodArgument&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;IgnoreEmptyMethods&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Lint/UselessMethodDefinition&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;######################## Metric ###########################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Metrics/AbcSize&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;45&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Metrics/BlockLength&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;CountComments&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Exclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/spec/**/*'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/*.rake'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/factories/**/*'&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/config/routes.rb'&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Metrics/ClassLength&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;CountAsOne&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;array'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;hash'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Metrics/CyclomaticComplexity&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Metrics/MethodLength&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;CountAsOne&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;array'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;hash'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Metrics/ModuleLength&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;CountAsOne&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;array'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;hash'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;250&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Exclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;**/spec/**/*'&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Metrics/PerceivedComplexity&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;######################## Naming ###########################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Naming/InclusiveLanguage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.18)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;######################## Style ############################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/AccessorGrouping&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/ArgumentsForwarding&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.1)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/ArrayCoercion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/AutoResourceCleanup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/BisectedAttrAccessor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/CaseLikeIf&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/ClassAndModuleChildren&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/CollectionCompact&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.2)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/CollectionMethods&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/CombinableLoops&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/CommandLiteral&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;EnforcedStyle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;percent_x&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/ConstantVisibility&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/Documentation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/DocumentDynamicEvalDefinition&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.1)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/EndlessMethod&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.8)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/ExplicitBlockArgument&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/GlobalStdStream&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/HashConversion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.10)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/HashEachMethods&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/HashExcept&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/HashLikeCase&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/HashTransformKeys&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/HashTransformValues&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/IfWithBooleanLiteralBranches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/ImplicitRuntimeError&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/InlineComment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/InPatternThen&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.16)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/IpAddresses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/KeywordParametersOrder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/MethodCallWithArgsParentheses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/MissingElse&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/MultilineInPatternThen&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.16)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/MultilineMethodSignature&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/NegatedIfElseCondition&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.2)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/NilLambda&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.3)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/OptionalBooleanParameter&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/QuotedSymbols&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.16)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/RedundantArgument&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.4)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/RedundantAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/RedundantBegin&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/RedundantFetchBlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/RedundantFileExtensionInRequire&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/RedundantSelfAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/SingleArgumentDig&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/StringChars&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.12)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/StringConcatenation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Style/SwapValues&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.1)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Rails
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight yaml&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# .rubocop-rails.yml&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#################### RuboCop Rails ########################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# You can find all configuration options for rubocop-rails here: https://docs.rubocop.org/rubocop-rails/cops_rails.html&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/ActiveRecordCallbacksOrder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/AddColumnIndex&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.11)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/AfterCommitOverride&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/AttributeDefaultBlockValue&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/DefaultScope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/EagerEvaluationLogMessage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.11)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/ExpandedDateRange&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.11)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/FindById&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/I18nLocaleAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.11)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/Inquiry&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/MailerName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/MatchRoute&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/NegateInclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/OrderById&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/Pluck&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/PluckId&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/PluckInWhere&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/RenderInline&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/RenderPlainText&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/SaveBang&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;AllowImplicitReturn&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/ShortI18n&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/SquishedSQLHeredocs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.8)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/TimeZoneAssignment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.10)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/UnusedIgnoredColumns&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.11)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/WhereEquals&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 2.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/WhereExists&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Rails/WhereNot&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Performance
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight yaml&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;.rubocop-performance.yml&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#################### RuboCop Performance ##################&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;###########################################################&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# You can find all configuration options for rubocop-performance here: https://docs.rubocop.org/rubocop-performance/&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/AncestorsInclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/BigDecimalWithNumericArgument&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/BlockGivenWithExplicitBlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/CollectionLiteralInLoop&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.8)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/ConstantRegexp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/MapCompact&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.11)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/MethodObjectAsBlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.9)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/RedundantEqualityComparisonBlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.10)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/RedundantSortBlock&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/RedundantSplitRegexpArgument&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.10)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/RedundantStringChars&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/ReverseFirst&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/SortReverse&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/Squeeze&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/StringInclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.7)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Performance/Sum&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# (new in 1.8)&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Run RuboCop
&lt;/h2&gt;

&lt;p&gt;We have the option to run RuboCop on &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Whole project&lt;/li&gt;
&lt;li&gt;Files inside single folder&lt;/li&gt;
&lt;li&gt;Only on single file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After running commands of RuboCop in the command line, we will be presented with issues found in our code inside the project, which we can then fix manually or also have option to auto correct issues in most cases.&lt;/p&gt;

&lt;h3&gt;
  
  
  Whole Project
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  $ cd /path/to/your/project
  $ rubocop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Files inside single folder
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  $ rubocop app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Single file
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  $ rubocop app/models/user.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Auto fix warnings
&lt;/h3&gt;

&lt;p&gt;RubCop also provides the feature of auto correcting issues in our code. &lt;/p&gt;

&lt;p&gt;There are a couple of things to keep in mind about auto-correct:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For some offenses, it is not possible to implement automatic correction.&lt;/li&gt;
&lt;li&gt;Some automatic corrections that are possible have not been implemented yet.&lt;/li&gt;
&lt;li&gt;Some automatic corrections might change (slightly) the semantics of the code, meaning they‚Äôd produce code that‚Äôs mostly equivalent to the original code, but not 100% equivalent. We call such auto-correct behavior &quot;unsafe&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can run auto correction with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;$ rubocop -a
# or
$ rubocop --auto-correct
# or
$ rubocop -A
# or
$ rubocop --auto-correct-all
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Other RuboCop Extensions
&lt;/h2&gt;

&lt;p&gt;RuboCop also has options for implementing rules on other extensions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&quot;https://github.com/rubocop/rubocop-rspec&quot; rel=&quot;noopener&quot;&gt;rubocop-rspec&lt;/a&gt; For Rspec; a test framework popular for testing Rails code&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;https://github.com/rubocop/rubocop-rake&quot; rel=&quot;noopener&quot;&gt;rubocop-rake&lt;/a&gt;: A RuboCop plugin for Rake&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;https://github.com/rubocop/rubocop-minitest&quot; rel=&quot;noopener&quot;&gt;rubocop-minitest&lt;/a&gt;: Another popular testing library for testing Ruby and Rails code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Style Guide
&lt;/h2&gt;

&lt;p&gt;RuboCop is based on style guides which helps in maintaining best practices for each extension. If you are curious, you can view and read guidelines from links below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rubystyle.guide/&quot; rel=&quot;noopener&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rails.rubystyle.guide/&quot; rel=&quot;noopener&quot;&gt;Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rspec.rubystyle.guide/&quot; rel=&quot;noopener&quot;&gt;RSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://minitest.rubystyle.guide/&quot; rel=&quot;noopener&quot;&gt;Minitest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;RuboCop is very helpful in maintaining best practices and it's one of the gem that we include in all our project setup here at &lt;a href=&quot;https://truemark.com.np&quot; rel=&quot;noopener&quot;&gt;Truemark&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One thing to remember with Static Code Analyzers is we have the flexibility to enable and disable rules, hence we should always discuss with the team what to include, why to include and what to disable.&lt;/p&gt;

&lt;p&gt;This is the guide I hope I had when I was starting our as a Rails developer. I hope you find it useful!&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@scottwebb?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Scott Webb&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/security?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.rubocop.org/rubocop/1.18/installation.html&quot; rel=&quot;noopener&quot;&gt;Official RuboCop Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://prabinpoudel.com.np/articles/rubocop-configuration-files-for-rails/&quot; rel=&quot;noopener&quot;&gt;RuboCop Configuration Files for Rails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
      <category>codereview</category>
    </item>
    <item>
      <title>Search Engine with Rails and Elastic Search</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Mon, 26 Jul 2021 07:48:44 +0000</pubDate>
      <link>https://dev.to/truemark/search-engine-with-rails-and-elastic-search-5akf</link>
      <guid>https://dev.to/truemark/search-engine-with-rails-and-elastic-search-5akf</guid>
      <description>&lt;p&gt;I had always wondered &quot;How do I search through the relational database, in any table, in any column and get the related result?&quot;. After searching for a bit, I reached to the conclusion &lt;strong&gt;YOU DON'T&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Searching through more than one table and add to that, more than one column is very complex with relational database. That's where Elasticsearch comes into play. Elasticsearch stores all records in documents and provides search functionality that is very fast.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before we move into the implementation part of the tutorial, I want to make this clear:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is not the tutorial for building the web search engine like Google. What you will be building is a search engine for the Rails App where you can search for any string inside any table in the app. This will help you in adding the functionality of app wide search.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now then, let's create a search engine for our Rails App.&lt;/p&gt;

&lt;h2&gt;
  
  
  Clone the example Rails app
&lt;/h2&gt;

&lt;p&gt;I have prepared an example app for making it more easier to follow through the tutorial and pushed to Github. You can clone it from &lt;a href=&quot;https://flaviocopes.com/redis-installation/&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Or with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  git clone git@github.com:coolprobn/rails-search-engine.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Configure Elasticsearch
&lt;/h2&gt;

&lt;h3&gt;
  
  
  Install Elasticsearch
&lt;/h3&gt;

&lt;p&gt;You can install Elasticsearch by following instructions in the &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html&quot; rel=&quot;noopener&quot;&gt;official website&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  
  
  Run Elasticsearch Server
&lt;/h3&gt;

&lt;p&gt;When you have installed Elasticsearch in your machine, you will also be presented with commands to run the server. You can also find commands to run Elasticsearch for your OS &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/starting-elasticsearch.html&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Following command is for MacOS where I installed Elasticsearch with Homebrew:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run only once&lt;/p&gt;

&lt;p&gt;&lt;code&gt;elasticsearch&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run in background and on machine restart&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew services start elastic/tap/elasticsearch-full&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: It can take some time to fully start the server.&lt;/p&gt;

&lt;h3&gt;
  
  
  Check if Elasticsearch is working
&lt;/h3&gt;

&lt;p&gt;You can check if Elasticsearch is working by opening localhost on port &lt;strong&gt;9200&lt;/strong&gt; in your browser:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://localhost:9200/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should see content similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;{
  &quot;name&quot; : &quot;Prabins-MacBook-Pro.local&quot;,
  &quot;cluster_name&quot; : &quot;elasticsearch_cool&quot;,
  &quot;cluster_uuid&quot; : &quot;J2CAnnSoRI6p2zZGV3K8eg&quot;,
  &quot;version&quot; : {
    &quot;number&quot; : &quot;7.13.3&quot;,
    &quot;build_flavor&quot; : &quot;default&quot;,
    &quot;build_type&quot; : &quot;tar&quot;,
    &quot;build_hash&quot; : &quot;5d21bea28db1e89ecc1f66311ebdec9dc3aa7d64&quot;,
    &quot;build_date&quot; : &quot;2021-07-02T12:06:10.804015202Z&quot;,
    &quot;build_snapshot&quot; : false,
    &quot;lucene_version&quot; : &quot;8.8.2&quot;,
    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,
    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;
  },
  &quot;tagline&quot; : &quot;You Know, for Search&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Install elasticsearch in the app
&lt;/h2&gt;

&lt;p&gt;Add the following to your &lt;code&gt;Gemfile.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Elasticsearch for powerful searching&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'elasticsearch-model'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'elasticsearch-rails'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install gems with &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  Add Elasticsearch to Models
&lt;/h2&gt;

&lt;p&gt;Add following to all the models. At present, there are three models inside the app; Author, Article and Category.&lt;/p&gt;

&lt;p&gt;Example for Author model:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Author&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Callbacks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will allow the models in the app to be searched through elasticsearch.&lt;/p&gt;

&lt;h2&gt;
  
  
  Create Searchable module
&lt;/h2&gt;

&lt;p&gt;Hmm, that was cumbersome üò™. You can refactor and DRY the code by creating a concern called &lt;strong&gt;Searchable&lt;/strong&gt; and just include that module in all models. This module can also have other configurations required to make the search more powerful.&lt;/p&gt;

&lt;p&gt;Create the concern inside &lt;code&gt;app/models/concerns/searchable.rb&lt;/code&gt; and add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Searchable&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveSupport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Concern&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;included&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Callbacks&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Include Searchable module in required models
&lt;/h3&gt;

&lt;p&gt;Now, you can include the &lt;strong&gt;Searchable&lt;/strong&gt; module in the models, at the moment there are there are three models in the app: Author, Article and Category, you can include the module as required in each one of them.&lt;/p&gt;

&lt;p&gt;Example for Author model:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/author.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Author&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Searchable&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# remaining code&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now all the codes inside Searchable module will be accessible to models where this module is configured or included.&lt;/p&gt;

&lt;h2&gt;
  
  
  Index database records of required models/tables
&lt;/h2&gt;

&lt;p&gt;To make all records inside the database available to the Elasticsearch they need to be indexed/stored in various documents first. When comparing to relational database, indexing is same like storing records in tables.&lt;/p&gt;

&lt;h3&gt;
  
  
  Create a rake task to automate the indexing process
&lt;/h3&gt;

&lt;p&gt;Create a file &lt;code&gt;lib/tasks/elastic_search.rake&lt;/code&gt; and add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:elastic_search&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Index models to elasticsearch'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:index_models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# eager load first so that models are available for next step&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;eager_load!&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# include all models inside the app/models folder&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;default_models&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;descendants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;argument_models&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argument_models&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default_models&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;model_classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;camelize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constantize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;model_classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;force: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the rake task, following thing is happening:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;[:models]&lt;/code&gt; allows the rake task to accept arguments, in this case rake task accepts string separated by &quot;,&quot; i.e. each model name which needs to be indexed is separated by a comma.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Rails.application.eager_load!&lt;/code&gt; loads all the classes inside the &quot;app&quot; folder, this is so that all model names are available to this rake task in the next step.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ApplicationRecord.descendants.map(&amp;amp;:to_s)&lt;/code&gt; returns array of model names inside the folder &lt;code&gt;app/models&lt;/code&gt; meaning all models in the app will be indexed. If this is not what you desire you can replace the code with array of model name like &lt;code&gt;['Author', 'Article']&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If argument is passed which should be in the form of string separated by comma as mentioned above, they are converted to array by using the &lt;code&gt;split&lt;/code&gt; method and then unnecessary whitespace are removed with &lt;code&gt;strip&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;model_classes&lt;/code&gt;, each model name is converted to camel case to maintain consistency and avoid errors, and then each model name which is in string is converted to &lt;strong&gt;constant&lt;/strong&gt; with the help of the method &lt;code&gt;constantize&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Finally, each model is looped through and indexed one by one with the method &lt;code&gt;import&lt;/code&gt; provided by elasticsearch gem.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  
  
  Index models
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Index all models&lt;/p&gt;

&lt;p&gt;If you are running the rake task for the first time, it's better if you don't pass any argument since you want records from all models to be indexed.&lt;/p&gt;

&lt;p&gt;Run the following command in that case:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rails elastic_search:index_models&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For new models&lt;/p&gt;

&lt;p&gt;If you add new models, you will normally want to only index that model, for that you can pass the names of new models when executing the rake task&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rails &quot;elastic_search:index_models[Comment\, Tag]&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You need to escape comma (,) with &lt;code&gt;\&lt;/code&gt; otherwise it will be treated as second argument to rake task and only &quot;Comment&quot; will be passed to the argument model_names.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Search with Elasticsearch
&lt;/h2&gt;

&lt;p&gt;Now that all the records from required models are indexed, it's finally the time to search through them.&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;&amp;gt; Author.search('Jane').results
&amp;gt; response.first.as_json
=&amp;gt; {&quot;_index&quot;=&amp;gt;&quot;authors&quot;, &quot;_type&quot;=&amp;gt;&quot;_doc&quot;, &quot;_id&quot;=&amp;gt;&quot;2&quot;, &quot;_score&quot;=&amp;gt;0.6931471, &quot;_source&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;2, &quot;first_name&quot;=&amp;gt;&quot;Jane&quot;, &quot;last_name&quot;=&amp;gt;&quot;Jones&quot;, &quot;email&quot;=&amp;gt;&quot;jane@email.com&quot;, &quot;nickname&quot;=&amp;gt;&quot;marvellous.jane&quot;, &quot;created_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.192Z&quot;, &quot;updated_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.192Z&quot;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Search only one model
&lt;/h3&gt;

&lt;p&gt;You can search only one model with &lt;code&gt;ModelName.search 'query'&lt;/code&gt; e.g. &lt;code&gt;Author.search 'Jane'&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Jane'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;results&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;as_json&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_index&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;authors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_type&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_doc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_score&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.6931471&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_source&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;first_name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Jane&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;last_name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Jones&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jane@email.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nickname&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;marvellous.jane&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;created_at&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2021-07-25T15:18:18.192Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;updated_at&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2021-07-25T15:18:18.192Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the result part, you can also achieve the similar result by using the method &quot;records&quot; instead of &quot;results&quot;. Difference between them is, &quot;results&quot; always returns Elasticsearch result while &quot;records&quot; convert Elasticsearch results to active record query.&lt;/p&gt;

&lt;p&gt;You can read more about &lt;strong&gt;records&lt;/strong&gt; &lt;a href=&quot;https://github.com/elastic/elasticsearch-rails/tree/master/elasticsearch-model#search-results-as-database-records&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  
  
  Search in multiple models
&lt;/h3&gt;

&lt;p&gt;You can search in multiple models with &lt;code&gt;Elasticsearch::Model.search('query', [ModelName1, ModelName2])&lt;/code&gt; e.g. &lt;code&gt;Elasticsearch::Model.search('ruby', [Article, Category])&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;Elasticsearch::Model.search('Ruby', [Article, Category]).results.as_json    
=&amp;gt; [{&quot;_index&quot;=&amp;gt;&quot;categories&quot;, &quot;_type&quot;=&amp;gt;&quot;_doc&quot;, &quot;_id&quot;=&amp;gt;&quot;1&quot;, &quot;_score&quot;=&amp;gt;1.5697745, &quot;_source&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;1, &quot;title&quot;=&amp;gt;&quot;ruby&quot;, &quot;created_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.202Z&quot;, &quot;updated_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.202Z&quot;}}, {&quot;_index&quot;=&amp;gt;&quot;articles&quot;, &quot;_type&quot;=&amp;gt;&quot;_doc&quot;, &quot;_id&quot;=&amp;gt;&quot;2&quot;, &quot;_score&quot;=&amp;gt;1.2920684, &quot;_source&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;2, &quot;title&quot;=&amp;gt;&quot;Build Twitter Bot with Ruby&quot;, &quot;content&quot;=&amp;gt;&quot;Today, we will be building a bot for Twitter that will retweet all hashtags related to #ruby or #rails. We can also configure it to retweet any hashtags so you can use this tutorial to create bot that can retweet whatever hashtag you want. Yes, and we will be building this Twitter bot with Ruby.\n\nWe will be using Twitter gem (Github) to help us in getting up and running quickly with Twitter APIs.\n&quot;, &quot;published_on&quot;=&amp;gt;&quot;2021-04-23T05:00:00.000Z&quot;, &quot;author_id&quot;=&amp;gt;1, &quot;created_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.236Z&quot;, &quot;updated_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.236Z&quot;}}, {&quot;_index&quot;=&amp;gt;&quot;articles&quot;, &quot;_type&quot;=&amp;gt;&quot;_doc&quot;, &quot;_id&quot;=&amp;gt;&quot;4&quot;, &quot;_score&quot;=&amp;gt;0.83619946, &quot;_source&quot;=&amp;gt;{&quot;id&quot;=&amp;gt;4, &quot;title&quot;=&amp;gt;&quot;Setup Factory Bot in Rails&quot;, &quot;content&quot;=&amp;gt;&quot;Factory Bot is a library for setting up test data objects in Ruby. Today we will be setting up Factory Bot in Rails which uses RSpec for testing. If you are using different test suite, you can view all supported configurations in the official github repository of Factory Bot.\n&quot;, &quot;published_on&quot;=&amp;gt;&quot;2021-06-13T13:00:00.000Z&quot;, &quot;author_id&quot;=&amp;gt;2, &quot;created_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.245Z&quot;, &quot;updated_at&quot;=&amp;gt;&quot;2021-07-25T15:18:18.245Z&quot;}}]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Converting Search Results to Active Record
&lt;/h2&gt;

&lt;p&gt;You can convert search result to active record with &lt;code&gt;to_a&lt;/code&gt; For e.g. &lt;code&gt;Author.search('john').records.to_a&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;Author.search('john').records.to_a
Author Load (0.4ms)  SELECT &quot;authors&quot;.* FROM &quot;authors&quot; WHERE &quot;authors&quot;.&quot;id&quot; = $1  [[&quot;id&quot;, 1]]
=&amp;gt; [#&amp;lt;Author id: 1, first_name: &quot;John&quot;, last_name: &quot;Doe&quot;, email: &quot;john@email.com&quot;, nickname: &quot;john101&quot;, created_at: &quot;2021-07-25 15:18:18.190094000 +0000&quot;, updated_at: &quot;2021-07-25 15:18:18.190094000 +0000&quot;&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tutorial won't use this technique nor should this be used in actual implementation because it executes an extra query and adds more time to the request since each record should be converted to Active Record. In production application and especially for search app even 1 millisecond matters which is why in this tutorial, all search results will be converted to JSON and same records will be rendered inside the &quot;view&quot;.&lt;/p&gt;

&lt;h2&gt;
  
  
  API for search engine
&lt;/h2&gt;

&lt;p&gt;Adding the search functionality to the app means everything that happened above in rails console should be replicated and added to the API.&lt;/p&gt;

&lt;h3&gt;
  
  
  Create a controller
&lt;/h3&gt;

&lt;p&gt;From command line, run the command to create the controller: &lt;code&gt;touch app/controllers/search_controller.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;class SearchController &amp;lt; ApplicationController
  def search
    if params[:q].blank?
      @results = []
    else
      @results = Elasticsearch::Model
                   .search(params[:q])
                   .results.as_json
                   .group_by { |result| result['_index'] }
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results are grouped by &quot;_index&quot; so that results can be separated for each model name when rendering in the view.&lt;/p&gt;

&lt;h3&gt;
  
  
  Add a route
&lt;/h3&gt;

&lt;p&gt;Add the following to &lt;code&gt;config/routes.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;get :search, to: 'search#search'&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  View to search and show results
&lt;/h2&gt;

&lt;p&gt;To provide the search capability to the users, you will need to have:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Search box where user can input their search query&lt;/li&gt;
&lt;li&gt;Show list of results for the search&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Create a view&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  $ mkdir app/views/search
  $ touch app/views/search/search.html.erb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the following inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&amp;gt;

&amp;lt;%= form_for search_path, method: :get do |f| %&amp;gt;
  &amp;lt;p&amp;gt;
    &amp;lt;%= f.label &quot;Search for&quot; %&amp;gt;
    &amp;lt;%= text_field_tag :q, params[:q] %&amp;gt;
    &amp;lt;%= submit_tag &quot;Search&quot;, name: nil %&amp;gt;
  &amp;lt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% if &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;blank?&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
  &amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= params[:q] %&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;% end %&amp;gt;

&amp;lt;% @results.each do |group, records| %&amp;gt;
  &amp;lt;h3&amp;gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;titleize&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% records.each &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
      &amp;lt;% record_link = &quot;#{group}/#{record['_id']}&quot; %&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= link_to record_link, record_link %&amp;gt;
      &amp;lt;/li&amp;gt;
    &amp;lt;% end %&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Test the implementation
&lt;/h2&gt;

&lt;p&gt;Fire up the rails server &lt;code&gt;rails s&lt;/code&gt; and go to &lt;code&gt;localhost:3000/search&lt;/code&gt;, you will see a view with search box in it like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--fuKP0koX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9iw4qlx96ojzwvmjbhl3.png&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--fuKP0koX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9iw4qlx96ojzwvmjbhl3.png&quot; alt=&quot;Empty search view&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Type relevant text e.g. &quot;ruby&quot; and hit search.&lt;/p&gt;

&lt;p&gt;Tada üéâ &lt;/p&gt;

&lt;p&gt;You will see search results grouped by model name and link to individual record's detail page like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--BKO24eTz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/myfwza9npz17j63me2rc.png&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--BKO24eTz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/myfwza9npz17j63me2rc.png&quot; alt=&quot;Search results grouped by model name&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there are no results you will see &quot;No results found for [query]&quot; like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--OU8G_FqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqkatzihk0c7housayl9.png&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--OU8G_FqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqkatzihk0c7housayl9.png&quot; alt=&quot;Results not found&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since there aren't any APIs and required Views for other features, link will not work at the moment.&lt;/p&gt;

&lt;h2&gt;
  
  
  Highlight matched text
&lt;/h2&gt;

&lt;p&gt;Elasticsearch also provides the feature of highlighting the matched text like what Google does in its search results. You can take the search feature to next level by adding the highlighted text and rendering them in the view.&lt;/p&gt;

&lt;h3&gt;
  
  
  Update search query in the controller
&lt;/h3&gt;

&lt;p&gt;Update the code inside else part of the controller in &quot;search&quot; action with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;highlighted_fields&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;as_json&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'_index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Add private method for highlight fields
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;highlight_fields&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;highlight: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;fields: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;pre_tags: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;strong&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;post_tags: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;/strong&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;first_name: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;last_name: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;nickname: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;title: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;content: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &quot;fields&quot; in the method &quot;highlight_fields&quot;, you can add column names of any model that you want to highlight the text of. Current configuration includes highlighting for all 3 models available in the app.&lt;/p&gt;

&lt;p&gt;By default, highlighted texts are wrapped around &quot;em&quot; tag and can easily be overridden by specifying &lt;code&gt;pre&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; tags; here &quot;em&quot; tag is overridden by &quot;strong&quot; tag because I felt that bold text catches more attention than italicized text. You can ignore these two tags and remove them completely if you think italicized texts work great.&lt;/p&gt;

&lt;p&gt;Your final controller will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SearchController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;blank?&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Model&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;body: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;highlight_fields&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;as_json&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'_index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;highlight_fields&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;highlight: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;fields: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;pre_tags: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;strong&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;post_tags: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;/strong&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;first_name: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;last_name: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;nickname: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;title: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;content: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Update view to show highlighted text
&lt;/h3&gt;

&lt;p&gt;Add following code just below the &quot;link_to&quot;:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight erb&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'highlight'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snippet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; - &quot;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sanitize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snippet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Highlighted result will be available inside the key &quot;highlight&quot; and text to highlight will be available inside the &quot;snippet&quot; key which is what we are using to render highlighted text.&lt;/p&gt;

&lt;p&gt;Your final view will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;&amp;lt;h1&amp;gt;App Search&amp;lt;/h1&amp;gt;

&amp;lt;%= form_for search_path, method: :get do |f| %&amp;gt;
  &amp;lt;p&amp;gt;
    &amp;lt;%= f.label &quot;Search for&quot; %&amp;gt;
    &amp;lt;%= text_field_tag :q, params[:q] %&amp;gt;
    &amp;lt;%= submit_tag &quot;Search&quot;, name: nil %&amp;gt;
  &amp;lt;/p&amp;gt;
&amp;lt;% end %&amp;gt;

&amp;lt;% if params[:q] &amp;amp;&amp;amp; @results.blank? %&amp;gt;
  &amp;lt;p&amp;gt;No results found for &amp;lt;%= params[:q] %&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;% end %&amp;gt;

&amp;lt;% @results.each do |group, records| %&amp;gt;
  &amp;lt;h3&amp;gt;&amp;lt;%= group.titleize %&amp;gt;&amp;lt;/h3&amp;gt;

  &amp;lt;ul&amp;gt;
    &amp;lt;% records.each do |record| %&amp;gt;
      &amp;lt;% record_link = &quot;api/v1/#{group}/#{record['_id']}&quot; %&amp;gt;

      &amp;lt;li&amp;gt;
        &amp;lt;%= link_to record_link, record_link %&amp;gt;

        &amp;lt;% record['highlight']&amp;amp;.each do |key, snippet| %&amp;gt;
          &amp;lt;p&amp;gt;&amp;lt;%= &quot;#{key} - &quot; %&amp;gt; &amp;lt;%= sanitize(snippet[0]) %&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;% end %&amp;gt;
      &amp;lt;/li&amp;gt;
    &amp;lt;% end %&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can search again for the same query and you will see the highlighted text like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--EM9jqygt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bv7zo6blz4kqh2gbe1ti.png&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--EM9jqygt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bv7zo6blz4kqh2gbe1ti.png&quot; alt=&quot;Highlighted search results&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  Improve the app further
&lt;/h2&gt;

&lt;p&gt;There are many functionalities that I have skipped deliberately for making this tutorial small and more simpler, you can add the following functionalities if you want to play more with this app:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add API and required view to make the links to detail page work&lt;/li&gt;
&lt;li&gt;Show related articles when associated author or category is searched, for e.g. if user searches for &quot;jane&quot; show articles of the author &quot;Jane&quot;, or for &quot;ruby&quot; show all articles that have categories &quot;Ruby&quot;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In real world application, I am sure that search functionality can be a lot complex than what is shown here, but this is the start and you can build as required on top of this.&lt;/p&gt;

&lt;p&gt;I had always wanted to explore the idea of app wide search, and this blog is the result of my habit of exploring new technology every Sunday. It was fun to learn about elasticsearch, research through the internet on how other have implemented similar search features and actually implementing this with the sample app and in existing project for the client.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed this blog as much as I enjoyed it building and writing. I thank you for sticking with me to the very end of the blog.&lt;/p&gt;

&lt;p&gt;Full code of this tutorial is available in the branch &quot;app-search&quot;, you can find it &lt;a href=&quot;https://github.com/coolprobn/rails-search-engine/pull/1&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy tinkering and happy coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Photo by &lt;a href=&quot;https://unsplash.com/@jontyson?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Jon Tyson&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/search-engine?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
      <category>elasticsearch</category>
      <category>ruby</category>
    </item>
    <item>
      <title>Update Multiple Records at Once in Rails</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Sun, 18 Jul 2021 11:22:03 +0000</pubDate>
      <link>https://dev.to/truemark/update-multiple-records-at-once-in-rails-12m8</link>
      <guid>https://dev.to/truemark/update-multiple-records-at-once-in-rails-12m8</guid>
      <description>&lt;p&gt;Rails provides a built-in &lt;strong&gt;create&lt;/strong&gt; method for adding multiple records in single line of code or in more technical term &quot;batch create&quot;. For update, if we want to update attributes with same value for all available records then we can do so with the method &lt;code&gt;update_all&lt;/code&gt;. But what if we want to update multiple attributes at once and for multiple records? How do we &quot;batch update&quot; in Rails?&lt;/p&gt;

&lt;p&gt;We will be looking at the answer to that question today in this blog.&lt;/p&gt;

&lt;p&gt;For updating multiple records at once, there may be two cases; when we want to update&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Same attribute/s in all rows&lt;/li&gt;
&lt;li&gt;Different attributes in each row&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Update same attribute/s in all rows
&lt;/h2&gt;

&lt;p&gt;To update same attributes with same values in all rows of the table, we can use the Rails method &lt;strong&gt;update_all&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For e.g. If we want to update all users with &lt;code&gt;first_name&lt;/code&gt; &quot;John&quot; to &quot;Jessica&quot;, we can do so with following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;User.where(first_name: 'John').update_all(first_name: 'Jessica')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Update different attributes in each row
&lt;/h2&gt;

&lt;p&gt;Let's suppose we have a model User and we want to update existing records inside with different &lt;strong&gt;name&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For e.g. we want to update records with the following JSON:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;formatted_users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'John Doe'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Jessica Jones'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Robert Junior'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Did you notice? Each user has different name that needs to be updated.&lt;/p&gt;

&lt;p&gt;Let's see how we can update multiple records like these at once in Rails.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Index records by their id&lt;/p&gt;

&lt;p&gt;First of all, we should index all records by their id, &lt;strong&gt;index_by&lt;/strong&gt; will return records grouped by the id and all records will be inside the hash.&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;grouped_users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatted_users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;index_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# index_by will return the following hash&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {1=&amp;gt;{:id=&amp;gt;1, :name=&amp;gt;&quot;John Doe&quot;}, 2=&amp;gt;{:id=&amp;gt;2, :name=&amp;gt;&quot;Jessica Jones&quot;}, 3=&amp;gt;{:id=&amp;gt;3, :name=&amp;gt;&quot;Robert Junior&quot;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update grouped records&lt;/p&gt;

&lt;p&gt;After grouping all records by their id, we will pass all ids as a first argument and their attributes as the second attribute to the method &lt;strong&gt;update&lt;/strong&gt;. This way all our records will be updated at once without us having to loop through each record and calling &lt;code&gt;update&lt;/code&gt; each time.&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;  &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grouped_users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grouped_users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This way we can update multiple records with different attributes from a hash or JSON.&lt;/p&gt;

&lt;p&gt;One thing to note is, this solution is not optimized or efficient for large set of records because for each record, we will be hitting database with the update query. That can take significant memory and also more time to execute large set of records.&lt;/p&gt;

&lt;p&gt;Do you have more optimized solutions? Let us know in the comment.&lt;/p&gt;

&lt;p&gt;Thank you for reading. Happy Coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/28694498/is-there-anything-like-batch-update-in-rails/28695476#28695476&quot; rel=&quot;noopener&quot;&gt;Is there anything like batch update in rails? [Stack Overflow]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cbabhusal.wordpress.com/2015/01/03/updating-multiple-records-at-the-same-time-rails-activerecord/&quot; rel=&quot;noopener&quot;&gt;Updating multiple records at the same time rails active record [Cba Bhusal Blog]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@salvoventura?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;salvatore ventura&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/pencils?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
    </item>
    <item>
      <title>Override Default Date Format in Rails Admin</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Sun, 11 Jul 2021 14:02:35 +0000</pubDate>
      <link>https://dev.to/truemark/override-default-date-format-in-rails-admin-40kh</link>
      <guid>https://dev.to/truemark/override-default-date-format-in-rails-admin-40kh</guid>
      <description>&lt;p&gt;Rails Admin is a Rails engine that provides an easy-to-use interface for managing your data. It's perfect for the cases where we want admin dashboard quickly for CRUD (Create, Read, Update and Delete) operations.&lt;/p&gt;

&lt;p&gt;When using engines, it can be difficult to override its default behavior. It was the same case for overriding the default date format. It was tricky as I didn't know exactly where to look at.&lt;/p&gt;

&lt;p&gt;After some research, I found out that Rails Admin uses &lt;strong&gt;long&lt;/strong&gt; date and time format from the locale. We can check the related code in &lt;a href=&quot;https://github.com/sferik/rails_admin/blob/555f7783f2255ddc736141c410c5bdaee074887a/lib/rails_admin/config/fields/types/datetime.rb#L33&quot; rel=&quot;noopener&quot;&gt;official gem repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Line for the exact code may change in the future, if it has, you can search for the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  register_instance_option :date_format do
    :long
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  
  
  Override default date format
&lt;/h2&gt;

&lt;p&gt;To override the default format of the date and display the format we want in our UI, we will need to add the required format in our locale files so the values inside the engine are overridden.&lt;/p&gt;

&lt;p&gt;Add the following to &lt;code&gt;config/locale/en.yml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt; ```
   en:
     date:
       formats:
         long: &quot;%Y-%m-%d&quot;
     time:
       formats:
         long: &quot;%Y-%m-%d %H:%M:%S&quot;
 ```
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please change format of the date and time as required for your application.&lt;/p&gt;

&lt;p&gt;If you have other locales that your Rails app supports, you can update the date formats as required in related locale file by copying this exact code and updating content inside key &quot;long&quot;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: date is for datatype &lt;strong&gt;date&lt;/strong&gt; and time is for data type &lt;strong&gt;datetime&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you restart the rails server and reload the UI, you should be able to see the date format you added.&lt;/p&gt;

&lt;p&gt;Thanks for reading. Happy coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@esteejanssens?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Est√©e Janssens&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/calendar?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
    </item>
    <item>
      <title>[Fix] Rails Auto Increment ID Postgres Error</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Mon, 05 Jul 2021 10:26:26 +0000</pubDate>
      <link>https://dev.to/truemark/fix-rails-auto-increment-id-postgres-error-id</link>
      <guid>https://dev.to/truemark/fix-rails-auto-increment-id-postgres-error-id</guid>
      <description>&lt;h2&gt;
  
  
  Error
&lt;/h2&gt;

&lt;p&gt;ActiveRecord::RecordNotUnique Exception: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint &quot;users_pkey&quot;&lt;br&gt;
DETAIL:  Key (id)=(43957) already exists.&lt;/p&gt;

&lt;h2&gt;
  
  
  Detail
&lt;/h2&gt;

&lt;p&gt;You normally run into this error when you restore database from another source, for e.g. production or staging server.&lt;/p&gt;

&lt;p&gt;This happens because of database sequence for Postgres that is stored in local machine is not the same as what comes from restored database and same id can be assigned twice when auto incrementing by Rails application.&lt;/p&gt;

&lt;h2&gt;
  
  
  Solution
&lt;/h2&gt;

&lt;p&gt;We can reset the sequence of the table that is stored in the local machine by Postgres to fix this issue.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go to rails console&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rails c&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reset the Postgres sequence for the table&lt;/p&gt;

&lt;p&gt;You can reset the Postgres sequence with the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ActiveRecord::Base.connection.reset_pk_sequence!('table_name')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;E.g. Assuming the table name is &lt;strong&gt;users&lt;/strong&gt;, you can do the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ActiveRecord::Base.connection.reset_pk_sequence!('users')&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;After resetting the sequence of table stored by Postgres, new records will be created without any issues.&lt;/p&gt;

&lt;p&gt;Thanks for reading. Happy Coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href=&quot;https://stackoverflow.com/a/56863898/9359123&quot; rel=&quot;noopener&quot;&gt;Rails auto-assigning id that already exists [Stack Overflow]&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@brett_jordan?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Brett Jordan&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/identity?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>postgres</category>
    </item>
    <item>
      <title>[Fix] Rails server is already running</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Mon, 28 Jun 2021 08:15:19 +0000</pubDate>
      <link>https://dev.to/truemark/fix-rails-server-is-already-running-532g</link>
      <guid>https://dev.to/truemark/fix-rails-server-is-already-running-532g</guid>
      <description>&lt;h2&gt;
  
  
  Error
&lt;/h2&gt;

&lt;p&gt;&quot;A server is already running. Check &lt;strong&gt;.../tmp/pids/server.pid&lt;/strong&gt;&quot;&lt;/p&gt;

&lt;p&gt;This error means that the server is already running in the port you are trying to start the rails server on; normally 3000.&lt;/p&gt;

&lt;h2&gt;
  
  
  Reasons for Error
&lt;/h2&gt;

&lt;p&gt;This error can occur in two cases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;You are running the Rails server on port 3000 in another tab of the terminal&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You suspended the server abruptly&lt;/p&gt;

&lt;p&gt;This normally happens when you stop the server with &lt;code&gt;ctrl+z&lt;/code&gt; instead of &lt;code&gt;ctrl+c&lt;/code&gt; to exit the Rails server. &lt;code&gt;ctrl+z&lt;/code&gt; suspends the process but doesn't close the server running on port 3000 meaning the server is still running on background.&lt;/p&gt;

&lt;p&gt;This can also happen when you close the terminal that the rails server was running on.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Solution
&lt;/h2&gt;

&lt;h3&gt;
  
  
  Rails server is running on port 3000 in another tab of the terminal
&lt;/h3&gt;

&lt;p&gt;You can just close the server running on another tab on port 3000 to resolve this issue.&lt;/p&gt;

&lt;h3&gt;
  
  
  Server suspended abruptly
&lt;/h3&gt;

&lt;p&gt;Solution for this case is to kill the process running in the background on port 3000&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find the process id for the rails server port&lt;/p&gt;

&lt;p&gt;If the port you are running the rails server is different than 3000, you should replace 3000 with the port number as required.&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;   lsof -wni tcp:3000
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;You should be able to see the output like this:&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;  COMMAND   PID USER   FD   TYPE            DEVICE SIZE/OFF NODE NAME
  ruby    16660 cool   14u  IPv4 0x89786e1f70a36a3      0t0  TCP 127.0.0.1:hbci (LISTEN)
  ruby    16660 cool   15u  IPv6 0x89786e1d82f7aeb      0t0  TCP [::1]:hbci (LISTEN)
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy value in PID column, here &lt;strong&gt;16660&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kill the process&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;   kill -9 16660
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;You should see the following output:&lt;br&gt;
&lt;/p&gt;
&lt;pre class=&quot;highlight plaintext&quot;&gt;&lt;code&gt;   [1]  + 10975 killed     rails s
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Try running the server again&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Rails server should be up and running without any errors now.&lt;/p&gt;

&lt;p&gt;Thank you for reading. Happy Coding!&lt;/p&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/64998938/9359123&quot; rel=&quot;noopener&quot;&gt;A server is already running (Stack Overflow)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@olav_ahrens?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Olav Ahrens R√∏tne&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/solution?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
    </item>
    <item>
      <title>Live Stream Logs to Browser with Rails</title>
      <dc:creator>Prabin Poudel</dc:creator>
      <pubDate>Sun, 20 Jun 2021 15:55:03 +0000</pubDate>
      <link>https://dev.to/truemark/live-stream-logs-to-browser-with-rails-32hd</link>
      <guid>https://dev.to/truemark/live-stream-logs-to-browser-with-rails-32hd</guid>
      <description>&lt;p&gt;Live streaming log files have fascinated me for a long time now. I saw the use of live streaming log when I deployed an app in &lt;a href=&quot;https://www.netlify.com/&quot; rel=&quot;noopener&quot;&gt;Netlify&lt;/a&gt; for the first time. While deploying, Netlify displays the server log right in the browser so that as a user, we know what's happening in the background.&lt;/p&gt;

&lt;p&gt;If you are confused on what I am talking about right now, you can also replicate that behavior if you open the log file with the command &lt;code&gt;tail -f&lt;/code&gt; prepended to the file name like this: &lt;code&gt;tail -f log/development.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now if you fire the rails server and access any route, that changes will be appended to the file and shown in the bash where we have opened &lt;code&gt;log/development.log&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  
  
  Backstory
&lt;/h2&gt;

&lt;p&gt;In one of the projects I am working on, we have invoicing module and we can create invoices with one click from the browser. Invoicing can take a long time to complete and user will have to wait there without knowing what's going in the background. That was when I began to wonder, what if we also try same thing like Netlify and show the logs to user as it happens in our Rails app server, that will be so cool.&lt;/p&gt;

&lt;p&gt;Then I began my research and found this gem of a &lt;a href=&quot;https://tenderlovemaking.com/2012/07/30/is-it-live.html&quot; rel=&quot;noopener&quot;&gt;tutorial&lt;/a&gt; from &lt;a href=&quot;https://twitter.com/tenderlove&quot; rel=&quot;noopener&quot;&gt;Aaron Patterson&lt;/a&gt; himself. &lt;/p&gt;

&lt;p&gt;It was a 9 years old tutorial but had what we needed to start with. He streams some static code and not the actual file content but that was the start to know more about streaming in Rails. After a day of more research and trial and error, I got the live streaming for the log file to the browser from Rails app working.&lt;/p&gt;

&lt;h2&gt;
  
  
  Implementation
&lt;/h2&gt;

&lt;p&gt;Let's see step by step how I implemented live log streaming in the browser from Rails App.&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 1: Create a new Rails app
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;rails new file-streaming-app&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 2: Generate a controller for streaming files manually
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;touch live_file_streams_controller.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following code inside&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LiveFileStreamsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are not using rails generator because it also generates view and helpers; which we don't need in this tutorial.&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 3: Add route for rendering the view
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:live_streams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:log_file&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Step 4: Stream with &quot;response.stream&quot;
&lt;/h3&gt;

&lt;p&gt;To enable streaming in our Rails app, we will be using &lt;code&gt;response.stream&lt;/code&gt; from &lt;code&gt;ActionController::Streaming&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LiveStreamsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_file&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read more about response streaming in &lt;a href=&quot;https://api.rubyonrails.org/classes/ActionController/Streaming.html&quot; rel=&quot;noopener&quot;&gt;official Rails documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 5: View response in browser
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fire rails server &lt;code&gt;rails s&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;localhost:3000/live_streams/log_file&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;You will see &quot;hello world&quot; printed 5 times in the browser&lt;/li&gt;
&lt;li&gt;Response is printed at the same time, even though we used sleep function in between &lt;code&gt;response.write&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--U-i1FRR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhwazgg9j30z3y9vwv6e.png&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--U-i1FRR8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhwazgg9j30z3y9vwv6e.png&quot; alt='&quot;hello world&quot; is printed 5 times in the browser'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's print them one by one next.&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 6: Include &lt;code&gt;ActionController::Live&lt;/code&gt; for live streaming response
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LiveStreamsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Live&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_file&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;ActionController::Live&lt;/code&gt; adds streaming functionality to all actions inside the controller. &lt;/p&gt;

&lt;h3&gt;
  
  
  Step 7: Response stays the same. What happened?
&lt;/h3&gt;

&lt;p&gt;There is a bug inside the rack gem which is sending response at once instead of live streaming. You can find the issue discussion &lt;a href=&quot;https://github.com/rack/rack/issues/1619&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As suggested in one of the &lt;a href=&quot;https://github.com/rack/rack/issues/1619#issuecomment-848460528&quot; rel=&quot;noopener&quot;&gt;comments&lt;/a&gt; in the discussion, let's add &quot;Last-Modified&quot; in &lt;code&gt;response.headers&lt;/code&gt; with current time.&lt;/p&gt;

&lt;p&gt;Let's also add &quot;Content-Type&quot; to &lt;code&gt;response.headers&lt;/code&gt; with &quot;text/event-stream&quot; so that our response are actually streamed and displayed one by one.&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_file&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text/event-stream'&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# hack due to new version of rack not supporting sse and sending all response at once: https://github.com/rack/rack/issues/1619#issuecomment-848460528&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Last-Modified'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;httpdate&lt;/span&gt;

  &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should be able to see &quot;hello world&quot; printed one by one like below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--RTiFQaDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq0kcg3bxpha0snfdawt.gif&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--RTiFQaDa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq0kcg3bxpha0snfdawt.gif&quot; alt='Stream &quot;hello world&quot; 5 times'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wow! We live streamed something! ü§©&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 8: Server side events
&lt;/h3&gt;

&lt;p&gt;From Aaron's blog:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you‚Äôve never heard of Server-Sent Events (from here on we will be calling them SSEs), it‚Äôs a feature of HTML5 that allows long polling, but is built in to the browser. Basically, the browser keeps a connection open to the server, and fires an event in JavaScript every time the server sends data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can read further about it &lt;a href=&quot;https://www.html5rocks.com/en/tutorials/eventsource/basics/&quot; rel=&quot;noopener&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 9: Create &quot;file_streaming_app/sse.rb&quot;
&lt;/h3&gt;

&lt;p&gt;To emit events and format the response instead of inside controller, we will be creating a new class called &lt;code&gt;file_streaming_app/sse&lt;/code&gt; inside &lt;code&gt;lib&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Create the file with: &lt;code&gt;touch lib/file_streaming_app/sse.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add following to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'json'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;FileStreamingApp&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SSE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@io&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Step 10: Use &quot;SSE&quot; class inside the controller
&lt;/h3&gt;



&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file_streaming_app/sse'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LiveStreamsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text/event-stream'&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# hack due to new version of rack not supporting sse and sending all response at once: https://github.com/rack/rack/issues/1619#issuecomment-848460528&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Last-Modified'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;httpdate&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;sse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FileStreamingApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;sse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ensure&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Response shouldn't have much different apart from &lt;code&gt;hello world&lt;/code&gt; changed to &lt;code&gt;&quot;hello world&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: Only copy changed lines (Don't override the controller)&lt;/p&gt;

&lt;p&gt;Next, we will stream our actual log file.&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 11: Add &quot;filewatcher&quot; gem to watch changes in file
&lt;/h3&gt;

&lt;p&gt;To know when file is changed, we will be using file watcher gem. &lt;a href=&quot;https://github.com/filewatcher/filewatcher&quot; rel=&quot;noopener&quot;&gt;File watcher&lt;/a&gt; gem watches the files for different events (or changes) like create, update, delete. It was the best gem I could find for our purpose, I tried other gems like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;rb-fsevent&lt;/strong&gt; doesn't fire the event when file is modified in background by rails, had to do &lt;code&gt;touch log/development.log&lt;/code&gt; every time to run the code inside watcher. Also, it didn't support file path, instead we had to always provide folder path.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ruby-filewatch&lt;/strong&gt; was working flawlessly but the project was not maintained actively&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;listen&lt;/strong&gt; rails uses this gem to auto load files after change so we don't have to reload server after every change to file. This also acted in the same way as rb-fsevent
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'filewatcher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 1.1.1'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# specify latest version here and not 1.1.1, this was the latest at the time of writing this tutorial&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't forget to install gem with &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 12: Create &quot;file_streaming_app/log_file.rb&quot;
&lt;/h3&gt;

&lt;p&gt;To get all lines inside the file in array, we will be creating a new class called &lt;code&gt;file_streaming_app/log_file&lt;/code&gt; inside &lt;code&gt;lib&lt;/code&gt; folder. This should normally have been a util, but to show only newly added lines, we need instance variable to store the last line position, hence we will be creating new class.&lt;/p&gt;

&lt;p&gt;Create the file with: &lt;code&gt;touch lib/file_streaming_app/log_file.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add following code to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;FileStreamingApp&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogFile&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;added_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readlines&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;File.open(file_path).readlines&lt;/code&gt; returns all array of all lines inside the file.&lt;/p&gt;

&lt;p&gt;For now, we will only print last 20 lines of the file when it is modified, hence &lt;code&gt;added_lines&lt;/code&gt; is doing what we want with &lt;code&gt;.last(20)&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 13: Stream file content when it is modified
&lt;/h3&gt;

&lt;p&gt;Update controller with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text/event-stream'&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# hack due to new version of rack not supporting sse and sending all response at once: https://github.com/rack/rack/issues/1619#issuecomment-848460528&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Last-Modified'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;httpdate&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;sse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FileStreamingApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;log_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'log/development.log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FileStreamingApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;LogFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# watch development.log file for changes&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Filewatcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;watch&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;eql?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'updated'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;file_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;added_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;sse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ensure&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we are using &lt;code&gt;FileWatcher&lt;/code&gt; to watch for changes in the file given in the &lt;code&gt;log_file_path&lt;/code&gt; i.e. we are watching changes inside &lt;code&gt;log/development.log&lt;/code&gt; only.&lt;/p&gt;

&lt;p&gt;We only want to stream the content of file when something is added to it, so we are ignoring other event types with &lt;code&gt;next unless event_type.to_s.eql?('updated')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, we are sending array of lines inside the file to write to browser with &lt;code&gt;sse.write(file_lines)&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 15: Update &quot;SSE&quot; to print array of file lines
&lt;/h3&gt;

&lt;p&gt;Previously, we were just rendering string and using JSON to dump that data and print to browser. But now, we have array of lines from the file and we need to print them line by line in the browser.&lt;/p&gt;

&lt;p&gt;Let's update the SSE class with following code to reflect the changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;file_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Step 16: View changes in file in the browser
&lt;/h3&gt;

&lt;p&gt;To emit the event and print the content of file to the browser we will first need to find a way to modify the &lt;code&gt;development.log&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reload the browser where streaming url is open&lt;/li&gt;
&lt;li&gt;In new tab, open rails default view: &lt;code&gt;localhost:3000&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;When this page loads, log file will be modified and streaming api will be called, which then renders the last 20 lines from the file to the browser&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--GkHe1k7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m3b15t9xg84w6q3b0ex.gif&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--GkHe1k7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2m3b15t9xg84w6q3b0ex.gif&quot; alt=&quot;Live stream last 20 lines of log file&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have now streamed the file content every time the file is modified, next step for us will be to stream only added lines.&lt;/p&gt;

&lt;h3&gt;
  
  
  Step 17: Parallel Requests
&lt;/h3&gt;

&lt;p&gt;By default, in Rails development environment, requests are not served parallelly and you may be facing the issue of browser just hanging when trying to open two urls at the same time.&lt;/p&gt;

&lt;p&gt;To resolve that, let's add a little hack from &lt;a href=&quot;https://stackoverflow.com/a/23607885/9359123&quot; rel=&quot;noopener&quot;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Add the following to your &lt;code&gt;config/environments/development.rb&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# other configurations&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Lock&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  
  
  Step 18: Stream only changed lines in the log file
&lt;/h3&gt;

&lt;p&gt;For streaming only changed lines, &quot;LogFile&quot; will need to remember the position of the last line in the log file before the change and render lines after that position only.&lt;/p&gt;

&lt;p&gt;Let's update the &lt;code&gt;LogFile&lt;/code&gt; to make that possible.&lt;br&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight js-code-highlight&quot;&gt;
&lt;pre class=&quot;highlight ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogFile&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;added_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readlines&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt;

    &lt;span class=&quot;vi&quot;&gt;@last_known_line_position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_line_position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;start_position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@last_known_line_position&lt;/span&gt;

    &lt;span class=&quot;vi&quot;&gt;@last_known_line_position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;file_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initial_line_position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zero?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# print last 20 lines from the file if event is emitted for the first time&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;initial_line_position&lt;/code&gt; returns the start position of the line in the file to display in the browser when the event is emitted for the first time.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@last_known_line_position ||= initial_line_position(total_lines)&lt;/code&gt; sets the position of the line in the file during previous event. If the &lt;code&gt;@last_known_line_position&lt;/code&gt; is empty, &lt;code&gt;initial_line_position&lt;/code&gt; will be used.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;file_content[start_position, total_lines]&lt;/code&gt; gets array items from the given start and end position and we get lines that were added recently.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--VH0gJwLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0028pywnclcq4ot2e75.gif&quot; class=&quot;article-body-image-wrapper&quot;&gt;&lt;img src=&quot;https://res.cloudinary.com/practicaldev/image/fetch/s--VH0gJwLI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0028pywnclcq4ot2e75.gif&quot; alt=&quot;Stream only changed lines from log file&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  
  
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you have reached this section, we have come far together. Congratulations!&lt;/p&gt;

&lt;p&gt;Though in this tutorial, we only streamed log file; this implementation applies for streaming any files.&lt;/p&gt;

&lt;p&gt;Code of this blog is available at &lt;a href=&quot;https://github.com/coolprobn/log-file-live-streamer&quot; rel=&quot;noopener&quot;&gt;Log File Live Streamer [Github]&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Thank you for reading. Happy live streaming!&lt;/p&gt;

&lt;h2&gt;
  
  
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tenderlovemaking.com/2012/07/30/is-it-live.html&quot; rel=&quot;noopener&quot;&gt;Is it live? [Aaron Patterson's Blog]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  
  
  Image Credits
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover Image by &lt;a href=&quot;https://unsplash.com/@depthcontroller?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Nadjib BR&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/s/photos/netflix?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>rails</category>
      <category>ruby</category>
    </item>
  </channel>
</rss>
