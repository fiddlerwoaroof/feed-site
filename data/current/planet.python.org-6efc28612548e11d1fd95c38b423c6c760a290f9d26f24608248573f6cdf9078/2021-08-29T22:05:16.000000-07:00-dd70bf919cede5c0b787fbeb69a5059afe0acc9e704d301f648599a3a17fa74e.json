{
  "title":"Mike Driscoll: PyDev of the Week: Joshua Ebner",
  "date":"2021-08-29T22:05:16.000000-07:00",
  "author":null,
  "id":"https://www.blog.pythonlibrary.org/2021/08/30/pydev-of-the-week-joshua-ebner/",
  "link":"https://www.blog.pythonlibrary.org/2021/08/30/pydev-of-the-week-joshua-ebner/",
  "content":"<p>This week we welcome Joshua Ebner (<a href=\"https://twitter.com/Josh_Ebner\" rel=\"noopener\">@Josh_Ebner</a>) as our PyDev of the Week. Joshua trains people in data science at <a href=\"http://sharpsightlabs.com\" rel=\"noopener\">Sharp Sight</a>. </p>\n<p>Let’s take some time to get to know Joshua better!</p>\n<p><strong>Can you tell us a little about yourself (hobbies, education, etc):</strong></p>\n<p>Professionally, I own a data science training company, <a href=\"http://sharpsightlabs.com\">Sharp Sight</a>.</p>\n<p>My background is somewhat unrelated.  I graduated from Cornell with a degree in Physics, but I decided that I didn’t want to be a physicist.  </p>\n<p>Through a series of fortunate events, I had an opportunity to join the Marketing Analytics department of Bank of America.  This was <em>way</em> before data science was popular and it was just dumb luck that I sort of fell into the opportunity.</p>\n<p>Early in my career, I still wasn’t sure what I wanted to do, and I wasn’t sure that I would stay in the analytics industry.  But at some point around 2011 or 2012, it became obvious that data science and analytics were going to be huge, so I doubled down and started learning everything I could about all of the emerging tools and techniques.</p>\n<p>Through another series of fortunate events, I landed a job at Apple as a data scientist.  I stayed there for a while, and then left to start my own company.</p>\n<p><strong>Why did you start using Python?</strong></p>\n<p>When I got my start in the analytics industry, we were using SAS and SQL almost exclusively.</p>\n<p>If you’re not familiar, SAS is a statistical programming language used for data analytics.  Back then, it was practically the only language used for data analytics, and certainly the analytics language of choice for large banks and more traditional Fortune 500 companies (e.g., ad agencies, pharmaceutical companies, etc).</p>\n<p>Around 2012, the industry began to change.  More companies in Silicon Valley began focusing on data (although some, like Google, had been data-driven for much longer).  I started seeing new job postings in San Francisco and Silicon Valley for analytics jobs, but they were starting to call it something different: data science.</p>\n<p>And whereas the industry had previously used SAS, around 2012, you started seeing more job posts and articles that talked about R and Python.</p>\n<p>It was obvious to me that SAS was likely to become a dinosaur.  Big tech companies started building data science teams, and almost all of them used Python, and to a lesser extent, R.</p>\n<p>It was clear that the industry was moving to R and Python, so I started learning them.</p>\n<p><strong>What other programming languages do you know and which is your favorite?</strong></p>\n<p>Python and R are my main programming languages right now.  I also know quite a bit of SQL, although I use it less now that I’m no longer in a big enterprise setting.</p>\n<p>I’m not sure that I have an overall favorite.  I think that different languages are toolkits that are good at different things.</p>\n<p>When I want to wrangle, analyze, and visualize my data, Python and R are both excellent.</p>\n<p>If I want to automate or build a system, I prefer Python, because the syntax is easy to write and easy to read.  Compared to R, in my opinion, Python is much better for more traditional software building.</p>\n<p>Python is also better overall for machine learning and deep learning.</p>\n<p>So Python and R are the two big languages that I use, but I also have a few other tricks up my sleeve. </p>\n<p><strong>What projects are you working on now?</strong></p>\n<p>I’m mostly working on building more data science courses.</p>\n<p>At Sharp Sight, we teach data science.  In particular, I’ve developed a training system that helps people memorize syntax and become “fluent” in writing code.  </p>\n<p>If you’ve ever forgotten a piece of syntax, and had to google it, you know that forgetting syntax is a major drag on productivity.  I created a training system to solve this by:</p>\n<ol>\n<li>breaking syntax down into small learnable units</li>\n<li>giving people a training system to memorize those syntax units</li>\n<li>showing students how to put the pieces back together to do real work</li>\n</ol>\n<p>To give credit where credit is due, this system is largely based on the metalearning system described by Tim Ferriss in <em>The 4-Hour Chef</em> (a book actually about learning, instead of cooking).  It also incorporates insights from cognitive psychology to “hack” your memory so you can memorize syntax. I’ve spent many years studying “how to learn” and I’ve applied good learning principles to our courses for mastering data science.</p>\n<p>With all of that said, I’m currently in then process of creating a course on Plotly (for data visualization in Python) and a course on Scikit Learn (for machine learning in Python).</p>\n<p><strong>Which Python libraries are your favorite (core or 3rd party)?</strong></p>\n<p>Oh man, Python has lots to choose from.</p>\n<p>At my core, I’m a data scientist, so my favorite Python libraries are data-related.</p>\n<p>Pandas is the one that I probably use the most, and it’s really great in many ways.  Having said that, it pains me to look at most Pandas code.  Unfortunately, many people use it in ways that make data wrangling and data analysis complicated, hard to understand, and hard to debug.</p>\n<p>Over the years, I’ve developed a somewhat unique style in how I use Pandas that allows you to do complicated data transformations in relatively compact blocks of code (this technique is a lot like dplyr pipes in R, or pipes in Unix).  If you use Pandas this way, it’s a lot of fun to use.</p>\n<p>I’m also a really big proponent of data visualization.  I think that data visualization is dramatically underrated.  Having said that, I really like Seaborn for static data visualizations.  The syntax is much easier to learn and use than Matplotlib, but it’s also built on top of Matplotlib. So Seaborn gives you the power of Matplotlib, but with added simplicity.</p>\n<p>Additionally, I’m increasingly interested in Plotly.  It’s very powerful, it has a clean syntax, and it also provides a toolkit for building dashboards and interactive charts.</p>\n<p><strong>You have multiple data science courses on your site. How did you decide which courses to make?</strong></p>\n<p>I think that data science is going to be very important over the next few decades, but learning data science is often very challenging.  I created our courses to be the fastest, most efficient way to learn data science, without wasting time and money.</p>\n<p>That said, there’s a lot inside of that statement, so let me unpack it.</p>\n<p>It’s obviously a bit trite to say that “X is going to change the world,”  but I really do believe that data science and machine learning will change almost everything.  </p>\n<p>In a somewhat recent <a href=\"https://www.forbes.com/sites/randalllane/2018/08/30/bezos-unbound-exclusive-interview-with-the-amazon-founder-on-what-he-plans-to-conquer-next/\" rel=\"noopener\">Forbes article</a>, Jeff Bezos said:</p>\n<blockquote><p>\n“The most interesting thing about machine learning, as opposed to a lot of other technologies, is just how horizontal it’s going to be … There’s not a single category of business or government or anything, really, that can’t improve itself.”\n</p></blockquote>\n<p>Machine learning and data science will impact everything.  In turn, they will probably be very valuable for individuals to learn.</p>\n<p>But there is a lot of bad books and bad advice out there on how to get started and what to focus on.</p>\n<p>I’ve been somewhat lucky, in that I had an analytics job really early on. And early in my career, I had good mentorship about some parts of the data science process.</p>\n<p>But since I started in the data industry over a decade ago, it has changed substantially.  I needed to learn new tools and I didn’t always have good mentors for those things.  I wasted a <em>lot</em> of time on things that I didn’t really need and many of the resources that I used were confusing.</p>\n<p>So, I faced many challenges as I learned and upgraded my skills.</p>\n<p>But my industry experience – along with the challenges I’ve had upskilling and learning data science – has given me a unique perspective on what students need to learn, and how to learn it.</p>\n<p>I created courses that help people learn the right things, in the right order, and I show my students how to practice so that they remember all of the important syntax permanently.</p>\n<p>In some sense, I simply created the courses that I wish I had years ago.</p>\n<p>With all that said, if any of your readers are interested in learning data science here is what I recommend:</p>\n<ul>\n<li>Focus on the fundamentals.  Focus on data wrangling (Pandas, Numpy), data visualization (Seaborn, Plotly), and data analysis (how to use wrangling + visualization together to find insights).</li>\n<li>Avoid advanced math in the beginning (unless you’re in academia).  Most math is overrated for beginners in industry.</li>\n<li>Once you’ve mastered the basics, use that as a foundation to learn intermediate to advanced skills, like machine learning, deep learning, and geospatial visualization.</li>\n</ul>\n<p>And if you want to connect or have a question, just reach out to me on Twitter at <a href=\"https://twitter.com/Josh_Ebner\" rel=\"noopener\">@Josh_Ebner</a>.</p>\n<p><strong>Is there anything else you’d like to say?</strong></p>\n<p>Over the next decade or two, I think we’re going to see a major shift in the software and tech industry.</p>\n<p>Increasingly, I think that almost all software is going to be data-driven software.  </p>\n<p>In this regard, I don’t mean that data will be incidental to software or merely part of how it operates, but rather that data will be central to most software.</p>\n<p>Another way of saying this, is that most software will involve machine learning. We’re going to increasingly build machine learning elements into almost all software</p>\n<p>Andrej Karpathy, the director of AI at Tesla, recently called this “Software 2.0.”</p>\n<p>In a <a href=\"https://karpathy.medium.com/software-2-0-a64152b37c35\" rel=\"noopener\">blog post</a>, Karpathy described it like this: </p>\n<blockquote><p>\n“Neural networks are not just another classifier, they represent the beginning of a fundamental shift in how we develop software. They are Software 2.0.</p>\n<p>… we are witnessing a massive transition across the industry where of a lot of 1.0 code is being ported into 2.0 code. Software (1.0) is eating the world, and now AI (Software 2.0) is eating software.”\n</p></blockquote>\n<p>If this is the case, then going forward, most software will have machine learning built in as a critical component.  This Software 2.0 will actively learn from data streams.  And it will become even more important as we digitize the world and add sensors to almost everything (a subject discussed in the book <a href=\"https://www.amazon.com/The-Second-Machine-Age-audiobook/dp/B00HFX8JMQ\" rel=\"noopener\">The Second Machine Age</a>, by Brynjolfsson and McAfee).</p>\n<p>In turn, I think that data science and machine learning will become increasingly important for developers.  Most developers will need to know how to build, train, and maintain machine learning systems … or at least, build the infrastructure around them.</p>\n<p>The next few decades will be really exciting.  But also, challenging.  Many Python developers will need to skill up and learn some data science and ML.</p>\n<p>The question is, how?  Where do you start?</p>\n<p>I firmly believe that the foundation of machine learning and data science is:</p>\n<ul>\n<li>data wrangling</li>\n<li>data visualization</li>\n<li>data analysis</li>\n</ul>\n<p>I strongly think that <a href=\"https://www.sharpsightlabs.com/blog/math-for-data-science/\" rel=\"noopener\">math is overrated</a> for data science and machine learning beginners, but data wrangling, data visualization, and data analysis are <a href=\"https://www.sharpsightlabs.com/blog/machine-learning-prerequisite-isnt-math/\" rel=\"noopener\">used for almost everything</a>, including machine learning.  So those three are the essential foundations that you need to know if you want to get started with machine learning or data science more broadly. </p>\n<p>So to sum up, if you want to learn foundational data science in Python, here are my recommendations:</p>\n<ul>\n<li>learn Pandas for data wrangling\n<li>learn Seaborn or Plotly for data visualization\n<li>learn to combine data wrangling and data visualization to analyze data.  (Most data analysis is simply using data wrangling + data visualization to “find insights in data”)\n</li></li></li></ul>\n<p>Those are the foundations.  Once you know those foundations, then you can move on to Scikit learn for machine learning.  But make sure that you don’t get “shiny object” syndrome and try to jump to the sexiest stuff first.  Master the foundations first, and you’ll be much better prepared once you start learning machine learning, deep learning, and other advanced topics.</p>\n<p>And finally, if you want to save yourself the time and frustration of trying to figure it all out yourself, consider one of our courses at <a href=\"http://sharpsightlabs.com/course-directory/\" rel=\"noopener\">sharpsightlabs.com/course-directory/</a>.</p>\n<p><strong>Thanks for doing the interview, Joshua!</strong></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.blog.pythonlibrary.org/2021/08/30/pydev-of-the-week-joshua-ebner/\">PyDev of the Week: Joshua Ebner</a> appeared first on <a rel=\"nofollow\" href=\"https://www.blog.pythonlibrary.org\">Mouse Vs Python</a>.</p>"
}