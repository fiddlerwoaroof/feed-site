{
  "title":"Python Bytes: #310 Calling All Tools for Readmes",
  "date":"2022-11-15T08:00:00.000000Z",
  "author":null,
  "id":"https://pythonbytes.fm/episodes/show/310/calling-all-tools-for-readmes",
  "link":"https://pythonbytes.fm/episodes/show/310/calling-all-tools-for-readmes",
  "content":"&lt;a href='https://www.youtube.com/watch?v=jH9scQESXJY' style='font-weight: bold;'&gt;Watch on YouTube&lt;/a&gt;&lt;br&gt;\n&lt;br&gt;\n\n&lt;p&gt;&lt;strong&gt;About the show&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Sponsored by &lt;a href=&quot;http://pythonbytes.fm/foundershub2022&quot;&gt;&lt;strong&gt;Microsoft for Startups Founders Hub&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Special guest: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://amhopkins.com/&quot;&gt;Adam Hopkins&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://sanicbook.com/&quot;&gt;Python Web Development with Sanic&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Brian #1:&lt;/strong&gt; &lt;a href=&quot;https://pybit.es/articles/tips-for-clean-code-in-python/&quot;&gt;&lt;strong&gt;Tips for clean code in Python&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Bob Belderbos&lt;/li&gt;\n&lt;li&gt;Generally some great tips to think about to keep code maintainable:\n&lt;ul&gt;\n&lt;li&gt;Smaller units. Break things up into single responsibility. SRP: Single Responsibility Principle&lt;/li&gt;\n&lt;li&gt;Move magic numbers into constants or parameters.&lt;/li&gt;\n&lt;li&gt;Avoid global scope. (even though it’s not really global)&lt;/li&gt;\n&lt;li&gt;Use linters and auto-formatters.&lt;/li&gt;\n&lt;li&gt;Use very narrow try/except blocks.&lt;/li&gt;\n&lt;li&gt;Idiomatic Python. (Although I agree, this is a weird one as it’s hard for new people to follow).&lt;/li&gt;\n&lt;li&gt;Pay attention to data structure choice and learn to utilize standard structures and those in collections.&lt;/li&gt;\n&lt;li&gt;Use the standard libary.&lt;/li&gt;\n&lt;li&gt;Use mappings&lt;/li&gt;\n&lt;li&gt;Flat is better than nested.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;But I’m gonna focus on the “smaller units” because it applies to modules as well.\n&lt;ul&gt;\n&lt;li&gt;Try to keep modules organized such that you can keep relevant and related code concepts in your head.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Michael #2:&lt;/strong&gt; &lt;strong&gt;Mastodon is picking up speed&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://fosstodon.org/web/@pythonbytes&quot;&gt;&lt;strong&gt;@pythonbytes@fosstodon.org&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://fosstodon.org/@mkennedy&quot;&gt;&lt;strong&gt;@mkennedy@fosstodon.org&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://fosstodon.org/@brianokken&quot;&gt;&lt;strong&gt;@brianokken@fosstodon.org&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://fosstodon.org/@admhpkns&quot;&gt;@admhpkns@fosstodon.org&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;I’m calling this a “Mastodon First” strategy rather than “Let’s burn down Twitter and scatter”&lt;/li&gt;\n&lt;li&gt;Just &lt;a href=&quot;https://talkpython.fm/episodes/show/390/mastodon-for-python-devs&quot;&gt;&lt;strong&gt;did a Talk Python&lt;/strong&gt;&lt;/a&gt; about it&lt;/li&gt;\n&lt;li&gt;Money in mouth: I became &lt;a href=&quot;https://www.patreon.com/fosstodon&quot;&gt;&lt;strong&gt;a patreon of Fosstodon&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://patreon.com/mastodon&quot;&gt;&lt;strong&gt;Mastodon’s company&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Mastodon is open source, &lt;a href=&quot;https://github.com/mastodon/mastodon&quot;&gt;&lt;strong&gt;find it here&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://www.technologyreview.com/2022/11/11/1063162/twitters-imminent-collapse-could-wipe-out-vast-records-of-recent-human-history/&quot;&gt;&lt;strong&gt;Twitter’s potential collapse could wipe out vast records of recent human history&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Python’s API for Mastodon: &lt;a href=&quot;https://pypi.org/project/toot/&quot;&gt;&lt;strong&gt;toot&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Download a proper Twitter archive with &lt;a href=&quot;https://mathstodon.xyz/@timhutton/109316834651128246&quot;&gt;&lt;strong&gt;this Python script&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://fosstodon.org/@mkennedy/109334951352292627&quot;&gt;Integrated the API into stream deck&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;You can install it as a PWA:\n&lt;img src=&quot;https://python-bytes-static.nyc3.digitaloceanspaces.com/install-mastodon.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Adam&lt;/strong&gt; &lt;strong&gt;#3:&lt;/strong&gt; &lt;strong&gt;Correction to Sanic Worker Manager in v22.9&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://pythonbytes.fm/episodes/show/308/conference-season-is-heating-up&quot;&gt;&lt;strong&gt;Episode #308&lt;/strong&gt;&lt;/a&gt; covered a recent article published on a new feature in Sanic v22.9 &lt;/li&gt;\n&lt;li&gt;Blog article: &lt;strong&gt;&lt;a href=&quot;https://amhopkins.com/posts/background-job-worker.html&quot;&gt;Pushing work to the background of your Sanic app&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;The segment focused on the celery-like job queue in Sanic&lt;/li&gt;\n&lt;li&gt;Clarification:\n&lt;ul&gt;\n&lt;li&gt;Goal of the feature is to bring a consistent development experience from dev thru prod&lt;/li&gt;\n&lt;li&gt;Enables usage of multiprocessing-safe shared objects&lt;/li&gt;\n&lt;li&gt;Simple pattern for managing multiple long-running processes&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://sanic.dev/en/guide/release-notes/v22.9.html&quot;&gt;Release notes for Sanic v22.9&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://sanic.dev/en/guide/deployment/manager.html&quot;&gt;Sanic documentation on the Worker Manager&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Brian #4:&lt;/strong&gt; &lt;strong&gt;Some FastAPI news, and some great READMEs.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://fastapi.tiangolo.com/release-notes/#0870&quot;&gt;FastAPI 0.87.0&lt;/a&gt; has some interesting notes\n&lt;ul&gt;\n&lt;li&gt;Upgraded &lt;a href=&quot;https://github.com/encode/starlette/releases/tag/0.21.0&quot;&gt;Starlette&lt;/a&gt;, which includes TestClient based on HTTPX instead of Requests&lt;/li&gt;\n&lt;li&gt;Since that might break some peoples use of TestClient, someone named Kludex built &lt;a href=&quot;https://github.com/Kludex/bump-testclient&quot;&gt;bump-testclient&lt;/a&gt; to help automatically convert test code to the new interface. That’s so cool!&lt;/li&gt;\n&lt;li&gt;Use &lt;a href=&quot;https://pypi.org/project/ruff/&quot;&gt;Ruff&lt;/a&gt; for linting&lt;/li&gt;\n&lt;li&gt;Add a &lt;a href=&quot;https://fastapi.tiangolo.com/help-fastapi/#help-maintain-fastapi&quot;&gt;Help Maintain FastAPI&lt;/a&gt; section to the docs that emphasizes that it’s super helpful to:\n&lt;ul&gt;\n&lt;li&gt;Help others with issues&lt;/li&gt;\n&lt;li&gt;Review PRs&lt;/li&gt;\n&lt;li&gt;Both of those sections have other expanded sections to describe what that means.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;The FastAPI commitment to great documentation is amazing and worth emulating.&lt;/li&gt;\n&lt;li&gt;It also has a really good &lt;a href=&quot;https://github.com/tiangolo/fastapi&quot;&gt;README&lt;/a&gt;.\n&lt;ul&gt;\n&lt;li&gt;Interesting sponsors section. Cool way for a popular project to get maintenance funding.&lt;/li&gt;\n&lt;li&gt;Testimonials. It’s like a sales landing page, which really, a README kinda is.&lt;/li&gt;\n&lt;li&gt;Other common good practices and cool items\n&lt;ul&gt;\n&lt;li&gt;Images&lt;/li&gt;\n&lt;li&gt;Some use of collapsable sections.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Other notable READMEs\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://pypi.org/project/pytest/&quot;&gt;pytest&lt;/a&gt; \n&lt;ul&gt;\n&lt;li&gt;short example right away to show how simple it can be to use.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/Textualize/textual&quot;&gt;textual&lt;/a&gt; and &lt;a href=&quot;https://github.com/Textualize/rich&quot;&gt;rich&lt;/a&gt; \n&lt;ul&gt;\n&lt;li&gt;great use of images and short examples&lt;/li&gt;\n&lt;li&gt;highlighting often missed features, such as pretty and inspect&lt;/li&gt;\n&lt;li&gt;Utilizing expandable/collapsable sections for longer examples&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://pypi.org/project/httpx/&quot;&gt;httpx&lt;/a&gt; \n&lt;ul&gt;\n&lt;li&gt;like pytest, shows a small example quickly, &lt;/li&gt;\n&lt;li&gt;redirects many other sections to more thorough docs.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Michael #5:&lt;/strong&gt; &lt;a href=&quot;https://twitter.com/btskinn/status/1587987145444163585?s=12&amp;amp;t=tE1LoCVynDVdhocfaMhNHw&quot;&gt;&lt;strong&gt;Closevember&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;An annual event focused on sustainable open source development practices and maintainer well-being.&lt;/li&gt;\n&lt;li&gt;Let's support open source maintainers by helping them close issues and pull requests throughout November.&lt;/li&gt;\n&lt;li&gt;Over at &lt;a href=&quot;https://closember.org&quot;&gt;&lt;strong&gt;closember.org&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;Contributing&lt;/em&gt; to a project carries a number of responsibilities, in order to make it as easy as possible for a project to receive that contribution.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;For Maintainers: How to Get Ready&lt;/strong&gt; (&lt;a href=&quot;https://closember.org&quot;&gt;&lt;strong&gt;see site&lt;/strong&gt;&lt;/a&gt;)\n&lt;ul&gt;\n&lt;li&gt;If you only want assistance with closing some issues and PRs, then tag your repo with &lt;code&gt;closember&lt;/code&gt; and you’re all set.&lt;/li&gt;\n&lt;li&gt;One thing that we often find helpful is to declutter our physical and digital environment: tidying our desks a bit, decluttering our computers’ desktops, unsubscribing from some email lists ... that sort of thing.&lt;/li&gt;\n&lt;li&gt;I did this this month actually. Spent 6 hours completely rebuilding my desk to have zero wires and look tidy and clean (hint: 3m of industrial velcro and things stuck upside down) and formatted my computer to a fresh OS after two years.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;For the Community: How to Participate&lt;/strong&gt; (&lt;a href=&quot;https://closember.org&quot;&gt;&lt;strong&gt;see site&lt;/strong&gt;&lt;/a&gt;)\n&lt;ul&gt;\n&lt;li&gt;If you’ve never used GitHub before, your first step is going to be &lt;a href=&quot;https://github.com/signup&quot;&gt;signing up for a free account&lt;/a&gt;.&lt;/li&gt;\n&lt;li&gt;Also, if you’re super new to git: &lt;a href=&quot;https://talkpython.fm/git&quot;&gt;&lt;strong&gt;talkpython.fm/git&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;If you’ve opened issues or PRs on projects in the past, you can start by taking a look at &lt;a href=&quot;https://github.com/issues&quot;&gt;your own GitHub issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/pulls&quot;&gt;your own PRs&lt;/a&gt; to see if any of them are outdated or have already been fixed—if so, close them! &lt;/li&gt;\n&lt;li&gt;After that, start browsing projects: take a look at your favorite projects and see if they’ve been tagged with &lt;code&gt;closember&lt;/code&gt;, or browse the &lt;a href=&quot;https://github.com/topics/closember&quot;&gt;list of&lt;/a&gt; &lt;a href=&quot;https://github.com/topics/closember&quot;&gt;closember&lt;/a&gt; &lt;a href=&quot;https://github.com/topics/closember&quot;&gt;projects&lt;/a&gt;.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Check out the close boards (on the site)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Adam&lt;/strong&gt; &lt;strong&gt;#6:&lt;/strong&gt; &lt;strong&gt;Super simple “Cache with async power” using Cashews&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Recently popped up in my &lt;a href=&quot;https://github.com/explore&quot;&gt;GitHub Explore&lt;/a&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://github.com/Krukov/cashews&quot;&gt;Cashews:&lt;/a&gt; &lt;em&gt;Async cache framework with simple API to build fast and reliable applications&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Super simple out-of-the-box API\n&lt;ul&gt;\n&lt;li&gt;supports in memory, Redis, DiskCache (local sqlite)&lt;/li&gt;\n&lt;li&gt;one-line setup then implemented as a decorator&lt;/li&gt;\n&lt;li&gt;Human-friendly TTL values: example “3h”&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Client-side caching - For example, if you are using Redis backend you do not need to make a network call on every cache request&lt;/li&gt;\n&lt;li&gt;Strategies for common cache issues\n&lt;ul&gt;\n&lt;li&gt;cache hits, early recalculation, soft TTL, resource locking, &lt;strong&gt;rate limiting!&lt;/strong&gt;, circuit breaker&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;Has its own interface for middleware&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Extras&lt;/strong&gt; &lt;/p&gt;\n\n&lt;p&gt;Michael:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=&quot;https://mas.to/@davidism/109342591948410223&quot;&gt;Take the PSF survey&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Adam: &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Voting season is upon us: &lt;strong&gt;Python Steering Council &lt;a href=&quot;https://discuss.python.org/t/steering-council-nominations-are-now-open-2023-term/21062/2&quot;&gt;nominations are open&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Joke:&lt;/strong&gt; &lt;a href=&quot;https://fosstodon.org/web/@mav@hackers.town/109315711016629418&quot;&gt;&lt;strong&gt;JavaScript has been Banned from Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;"
}