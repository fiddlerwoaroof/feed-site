{
  "title":"John Ludhi/nbshare.io: Object Oriented Programming In Python",
  "date":"2021-08-30T21:40:23.000000-07:00",
  "author":null,
  "id":"https://www.nbshare.io/notebook/986482930/Object-Oriented-Programming-In-Python/",
  "link":"https://www.nbshare.io/notebook/986482930/Object-Oriented-Programming-In-Python/",
  "content":"<div tabindex=\"-1\" id=\"notebook\" class=\"border-box-sizing\">\n    <div class=\"container\" id=\"notebook-container\">\n\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h1 id=\"Object-Oriented-Programming-In-Python\">Object Oriented Programming In Python<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Object-Oriented-Programming-In-Python\"/></h1>\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Object-Oriented Programming is a fundamental programming paradigm based on the concepts of objects and classes that can perform certain operations through their <strong>methods</strong>. We'll get into more details about OOP in this notebook.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Note: For this notebook, one should have some understanding of objects and classes.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Python-Classes\">Python Classes<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Python-Classes\"/></h2><p>A class is more or less a blueprint of an object. A class defines all the attributes and methods a certain object can attain. For example, a class for a student could contain attributes such as name, date of birth, phone number etc. and also contain methods which could perform any desired operations on these attributes.</p>\n<p>An important building block of the class is the class' constructor (i.e the <strong>__init__</strong> method). This method is the default method called upon instantiation (creating an instance/object of that class) and is usually where we'll define our attributes..</p>\n<p>Let us understand all the above through an example.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Instantiation of a new Python object ...</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">Student</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mark&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"c1\"># Printing the type of the object to show which class it belongs to</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"c1\"># Retrieving the attribute &quot;name&quot; from the object</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>&lt;__main__.Student object at 0x7f43f0d5a510&gt;\n&lt;class '__main__.Student'&gt;\nMark\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Python-Objects\">Python Objects<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Python-Objects\"/></h2><p>An Object (Instance) is an instantiation of a class. As explained earlier, classes are blueprints that we can use to create objects/instances. The example shown above of the student class explains how to create a class and instantiate an object. Let us add more attributes to that class and test it's functionality.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">dob</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"n\">number</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">Student</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mark&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;07/25/94&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;123456789&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Name: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Birth Date: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">birth_date</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Phone Number: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">phone_number</span><span class=\"p\">)</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>&lt;__main__.Student object at 0x7f43f0c61f50&gt;\n&lt;class '__main__.Student'&gt;\nStudent Name:  Mark\nStudent Birth Date:  07/25/94\nStudent Phone Number:  123456789\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Python-Methods\">Python Methods<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Python-Methods\"/></h2><p>Methods are special types of functions. There is a difference between functions and methods and that is due to the fact that methods are only specific to the classes they belong to whereas functions have more of a global scope. Let us put all this into action and create a method in our student class to calculate the student's age from his/her date of birth.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">dob</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"n\">number</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">age_calculator</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">current_date</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">()</span>\n    <span class=\"n\">student_birthdate</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">strptime</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_date</span><span class=\"p\">,</span> <span class=\"s2\">&quot;%m/</span><span class=\"si\">%d</span><span class=\"s2\">/%y&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">()</span>\n\n    <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">current_date</span> <span class=\"o\">-</span> <span class=\"n\">student_birthdate</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"o\">.</span><span class=\"n\">days</span><span class=\"o\">/</span><span class=\"mi\">365</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">age</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>I have used Python datetime package in above code. To learn more about Python datetime checkout <a href=\"https://www.nbshare.io/notebook/914454993/Python-Datetime-Module/\">here</a>.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">Student</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mark&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;07/25/94&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;123456789&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Name: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Birth Date: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">birth_date</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Phone Number: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">phone_number</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Age: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">age_calculator</span><span class=\"p\">())</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>&lt;__main__.Student object at 0x7f43f0bc3210&gt;\n&lt;class '__main__.Student'&gt;\nStudent Name:  Mark\nStudent Birth Date:  07/25/94\nStudent Phone Number:  123456789\nStudent Age:  27\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Voila!\nNow you have an idea about the building blocks of OOP in Python. Now let us discuss the Object Oriented Programming advantages.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Inheritance-In-Python\">Inheritance In Python<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Inheritance-In-Python\"/></h2><p>One of the main reasons developers tend to use OOP paradigm is inheritance. To understand inheritance, Let us build up on our previous student example and extend it for university students. Now there can be different type of students in a university. For example:</p>\n<ul>\n<li>Undergraduate Students</li>\n<li>Postgraduate Students</li>\n<li>Exchange Students (Undergraduate and Postgraduate)</li>\n</ul>\n<p>For above cases, we can write a class for each type, however, this will make our code very messy and unreadable. Instead, the inheritance feature that OOP provides will help us create abstract parent class from which children classes could <strong>inherit</strong> the common features. So what are the common attributes among all the students type defined above?</p>\n<ul>\n<li>name</li>\n<li>date of birth</li>\n<li>phone number</li>\n<li>address</li>\n</ul>\n<p>Now, Let us write a basic student &quot;parent&quot; class that will include the above basic attributes and then later we will write the child classes for every student type.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">dob</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">number</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">address</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Now that we have created the parent abstract class, let us see how children subclasses can inherit this information and also can have their own unique attributes.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Undergraduate</span><span class=\"p\">(</span><span class=\"n\">Student</span><span class=\"p\">):</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">sat_score</span><span class=\"p\">):</span>\n    <span class=\"n\">Student</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">)</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sat_score</span> <span class=\"o\">=</span> <span class=\"n\">sat_score</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Postgraduate</span><span class=\"p\">(</span><span class=\"n\">Student</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">bachelors_gpa</span><span class=\"p\">):</span>\n    <span class=\"n\">Student</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">)</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bachelors_gpa</span> <span class=\"o\">=</span> <span class=\"n\">bachelors_gpa</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">Undergraduate</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mark&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;07/21/94&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;123456789&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;12 Hollywood St.&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1450&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">Postgraduate</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sam&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;04/15/89&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;987654321&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;75 Hollywood St.&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3.50&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Name: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Birth Date: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">birth_date</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Phone Number: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student's Address: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student's SAT Score: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">sat_score</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'-----------------------------------'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Name: &quot;</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Birth Date: &quot;</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">birth_date</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student Phone Number: &quot;</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student's Address: &quot;</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Student's Bachelor's GPA: &quot;</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">bachelors_gpa</span><span class=\"p\">)</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>&lt;class '__main__.Undergraduate'&gt;\nStudent Name:  Mark\nStudent Birth Date:  07/21/94\nStudent Phone Number:  123456789\nStudent's Address:  12 Hollywood St.\nStudent's SAT Score:  1450\n-----------------------------------\n&lt;class '__main__.Postgraduate'&gt;\nStudent Name:  Sam\nStudent Birth Date:  04/15/89\nStudent Phone Number:  987654321\nStudent's Address:  75 Hollywood St.\nStudent's Bachelor's GPA:  3.50\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Without inheritance, your code would have looked something like this ...</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Undergraduate</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">sat_score</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">dob</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">number</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">address</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sat_score</span> <span class=\"o\">=</span> <span class=\"n\">sat_score</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Postgraduate</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">bachelors_gpa</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">dob</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">number</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">address</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bachelors_gpa</span> <span class=\"o\">=</span> <span class=\"n\">bachelors_gpa</span>\n</pre></div>\n<p>Now imagine what would have happened if you had 10 or more of the these above classes and not just two.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Polymorphism-in-Python\">Polymorphism in Python<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Polymorphism-in-Python\"/></h2><p>Polymorphism is the ability to use a common interface for multiple data types or forms. In examples below, we will observe how the same method can have different forms or outputs depending on their class. Let us take the classes from our previous example and add method &quot;highest_degree&quot; that can take different forms.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">dob</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">number</span> <span class=\"o\">=</span> <span class=\"n\">number</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">address</span>\n  \n  <span class=\"k\">def</span> <span class=\"nf\">highest_degree</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Abstract Base Method&quot;</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Undergraduate</span><span class=\"p\">(</span><span class=\"n\">Student</span><span class=\"p\">):</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">sat_score</span><span class=\"p\">):</span>\n    <span class=\"n\">Student</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">)</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sat_score</span> <span class=\"o\">=</span> <span class=\"n\">sat_score</span>\n  \n  <span class=\"k\">def</span> <span class=\"nf\">highest_degree</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;Highest Degree is High Level Education.&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Postgraduate</span><span class=\"p\">(</span><span class=\"n\">Student</span><span class=\"p\">):</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">bachelors_gpa</span><span class=\"p\">):</span>\n    <span class=\"n\">Student</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dob</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">)</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bachelors_gpa</span> <span class=\"o\">=</span> <span class=\"n\">bachelors_gpa</span>\n  <span class=\"k\">def</span> <span class=\"nf\">highest_degree</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;Highest Degree is a bachelor's degree.&quot;</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">Undergraduate</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mark&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;07/21/94&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;123456789&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;12 Hollywood St.&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1450&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">Postgraduate</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sam&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;04/15/89&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;987654321&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;75 Hollywood St.&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3.50&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">highest_degree</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">highest_degree</span><span class=\"p\">())</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>Highest Degree is High Level Education.\nHighest Degree is a bachelor's degree.\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>As you can see, even though we used the same method call, the output was different for each and every class due to the fact that we have overridden the method called <code>highest_degree</code> and made it custom to each and every class to demonstrate the concept that is polymorphism.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Enacpsulation-in-Python\">Enacpsulation in Python<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Enacpsulation-in-Python\"/></h2><p>We can also restrict access to methods and variables in OOP. This will prevent the data from being modified directly..</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>One side note here, In python, we denote the private attributes using the uderscore <code>_</code>.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [1]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Car</span><span class=\"p\">():</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">price</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__price</span> <span class=\"o\">=</span> <span class=\"n\">price</span>\n  \n  <span class=\"k\">def</span> <span class=\"nf\">set_price</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">price</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__price</span> <span class=\"o\">=</span> <span class=\"n\">price</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">selling_price</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__price</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [2]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">Car</span><span class=\"p\">(</span><span class=\"mi\">1500</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Initial price: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">selling_price</span><span class=\"p\">())</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>Initial price:  1500\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Let us try to change the price by accessing the private attribute and see if it works.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">__price</span> <span class=\"o\">=</span> <span class=\"mi\">2000</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Price change attempt: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">selling_price</span><span class=\"p\">())</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>Initial price:  1500\nPrice change attempt:  1500\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>As we can see, it did'nt work.  Now let us try changing the price using the setter function <code>set_price</code> that we created for this purpose.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing code_cell rendered\">\n<div class=\"input\">\n<div class=\"prompt input_prompt\">In [ ]:</div>\n<div class=\"inner_cell\">\n    <div class=\"input_area\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">set_price</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;New price: &quot;</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">selling_price</span><span class=\"p\">())</span>\n</pre></div>\n\n</div>\n</div>\n</div>\n\n<div class=\"output_wrapper\">\n<div class=\"output\">\n\n\n<div class=\"output_area\">\n<div class=\"prompt\"></div>\n\n<div class=\"output_subarea output_stream output_stdout output_text\">\n<pre>New price:  2000\n</pre>\n</div>\n</div>\n\n</div>\n</div>\n\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Note that you can also make an attribute private and not create a setter method for it that would make the attribute &quot;price&quot; unchangeable.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<p>Ok, So far so good. We are now approaching the end of this introductory tutorial on Object oriented Programming. Let us end this tutorial by summarizing the Uses and advantages of OOP.</p>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Uses-of-OOP\">Uses of OOP<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Uses-of-OOP\"/></h2><p>The uses of OOP are across all sorts of applications. Some of those are:</p>\n<ul>\n<li>Modelling databases.</li>\n<li>Creating Machine Learning, Neural Network models.</li>\n<li>Creating libraries and frameworks to use and/or publish.</li>\n<li>Modularizing applications for ease of organization.</li>\n</ul>\n\n</div>\n</div>\n</div>\n<div class=\"cell border-box-sizing text_cell rendered\">\n<div class=\"prompt input_prompt\">\n</div>\n<div class=\"inner_cell\">\n<div class=\"text_cell_render border-box-sizing rendered_html\">\n<h2 id=\"Advantages-of-OOP\">Advantages of OOP<a class=\"anchor-link\" href=\"https://www.nbshare.io/feeds/all.atom.xml#Advantages-of-OOP\"/></h2><ul>\n<li>Makes the program easy to understand as well as efficient.</li>\n<li>Code can easily be reused.</li>\n<li>Data is safe and secure with data abstraction and encapsultion.</li>\n<li>Polymorphism allows us to use the same interface for more than one funcitonality/output.</li>\n</ul>\n\n</div>\n</div>\n</div>\n    </div>\n  </div>"
}