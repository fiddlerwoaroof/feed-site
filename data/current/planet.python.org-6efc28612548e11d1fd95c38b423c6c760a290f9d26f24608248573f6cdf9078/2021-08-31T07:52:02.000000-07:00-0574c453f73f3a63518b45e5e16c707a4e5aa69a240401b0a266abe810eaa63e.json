{
  "title":"Python for Beginners: How to Extract a Date from a .txt File in Python",
  "date":"2021-08-31T07:52:02.000000-07:00",
  "author":null,
  "id":"https://www.pythonforbeginners.com/files/how-to-extract-a-date-from-a-txt-file-in-python",
  "link":"https://www.pythonforbeginners.com/files/how-to-extract-a-date-from-a-txt-file-in-python",
  "content":"<p>In this tutorial, we’ll examine the different ways you can extract a date from a .txt file using Python programming. Python is a versatile language—as you’ll discover—and there are many solutions for this problem.</p>\n\n\n\n<p>First, we’ll look at using <em>regular expression</em> patterns to search text files for dates that fit a predefined format. We’ll learn about using the <strong>re</strong> library and creating our own regular expression searches.<br><br>We’ll also examine <strong>datetime</strong> objects and use them to convert strings into data models. Lastly, we’ll see how the <strong>datefinder</strong> module simplifies the process of searching a text file for dates that haven’t been formatted, like we might find in natural language content.</p>\n\n\n\n<h2>Extract a Date from a .txt File using Regular Expression</h2>\n\n\n\n<p>Dates are written in many different formats. Sometimes people write month/day/year. Other dates might include times of the day, or the day of the week (Wednesday July 8, 2021 8:00PM).</p>\n\n\n\n<p>How dates are formatted is a factor to consider before we go about extracting them from text files. </p>\n\n\n\n<p>For instance, if a date follows the month/date/year format, we can find it using a regular expression pattern. With regular expression, or <strong>regex</strong> for short, we can search a text by matching a string to a predefined pattern. </p>\n\n\n\n<p>The beauty of regular expression is that we can use special characters to create powerful search patterns. For instance, we can craft a pattern that will find all the formatted dates in the following body of text.</p>\n\n\n\n<p><em>minutes.txt</em><br>10/14/2021 – Meeting with the client.<br>07/01/2021 – Discussed marketing strategies.<br>12/23/2021 – Interviewed a new team lead.<br>01/28/2018 – Changed domain providers.<br>06/11/2017 – Discussed moving to a new office.</p>\n\n\n\n<h4>Example: Finding formatted dates with regex</h4>\n\n\n\n<pre class=\"wp-block-code language-python\"><code>import re\n\n# open the text file and read the data\nfile = open(&quot;minutes.txt&quot;,'r')\n\ntext = file.read()\n# match a regex pattern for formatted dates\nmatches = re.findall(r'(\\d+/\\d+/\\d+)',text)\n\nprint(matches)\n</code></pre>\n\n\n\n<p><strong>Output</strong></p>\n\n\n\n<p>[’10/14/2021′, ’07/01/2021′, ’12/23/2021′, ’01/28/2018′, ’06/11/2017′]</p>\n\n\n\n<p>The regex pattern here uses special characters to define the strings we want to extract from the text file. The characters <strong>d </strong>and <strong>+</strong> tell regex we’re looking for multiple digits within the text.</p>\n\n\n\n<p>We can also use regex to find dates that are formatted in different ways. By altering our regex pattern, we can find dates that use either a forward slash (<strong>\\</strong>) or a dash (<strong>–</strong>) as the separator.</p>\n\n\n\n<p>This works because regex allows for optional characters in the search pattern. We can specify that either character—a forward slash or dash—is an acceptable match.</p>\n\n\n\n<p><em>apple2.txt</em><br>The first Apple II was sold on 07-10-1977. The last of the Apple II<br>models were discontinued on 10/15/1994.</p>\n\n\n\n<h4>Example: Matching dates with a regex pattern</h4>\n\n\n\n<pre class=\"wp-block-code language-python\"><code>import re\n\n# open a text file\nf = open(&quot;apple2.txt&quot;, 'r')\n\n# extract the file's content\ncontent = f.read()\n\n# a regular expression pattern to match dates\npattern = &quot;\\d{2}[/-]\\d{2}[/-]\\d{4}&quot;\n\n# find all the strings that match the pattern\ndates = re.findall(pattern, content)\n\nfor date in dates:\n    print(date)\n\nf.close()\n</code></pre>\n\n\n\n<p><strong>Output</strong></p>\n\n\n\n<p>07-10-1977<br>10/15/1994</p>\n\n\n\n<p>Examining the full extent of regex’s potential is beyond the scope of this tutorial. Try experimenting with some of the following special characters to learn more about using regular expression patterns to extract a date—or other information—from a .txt file.</p>\n\n\n\n<h4>Special Characters in Regex</h4>\n\n\n\n<ul><li>\\s – A space character</li><li>\\S – Any character except for a space character</li><li>\\d – Any digit from 0 to 9</li><li>\\D – And any character except for a digit</li><li>\\w – Any word of characters or digits [a-zA-Z0-9]</li><li>\\W – Any non-word characters</li></ul>\n\n\n\n<h2>Extract a Datetime Object from a .txt File</h2>\n\n\n\n<p>In Python we can use the <strong>datetime</strong> library for manipulating dates and working with time. The datetime library comes pre-packed with Python, so there’s no need to install it.</p>\n\n\n\n<p>By using datetime objects, we have more control over string data read from text files. For example, we can use a datetime object to get a copy of the current date and time of our computer.</p>\n\n\n\n<pre class=\"wp-block-code language-python\"><code>import datetime\n\nnow = datetime.datetime.now()\nprint(now)\n</code></pre>\n\n\n\n<p><strong>Output</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>2021-07-04 20:15:49.185380</code></pre>\n\n\n\n<p>In the following example, we’ll extract a date from a company .txt file that mentions a scheduled meeting. Our employer needs us to scan a group of such documents for dates. Later, we plan to add the information we gather to a SQLite database.<br><br>We’ll begin by defining a regex pattern that will match our date format. Once a match is found, we’ll use it to create a <em>datetime</em> object from the string data.</p>\n\n\n\n<p><em>schedule.txt</em><br></p>\n\n\n\n<p><em>schedule.txt</em><br>The project begins next month. Denise has scheduled a meeting in the conference room at the Embassy Suits on 10-7-2021.</p>\n\n\n\n<h4>Example: Creating datetime objects from file data</h4>\n\n\n\n<pre class=\"wp-block-code language-python\"><code>import re\nfrom datetime import datetime\n\n# open the data file\nfile = open(&quot;schedule.txt&quot;, 'r')\ntext = file.read()\n\nmatch = re.search(r'\\d+-\\d+-\\d{4}', text)\n# create a new datetime object from the regex match\ndate = datetime.strptime(match.group(), '%d-%m-%Y').date()\nprint(f&quot;The date of the meeting is on {date}.&quot;)\nfile.close()\n</code></pre>\n\n\n\n<p><strong>Output</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>The date of the meeting is on 2021-07-10.</code></pre>\n\n\n\n<h2>Extracting Dates from a Text File with the Datefinder Module</h2>\n\n\n\n<p>The Python <strong>datefinder</strong> module can locate dates in a body of text. Using the <em>find_dates</em>() method, it’s possible to search text data for many different types of dates. Datefinder will return any dates it finds in the form of a datetime object.<br><br>Unlike the other packages we’ve discussed in this guide, Python does not come with datefinder. The easiest way to install the datefinder module is to use <strong>pip</strong> from the command prompt.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pip install datefinder</code></pre>\n\n\n\n<p>With datefinder installed, we’re ready to open files and extract data. For this example, we’ll use a text document that introduces a fictitious company project. Using datefinder, we’ll extract each date from the .txt file, and print their datimeobject counterparts.</p>\n\n\n\n<p>Feel free to save the file locally and follow along.</p>\n\n\n\n<p><em>project_timeline.txt</em><br>PROJECT PEPPER</p>\n\n\n\n<p>All team members must read the project summary by<br>January 4th, 2021.</p>\n\n\n\n<p>The first meeting of PROJECT PEPPER begins on 01/15/2021</p>\n\n\n\n<p>at 9:00am. Please find the time to read the following links by then.<br><em>created on</em> 08-12-2021 at 05:00 PM</p>\n\n\n\n<p>This project file has dates in many formats. Dates are written using dashes and forward slashes. What’s worse, the month January is written out. How can we find all these dates with Python?</p>\n\n\n\n<h4>Example: Using datefinder to extract dates from file data</h4>\n\n\n\n<pre class=\"wp-block-code language-python\"><code>import datefinder\n\n# open the project schedule\nfile = open(&quot;project_timeline.txt&quot;,'r')\n\ncontent = file.read()\n\n# datefinder will find the dates for us\nmatches = list(datefinder.find_dates(content))\n\nif len(matches) &gt; 0:\n    for date in matches:\n        print(date)\nelse:\n    print(&quot;Found no dates.&quot;)\n\nfile.close()\n</code></pre>\n\n\n\n<p><strong>Output</strong><br>2021-01-04 00:00:00<br>2021-01-15 09:00:00<br>2021-08-12 17:00:00</p>\n\n\n\n<p>As you can see from the output, datefinder is able to find a variety of date formats in the text. Not only is the package capable of recognizing the names of months, but it also recognizes the time of day if it’s included in the text.</p>\n\n\n\n<p>In another example, we’ll use the datefinder package to extract a date from a .txt file that includes the dates for a popular singer’s upcoming tour.</p>\n\n\n\n<p><em>tour_dates.txt</em><br>Saturday July 25, 2021 at 07:00 PM     Inglewood, CA<br>Sunday July 26, 2021 at 7 PM     Inglewood, CA<br>09/30/2021 7:30PM  Foxbourough, MA</p>\n\n\n\n<h4>Example: Extract a tour date and times from a .txt file with datefinder</h4>\n\n\n\n<pre class=\"wp-block-code language-python\"><code>import datefinder\n\n# open the project schedule\nfile = open(&quot;tour_dates.txt&quot;,'r')\n\ncontent = file.read()\n\n# datefinder will find the dates for us\nmatches = list(datefinder.find_dates(content))\n\nif len(matches) &gt; 0:\n    print(&quot;TOUR DATES AND TIMES&quot;)\n    print(&quot;--------------------&quot;)\n    for date in matches:\n        # use f string to format the text\n        print(f&quot;{date.date()}     {date.time()}&quot;)\nelse:\n    print(&quot;Found no dates.&quot;)\nfile.close()\n</code></pre>\n\n\n\n<p><strong>Output</strong></p>\n\n\n\n<p>TOUR DATES AND TIMES<br>——————–<br>2021-07-25     19:00:00<br>2021-07-26     19:00:00<br>2021-09-30     19:30:00</p>\n\n\n\n<p>As you can see from the examples, datefinder can find many different types of dates and times. This is useful if the dates you’re looking for don’t have a certain format, as will often be the case in natural language data.</p>\n\n\n\n<h2>Summary</h2>\n\n\n\n<p>In this post, we’ve covered several methods of how to extract a date or time from a .txt file. We’ve seen the power of regular expression to find matches in string data, and we’ve seen how to convert that data into a Python datetime object.<br><br>Finally, if the dates in your text files don’t have a specified format—as will be the case in most files with natural language content—try the <strong>datefinder</strong> module. With this Python package, it’s possible to extract dates and times from a text file that aren’t conveniently formatted ahead of time.</p>\n\n\n\n<h2>Related Posts</h2>\n\n\n\n<p>If you enjoyed this tutorial and are eager to learn more about Python—and we sincerely hope you are—follow these links for more great guides from Python for Beginners.</p>\n\n\n\n<ul><li>How to use Python concatenation to join strings</li><li>Using <a href=\"https://www.pythonforbeginners.com/error-handling/python-try-and-except\">Python try catch</a> to mitigate errors and prevent crashes</li></ul>\n<p>The post <a rel=\"nofollow\" href=\"https://www.pythonforbeginners.com/files/how-to-extract-a-date-from-a-txt-file-in-python\">How to Extract a Date from a .txt File in Python</a> appeared first on <a rel=\"nofollow\" href=\"https://www.pythonforbeginners.com\">PythonForBeginners.com</a>.</p>"
}