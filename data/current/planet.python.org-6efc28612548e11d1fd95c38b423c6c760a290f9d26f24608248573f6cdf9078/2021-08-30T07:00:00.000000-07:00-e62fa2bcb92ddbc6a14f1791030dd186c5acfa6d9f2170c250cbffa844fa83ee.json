{
  "title":"Real Python: Using Python Optional Arguments When Defining Functions",
  "date":"2021-08-30T07:00:00.000000-07:00",
  "author":null,
  "id":"https://realpython.com/python-optional-arguments/",
  "link":"https://realpython.com/python-optional-arguments/",
  "content":"<div><p>Defining your own functions is an essential skill for writing clean and effective code. In this tutorial, you‚Äôll explore the techniques you have available for defining Python functions that take optional arguments. When you master Python optional arguments, you‚Äôll be able to define functions that are more powerful and more flexible.</p>\n<p><strong>In this tutorial, you‚Äôll learn:</strong></p>\n<ul>\n<li>What the difference is between <strong>parameters</strong> and <strong>arguments</strong></li>\n<li>How to define functions with <strong>optional arguments</strong> and <strong>default parameter values</strong></li>\n<li>How to define functions using <strong><code>args</code></strong> and <strong><code>kwargs</code></strong></li>\n<li>How to deal with <strong>error messages</strong> about optional arguments</li>\n</ul>\n<p>To get the most out of this tutorial, you‚Äôll need some familiarity with <a href=\"https://realpython.com/defining-your-own-python-function/\">defining functions</a> with required arguments.</p>\n<div class=\"alert alert-warning\"><p><strong>Free Bonus:</strong> <a href=\"https://realpython.com/atom.xml\" class=\"alert-link\">Click here to get a Python Cheat Sheet</a> and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions.</p></div>\n\n<h2 id=\"creating-functions-in-python-for-reusing-code\">Creating Functions in Python for Reusing Code<a class=\"headerlink\" href=\"https://realpython.com/atom.xml#creating-functions-in-python-for-reusing-code\" title=\"Permanent link\"/></h2>\n<p>You can think of a function as a mini-program that runs within another program or within another function. The main program calls the mini-program and sends information that the mini-program will need as it runs. When the function completes all of its actions, it may send some data back to the main program that has called it.</p>\n<p>The primary purpose of a function is to allow you to reuse the code within it whenever you need it, using different inputs if required.</p>\n<p>When you use functions, you are extending your Python vocabulary. This lets you express the solution to your problem in a clearer and more succinct way.</p>\n<p>In Python, by convention, you should name a function using lowercase letters with words separated by an underscore, such as <code>do_something()</code>. These conventions are described in <a href=\"https://www.python.org/dev/peps/pep-0008/\">PEP 8</a>, which is Python‚Äôs style guide. You‚Äôll need to add parentheses after the function name when you call it. Since functions represent actions, it‚Äôs a best practice to start your function names with a verb to make your code more readable.</p>\n<h3 id=\"defining-functions-with-no-input-parameters\">Defining Functions With No Input Parameters<a class=\"headerlink\" href=\"https://realpython.com/atom.xml#defining-functions-with-no-input-parameters\" title=\"Permanent link\"/></h3>\n<p>In this tutorial, you‚Äôll use the example of a basic program that creates and maintains a shopping list and <a href=\"https://realpython.com/python-print/\">prints it out</a> when you‚Äôre ready to go to the supermarket.</p>\n<p>Start by creating a shopping list:</p>\n<div class=\"highlight python\"><pre><span></span><code><span class=\"n\">shopping_list</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Bread&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Milk&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Chocolate&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Butter&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Coffee&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>You‚Äôre using a <a href=\"https://realpython.com/python-dicts/\">dictionary</a> to store the item name as the key and the quantity you need to buy of each item as the value. You can define a function to display the shopping list:</p>\n<div class=\"highlight python\"><pre><span></span><code><span class=\"c1\"># optional_params.py</span>\n\n<span class=\"n\">shopping_list</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Bread&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Milk&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Chocolate&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Butter&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Coffee&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">show_list</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">item_name</span><span class=\"p\">,</span> <span class=\"n\">quantity</span> <span class=\"ow\">in</span> <span class=\"n\">shopping_list</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">quantity</span><span class=\"si\">}</span><span class=\"s2\">x </span><span class=\"si\">{</span><span class=\"n\">item_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">show_list</span><span class=\"p\">()</span>\n</code></pre></div>\n<p>When you run this script, you‚Äôll get a printout of the shopping list:</p>\n<div class=\"highlight sh\"><pre><span></span><code><span class=\"gp\">$ </span>python optional_params.py\n<span class=\"go\">1x Bread</span>\n<span class=\"go\">2x Milk</span>\n<span class=\"go\">1x Chocolate</span>\n<span class=\"go\">1x Butter</span>\n<span class=\"go\">1x Coffee</span>\n</code></pre></div>\n<p>The function you‚Äôve defined has no input parameters as the parentheses in the function <strong>signature</strong> are empty. The signature is the first line in the function definition:</p>\n<div class=\"highlight python\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">show_list</span><span class=\"p\">():</span>\n</code></pre></div>\n<p>You don‚Äôt need any input parameters in this example since the dictionary <code>shopping_list</code> is a <strong>global variable</strong>. This means that it can be accessed from everywhere in the program, including from within the function definition. This is called the <strong>global scope</strong>. You can read more about scope in <a href=\"https://realpython.com/python-scope-legb-rule/\">Python Scope &amp; the LEGB Rule: Resolving Names in Your Code</a>.</p>\n<p>Using global variables in this way is not a good practice. It can lead to several functions making changes to the same data structure, which can lead to bugs that are hard to find. You‚Äôll see how to improve on this later on in this tutorial when you‚Äôll pass the dictionary to the function as an argument.</p>\n<p>In the next section, you‚Äôll define a function that has input parameters.</p>\n<h3 id=\"defining-functions-with-required-input-arguments\">Defining Functions With Required Input Arguments<a class=\"headerlink\" href=\"https://realpython.com/atom.xml#defining-functions-with-required-input-arguments\" title=\"Permanent link\"/></h3>\n<p>Instead of writing the shopping list directly in the code, you can now initialize an empty dictionary and write a function that allows you to add items to the shopping list:</p>\n</div><h2><a href=\"https://realpython.com/python-optional-arguments/?utm_source=realpython&amp;utm_medium=rss\">Read the full article at https://realpython.com/python-optional-arguments/ ¬ª</a></h2>\n        <hr></hr>\n        <p><em>[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp; sweet Python Trick delivered to your inbox every couple of days. <a href=\"https://realpython.com/python-tricks/?utm_source=realpython&amp;utm_medium=rss&amp;utm_campaign=footer\">&gt;&gt; Click here to learn more and see examples</a> ]</em></p>"
}