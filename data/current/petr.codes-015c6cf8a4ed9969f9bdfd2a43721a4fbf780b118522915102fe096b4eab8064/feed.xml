<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://bridgetownrb.com/" version="0.21.0">Bridgetown</generator><link href="https://petr.codes/feed.xml" rel="self" type="application/atom+xml"><link href="https://petr.codes/" rel="alternate" type="text/html"><updated>2022-10-11T17:40:34+02:00</updated><id>https://petr.codes/feed.xml</id><title type="html">Petr Hlavicka</title><subtitle>Full stack Ruby on Rails developer &amp;amp; consultant. Web application development.</subtitle><author><name>Petr Hlavicka</name></author><entry><title type="html">Business logic in Rails with operators</title><link href="https://petr.codes/blog/rails/business-logic-with-operators/" rel="alternate" type="text/html" title="Business logic in Rails with operators"><published>2021-10-19T00:00:00+02:00</published><updated>2021-10-19T00:00:00+02:00</updated><id>https://petr.codes/blog/rails/business-logic-with-operators</id><author><name>Petr Hlavicka</name></author><category term="ruby"/><category term="rails"/><category term="business logic"/><category term="poro"/><summary type="html">Having a thousand lines long controllers and/or models is not the right way to have sustainable applications or developers’ sanity. Let’s look at my solution for business logic in the Rails app.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/rails-business-poro.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/rails-business-poro.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Fun with Rails Enums and PORO</title><link href="https://petr.codes/blog/rails/fun-with-enums-and-poro/" rel="alternate" type="text/html" title="Fun with Rails Enums and PORO"><published>2021-10-05T00:00:00+02:00</published><updated>2021-10-05T00:00:00+02:00</updated><id>https://petr.codes/blog/rails/fun-with-enums-and-poro</id><author><name>Petr Hlavicka</name></author><category term="ruby"/><category term="rails"/><category term="enum"/><category term="poro"/><summary type="html">I really like enums. They can be really powerful if they are used wisely. Let’s see what we can do with them in a multilingual Rails app with a little help from PORO (Plain Old Ruby Object).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/rails-enums.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/rails-enums.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Multi-Factor Authentication for Rails with WebAuthn and Devise</title><link href="https://petr.codes/blog/rails/multi-factor-2fa-authentication-rails-webauthn-devise/" rel="alternate" type="text/html" title="Multi-Factor Authentication for Rails with WebAuthn and Devise"><published>2021-09-27T00:00:00+02:00</published><updated>2021-09-27T00:00:00+02:00</updated><id>https://petr.codes/blog/rails/multi-factor-2fa-authentication-rails-webauthn-devise</id><author><name>Petr Hlavicka</name></author><category term="ruby"/><category term="rails"/><category term="devise"/><category term="webauthn"/><category term="2fa"/><category term="mfa"/><category term="security keys"/><summary type="html">There are several ways to add multi-factor authentication (MFA) for safer user authentication. Let’s look at how to add a modern MFA approach to a Rails application with WebAuthn.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/devise-webauthn/devise-webauthn.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/devise-webauthn/devise-webauthn.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Modern Rails flash messages (part 3): Refactoring with Turbo</title><link href="https://petr.codes/blog/rails/modern-rails-flash-messages/part-3/" rel="alternate" type="text/html" title="Modern Rails flash messages (part 3): Refactoring with Turbo"><published>2021-07-07T00:00:00+02:00</published><updated>2021-07-07T00:00:00+02:00</updated><id>https://petr.codes/blog/rails/modern-rails-flash-messages/part-3</id><author><name>Petr Hlavicka</name></author><category term="rails"/><category term="ruby"/><category term="stimulus"/><category term="turbo"/><summary type="html">I can not believe it has been almost 10 months since I wrote the first part. Several things have happened since then. Like Turbo…</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/mrfm/part-3.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/mrfm/part-3.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">How to generate sitemap.xml with Bridgetown</title><link href="https://petr.codes/blog/bridgetown/sitemap-generation/" rel="alternate" type="text/html" title="How to generate sitemap.xml with Bridgetown"><published>2021-03-28T00:00:00+01:00</published><updated>2021-03-28T00:00:00+01:00</updated><id>https://petr.codes/blog/bridgetown/sitemap-generation</id><author><name>Petr Hlavicka</name></author><category term="bridgetown"/><category term="sitemap"/><summary type="html">During playing with Bridgetown (that I am using on this site), I needed to add a sitemap.xml file for search engines.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/bridgetown/sitemap.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/bridgetown/sitemap.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Using Dokku with Let’s Encrypt wildcard certificate</title><link href="https://petr.codes/blog/dokku/wildcard-certificate/" rel="alternate" type="text/html" title="Using Dokku with Let's Encrypt wildcard certificate"><published>2021-03-21T00:00:00+01:00</published><updated>2021-03-21T00:00:00+01:00</updated><id>https://petr.codes/blog/dokku/wildcard-certificate</id><author><name>Petr Hlavicka</name></author><category term="dokku"/><category term="lets encrypt"/><category term="wildcard"/><summary type="html">Wildcard certificates are handy and this was the first time when I needed to use them with Dokku. It was a little bit harder than I expected, but luckily, it is doable even with automatic renewal.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/dokku/wildcard-certificate.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/dokku/wildcard-certificate.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Modern Rails flash messages (part 2): The undo action for deleted items</title><link href="https://petr.codes/blog/rails/modern-rails-flash-messages/part-2/" rel="alternate" type="text/html" title="Modern Rails flash messages (part 2): The undo action for deleted items"><published>2020-09-20T00:00:00+02:00</published><updated>2020-09-20T00:00:00+02:00</updated><id>https://petr.codes/blog/rails/modern-rails-flash-messages/part-2</id><author><name>Petr Hlavicka</name></author><category term="rails"/><category term="ruby"/><category term="sidekiq"/><category term="stimulus"/><summary type="html">In the previous article, I’ve prepared a way how to add actions to the Rails flash messages. In this article, I will explore one way, how to use them for the undo action for deleted records.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/mrfm/part-2.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/mrfm/part-2.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Modern Rails flash messages (part 1): ViewComponent, Stimulus &amp;amp; Tailwind CSS</title><link href="https://petr.codes/blog/rails/modern-rails-flash-messages/part-1/" rel="alternate" type="text/html" title="Modern Rails flash messages (part 1): ViewComponent, Stimulus &amp; Tailwind CSS"><published>2020-09-20T00:00:00+02:00</published><updated>2020-09-20T00:00:00+02:00</updated><id>https://petr.codes/blog/rails/modern-rails-flash-messages/part-1</id><author><name>Petr Hlavicka</name></author><category term="rails"/><category term="ruby"/><category term="viewcomponent"/><category term="stimulus"/><summary type="html">I always thought that flash messages in Rails could be better. Don’t get me wrong, I really like how they work and how easy is to use them.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://petr.codes/images/posts/mrfm/part-1.jpg"/><media:content medium="image" url="https://petr.codes/images/posts/mrfm/part-1.jpg" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>