{
  "title":"VU#799380: Devices supporting Bluetooth Core and Mesh Specifications are vulnerable to impersonation attacks and AuthValue disclosure",
  "date":"2021-08-05T08:30:46.208068-07:00",
  "author":null,
  "id":"https://kb.cert.org/vuls/id/799380",
  "link":"https://kb.cert.org/vuls/id/799380",
  "content":"\n\n<div class=\"row\" id=\"content\">\n  <div class=\"large-9 medium-9 columns\">\n    <div class=\"blog-post\">\n      <div class=\"row\">\n        <div class=\"large-12 columns\">\n\t  \n\t  <h3>Overview</h3>\n<p>Devices supporting the Bluetooth Core and Mesh Specifications are vulnerable to impersonation attacks and AuthValue disclosure that could allow an attacker to impersonate a legitimate device during pairing. </p>\n<h3>Description</h3>\n<p>The Bluetooth <a href=\"https://www.bluetooth.com/specifications/specs/core-specification/\">Core Specification</a> and <a href=\"https://www.bluetooth.com/specifications/specs/mesh-profile-1-0-1/\">Mesh Profile Specification </a> are two specifications used to define the technical and policy requirements for devices that want to operate over Bluetooth connections. Researchers at the Agence nationale de la sécurité des systèmes d'information (<a href=\"https://www.ssi.gouv.fr/\">ANSSI</a>) have identified a number of vulnerabilities in each specification that allow <a href=\"https://francozappa.github.io/about-bias/publication/antonioli-20-bias/antonioli-20-bias.pdf\">impersonation attacks</a> and AuthValue disclosures.      </p>\n<p>Devices supporting the Bluetooth Core Specification are affected by the following vulnerabilities:</p>\n<h4>Impersonation in the Passkey Entry Protocol</h4>\n<p>The Passkey Entry protocol used in Secure Simple Pairing (SSP), Secure Connections (SC), and LE Secure Connections (LESC) of the Bluetooth Core Specification is vulnerable to an impersonation attack that enables an active attacker to impersonate the initiating device without any previous knowledge (<em>CVE-2020-26558</em>). An attacker acting as a man-in-the-middle (MITM) in the Passkey authentication procedure could use a crafted series of responses to determine each bit of the randomly generated Passkey selected by the pairing initiator in each round of the pairing procedure, and once identified, the attacker can use these Passkey bits during the same pairing session to successfully complete the authenticated pairing procedure with the responder. Devices supporting BR/EDR Secure Simple Pairing in Bluetooth Core Specifications 2.1 through 5.2, BR/EDR Secure Connections Pairing in Bluetooth Core Specifications 4.1 through 5.2 and LE Secure Connections Pairing in Bluetooth Core Specifications 4.2 through 5.2 are affected by this vulnerability. </p>\n<h4>Impersonation in the Pin Pairing Protocol</h4>\n<p>The Bluetooth BR/EDR PIN Pairing procedure is vulnerable to an impersonation attack (<em>CVE-2020-26555</em>). An attacker could connect to a victim device by spoofing the Bluetooth Device Address (BD_ADDR) of the device, reflect the the encrypted nonce, and complete BR/EDR pin-code pairing with them without knowledge of the pin code. A successful attack requires the attacking device to be within wireless range of a vulnerable device supporting BR/EDR Legacy Pairing that is Connectable and Bondable. Devices supporting the Bluetooth Core Specification versions 1.0B through 5.2 are affected by this vulnerability.</p>\n<p>Devices supporting Bluetooth Mesh Profile Specification, versions 1.0 and 1.0.1, are affected by the following vulnerabilities:</p>\n<h4>Impersonation in Bluetooth Mesh Provisioning</h4>\n<p>The Mesh Provisioning procedure could allow an attacker without knowledge of the AuthValue, spoofing a device being provisioned, to use crafted responses to appear to possess the AuthValue and to be issued a valid NetKey and potentially an AppKey (<em>CVE-2020-26560</em>). For this attack to be successful, an attacking device needs to be within wireless range of a Mesh Provisioner and either spoof the identity of a device being provisioned over the air or be directly provisioned onto a subnet controlled by the provisioner.</p>\n<h4>Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM</h4>\n<p>The Mesh Provisioning procedure could allow an attacker observing or taking part in the provisioning to brute force the AuthValue if it has a fixed value, or is selected predictably or with low entropy (<em>CVE-2020-26557</em>). Identifying the AuthValue generally requires a brute-force search against the provisioning random and provisioning confirmation produced by the Provisioner. This brute-force search, for a randomly selected AuthValue, must complete before the provisioning procedure times out, which can require significant resources. If the AuthValue is not selected randomly with each new provisioning attempt, then the brute-force search can occur offline and if successful, would permit an attacker to identify the AuthValue and authenticate to both the Provisioner and provisioned devices, permitting a MITM attack on a future provisioning attempts with the same AuthValue. </p>\n<h4>Malleable Commitment</h4>\n<p>The authentication protocol is vulnerable if the AuthValue can be identified during the provisioning procedure, even if the AuthValue is selected randomly (<em>CVE-2020-26556</em>). If an attacker can identify the AuthValue used before the provisioning procedure times out, it is possible to complete the provisioning operation and obtain a NetKey. Similar to CVE-2020-26557, identifying the AuthValue generally requires a brute-force search against the provisioning random and provisioning confirmation produced by the Provisioner. This brute-force search for a randomly selected AuthValue, which can require significant resources, must complete before the provisioning procedure times out.</p>\n<h4>AuthValue Leak</h4>\n<p>The Mesh Provisioning procedure could allow an attacker that was provisioned without access to the AuthValue to identify the AuthValue directly without brute-forcing its value (<em>CVE-2020-26559</em>). Even when a randomly generated AuthValue with a full 128-bits of entropy is used, an attacker acquiring the Provisioner’s public key, provisioning confirmation value, and provisioning random value, and providing its public key for use in the provisioning procedure, will be able to compute the AuthValue directly.</p>\n<h3>Impact</h3>\n<h4>Impersonation in the Passkey Entry Protocol</h4>\n<p>This vulnerability could allow an attacker to authenticate to the response victim device and act as a legitimate encrypted device. The attacker cannot pair with the initiating device using this method of attack, which prevents a fully transparent man-in-the-middle attack between the initiator and responder. For this attack to be successful, an attacking device needs to be within wireless range of two vulnerable Bluetooth devices that are initiating pairing or bonding for which a BR/EDR IO Capabilities exchange or LE IO Capability in the pairing request and response results in the selection of the Passkey pairing procedure.</p>\n<h4>Impersonation in the Pin Pairing Protocol</h4>\n<p>This vulnerability could allow an attacker to complete pairing with a known link key, encrypt communications with the vulnerable device, and access any profiles permitted by a paired or bonded remote device supporting Legacy Pairing.</p>\n<h4>Impersonation in Bluetooth Mesh Provisioning</h4>\n<p>This vulnerability could allow an attacker to successfully authenticate without the AuthValue. Once authenticated, the attacker could perform any operation permitted to a node provisioned on the subnet until it is either denied access or a new subnet is formed without the attacking node present.</p>\n<h4>Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM</h4>\n<p>This vulnerability could allow an attacker to successfully brute force the AuthValue and authenticate to both the Provisioner and provisioned devices, permitting a MITM attack on a future provisioning attempt with the same AuthValue.</p>\n<h4>Malleable Commitment</h4>\n<p>This vulnerability could allow an attacker to obtain a NetKey, which could be used to decrypt and authenticate up to the network layer, allowing the relay of messages, but no application data decryption.</p>\n<h4>AuthValue Leak</h4>\n<p>This vulnerability could allow an attacker to compute the AuthValue and authenticate to the Provisioner and provisioned devices.</p>\n<h3>Solution</h3>\n<p>Bluetooth users should ensure that they have installed the latest recommended updates from device and operating system manufacturers. </p>\n<p>In addition to the two vulnerabilities affecting the Bluetooth Core Specification, the researchers also identified a potential security vulnerability related to LE Legacy Pairing authentication in Bluetooth Core Specification versions 4.0 through 5.2. The researchers claim that an attacker can reflect the confirmation and random numbers of a peer device in LE legacy pairing to successfully complete legacy authentication phase 2 without knowledge of the temporary key (TK). Because the attacker does not acquire a TK, or valid short-term key (STK) during this attack, completing authentication phase 2 is not sufficient for an encrypted link to be established. While the Bluetooth SIG does not consider this to be a method which can provide unauthorized access to a device, they still recommend that LE implementations requiring pairing and encryption use LE Secure Connections. The Bluetooth SIG also recommends that, where possible, implementations enable and enforce Secure Connections Only Mode, ensuring that LE legacy pairing cannot be used.</p>\n<p>The Bluetooth SIG additionally makes the following <a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/reporting-security/\">recommendations</a> for each vulnerability:</p>\n<h4>Impersonation in the Passkey Entry Protocol</h4>\n<p>For the attack to succeed the pairing device needs to accept the same public key that it provided to the remote peer as the remote peer’s public key. The Bluetooth SIG recommends that potentially vulnerable implementations restrict the public keys accepted from a remote peer device to disallow a remote peer to present the same public key chosen by the local device, and the pairing procedure should be terminated with a failure status if this occurs. </p>\n<h4>Impersonation in the Pin Pairing Protocol</h4>\n<p>The Bluetooth SIG recommends that potentially vulnerable devices not initiate or accept connections from remote devices claiming the same BD_ADDR as the local device. They also continue to recommend that devices use Secure Simple Pairing or BR/EDR Secure Connections to avoid known vulnerabilities with legacy BR/EDR pairing.</p>\n<h4>Impersonation in Bluetooth Mesh Provisioning</h4>\n<p>The Bluetooth SIG recommends that potentially vulnerable mesh provisioners restrict the authentication procedure and not accept provisioning both random and confirmation numbers from a remote peer that are the same as those selected by the local device.</p>\n<h4>Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM</h4>\n<p>The Bluetooth SIG recommends that mesh implementations enforce a randomly selected AuthValue using all of the available bits, where permitted by the implementation. A large entropy helps ensure that a brute-force of the AuthValue, even a static AuthValue, cannot normally be completed in a reasonable time.</p>\n<h4>Malleable Commitment</h4>\n<p>The <a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/malleable/\">statement from the Bluetooth SIG</a> notes: &quot;AuthValues selected using a cryptographically secure random or pseudorandom number generator and having the maximum permitted entropy (128-bits) will be most difficult to brute-force. AuthValues with reduced entropy or generated in a predictable manner will not grant the same level of protection against this vulnerability. Selecting a new AuthValue with each provisioning attempt can also make it more difficult to launch a brute-force attack by requiring the attacker to restart the search with each provisioning attempt.&quot;</p>\n<h4>AuthValue Leak</h4>\n<p>The Bluetooth SIG recommends that potentially vulnerable mesh provisioners use an out-of-band mechanism to exchange the public keys.</p>\n<h3>Acknowledgements</h3>\n<p>Thanks to researchers at the Agence nationale de la sécurité des systèmes d'information (<a href=\"https://www.ssi.gouv.fr/\">ANSSI</a>) for reporting these vulnerabilities.</p>\n<p>This document was written by Madison Oliver.</p>\n\t  \n\t</div>\n      </div>\n      <div class=\"row\">\n\t<div class=\"large-12 columns\">\n\t  <h3> Vendor Information </h3>\n\t  \n\t  <div id=\"vendorinfo\">\n\t    One or more vendors are listed for this advisory. Please reference the full report for more information.\n\t  </div>\n\t  \n\t</div>\n      </div>\n      <br>\n      \n      \n      <div class=\"row\">\n\t<div class=\"large-12 columns\">\n\t  <h3> References </h3>\n\t  <ul>\n\t    \n\t  \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/passkey-entry/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/passkey-entry/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/legacy-pairing/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/legacy-pairing/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-pin-pairing/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-pin-pairing/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-mesh/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-mesh/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/predicatable-authvalue/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/predicatable-authvalue/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/malleable/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/malleable/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/authvalue-leak/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/authvalue-leak/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/reporting-security/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/reporting-security/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/specifications/specs/core-specification/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/specifications/specs/core-specification/</a></li>\n          \n\t  <li><a href=\"https://www.bluetooth.com/specifications/specs/mesh-profile-1-0-1/\" class=\"vulreflink\" rel=\"noopener\">https://www.bluetooth.com/specifications/specs/mesh-profile-1-0-1/</a></li>\n          \n\t  <li><a href=\"https://www.ieee-security.org/TC/SP2021/SPW2021/WOOT21/\" class=\"vulreflink\" rel=\"noopener\">https://www.ieee-security.org/TC/SP2021/SPW2021/WOOT21/</a></li>\n          \n\t  <li><a href=\"https://www.novelbits.io/bluetooth-mesh-tutorial-part-3/\" class=\"vulreflink\" rel=\"noopener\">https://www.novelbits.io/bluetooth-mesh-tutorial-part-3/</a></li>\n          \n\t  \n\t  </ul>\n\t</div>\n      </div>\n      \n      <h3>Other Information</h3>\n        <div class=\"vulcontent\">\n          <table class=\"unstriped\">\n            <tbody>\n\t      \n              <tr>\n                <td width=\"200\"><b>CVE IDs:</b></td>\n\t\t<td>\n\t\t\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26557\">CVE-2020-26557  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26559\">CVE-2020-26559  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId= 2020-26556\">CVE- 2020-26556  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26558\">CVE-2020-26558  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26555\">CVE-2020-26555  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26560\">CVE-2020-26560  </a>\n\t\t\n                \n\t\t</td>\n\t      </tr>\n\t      \n\t      <tr>\n\t\t<td>\n\t\t  <b>Date Public:</b>\n\t\t</td>\n                <td>2021-05-24</td>\n              </tr>\n              <tr>\n                <td><b>Date First Published:</b></td>\n                <td id=\"datefirstpublished\">2021-05-24</td>\n              </tr>\n              <tr>\n                <td><b>Date Last Updated: </b></td>\n                <td>2021-08-05 15:30 UTC</td>\n              </tr>\n              <tr>\n                <td><b>Document Revision: </b></td>\n                <td>9 </td>\n              </tr>\n            </tbody>\n          </table>\n\t</div>\n    </div>\n  </div>\n  <div class=\"large-3 medium-3 columns\">\n  <div class=\"sticky\">\n    <div class=\"sidebar-links\">\n      <ul class=\"menu vertical\">\n\t<li><a href=\"https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help\" rel=\"noopener\">About vulnerability notes</a></li>\n\t<li><a href=\"mailto:cert@cert.org?Subject=VU%23799380 Feedback\">Contact us about this vulnerability</a></li>\n\t<li><a href=\"https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement\">Provide a vendor statement</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n</div>\n\n\n\n"
}