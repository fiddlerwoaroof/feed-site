<?xml version="1.0" encoding="utf-8"?>
<feed xml:lang="en-us" xmlns="http://www.w3.org/2005/Atom"><title>CERT Recently Published Vulnerability Notes</title><link href="https://kb.cert.org/vuls/" rel="alternate"><link href="https://kb.cert.org/vuls/atomfeed/" rel="self"><id>https://kb.cert.org/vuls/</id><updated>2021-08-18T14:09:00.168149+00:00</updated><author><name>CERT</name><email>cert@cert.org</email><uri>https://www.sei.cmu.edu</uri></author><subtitle>CERT publishes vulnerability advisories called &quot;Vulnerability Notes.&quot; Vulnerability Notes include summaries, technical details, remediation information, and lists of affected vendors.  Many vulnerability notes are the result of private coordination and disclosure efforts.</subtitle><entry><title>VU#608209: NicheStack embedded TCP/IP has vulnerabilities</title><link href="https://kb.cert.org/vuls/id/608209" rel="alternate"><published>2021-08-10T16:50:54.932768+00:00</published><updated>2021-08-10T16:50:53.968742+00:00</updated><id>https://kb.cert.org/vuls/id/608209</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;HCC Embedded's software called InterNiche stack (NicheStack) and NicheLite, which provides TCP/IP networking capability to embedded systems, is impacted by multiple vulnerabilities. The Forescout and JFrog researchers who discovered this set of vulnerabilities have identified these as &quot;INFRA:HALT&quot; &lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;HCC Embedded acquired NicheStack from Interniche in order to provide TCP/IP protocol capabilities to lightweight devices such as IoT.  NicheStack has been made available since late 1990's to a widely varied customer base in multiple forms to support various implementations.  This has made NicheStack to be part of a complex supply chain into major industries including devices in &lt;a href=&quot;https://us-cert.cisa.gov/ics/advisories/icsa-21-217-01&quot;&gt; critical infrastructure&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Forescout and JFrog researchers have identified &lt;a href=&quot;https://www.forescout.com/blog/new-critical-operational-technology-vulnerabilities-found-on-nichestack/&quot;&gt;14 vulnerabilities&lt;/a&gt; related to network packet processing errors in NicheStack and NicheLite versions 4.3 released before 2021-05-28.  Most of these vulnerabilities stem from improper &lt;a href=&quot;https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152142&quot;&gt;memory management &lt;/a&gt; commonly seen in lightweight operating systems.  Of these 14 vulnerabilities, five involve processing of TCP and ICMP (&lt;a href=&quot;https://en.wikipedia.org/wiki/OSI_model&quot;&gt;OSI&lt;/a&gt; Layer-4 protocols) and the rest involve common application protocols such as HTTP and DNS (OSI Layer-7).  The processing of these OSI layers involve a number of boundary checks and some specific &quot;application&quot; processing capabilities (such as randomization) commonly overlooked in development of lightweight networking software.  &lt;/p&gt;
&lt;p&gt;Various stakeholders, including HCC Embedded, have made attempts to reach  impacted vendors to provide software fixes that address these issues. A lack of formalization of software OEM relationships and a lack of Software Bill of Materials (SBOM) has complicated this outreach and the much-needed identification of impacted devices. &lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;The impact of exploiting these vulnerabilities will vary widely, depending on the implementation options used while developing embedded systems that use NicheStack or NicheLite. As these vulnerabilities involve processing of network packets, attackers can generally abuse these errors via remote network access. In summary, a remote, unauthenticated attacker may be able to use specially-crafted network packets to cause a denial of service, disclose information, or in some cases be able to execute arbitrary code on the target device. &lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply updates&lt;/h4&gt;
&lt;p&gt;The most reliable way to address these vulnerabilities is to update to the latest stable version of NicheStack software mentioned in HCC Embedded mentioned in their &lt;a href=&quot;https://www.hcc-embedded.com/support/security-advisories&quot;&gt;Security Advisories&lt;/a&gt;. If you are unsure or have discovered NicheStack using &lt;a href=&quot;https://github.com/Forescout/project-memoria-detector&quot;&gt;open-source tools&lt;/a&gt; provided by Forescout, reach out to HCC Embedded via their &lt;a href=&quot;https://www.hcc-embedded.com/support/security-advisories/product-security-policy&quot;&gt;PSIRT&lt;/a&gt; security team or to your upstream vendor in your supply chain to obtain the software fixes.  HCC has also provided a &lt;a href=&quot;https://www.hcc-embedded.com/support/security-advisories/security-advisories-notification&quot;&gt;register to be notified&lt;/a&gt;  web page for sustaining this outreach for their long-standing customers.&lt;/p&gt;
&lt;h4&gt;Block anomalous IP traffic&lt;/h4&gt;
&lt;p&gt;CERT/CC recognizes that many implementations of NicheStack involve longer lifecycles for patching.  In the meantime, if feasible, organizations can consider isolating impacted devices and blocking network attacks using network inspection, as detailed below, when network isolation is not feasible.  It is recommended that security features available to you in devices such as router, firewalls for blocking anomalous network packets are enabled and properly configured. Below is a list of possible mitigations that address some specific network attacks that attempt to exploit these vulnerabilities.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide DNS recursion services to the embedded devices using recursive DNS servers that are securely configured, and well-maintained with patches and updates.&lt;/li&gt;
&lt;li&gt;Provide HTTP access to embedded devices that are in an isolated network via securely configured HTTP reverse proxy or using HTTP deep packet inspection firewalls.&lt;/li&gt;
&lt;li&gt;Filter ICMP and TFTP access to embedded devices from the wider Internet and use stateful inspection of these protocols when accessible to wider Internet to avoid abuse.&lt;/li&gt;
&lt;li&gt;Enforce TCP stateful inspection for embedded device and reject malformed TCP packets using router, firewall features as available to the operational environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When blocking or isolating is not an option, perform passive inspection using IDS that can alert on anomalous attempts to exploit these vulnerabilities. See also our recommendations and IDS rules that were made available for Treck TCP/IP stack related vulnerabilities &lt;a href=&quot;https://kb.cert.org/vuls/id/257161&quot;&gt;VU#257161&lt;/a&gt; for &lt;a href=&quot;https://github.com/CERTCC/PoC-Exploits/tree/master/vu-257161&quot;&gt;examples&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Amine Amri, Stanislav Dashevskyi, and Daniel dos Santos from Forescout, and Asaf Karas and Shachar Menashe from JFrog who reported these vulnerabilities and supported coordinated disclosure.  HCC Embedded, the primary OEM vendor, also supported our efforts to coordinate and develop security fixes to address these issues.&lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;HCC Embedded's software called InterNiche stack (NicheStack) and NicheLite, which provides TCP/IP networking capability to embedded systems, is impacted by multiple vulnerabilities. The Forescout and JFrog researchers who discovered this set of vulnerabilities have identified these as &quot;INFRA:HALT&quot; &lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;HCC Embedded acquired NicheStack from Interniche in order to provide TCP/IP protocol capabilities to lightweight devices such as IoT.  NicheStack has been made available since late 1990's to a widely varied customer base in multiple forms to support various implementations.  This has made NicheStack to be part of a complex supply chain into major industries including devices in &lt;a href=&quot;https://us-cert.cisa.gov/ics/advisories/icsa-21-217-01&quot;&gt; critical infrastructure&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Forescout and JFrog researchers have identified &lt;a href=&quot;https://www.forescout.com/blog/new-critical-operational-technology-vulnerabilities-found-on-nichestack/&quot;&gt;14 vulnerabilities&lt;/a&gt; related to network packet processing errors in NicheStack and NicheLite versions 4.3 released before 2021-05-28.  Most of these vulnerabilities stem from improper &lt;a href=&quot;https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152142&quot;&gt;memory management &lt;/a&gt; commonly seen in lightweight operating systems.  Of these 14 vulnerabilities, five involve processing of TCP and ICMP (&lt;a href=&quot;https://en.wikipedia.org/wiki/OSI_model&quot;&gt;OSI&lt;/a&gt; Layer-4 protocols) and the rest involve common application protocols such as HTTP and DNS (OSI Layer-7).  The processing of these OSI layers involve a number of boundary checks and some specific &quot;application&quot; processing capabilities (such as randomization) commonly overlooked in development of lightweight networking software.  &lt;/p&gt;
&lt;p&gt;Various stakeholders, including HCC Embedded, have made attempts to reach  impacted vendors to provide software fixes that address these issues. A lack of formalization of software OEM relationships and a lack of Software Bill of Materials (SBOM) has complicated this outreach and the much-needed identification of impacted devices. &lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;The impact of exploiting these vulnerabilities will vary widely, depending on the implementation options used while developing embedded systems that use NicheStack or NicheLite. As these vulnerabilities involve processing of network packets, attackers can generally abuse these errors via remote network access. In summary, a remote, unauthenticated attacker may be able to use specially-crafted network packets to cause a denial of service, disclose information, or in some cases be able to execute arbitrary code on the target device. &lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply updates&lt;/h4&gt;
&lt;p&gt;The most reliable way to address these vulnerabilities is to update to the latest stable version of NicheStack software mentioned in HCC Embedded mentioned in their &lt;a href=&quot;https://www.hcc-embedded.com/support/security-advisories&quot;&gt;Security Advisories&lt;/a&gt;. If you are unsure or have discovered NicheStack using &lt;a href=&quot;https://github.com/Forescout/project-memoria-detector&quot;&gt;open-source tools&lt;/a&gt; provided by Forescout, reach out to HCC Embedded via their &lt;a href=&quot;https://www.hcc-embedded.com/support/security-advisories/product-security-policy&quot;&gt;PSIRT&lt;/a&gt; security team or to your upstream vendor in your supply chain to obtain the software fixes.  HCC has also provided a &lt;a href=&quot;https://www.hcc-embedded.com/support/security-advisories/security-advisories-notification&quot;&gt;register to be notified&lt;/a&gt;  web page for sustaining this outreach for their long-standing customers.&lt;/p&gt;
&lt;h4&gt;Block anomalous IP traffic&lt;/h4&gt;
&lt;p&gt;CERT/CC recognizes that many implementations of NicheStack involve longer lifecycles for patching.  In the meantime, if feasible, organizations can consider isolating impacted devices and blocking network attacks using network inspection, as detailed below, when network isolation is not feasible.  It is recommended that security features available to you in devices such as router, firewalls for blocking anomalous network packets are enabled and properly configured. Below is a list of possible mitigations that address some specific network attacks that attempt to exploit these vulnerabilities.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provide DNS recursion services to the embedded devices using recursive DNS servers that are securely configured, and well-maintained with patches and updates.&lt;/li&gt;
&lt;li&gt;Provide HTTP access to embedded devices that are in an isolated network via securely configured HTTP reverse proxy or using HTTP deep packet inspection firewalls.&lt;/li&gt;
&lt;li&gt;Filter ICMP and TFTP access to embedded devices from the wider Internet and use stateful inspection of these protocols when accessible to wider Internet to avoid abuse.&lt;/li&gt;
&lt;li&gt;Enforce TCP stateful inspection for embedded device and reject malformed TCP packets using router, firewall features as available to the operational environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When blocking or isolating is not an option, perform passive inspection using IDS that can alert on anomalous attempts to exploit these vulnerabilities. See also our recommendations and IDS rules that were made available for Treck TCP/IP stack related vulnerabilities &lt;a href=&quot;https://kb.cert.org/vuls/id/257161&quot;&gt;VU#257161&lt;/a&gt; for &lt;a href=&quot;https://github.com/CERTCC/PoC-Exploits/tree/master/vu-257161&quot;&gt;examples&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Amine Amri, Stanislav Dashevskyi, and Daniel dos Santos from Forescout, and Asaf Karas and Shachar Menashe from JFrog who reported these vulnerabilities and supported coordinated disclosure.  HCC Embedded, the primary OEM vendor, also supported our efforts to coordinate and develop security fixes to address these issues.&lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://www.hcc-embedded.com/support/security-advisories&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.hcc-embedded.com/support/security-advisories&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.forescout.com/blog/new-critical-operational-technology-vulnerabilities-found-on-nichestack/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.forescout.com/blog/new-critical-operational-technology-vulnerabilities-found-on-nichestack/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://jfrog.com/blog/infrahalt-14-new-security-vulnerabilities-found-in-nichestack/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://jfrog.com/blog/infrahalt-14-new-security-vulnerabilities-found-in-nichestack/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://us-cert.cisa.gov/ics/advisories/icsa-21-217-01&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://us-cert.cisa.gov/ics/advisories/icsa-21-217-01&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://cert.vde.com/de-de/advisories/vde-2021-032&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cert.vde.com/de-de/advisories/vde-2021-032&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25928&quot;&gt;CVE-2020-25928  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31400&quot;&gt;CVE-2021-31400  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31228&quot;&gt;CVE-2021-31228  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-35685&quot;&gt;CVE-2020-35685  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31401&quot;&gt;CVE-2021-31401  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-27565&quot;&gt;CVE-2021-27565  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-35683&quot;&gt;CVE-2020-35683  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-35684&quot;&gt;CVE-2020-35684  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25926&quot;&gt;CVE-2020-25926  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25767&quot;&gt;CVE-2020-25767  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31226&quot;&gt;CVE-2021-31226  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31227&quot;&gt;CVE-2021-31227  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25927&quot;&gt;CVE-2020-25927  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-36762&quot;&gt;CVE-2021-36762  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-08-10&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-08-10&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-08-10 16:50 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;1 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23608209 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#357312: HTTP Request Smuggling in Web Proxies</title><link href="https://kb.cert.org/vuls/id/357312" rel="alternate"><published>2021-08-06T12:23:44.875069+00:00</published><updated>2021-08-12T11:44:33.207712+00:00</updated><id>https://kb.cert.org/vuls/id/357312</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;HTTP web proxies and web accelerators  that support HTTP/2 for an HTTP/1.1 backend webserver are vulnerable to HTTP Request Smuggling. &lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The affected systems allow invalid characters such as carriage return and newline characters in HTTP/2 headers. When an attacker passes these invalid contents to a vulnerable system,  the forwarded HTTP/1 request includes the unintended malicious data. This is commonly known as HTTP Request Splitting. In the case of HTTP web proxies, this vulnerability can lead to HTTP Request smuggling, which enables an attacker to access protected internal sites.  &lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can send a crafted HTTP/2 request with malicious content to bypass network security measures, thereby reaching internal protected servers and accessing sensitive data. &lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply updates&lt;/h4&gt;
&lt;p&gt;Install vendor-provided patches and updates to ensure malicious HTTP/2 content is blocked or rejected as described in &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7540#section-8.1.2.6&quot;&gt;RFC 7540 (Section 8.1.2.6)&lt;/a&gt; and &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7540#section-10.3&quot;&gt;RFC 7540 (Section 10.3)&lt;/a&gt;.  Both &quot;request&quot; and &quot;response&quot; should be  inspected by the web proxy and rejected in accordance with Stream Error Handling as described in  &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7540#section-5.4.2&quot;&gt;RFC 7450 (Section 5.4.2)&lt;/a&gt;. &lt;/p&gt;
&lt;h4&gt;Inspect and block anomalous HTTP/2 traffic&lt;/h4&gt;
&lt;p&gt;If HTTP/2 is not supported, block the protocol on the web proxies to avoid abuse of HTTP/2 protocol.  Where HTTP/2 is supported, enforce strict rules for HTTP header checks to ensure malicious headers are normalized or rejected.&lt;br&gt;
Checks of this type include:
* HTTP Headers with invalid Header name or value
* HTTP Headers with invalid or no content-length
* Unsupported or invalid HTTP methods&lt;/p&gt;
&lt;h4&gt;Test and verify your web proxy&lt;/h4&gt;
&lt;p&gt;Scan your public web server proxy with OWASP recommended &lt;a href=&quot;https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/15-Testing_for_HTTP_Splitting_Smuggling&quot;&gt;tests&lt;/a&gt; to ensure your web servers are not vulnerable to abuse via HTTP response splitting.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the reporter James Kettle of &lt;a href=&quot;https://portswigger.net/research/http2&quot;&gt;PortSwigger&lt;/a&gt; for the information about this vulnerability.&lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;HTTP web proxies and web accelerators  that support HTTP/2 for an HTTP/1.1 backend webserver are vulnerable to HTTP Request Smuggling. &lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The affected systems allow invalid characters such as carriage return and newline characters in HTTP/2 headers. When an attacker passes these invalid contents to a vulnerable system,  the forwarded HTTP/1 request includes the unintended malicious data. This is commonly known as HTTP Request Splitting. In the case of HTTP web proxies, this vulnerability can lead to HTTP Request smuggling, which enables an attacker to access protected internal sites.  &lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can send a crafted HTTP/2 request with malicious content to bypass network security measures, thereby reaching internal protected servers and accessing sensitive data. &lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply updates&lt;/h4&gt;
&lt;p&gt;Install vendor-provided patches and updates to ensure malicious HTTP/2 content is blocked or rejected as described in &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7540#section-8.1.2.6&quot;&gt;RFC 7540 (Section 8.1.2.6)&lt;/a&gt; and &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7540#section-10.3&quot;&gt;RFC 7540 (Section 10.3)&lt;/a&gt;.  Both &quot;request&quot; and &quot;response&quot; should be  inspected by the web proxy and rejected in accordance with Stream Error Handling as described in  &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7540#section-5.4.2&quot;&gt;RFC 7450 (Section 5.4.2)&lt;/a&gt;. &lt;/p&gt;
&lt;h4&gt;Inspect and block anomalous HTTP/2 traffic&lt;/h4&gt;
&lt;p&gt;If HTTP/2 is not supported, block the protocol on the web proxies to avoid abuse of HTTP/2 protocol.  Where HTTP/2 is supported, enforce strict rules for HTTP header checks to ensure malicious headers are normalized or rejected.&lt;br&gt;
Checks of this type include:
* HTTP Headers with invalid Header name or value
* HTTP Headers with invalid or no content-length
* Unsupported or invalid HTTP methods&lt;/p&gt;
&lt;h4&gt;Test and verify your web proxy&lt;/h4&gt;
&lt;p&gt;Scan your public web server proxy with OWASP recommended &lt;a href=&quot;https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/15-Testing_for_HTTP_Splitting_Smuggling&quot;&gt;tests&lt;/a&gt; to ensure your web servers are not vulnerable to abuse via HTTP response splitting.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the reporter James Kettle of &lt;a href=&quot;https://portswigger.net/research/http2&quot;&gt;PortSwigger&lt;/a&gt; for the information about this vulnerability.&lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://portswigger.net/research/request-smuggling&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://portswigger.net/research/request-smuggling&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7540&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://datatracker.ietf.org/doc/html/rfc7540&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://portswigger.net/research/http2&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://portswigger.net/research/http2&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/15-Testing_for_HTTP_Splitting_Smuggling&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/15-Testing_for_HTTP_Splitting_Smuggling&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-08-06&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-08-06&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-08-12 11:44 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;3 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23357312 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#405600: Microsoft Windows Active Directory Certificate Services can allow for AD compromise via PetitPotam NTLM relay attacks</title><link href="https://kb.cert.org/vuls/id/405600" rel="alternate"><published>2021-08-02T21:57:56.375254+00:00</published><updated>2021-08-17T19:03:32.205470+00:00</updated><id>https://kb.cert.org/vuls/id/405600</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Microsoft Windows Active Directory Certificate Services (AD CS) by default can be used as a target for NTLM relay attacks, which can allow a domain-joined computer to take over the entire Active Directory.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/topotam/PetitPotam&quot;&gt;PetitPotam&lt;/a&gt; is a tool to force Windows hosts to authenticate to other machines by using the &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr&quot;&gt;Encrypting File System Remote (EFSRPC)&lt;/a&gt; &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr/ccc4fb75-1c86-41d7-bbc4-b278ec13bfb8&quot;&gt;EfsRpcOpenFileRaw&lt;/a&gt; and other methods. When a system handles certain EFSRPC requests, it will by default use NTLM to authenticate with the host that is specified within the path to the file specified in the EFSRPC request. The user specified in the NTLM authentication information is the computer account of the machine that made the EFSRPC request.&lt;/p&gt;
&lt;p&gt;Code running on any domain-joined system will leverage Single Sign-On (SSO) to call these EFSRPC functions on a domain controller without needing to know the credentials of the current user or any other user in an Active Directory. And because the EFSRPC methods authenticate as the machine dispatching the request, this means that a user of any system connected to an AD domain can trigger an NTLM authentication request as the domain controller machine account to an arbitrary host, without needing to know any credentials. This can allow for NTLM relay attacks. Furthermore, the &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; function can be invoked in a truly anonymous manner, without requiring credentials via SSO or other means.&lt;/p&gt;
&lt;p&gt;One publicly-discussed target for an NTLM relay attack from a domain controller is a machine that hosts &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/networking/core-network-guide/cncg/server-certs/install-the-certification-authority&quot;&gt;Microsoft AD CS&lt;/a&gt;. By relaying an NTLM authentication request from a domain controller to the Certificate Authority Web Enrollment or the Certificate Enrollment Web Service on an AD CS system, an attacker can obtain a certificate that can be used to obtain a Ticket Granting Ticket (TGT) from the domain controller. This attack, known as a &quot;Golden Ticket&quot; attack, can be used to fully compromise the entire Active Directory infrastructure.&lt;/p&gt;
&lt;p&gt;Although Microsoft refers to this entire attack chain as &quot;PetitPotam&quot; in &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&quot;&gt;KB5005413&lt;/a&gt;, it is important to realize that PetitPotam is simply the single PoC exploit used to invoke an NTLM authentication request by way of a &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; request. It should be noted that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There may be other techniques that may cause a Windows system to initiate a connection to an arbitrary host using privileged NTLM credentials.&lt;/li&gt;
&lt;li&gt;There may be services other than AD CS that may be leveraged to use as a target for a relayed NTLM authentication request.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By making a crafted RPC request to a vulnerable Windows system, a remote attacker may be able to leverage the NTLM authentication information that is included in the request that is generated. In the case of AD CS, this can allow an attacker on any domain-joined system to be able to compromise the Active Directory.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is partially addressed in the &lt;a href=&quot;https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-36942&quot;&gt;Microsoft update for CVE-2021-36942&lt;/a&gt;. This update blocks the unauthenticated &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; API call that is exposed through the LSARPC interface. Note that the EFSRPC interface for accessing &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; is still reachable to authenticated users after installing this update. In addition, other EFSRPC functions that require authentication to exploit are still exposed to users via LSARPC after this update is installed. This required authentication may take place silently via SSO on domain-joined systems. Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&quot;&gt;KB5005413&lt;/a&gt; for several additional workarounds that can help mitigate other techniques for relaying NTLM credentials using an AD CS server.&lt;/p&gt;
&lt;h4&gt;Enable Extended Protection for Authentication (EPA) and Require SSL on AD CS systems&lt;/h4&gt;
&lt;p&gt;Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&quot;&gt;KB5005413&lt;/a&gt; for more details about enabling EPA to help protect against this weakness. It is important to note:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In addition to configuring EPA through the IIS Manager GUI, the Certificate Enrollment Web Service (CES) also requires modifying the &lt;code&gt;web.config&lt;/code&gt; file to successfully enable EPA.&lt;/li&gt;
&lt;li&gt;The CES and the CertSrv applications &lt;strong&gt;must&lt;/strong&gt; be configured to enable the &lt;strong&gt;Require SSL&lt;/strong&gt; option for EPA protection to work. If &lt;strong&gt;Require SSL&lt;/strong&gt; is not enabled, then any changes to the EPA settings will not have any effect.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Disable incoming NTLM on AD CS servers&lt;/h4&gt;
&lt;p&gt;The stage of leveraging an AD CS server to achieve the ability to get a TGT can be mitigated by disabling incoming NTLM support on AD CS servers. To configure this GPO setting, go to:
&lt;strong&gt;Configuration -&amp;gt; Windows Settings -&amp;gt; Security Settings -&amp;gt; Local Policies -&amp;gt; Security Options&lt;/strong&gt;
and set &lt;strong&gt;Network security: Restrict NTLM: Incoming NTLM traffic&lt;/strong&gt; to &lt;strong&gt;Deny All Accounts&lt;/strong&gt; or &lt;strong&gt;Deny All domain accounts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Note that the group policy may need to be refreshed on the AD CS server for this mitigation to take effect.&lt;/p&gt;
&lt;h4&gt;Disable the NTLM provider in IIS&lt;/h4&gt;
&lt;p&gt;For both the &quot;Certificate Authority Web Enrollment&quot; (CES) service (&lt;code&gt;&amp;lt;CA_INFO&amp;gt;-CA_CES_Kerberos&lt;/code&gt; in IIS Manager) and the &quot;Certificate Enrollment Web Service&quot; (&lt;code&gt;CertSrv&lt;/code&gt; in IIS Manager) services:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open IIS Manager&lt;/li&gt;
&lt;li&gt;Select Sites -&amp;gt; Default Web Site (or another name if it was manually reconfigured) -&amp;gt; &lt;code&gt;*-CA_CES_Kerberos&lt;/code&gt;  and &lt;code&gt;CertSrv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Windows Authentication&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Providers...&lt;/code&gt; link on the right side&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;NTLM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Remove&lt;/code&gt; Button&lt;/li&gt;
&lt;li&gt;Restart IIS from an Administrator CMD prompt: &lt;code&gt;iisreset /restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Block [MS-ESFR] (EFSRPC) using RPC filters&lt;/h4&gt;
&lt;p&gt;RPC filters can be used to block the (remote) EFSRPC functionality that PetitPotam uses. This can be done by blocking the &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr/1baaad2f-7a84-4238-b113-f32827a39cd2&quot;&gt;RPC interface UUIDs for EFSRPC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First create a file called &lt;code&gt;block_efsr.txt&lt;/code&gt; and place the following contents in it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rpc
filter
add rule layer=um actiontype=block
add condition field=if_uuid matchtype=equal data=c681d488-d850-11d0-8c52-00c04fd90f7e
add filter
add rule layer=um actiontype=block
add condition field=if_uuid matchtype=equal data=df1941c5-fe89-4e79-bf10-463657acf44d
add filter
quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then import the filter using the following command from an elevated-privileged command prompt:&lt;br&gt;
&lt;code&gt;netsh -f block_efsr.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, the above text block can be pasted into an interactive &lt;code&gt;netsh&lt;/code&gt; session if you wish to avoid the use of a file to import the rules from.&lt;/p&gt;
&lt;p&gt;The current filters can be viewed by running the following command:&lt;br&gt;
&lt;code&gt;netsh rpc filter show filter&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All RPC filters can be removed using the following command:&lt;br&gt;
&lt;code&gt;netsh rpc filter delete filter filterkey=&lt;/code&gt;&lt;br&gt;
This will restore Windows to its default configuration of not having any RPC filters.  If you have other RPC filters in place and wish to remove only the EFSRPC filters, you can specify the specific &lt;code&gt;filterKey&lt;/code&gt; values that are reported by the &lt;code&gt;show filter&lt;/code&gt; command listed above.&lt;/p&gt;
&lt;h4&gt;Disable NTLM Authentication on your Windows domain controller&lt;/h4&gt;
&lt;p&gt;Instructions for disabling NTLM authentication in your domain can be found in the article &lt;a href=&quot;https://docs.microsoft.com/windows/security/threat-protection/security-policy-settings/network-security-restrict-ntlm-ntlm-authentication-in-this-domain&quot;&gt;Network security: Restrict NTLM: NTLM authentication in this domain&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that existing logins may need to be terminated for this mitigation to take effect. Also note that disabling NTLM has been reported by some to be disruptive to expected network functionality. For this reason, please consider the other workarounds in this vulnerability note.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;The PetitPotam aspect of this attack chain was publicly disclosed by topotam. The AD CS aspect was publicly disclosed by harmj0y (Will Schroeder) and tifkin_ (Lee Christensen).&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Microsoft Windows Active Directory Certificate Services (AD CS) by default can be used as a target for NTLM relay attacks, which can allow a domain-joined computer to take over the entire Active Directory.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/topotam/PetitPotam&quot;&gt;PetitPotam&lt;/a&gt; is a tool to force Windows hosts to authenticate to other machines by using the &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr&quot;&gt;Encrypting File System Remote (EFSRPC)&lt;/a&gt; &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr/ccc4fb75-1c86-41d7-bbc4-b278ec13bfb8&quot;&gt;EfsRpcOpenFileRaw&lt;/a&gt; and other methods. When a system handles certain EFSRPC requests, it will by default use NTLM to authenticate with the host that is specified within the path to the file specified in the EFSRPC request. The user specified in the NTLM authentication information is the computer account of the machine that made the EFSRPC request.&lt;/p&gt;
&lt;p&gt;Code running on any domain-joined system will leverage Single Sign-On (SSO) to call these EFSRPC functions on a domain controller without needing to know the credentials of the current user or any other user in an Active Directory. And because the EFSRPC methods authenticate as the machine dispatching the request, this means that a user of any system connected to an AD domain can trigger an NTLM authentication request as the domain controller machine account to an arbitrary host, without needing to know any credentials. This can allow for NTLM relay attacks. Furthermore, the &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; function can be invoked in a truly anonymous manner, without requiring credentials via SSO or other means.&lt;/p&gt;
&lt;p&gt;One publicly-discussed target for an NTLM relay attack from a domain controller is a machine that hosts &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/networking/core-network-guide/cncg/server-certs/install-the-certification-authority&quot;&gt;Microsoft AD CS&lt;/a&gt;. By relaying an NTLM authentication request from a domain controller to the Certificate Authority Web Enrollment or the Certificate Enrollment Web Service on an AD CS system, an attacker can obtain a certificate that can be used to obtain a Ticket Granting Ticket (TGT) from the domain controller. This attack, known as a &quot;Golden Ticket&quot; attack, can be used to fully compromise the entire Active Directory infrastructure.&lt;/p&gt;
&lt;p&gt;Although Microsoft refers to this entire attack chain as &quot;PetitPotam&quot; in &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&quot;&gt;KB5005413&lt;/a&gt;, it is important to realize that PetitPotam is simply the single PoC exploit used to invoke an NTLM authentication request by way of a &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; request. It should be noted that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There may be other techniques that may cause a Windows system to initiate a connection to an arbitrary host using privileged NTLM credentials.&lt;/li&gt;
&lt;li&gt;There may be services other than AD CS that may be leveraged to use as a target for a relayed NTLM authentication request.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By making a crafted RPC request to a vulnerable Windows system, a remote attacker may be able to leverage the NTLM authentication information that is included in the request that is generated. In the case of AD CS, this can allow an attacker on any domain-joined system to be able to compromise the Active Directory.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is partially addressed in the &lt;a href=&quot;https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-36942&quot;&gt;Microsoft update for CVE-2021-36942&lt;/a&gt;. This update blocks the unauthenticated &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; API call that is exposed through the LSARPC interface. Note that the EFSRPC interface for accessing &lt;code&gt;EfsRpcOpenFileRaw&lt;/code&gt; is still reachable to authenticated users after installing this update. In addition, other EFSRPC functions that require authentication to exploit are still exposed to users via LSARPC after this update is installed. This required authentication may take place silently via SSO on domain-joined systems. Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&quot;&gt;KB5005413&lt;/a&gt; for several additional workarounds that can help mitigate other techniques for relaying NTLM credentials using an AD CS server.&lt;/p&gt;
&lt;h4&gt;Enable Extended Protection for Authentication (EPA) and Require SSL on AD CS systems&lt;/h4&gt;
&lt;p&gt;Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&quot;&gt;KB5005413&lt;/a&gt; for more details about enabling EPA to help protect against this weakness. It is important to note:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In addition to configuring EPA through the IIS Manager GUI, the Certificate Enrollment Web Service (CES) also requires modifying the &lt;code&gt;web.config&lt;/code&gt; file to successfully enable EPA.&lt;/li&gt;
&lt;li&gt;The CES and the CertSrv applications &lt;strong&gt;must&lt;/strong&gt; be configured to enable the &lt;strong&gt;Require SSL&lt;/strong&gt; option for EPA protection to work. If &lt;strong&gt;Require SSL&lt;/strong&gt; is not enabled, then any changes to the EPA settings will not have any effect.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Disable incoming NTLM on AD CS servers&lt;/h4&gt;
&lt;p&gt;The stage of leveraging an AD CS server to achieve the ability to get a TGT can be mitigated by disabling incoming NTLM support on AD CS servers. To configure this GPO setting, go to:
&lt;strong&gt;Configuration -&amp;gt; Windows Settings -&amp;gt; Security Settings -&amp;gt; Local Policies -&amp;gt; Security Options&lt;/strong&gt;
and set &lt;strong&gt;Network security: Restrict NTLM: Incoming NTLM traffic&lt;/strong&gt; to &lt;strong&gt;Deny All Accounts&lt;/strong&gt; or &lt;strong&gt;Deny All domain accounts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Note that the group policy may need to be refreshed on the AD CS server for this mitigation to take effect.&lt;/p&gt;
&lt;h4&gt;Disable the NTLM provider in IIS&lt;/h4&gt;
&lt;p&gt;For both the &quot;Certificate Authority Web Enrollment&quot; (CES) service (&lt;code&gt;&amp;lt;CA_INFO&amp;gt;-CA_CES_Kerberos&lt;/code&gt; in IIS Manager) and the &quot;Certificate Enrollment Web Service&quot; (&lt;code&gt;CertSrv&lt;/code&gt; in IIS Manager) services:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open IIS Manager&lt;/li&gt;
&lt;li&gt;Select Sites -&amp;gt; Default Web Site (or another name if it was manually reconfigured) -&amp;gt; &lt;code&gt;*-CA_CES_Kerberos&lt;/code&gt;  and &lt;code&gt;CertSrv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Windows Authentication&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Providers...&lt;/code&gt; link on the right side&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;NTLM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Remove&lt;/code&gt; Button&lt;/li&gt;
&lt;li&gt;Restart IIS from an Administrator CMD prompt: &lt;code&gt;iisreset /restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Block [MS-ESFR] (EFSRPC) using RPC filters&lt;/h4&gt;
&lt;p&gt;RPC filters can be used to block the (remote) EFSRPC functionality that PetitPotam uses. This can be done by blocking the &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr/1baaad2f-7a84-4238-b113-f32827a39cd2&quot;&gt;RPC interface UUIDs for EFSRPC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First create a file called &lt;code&gt;block_efsr.txt&lt;/code&gt; and place the following contents in it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rpc
filter
add rule layer=um actiontype=block
add condition field=if_uuid matchtype=equal data=c681d488-d850-11d0-8c52-00c04fd90f7e
add filter
add rule layer=um actiontype=block
add condition field=if_uuid matchtype=equal data=df1941c5-fe89-4e79-bf10-463657acf44d
add filter
quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then import the filter using the following command from an elevated-privileged command prompt:&lt;br&gt;
&lt;code&gt;netsh -f block_efsr.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, the above text block can be pasted into an interactive &lt;code&gt;netsh&lt;/code&gt; session if you wish to avoid the use of a file to import the rules from.&lt;/p&gt;
&lt;p&gt;The current filters can be viewed by running the following command:&lt;br&gt;
&lt;code&gt;netsh rpc filter show filter&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All RPC filters can be removed using the following command:&lt;br&gt;
&lt;code&gt;netsh rpc filter delete filter filterkey=&lt;/code&gt;&lt;br&gt;
This will restore Windows to its default configuration of not having any RPC filters.  If you have other RPC filters in place and wish to remove only the EFSRPC filters, you can specify the specific &lt;code&gt;filterKey&lt;/code&gt; values that are reported by the &lt;code&gt;show filter&lt;/code&gt; command listed above.&lt;/p&gt;
&lt;h4&gt;Disable NTLM Authentication on your Windows domain controller&lt;/h4&gt;
&lt;p&gt;Instructions for disabling NTLM authentication in your domain can be found in the article &lt;a href=&quot;https://docs.microsoft.com/windows/security/threat-protection/security-policy-settings/network-security-restrict-ntlm-ntlm-authentication-in-this-domain&quot;&gt;Network security: Restrict NTLM: NTLM authentication in this domain&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that existing logins may need to be terminated for this mitigation to take effect. Also note that disabling NTLM has been reported by some to be disruptive to expected network functionality. For this reason, please consider the other workarounds in this vulnerability note.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;The PetitPotam aspect of this attack chain was publicly disclosed by topotam. The AD CS aspect was publicly disclosed by harmj0y (Will Schroeder) and tifkin_ (Lee Christensen).&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-36942&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-36942&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/ADV210003&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/vulnerability/ADV210003&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://support.microsoft.com/en-us/topic/kb5005413-mitigating-ntlm-relay-attacks-on-active-directory-certificate-services-ad-cs-3612b773-4043-4aa9-b23d-b87910cd3429&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr/ccc4fb75-1c86-41d7-bbc4-b278ec13bfb8&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-efsr/ccc4fb75-1c86-41d7-bbc4-b278ec13bfb8&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/networking/core-network-guide/cncg/server-certs/install-the-certification-authority&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/windows-server/networking/core-network-guide/cncg/server-certs/install-the-certification-authority&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://msrc-blog.microsoft.com/2009/12/08/extended-protection-for-authentication/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc-blog.microsoft.com/2009/12/08/extended-protection-for-authentication/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://github.com/topotam/PetitPotam&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/topotam/PetitPotam&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://posts.specterops.io/certified-pre-owned-d95910965cd2&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://posts.specterops.io/certified-pre-owned-d95910965cd2&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.exandroid.dev/2021/06/23/ad-cs-relay-attack-practical-guide/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.exandroid.dev/2021/06/23/ad-cs-relay-attack-practical-guide/&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-08-02&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-08-02&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-08-17 19:03 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;13 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23405600 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#914124: Arcadyan-based routers and modems vulnerable to authentication bypass</title><link href="https://kb.cert.org/vuls/id/914124" rel="alternate"><published>2021-07-20T20:21:21.993664+00:00</published><updated>2021-08-18T14:09:00.168149+00:00</updated><id>https://kb.cert.org/vuls/id/914124</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;A path traversal vulnerability exists in numerous routers manufactured by multiple vendors using Arcadyan based software. This vulnerability allows an unauthenticated user access to sensitive information and allows for the alteration of the router configuration.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The vulnerability, identified as &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-20090&quot;&gt;CVE-2021-20090&lt;/a&gt;, is a path traversal vulnerability.  An unauthenticated attacker is able to leverage this vulnerability to access resources that would normally be protected. The researcher initially thought it was limited to one router manufacturer and published their &lt;a href=&quot;https://www.tenable.com/security/research/tra-2021-13&quot;&gt;findings&lt;/a&gt;, but then discovered that the issue existed in the Arcadyan based software that was being used in routers from multiple vendors.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;Successful exploitation of this vulnerability could allow an attacker to access pages that would otherwise require authentication. An unauthenticated attacker could gain access to sensitive information, including valid request tokens, which could be used to make requests to alter router settings.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;The CERT/CC recommends updating your router to the latest available firmware version. It is also recommended to disable the remote (WAN-side) administration services on any SoHo router and also disable the web interface on the WAN. &lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the reporter Evan Grant from Tenable.&lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;A path traversal vulnerability exists in numerous routers manufactured by multiple vendors using Arcadyan based software. This vulnerability allows an unauthenticated user access to sensitive information and allows for the alteration of the router configuration.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The vulnerability, identified as &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-20090&quot;&gt;CVE-2021-20090&lt;/a&gt;, is a path traversal vulnerability.  An unauthenticated attacker is able to leverage this vulnerability to access resources that would normally be protected. The researcher initially thought it was limited to one router manufacturer and published their &lt;a href=&quot;https://www.tenable.com/security/research/tra-2021-13&quot;&gt;findings&lt;/a&gt;, but then discovered that the issue existed in the Arcadyan based software that was being used in routers from multiple vendors.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;Successful exploitation of this vulnerability could allow an attacker to access pages that would otherwise require authentication. An unauthenticated attacker could gain access to sensitive information, including valid request tokens, which could be used to make requests to alter router settings.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;The CERT/CC recommends updating your router to the latest available firmware version. It is also recommended to disable the remote (WAN-side) administration services on any SoHo router and also disable the web interface on the WAN. &lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the reporter Evan Grant from Tenable.&lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://www.tenable.com/security/research/tra-2021-13&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.tenable.com/security/research/tra-2021-13&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-20090&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-20090&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.buffalo.jp/news/detail/20210427-03.html&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.buffalo.jp/news/detail/20210427-03.html&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://medium.com/tenable-techblog/bypassing-authentication-on-arcadyan-routers-with-cve-2021-20090-and-rooting-some-buffalo-ea1dd30980c2&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://medium.com/tenable-techblog/bypassing-authentication-on-arcadyan-routers-with-cve-2021-20090-and-rooting-some-buffalo-ea1dd30980c2&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-20090&quot;&gt;CVE-2021-20090  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-07-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-07-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-08-18 14:09 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;13 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23914124 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#506989: Microsoft Windows 10 gives unprivileged user access to system32\config files</title><link href="https://kb.cert.org/vuls/id/506989" rel="alternate"><published>2021-07-20T16:48:31.420984+00:00</published><updated>2021-07-29T16:29:54.009318+00:00</updated><id>https://kb.cert.org/vuls/id/506989</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Multiple versions of Windows 10 grant non-administrative users read access to files in the &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory. This can allow for local privilege escalation (LPE).&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;With multiple versions of Windows 10, the &lt;code&gt;BUILTIN\Users&lt;/code&gt; group is given &lt;code&gt;RX&lt;/code&gt; permissions to files in the &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;If a VSS shadow copy of the system drive is available, a non-privileged user may leverage access to these files to achieve a number of impacts, including but not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extract and leverage account password hashes.&lt;/li&gt;
&lt;li&gt;Discover the original Windows installation password.&lt;/li&gt;
&lt;li&gt;Obtain DPAPI computer keys, which can be used to decrypt all computer private keys.&lt;/li&gt;
&lt;li&gt;Obtain a computer machine account, which can be used in a &lt;a href=&quot;https://www.sans.org/blog/kerberos-in-the-crosshairs-golden-tickets-silver-tickets-mitm-and-more/&quot;&gt;silver ticket attack&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that VSS shadow copies may not be available in some configurations, however simply having a system drive that is larger that 128GB in size and then performing a Windows Update or installing an MSI will ensure that a VSS shadow copy will be &lt;a href=&quot;https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/system-restore-points-disabled#more-information&quot;&gt;automatically created&lt;/a&gt;. To check if a system has VSS shadow copies available, run the following command from a privileged command prompt:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vssadmin list shadows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A system with VSS shadow copies will report details of at least one shadow copy that specifies &lt;code&gt;Original Volume: (C:)&lt;/code&gt;, such as the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool
(C) Copyright 2001-2013 Microsoft Corp.

Contents of shadow copy set ID: {d9e0503a-bafa-4255-bfc5-b781cb27737e}
   Contained 1 shadow copies at creation time: 7/19/2021 10:29:49 PM
      Shadow Copy ID: {b7f4115b-4242-4e13-84c0-869524965718}
         Original Volume: (C:)\\?\Volume{4c1bc45e-359f-4517-88e4-e985330f72e9}\
         Shadow Copy Volume: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1
         Originating Machine: DESKTOP-PAPIHMA
         Service Machine: DESKTOP-PAPIHMA
         Provider: 'Microsoft Software Shadow Copy provider 1.0'
         Type: ClientAccessibleWriters
         Attributes: Persistent, Client-accessible, No auto release, Differential, Auto recovered
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A system &lt;strong&gt;without&lt;/strong&gt; VSS shadow copies will produce output like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool
(C) Copyright 2001-2013 Microsoft Corp.

No items found that satisfy the query.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To check if a system is vulnerable, the following command can be used from a non-privileged command prompt:
&lt;code&gt;icacls %windir%\system32\config\sam&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A vulnerable system will report &lt;code&gt;BUILTIN\Users:(I)(RX)&lt;/code&gt; in the output like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
C:\Windows\system32\config\sam BUILTIN\Administrators:(I)(F)
                               NT AUTHORITY\SYSTEM:(I)(F)
                               BUILTIN\Users:(I)(RX)
                               APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:(I)(RX)
                               APPLICATION PACKAGE AUTHORITY\ALL RESTRICTED APPLICATION PACKAGES:(I)(RX)

Successfully processed 1 files; Failed processing 0 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A system that is not vulnerable will report output like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\Windows\system32\config\sam: Access is denied.
Successfully processed 0 files; Failed processing 1 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This vulnerability has been publicly referred to as both HiveNightmare and SeriousSAM, while Microsoft has assigned CVE-2021-36934 to the vulnerability.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By accessing files in the Windows &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory on a vulnerable system with at least one VSS shadow copy of the system drive, a local authenticated attacker may be able to achieve LPE, masquerade as other users, or achieve other security-related impacts.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Please see the &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934&quot;&gt;Microsoft bulletin for CVE-2021-36934&lt;/a&gt;, which contains a workaround. Specifically:&lt;/p&gt;
&lt;h4&gt;Restrict access to %windir%\system32\config and remove VSS shadow copies&lt;/h4&gt;
&lt;p&gt;Vulnerable systems can enable ACL inheritance for files in the &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory by running the following command from an elevated prompt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;icacls %windir%\system32\config\*.* /inheritance:e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the ACLs have been corrected for these files, any VSS shadow copies of the system drive must be deleted to protect a system against exploitation. This can be accomplished with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vssadmin delete shadows /for=%systemdrive% /Quiet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Confirm that VSS shadow copies were deleted by running &lt;code&gt;vssadmin list shadows&lt;/code&gt; again. Note that any capabilities relying on existing shadow copies, such as System Restore, will not function as expected. Newly-created shadow copies, which will contain the proper ACLs, will function as expected. Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005357-delete-volume-shadow-copies-1ceaa637-aaa3-4b58-a48b-baf72a2fa9e7&quot;&gt;KB5005357&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was publicly disclosed by Jonas Lyk, with additional details provided by Benjamin Delpy.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Multiple versions of Windows 10 grant non-administrative users read access to files in the &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory. This can allow for local privilege escalation (LPE).&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;With multiple versions of Windows 10, the &lt;code&gt;BUILTIN\Users&lt;/code&gt; group is given &lt;code&gt;RX&lt;/code&gt; permissions to files in the &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;If a VSS shadow copy of the system drive is available, a non-privileged user may leverage access to these files to achieve a number of impacts, including but not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extract and leverage account password hashes.&lt;/li&gt;
&lt;li&gt;Discover the original Windows installation password.&lt;/li&gt;
&lt;li&gt;Obtain DPAPI computer keys, which can be used to decrypt all computer private keys.&lt;/li&gt;
&lt;li&gt;Obtain a computer machine account, which can be used in a &lt;a href=&quot;https://www.sans.org/blog/kerberos-in-the-crosshairs-golden-tickets-silver-tickets-mitm-and-more/&quot;&gt;silver ticket attack&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that VSS shadow copies may not be available in some configurations, however simply having a system drive that is larger that 128GB in size and then performing a Windows Update or installing an MSI will ensure that a VSS shadow copy will be &lt;a href=&quot;https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/system-restore-points-disabled#more-information&quot;&gt;automatically created&lt;/a&gt;. To check if a system has VSS shadow copies available, run the following command from a privileged command prompt:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vssadmin list shadows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A system with VSS shadow copies will report details of at least one shadow copy that specifies &lt;code&gt;Original Volume: (C:)&lt;/code&gt;, such as the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool
(C) Copyright 2001-2013 Microsoft Corp.

Contents of shadow copy set ID: {d9e0503a-bafa-4255-bfc5-b781cb27737e}
   Contained 1 shadow copies at creation time: 7/19/2021 10:29:49 PM
      Shadow Copy ID: {b7f4115b-4242-4e13-84c0-869524965718}
         Original Volume: (C:)\\?\Volume{4c1bc45e-359f-4517-88e4-e985330f72e9}\
         Shadow Copy Volume: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1
         Originating Machine: DESKTOP-PAPIHMA
         Service Machine: DESKTOP-PAPIHMA
         Provider: 'Microsoft Software Shadow Copy provider 1.0'
         Type: ClientAccessibleWriters
         Attributes: Persistent, Client-accessible, No auto release, Differential, Auto recovered
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A system &lt;strong&gt;without&lt;/strong&gt; VSS shadow copies will produce output like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool
(C) Copyright 2001-2013 Microsoft Corp.

No items found that satisfy the query.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To check if a system is vulnerable, the following command can be used from a non-privileged command prompt:
&lt;code&gt;icacls %windir%\system32\config\sam&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A vulnerable system will report &lt;code&gt;BUILTIN\Users:(I)(RX)&lt;/code&gt; in the output like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
C:\Windows\system32\config\sam BUILTIN\Administrators:(I)(F)
                               NT AUTHORITY\SYSTEM:(I)(F)
                               BUILTIN\Users:(I)(RX)
                               APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:(I)(RX)
                               APPLICATION PACKAGE AUTHORITY\ALL RESTRICTED APPLICATION PACKAGES:(I)(RX)

Successfully processed 1 files; Failed processing 0 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A system that is not vulnerable will report output like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\Windows\system32\config\sam: Access is denied.
Successfully processed 0 files; Failed processing 1 files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This vulnerability has been publicly referred to as both HiveNightmare and SeriousSAM, while Microsoft has assigned CVE-2021-36934 to the vulnerability.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By accessing files in the Windows &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory on a vulnerable system with at least one VSS shadow copy of the system drive, a local authenticated attacker may be able to achieve LPE, masquerade as other users, or achieve other security-related impacts.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Please see the &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934&quot;&gt;Microsoft bulletin for CVE-2021-36934&lt;/a&gt;, which contains a workaround. Specifically:&lt;/p&gt;
&lt;h4&gt;Restrict access to %windir%\system32\config and remove VSS shadow copies&lt;/h4&gt;
&lt;p&gt;Vulnerable systems can enable ACL inheritance for files in the &lt;code&gt;%windir%\system32\config&lt;/code&gt; directory by running the following command from an elevated prompt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;icacls %windir%\system32\config\*.* /inheritance:e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the ACLs have been corrected for these files, any VSS shadow copies of the system drive must be deleted to protect a system against exploitation. This can be accomplished with the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vssadmin delete shadows /for=%systemdrive% /Quiet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Confirm that VSS shadow copies were deleted by running &lt;code&gt;vssadmin list shadows&lt;/code&gt; again. Note that any capabilities relying on existing shadow copies, such as System Restore, will not function as expected. Newly-created shadow copies, which will contain the proper ACLs, will function as expected. Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005357-delete-volume-shadow-copies-1ceaa637-aaa3-4b58-a48b-baf72a2fa9e7&quot;&gt;KB5005357&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was publicly disclosed by Jonas Lyk, with additional details provided by Benjamin Delpy.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005357-delete-volume-shadow-copies-1ceaa637-aaa3-4b58-a48b-baf72a2fa9e7&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://support.microsoft.com/en-us/topic/kb5005357-delete-volume-shadow-copies-1ceaa637-aaa3-4b58-a48b-baf72a2fa9e7&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://twitter.com/jonasLyk/status/1417205166172950531&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://twitter.com/jonasLyk/status/1417205166172950531&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://twitter.com/gentilkiwi/status/1417467063883476992&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://twitter.com/gentilkiwi/status/1417467063883476992&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.sans.org/blog/kerberos-in-the-crosshairs-golden-tickets-silver-tickets-mitm-and-more/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.sans.org/blog/kerberos-in-the-crosshairs-golden-tickets-silver-tickets-mitm-and-more/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/system-restore-points-disabled#more-information&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/system-restore-points-disabled#more-information&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://doublepulsar.com/hivenightmare-aka-serioussam-anybody-can-read-the-registry-in-windows-10-7a871c465fa5&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://doublepulsar.com/hivenightmare-aka-serioussam-anybody-can-read-the-registry-in-windows-10-7a871c465fa5&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-36934&quot;&gt;CVE-2021-36934  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-07-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-07-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-07-29 16:29 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;11 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23506989 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#131152: Microsoft Windows Print Spooler Point and Print allows installation of arbitrary queue-specific files</title><link href="https://kb.cert.org/vuls/id/131152" rel="alternate"><published>2021-07-18T12:38:01.381130+00:00</published><updated>2021-08-16T02:43:54.169458+00:00</updated><id>https://kb.cert.org/vuls/id/131152</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Microsoft Windows allows for non-admin users to be able to install printer drivers via Point and Print. Printers installed via this technique also install queue-specific files, which can be arbitrary libraries to be loaded by the privileged Windows Print Spooler process.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;Microsoft Windows allows for users who lack administrative privileges to still be able to install printer drivers, which execute with &lt;code&gt;SYSTEM&lt;/code&gt; privileges via the Print Spooler service. This ability is achieved through a capability called &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&quot;&gt;Point and Print&lt;/a&gt;. Starting with the update for &lt;a href=&quot;https://docs.microsoft.com/en-us/security-updates/securitybulletins/2016/ms16-087&quot;&gt;MS16-087&lt;/a&gt;, Microsoft requires that printers installable via Point are either signed by a &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/install/whql-release-signature&quot;&gt;WHQL release signature&lt;/a&gt;, or are signed by a certificate that is explicitly trusted by the target system, such as an installed test signing certificate. The intention for this change is to avoid installation of malicious printer drivers, which can allow for Local Privilege Escalation (LPE) to &lt;code&gt;SYSTEM&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;While Windows enforces that driver packages themselves are signed by a trusted source, Windows printer drivers can specify &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/installing-queue-specific-files&quot;&gt;queue-specific files&lt;/a&gt; that are associated with the use of the device. For example, a shared printer can specify a &lt;code&gt;CopyFiles&lt;/code&gt; directive for arbitrary files. These files, which may be copied over alongside the digital-signature-enforced printer driver files are &lt;strong&gt;not&lt;/strong&gt; covered by any signature requirement. Furthermore, these files can be used to overwrite any of the signature-verified files that were placed on a system during printer driver install. The remote printer can also be configured to automatically execute code in any files dropped by the &lt;code&gt;CopyFiles&lt;/code&gt; directive. This can allow for LPE to &lt;code&gt;SYSTEM&lt;/code&gt; on a vulnerable system.&lt;/p&gt;
&lt;p&gt;An exploit for this vulnerability is &lt;a href=&quot;https://twitter.com/gentilkiwi/status/1416429860566847490&quot;&gt;publicly available&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By connecting to a malicious printer, an attacker may be able to execute arbitrary code with &lt;code&gt;SYSTEM&lt;/code&gt; privileges on a vulnerable system.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Microsoft has published &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36958&quot;&gt;CVE-2021-36958&lt;/a&gt; about this issue. The CERT/CC is currently unaware of a practical solution to this problem. Please consider the following workarounds:&lt;/p&gt;
&lt;h4&gt;Block outbound SMB traffic at your network boundary&lt;/h4&gt;
&lt;p&gt;Public exploits for this vulnerability utilize SMB for connectivity to a malicious shared printer. If outbound connections to SMB resources are blocked, then this vulnerability may be mitigated for malicious SMB printers that are hosted outside of your network. Note that an attacker local to your network would be able to share a printer via SMB, which would be unaffected by any outbound SMB traffic rules.&lt;/p&gt;
&lt;h4&gt;Configure both PackagePointAndPrintServerList and PackagePointAndPrintOnly settings&lt;/h4&gt;
&lt;p&gt;Microsoft Windows has a Group Policy called &quot;Package Point and Print - Approved servers&quot;, which is reflected in the &lt;code&gt;HKLM\Software\Policies\Microsoft\Windows NT\Printers\PackagePointAndPrint\PackagePointAndPrintServerList&lt;/code&gt; and &lt;code&gt;HKLM\Software\Policies\Microsoft\Windows NT\Printers\PackagePointAndPrint\ListofServers&lt;/code&gt; registry values. This policy can restrict which servers can be used by non-administrative users to install printers via Point and Print. Configure this policy to prevent installation of printers from arbitrary servers.&lt;/p&gt;
&lt;p&gt;To ensure that Microsoft Windows only attempts to install Package Point and Print printers, and therefore restricting printer connections to the approved servers list, you must also set the &lt;code&gt;HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PackagePointAndPrint\PackagePointAndPrintOnly&lt;/code&gt; registry value to &lt;code&gt;1&lt;/code&gt;. The Group Policy setting that corresponds to this value is called &quot;Use only Package Point and print&quot;. Setting this value to &quot;Enabled&quot; will enforce that only Package Point and Print printers will be used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Both&lt;/strong&gt; of these settings must be configured to protect against exploitation of this vulnerability.&lt;/p&gt;
&lt;h4&gt;Block the ability to modify the print spooler drivers directory&lt;/h4&gt;
&lt;p&gt;Courtesy of the &lt;a href=&quot;https://blog.truesec.com/2021/06/30/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available/&quot;&gt;TRUESEC Blog&lt;/a&gt;, this vulnerability can be mitigated by preventing the &lt;code&gt;SYSTEM&lt;/code&gt; account from being able to modify the &lt;code&gt;C:\Windows\System32\spool\drivers&lt;/code&gt; directory contents.&lt;/p&gt;
&lt;p&gt;To enable this mitigation, from a privileged PowerShell session, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$Path = &amp;quot;C:\Windows\System32\spool\drivers&amp;quot;
$Acl = (Get-Item $Path).GetAccessControl('Access')
$Ar = New-Object  System.Security.AccessControl.FileSystemAccessRule(&amp;quot;System&amp;quot;, &amp;quot;Modify&amp;quot;, &amp;quot;ContainerInherit, ObjectInherit&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;Deny&amp;quot;)
$Acl.AddAccessRule($Ar)
Set-Acl $Path $Acl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To revert the mitigation to allow printer driver installation or modification, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$Path = &amp;quot;C:\Windows\System32\spool\drivers&amp;quot;
$Acl = (Get-Item $Path).GetAccessControl('Access')
$Ar = New-Object System.Security.AccessControl.FileSystemAccessRule(&amp;quot;System&amp;quot;, &amp;quot;Modify&amp;quot;, &amp;quot;ContainerInherit, ObjectInherit&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;Deny&amp;quot;)
$Acl.RemoveAccessRule($Ar)
Set-Acl $Path $Acl
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Stop and disable the Print Spooler&lt;/h4&gt;
&lt;p&gt;The Print Spooler can be disabled in a privileged PowerShell session by running the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Stop-Service -Name Spooler -Force
Set-Service -Name Spooler -StartupType Disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Impact of workaround&lt;/strong&gt; Disabling the Print Spooler service disables the ability to print both locally and remotely.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was publicly disclosed by Benjamin Delpy. Microsoft credits Victor Mata with reporting this issue to them.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Microsoft Windows allows for non-admin users to be able to install printer drivers via Point and Print. Printers installed via this technique also install queue-specific files, which can be arbitrary libraries to be loaded by the privileged Windows Print Spooler process.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;Microsoft Windows allows for users who lack administrative privileges to still be able to install printer drivers, which execute with &lt;code&gt;SYSTEM&lt;/code&gt; privileges via the Print Spooler service. This ability is achieved through a capability called &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&quot;&gt;Point and Print&lt;/a&gt;. Starting with the update for &lt;a href=&quot;https://docs.microsoft.com/en-us/security-updates/securitybulletins/2016/ms16-087&quot;&gt;MS16-087&lt;/a&gt;, Microsoft requires that printers installable via Point are either signed by a &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/install/whql-release-signature&quot;&gt;WHQL release signature&lt;/a&gt;, or are signed by a certificate that is explicitly trusted by the target system, such as an installed test signing certificate. The intention for this change is to avoid installation of malicious printer drivers, which can allow for Local Privilege Escalation (LPE) to &lt;code&gt;SYSTEM&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;While Windows enforces that driver packages themselves are signed by a trusted source, Windows printer drivers can specify &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/installing-queue-specific-files&quot;&gt;queue-specific files&lt;/a&gt; that are associated with the use of the device. For example, a shared printer can specify a &lt;code&gt;CopyFiles&lt;/code&gt; directive for arbitrary files. These files, which may be copied over alongside the digital-signature-enforced printer driver files are &lt;strong&gt;not&lt;/strong&gt; covered by any signature requirement. Furthermore, these files can be used to overwrite any of the signature-verified files that were placed on a system during printer driver install. The remote printer can also be configured to automatically execute code in any files dropped by the &lt;code&gt;CopyFiles&lt;/code&gt; directive. This can allow for LPE to &lt;code&gt;SYSTEM&lt;/code&gt; on a vulnerable system.&lt;/p&gt;
&lt;p&gt;An exploit for this vulnerability is &lt;a href=&quot;https://twitter.com/gentilkiwi/status/1416429860566847490&quot;&gt;publicly available&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By connecting to a malicious printer, an attacker may be able to execute arbitrary code with &lt;code&gt;SYSTEM&lt;/code&gt; privileges on a vulnerable system.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Microsoft has published &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36958&quot;&gt;CVE-2021-36958&lt;/a&gt; about this issue. The CERT/CC is currently unaware of a practical solution to this problem. Please consider the following workarounds:&lt;/p&gt;
&lt;h4&gt;Block outbound SMB traffic at your network boundary&lt;/h4&gt;
&lt;p&gt;Public exploits for this vulnerability utilize SMB for connectivity to a malicious shared printer. If outbound connections to SMB resources are blocked, then this vulnerability may be mitigated for malicious SMB printers that are hosted outside of your network. Note that an attacker local to your network would be able to share a printer via SMB, which would be unaffected by any outbound SMB traffic rules.&lt;/p&gt;
&lt;h4&gt;Configure both PackagePointAndPrintServerList and PackagePointAndPrintOnly settings&lt;/h4&gt;
&lt;p&gt;Microsoft Windows has a Group Policy called &quot;Package Point and Print - Approved servers&quot;, which is reflected in the &lt;code&gt;HKLM\Software\Policies\Microsoft\Windows NT\Printers\PackagePointAndPrint\PackagePointAndPrintServerList&lt;/code&gt; and &lt;code&gt;HKLM\Software\Policies\Microsoft\Windows NT\Printers\PackagePointAndPrint\ListofServers&lt;/code&gt; registry values. This policy can restrict which servers can be used by non-administrative users to install printers via Point and Print. Configure this policy to prevent installation of printers from arbitrary servers.&lt;/p&gt;
&lt;p&gt;To ensure that Microsoft Windows only attempts to install Package Point and Print printers, and therefore restricting printer connections to the approved servers list, you must also set the &lt;code&gt;HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PackagePointAndPrint\PackagePointAndPrintOnly&lt;/code&gt; registry value to &lt;code&gt;1&lt;/code&gt;. The Group Policy setting that corresponds to this value is called &quot;Use only Package Point and print&quot;. Setting this value to &quot;Enabled&quot; will enforce that only Package Point and Print printers will be used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Both&lt;/strong&gt; of these settings must be configured to protect against exploitation of this vulnerability.&lt;/p&gt;
&lt;h4&gt;Block the ability to modify the print spooler drivers directory&lt;/h4&gt;
&lt;p&gt;Courtesy of the &lt;a href=&quot;https://blog.truesec.com/2021/06/30/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available/&quot;&gt;TRUESEC Blog&lt;/a&gt;, this vulnerability can be mitigated by preventing the &lt;code&gt;SYSTEM&lt;/code&gt; account from being able to modify the &lt;code&gt;C:\Windows\System32\spool\drivers&lt;/code&gt; directory contents.&lt;/p&gt;
&lt;p&gt;To enable this mitigation, from a privileged PowerShell session, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$Path = &amp;quot;C:\Windows\System32\spool\drivers&amp;quot;
$Acl = (Get-Item $Path).GetAccessControl('Access')
$Ar = New-Object  System.Security.AccessControl.FileSystemAccessRule(&amp;quot;System&amp;quot;, &amp;quot;Modify&amp;quot;, &amp;quot;ContainerInherit, ObjectInherit&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;Deny&amp;quot;)
$Acl.AddAccessRule($Ar)
Set-Acl $Path $Acl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To revert the mitigation to allow printer driver installation or modification, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$Path = &amp;quot;C:\Windows\System32\spool\drivers&amp;quot;
$Acl = (Get-Item $Path).GetAccessControl('Access')
$Ar = New-Object System.Security.AccessControl.FileSystemAccessRule(&amp;quot;System&amp;quot;, &amp;quot;Modify&amp;quot;, &amp;quot;ContainerInherit, ObjectInherit&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;Deny&amp;quot;)
$Acl.RemoveAccessRule($Ar)
Set-Acl $Path $Acl
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Stop and disable the Print Spooler&lt;/h4&gt;
&lt;p&gt;The Print Spooler can be disabled in a privileged PowerShell session by running the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Stop-Service -Name Spooler -Force
Set-Service -Name Spooler -StartupType Disabled
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Impact of workaround&lt;/strong&gt; Disabling the Print Spooler service disables the ability to print both locally and remotely.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was publicly disclosed by Benjamin Delpy. Microsoft credits Victor Mata with reporting this issue to them.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36958&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36958&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/security-updates/securitybulletins/2016/ms16-087&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/security-updates/securitybulletins/2016/ms16-087&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/install/whql-release-signature&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/windows-hardware/drivers/install/whql-release-signature&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/installing-queue-specific-files&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/installing-queue-specific-files&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://twitter.com/gentilkiwi/status/1416429860566847490&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://twitter.com/gentilkiwi/status/1416429860566847490&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://blog.truesec.com/2021/06/30/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.truesec.com/2021/06/30/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available/&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-36958&quot;&gt;CVE-2021-36958  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-07-18&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-07-18&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-08-16 02:43 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;16 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23131152 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#383432: Microsoft Windows Print Spooler allows for RCE via AddPrinterDriverEx()</title><link href="https://kb.cert.org/vuls/id/383432" rel="alternate"><published>2021-06-30T20:25:21.089335+00:00</published><updated>2021-08-03T15:36:55.283575+00:00</updated><id>https://kb.cert.org/vuls/id/383432</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;The Microsoft Windows Print Spooler service fails to restrict access to functionality that allows users to add printers and related drivers, which can allow a remote authenticated attacker to execute arbitrary code with SYSTEM privileges on a vulnerable system.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/b96cc497-59e5-4510-ab04-5484993b259b&quot;&gt;RpcAddPrinterDriverEx()&lt;/a&gt; function is used to install a printer driver on a system. One of the parameters to this function is the &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/353ff796-6fb3-41cf-8b35-0022dd53d886&quot;&gt;DRIVER_CONTAINER&lt;/a&gt; object, which contains information about which driver is to be used by the added printer. The other argument, &lt;code&gt;dwFileCopyFlags&lt;/code&gt;, specifies how replacement printer driver files are to be copied. An attacker can take advantage of the fact that any authenticated user can call &lt;code&gt;RpcAddPrinterDriverEx()&lt;/code&gt; and specify a driver file that lives on a remote server. This results in the Print Spooler service &lt;code&gt;spoolsv.exe&lt;/code&gt; executing code in an arbitrary DLL file with SYSTEM privileges.&lt;/p&gt;
&lt;p&gt;Note that while original exploit code relied on the &lt;code&gt;RpcAddPrinterDriverEx&lt;/code&gt; to achieve code execution, &lt;a href=&quot;https://github.com/cube0x0/CVE-2021-1675&quot;&gt;an updated version of the exploit&lt;/a&gt; uses &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-par/5d864e3e-5d8b-4337-89ce-cb0258ab97cd&quot;&gt;RpcAsyncAddPrinterDriver&lt;/a&gt; to achieve the same goal. Both of these functions achieve their functionality using &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/printdocs/addprinterdriverex&quot;&gt;AddPrinterDriverEx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While Microsoft has released an &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675&quot;&gt;update for CVE-2021-1675&lt;/a&gt;, it is important to realize that this update does &lt;strong&gt;NOT&lt;/strong&gt; protect against public exploits that may refer to &lt;code&gt;PrintNightmare&lt;/code&gt; or CVE-2021-1675.&lt;/p&gt;
&lt;p&gt;On July 1, Microsoft released &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&quot;&gt;CVE-2021-34527&lt;/a&gt;. This bulletin states that CVE-2021-34527 is similar but distinct from the vulnerability that is assigned CVE-2021-1675, which addresses a different vulnerability in RpcAddPrinterDriverEx(). The attack vector is different as well. CVE-2021-1675 was addressed by the June 2021 security update. &lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By sending a request to add a printer, e.g. by using &lt;code&gt;RpcAddPrinterDriverEx()&lt;/code&gt; over SMB or &lt;code&gt;RpcAsyncAddPrinterDriver()&lt;/code&gt; over RPC, a remote, authenticated attacker may be able to execute arbitrary code with SYSTEM privileges on a vulnerable system. A local unprivileged user may be able to execute arbitrary code with SYSTEM privileges as well. We have created a flowchart to indicate exploitability of PrintNightmare across various platform configurations:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/static-bigvince-prod-kb-eb/383432_PrintNightmare%20Flowchart-v9.png&quot;&gt;&lt;img alt=&quot;PrintNightmare exploitability flowchart&quot; src=&quot;/static-bigvince-prod-kb-eb/383432_PrintNightmare%20Flowchart-v9.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;Microsoft has addressed this issue in the &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&quot;&gt;updates for CVE-2021-34527&lt;/a&gt;. Note that the Microsoft update for CVE-2021-34527 does not effectively prevent exploitation of systems where the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&quot;&gt;Point and Print&lt;/a&gt; &lt;code&gt;NoWarningNoElevationOnInstall&lt;/code&gt; is set to a non-&lt;code&gt;0&lt;/code&gt; value. Microsoft indicates that systems that have &lt;code&gt;NoWarningNoElevationOnInstall&lt;/code&gt; is set to a non-&lt;code&gt;0&lt;/code&gt; value are &lt;strong&gt;vulnerable by design.&lt;/strong&gt; For systems that do not have the CVE-2021-34527 installed, or have Point and Print configured insecurely, please consider the following workarounds:&lt;/p&gt;
&lt;h4&gt;Apply a workaround&lt;/h4&gt;
&lt;p&gt;Microsoft has listed several workarounds in their &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&quot;&gt;advisory for CVE-2021-34527&lt;/a&gt;. Specifically:&lt;/p&gt;
&lt;h4&gt;Microsoft Option 1 - Stop and disable the Print Spooler service&lt;/h4&gt;
&lt;p&gt;This vulnerability can be mitigated by stopping and disabling the Print Spooler service in Windows.&lt;/p&gt;
&lt;p&gt;If disabling the Print Spooler service is appropriate for your enterprise, use the following PowerShell commands:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Stop-Service -Name Spooler -Force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Set-Service -Name Spooler -StartupType Disabled&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Impact of workaround&lt;/strong&gt; Disabling the Print Spooler service disables the ability to print both locally and remotely.&lt;/p&gt;
&lt;h4&gt;Microsoft Option 2 - Disable inbound remote printing through Group Policy&lt;/h4&gt;
&lt;p&gt;Disable the “Allow Print Spooler to accept client connections:” policy to block remote attacks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Impact of workaround&lt;/strong&gt; This policy will block the remote attack vector by preventing inbound remote printing operations. The system will no longer function as a print server, but local printing to a directly attached device will still be possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The Print Spooler service &lt;strong&gt;must&lt;/strong&gt; be restarted for this workaround to be activated.&lt;/p&gt;
&lt;h4&gt;Block RPC and SMB ports at the firewall&lt;/h4&gt;
&lt;p&gt;Limited testing has shown that blocking both the RPC Endpoint Mapper (&lt;code&gt;135/tcp&lt;/code&gt;) and SMB (&lt;code&gt;139/tcp&lt;/code&gt; and &lt;code&gt;445/tcp&lt;/code&gt;) incoming traffic at a host-based firewall level can prevent remote exploitation of this vulnerability. Note that blocking these ports on a Windows system may prevent expected capabilities from functioning properly, especially on a system that functions as a server.&lt;/p&gt;
&lt;h4&gt;Enable security prompts for Point and Print&lt;/h4&gt;
&lt;p&gt;Ensure that the Windows Point and Print Restrictions are set to &lt;code&gt;Show warning and elevation prompt&lt;/code&gt; for both installing and updating drivers in the Windows Group Policy. Specifically the &lt;code&gt;HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PointAndPrint\&lt;/code&gt; key should have &lt;code&gt;NoWarningNoElevationOnInstall&lt;/code&gt; and &lt;code&gt;UpdatePromptSettings&lt;/code&gt; entries that are both set to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Restrict printer driver installation ability to administrators&lt;/h4&gt;
&lt;p&gt;After the Microsoft update for CVE-2021-34527 is installed, a registry value called &lt;code&gt;RestrictDriverInstallationToAdministrators&lt;/code&gt; in the &lt;code&gt;HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PointAndPrint\&lt;/code&gt; key is checked, which is intended to restrict printer driver installation to only administrator users. Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005010-restricting-installation-of-new-printer-drivers-after-applying-the-july-6-2021-updates-31b91c02-05bc-4ada-a7ea-183b129578a7&quot;&gt;KB5005010&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This issue was publicly disclosed by Zhiniang Peng and Xuefeng Li.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;The Microsoft Windows Print Spooler service fails to restrict access to functionality that allows users to add printers and related drivers, which can allow a remote authenticated attacker to execute arbitrary code with SYSTEM privileges on a vulnerable system.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/b96cc497-59e5-4510-ab04-5484993b259b&quot;&gt;RpcAddPrinterDriverEx()&lt;/a&gt; function is used to install a printer driver on a system. One of the parameters to this function is the &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/353ff796-6fb3-41cf-8b35-0022dd53d886&quot;&gt;DRIVER_CONTAINER&lt;/a&gt; object, which contains information about which driver is to be used by the added printer. The other argument, &lt;code&gt;dwFileCopyFlags&lt;/code&gt;, specifies how replacement printer driver files are to be copied. An attacker can take advantage of the fact that any authenticated user can call &lt;code&gt;RpcAddPrinterDriverEx()&lt;/code&gt; and specify a driver file that lives on a remote server. This results in the Print Spooler service &lt;code&gt;spoolsv.exe&lt;/code&gt; executing code in an arbitrary DLL file with SYSTEM privileges.&lt;/p&gt;
&lt;p&gt;Note that while original exploit code relied on the &lt;code&gt;RpcAddPrinterDriverEx&lt;/code&gt; to achieve code execution, &lt;a href=&quot;https://github.com/cube0x0/CVE-2021-1675&quot;&gt;an updated version of the exploit&lt;/a&gt; uses &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-par/5d864e3e-5d8b-4337-89ce-cb0258ab97cd&quot;&gt;RpcAsyncAddPrinterDriver&lt;/a&gt; to achieve the same goal. Both of these functions achieve their functionality using &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/printdocs/addprinterdriverex&quot;&gt;AddPrinterDriverEx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While Microsoft has released an &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675&quot;&gt;update for CVE-2021-1675&lt;/a&gt;, it is important to realize that this update does &lt;strong&gt;NOT&lt;/strong&gt; protect against public exploits that may refer to &lt;code&gt;PrintNightmare&lt;/code&gt; or CVE-2021-1675.&lt;/p&gt;
&lt;p&gt;On July 1, Microsoft released &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&quot;&gt;CVE-2021-34527&lt;/a&gt;. This bulletin states that CVE-2021-34527 is similar but distinct from the vulnerability that is assigned CVE-2021-1675, which addresses a different vulnerability in RpcAddPrinterDriverEx(). The attack vector is different as well. CVE-2021-1675 was addressed by the June 2021 security update. &lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By sending a request to add a printer, e.g. by using &lt;code&gt;RpcAddPrinterDriverEx()&lt;/code&gt; over SMB or &lt;code&gt;RpcAsyncAddPrinterDriver()&lt;/code&gt; over RPC, a remote, authenticated attacker may be able to execute arbitrary code with SYSTEM privileges on a vulnerable system. A local unprivileged user may be able to execute arbitrary code with SYSTEM privileges as well. We have created a flowchart to indicate exploitability of PrintNightmare across various platform configurations:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/static-bigvince-prod-kb-eb/383432_PrintNightmare%20Flowchart-v9.png&quot;&gt;&lt;img alt=&quot;PrintNightmare exploitability flowchart&quot; src=&quot;/static-bigvince-prod-kb-eb/383432_PrintNightmare%20Flowchart-v9.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;Microsoft has addressed this issue in the &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&quot;&gt;updates for CVE-2021-34527&lt;/a&gt;. Note that the Microsoft update for CVE-2021-34527 does not effectively prevent exploitation of systems where the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&quot;&gt;Point and Print&lt;/a&gt; &lt;code&gt;NoWarningNoElevationOnInstall&lt;/code&gt; is set to a non-&lt;code&gt;0&lt;/code&gt; value. Microsoft indicates that systems that have &lt;code&gt;NoWarningNoElevationOnInstall&lt;/code&gt; is set to a non-&lt;code&gt;0&lt;/code&gt; value are &lt;strong&gt;vulnerable by design.&lt;/strong&gt; For systems that do not have the CVE-2021-34527 installed, or have Point and Print configured insecurely, please consider the following workarounds:&lt;/p&gt;
&lt;h4&gt;Apply a workaround&lt;/h4&gt;
&lt;p&gt;Microsoft has listed several workarounds in their &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&quot;&gt;advisory for CVE-2021-34527&lt;/a&gt;. Specifically:&lt;/p&gt;
&lt;h4&gt;Microsoft Option 1 - Stop and disable the Print Spooler service&lt;/h4&gt;
&lt;p&gt;This vulnerability can be mitigated by stopping and disabling the Print Spooler service in Windows.&lt;/p&gt;
&lt;p&gt;If disabling the Print Spooler service is appropriate for your enterprise, use the following PowerShell commands:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Stop-Service -Name Spooler -Force&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Set-Service -Name Spooler -StartupType Disabled&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Impact of workaround&lt;/strong&gt; Disabling the Print Spooler service disables the ability to print both locally and remotely.&lt;/p&gt;
&lt;h4&gt;Microsoft Option 2 - Disable inbound remote printing through Group Policy&lt;/h4&gt;
&lt;p&gt;Disable the “Allow Print Spooler to accept client connections:” policy to block remote attacks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Impact of workaround&lt;/strong&gt; This policy will block the remote attack vector by preventing inbound remote printing operations. The system will no longer function as a print server, but local printing to a directly attached device will still be possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The Print Spooler service &lt;strong&gt;must&lt;/strong&gt; be restarted for this workaround to be activated.&lt;/p&gt;
&lt;h4&gt;Block RPC and SMB ports at the firewall&lt;/h4&gt;
&lt;p&gt;Limited testing has shown that blocking both the RPC Endpoint Mapper (&lt;code&gt;135/tcp&lt;/code&gt;) and SMB (&lt;code&gt;139/tcp&lt;/code&gt; and &lt;code&gt;445/tcp&lt;/code&gt;) incoming traffic at a host-based firewall level can prevent remote exploitation of this vulnerability. Note that blocking these ports on a Windows system may prevent expected capabilities from functioning properly, especially on a system that functions as a server.&lt;/p&gt;
&lt;h4&gt;Enable security prompts for Point and Print&lt;/h4&gt;
&lt;p&gt;Ensure that the Windows Point and Print Restrictions are set to &lt;code&gt;Show warning and elevation prompt&lt;/code&gt; for both installing and updating drivers in the Windows Group Policy. Specifically the &lt;code&gt;HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PointAndPrint\&lt;/code&gt; key should have &lt;code&gt;NoWarningNoElevationOnInstall&lt;/code&gt; and &lt;code&gt;UpdatePromptSettings&lt;/code&gt; entries that are both set to &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Restrict printer driver installation ability to administrators&lt;/h4&gt;
&lt;p&gt;After the Microsoft update for CVE-2021-34527 is installed, a registry value called &lt;code&gt;RestrictDriverInstallationToAdministrators&lt;/code&gt; in the &lt;code&gt;HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Printers\PointAndPrint\&lt;/code&gt; key is checked, which is intended to restrict printer driver installation to only administrator users. Please see &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005010-restricting-installation-of-new-printer-drivers-after-applying-the-july-6-2021-updates-31b91c02-05bc-4ada-a7ea-183b129578a7&quot;&gt;KB5005010&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This issue was publicly disclosed by Zhiniang Peng and Xuefeng Li.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://msrc-blog.microsoft.com/2021/07/08/clarified-guidance-for-cve-2021-34527-windows-print-spooler-vulnerability/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc-blog.microsoft.com/2021/07/08/clarified-guidance-for-cve-2021-34527-windows-print-spooler-vulnerability/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-1675&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/b96cc497-59e5-4510-ab04-5484993b259b&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/b96cc497-59e5-4510-ab04-5484993b259b&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/353ff796-6fb3-41cf-8b35-0022dd53d886&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/353ff796-6fb3-41cf-8b35-0022dd53d886&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/windows-hardware/drivers/print/introduction-to-point-and-print&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/printdocs/addprinterdriverex&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/windows/win32/printdocs/addprinterdriverex&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5005010-restricting-installation-of-new-printer-drivers-after-applying-the-july-6-2021-updates-31b91c02-05bc-4ada-a7ea-183b129578a7&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://support.microsoft.com/en-us/topic/kb5005010-restricting-installation-of-new-printer-drivers-after-applying-the-july-6-2021-updates-31b91c02-05bc-4ada-a7ea-183b129578a7&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://github.com/afwu/PrintNightmare&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/afwu/PrintNightmare&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://github.com/cube0x0/CVE-2021-1675&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/cube0x0/CVE-2021-1675&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://github.com/calebstewart/CVE-2021-1675&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/calebstewart/CVE-2021-1675&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-1675&quot;&gt;CVE-2021-1675  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-34527&quot;&gt;CVE-2021-34527  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-06-30&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-06-30&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-08-03 15:36 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;32 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23383432 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#706695: Checkbox Survey insecurely deserializes ASP.NET View State data</title><link href="https://kb.cert.org/vuls/id/706695" rel="alternate"><published>2021-05-25T20:33:29.464576+00:00</published><updated>2021-05-25T20:33:29.250008+00:00</updated><id>https://kb.cert.org/vuls/id/706695</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Checkbox Survey prior to version 7.0 insecurely deserializes ASP.NET &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/aspnet/bb386448(v=vs.100)&quot;&gt;View State&lt;/a&gt; data, which can allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable server.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27852&lt;/strong&gt;
Checkbox Survey insecurely deserializes ASP.NET View State data.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.checkbox.com/&quot;&gt;Checkbox Survey&lt;/a&gt; is an ASP.NET application that can add survey functionality to a website. Prior to version 7.0, Checkbox Survey implements its own View State functionality by accepting a &lt;code&gt;_VSTATE&lt;/code&gt; argument, which it then deserializes using &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.losformatter?view=netframework-4.8&quot;&gt;LosFormatter&lt;/a&gt;. Because this data is manually handled by the Checkbox Survey code, the ASP.NET ViewState Message Authentication Code (MAC) setting on the server is ignored. Without MAC, an attacker can create arbitrary data that will be deserialized, resulting in arbitrary code execution.&lt;/p&gt;
&lt;p&gt;This vulnerability is reportedly being exploited in the wild.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By making a specially-crafted request to a server that uses Checkbox Survey 6.x or earlier, a remote, unauthenticated attacker may be able to execute arbitrary code with the privileges of the web server.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;Starting with Checkbox Survey 7.0, View State data is not used. Therefore, Checkbox Survey versions 7.0 and later do not contain this vulnerability.&lt;/p&gt;
&lt;h4&gt;Remove Checkbox Survey versions older than 7&lt;/h4&gt;
&lt;p&gt;Checkbox is no longer developing Checkbox Survey version 6, so this version is no longer safe to use. If you are unable to update to an unaffected version of Checkbox Survey, this software should be removed from any systems that have it installed.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the reporter who wishes to remain anonymous.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Checkbox Survey prior to version 7.0 insecurely deserializes ASP.NET &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/aspnet/bb386448(v=vs.100)&quot;&gt;View State&lt;/a&gt; data, which can allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable server.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27852&lt;/strong&gt;
Checkbox Survey insecurely deserializes ASP.NET View State data.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.checkbox.com/&quot;&gt;Checkbox Survey&lt;/a&gt; is an ASP.NET application that can add survey functionality to a website. Prior to version 7.0, Checkbox Survey implements its own View State functionality by accepting a &lt;code&gt;_VSTATE&lt;/code&gt; argument, which it then deserializes using &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.losformatter?view=netframework-4.8&quot;&gt;LosFormatter&lt;/a&gt;. Because this data is manually handled by the Checkbox Survey code, the ASP.NET ViewState Message Authentication Code (MAC) setting on the server is ignored. Without MAC, an attacker can create arbitrary data that will be deserialized, resulting in arbitrary code execution.&lt;/p&gt;
&lt;p&gt;This vulnerability is reportedly being exploited in the wild.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By making a specially-crafted request to a server that uses Checkbox Survey 6.x or earlier, a remote, unauthenticated attacker may be able to execute arbitrary code with the privileges of the web server.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;Starting with Checkbox Survey 7.0, View State data is not used. Therefore, Checkbox Survey versions 7.0 and later do not contain this vulnerability.&lt;/p&gt;
&lt;h4&gt;Remove Checkbox Survey versions older than 7&lt;/h4&gt;
&lt;p&gt;Checkbox is no longer developing Checkbox Survey version 6, so this version is no longer safe to use. If you are unable to update to an unaffected version of Checkbox Survey, this software should be removed from any systems that have it installed.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the reporter who wishes to remain anonymous.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://www.checkbox.com/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.checkbox.com/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/aspnet/bb386448(v=vs.100)&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/previous-versions/aspnet/bb386448(v=vs.100)&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.losformatter?view=netframework-4.8&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/dotnet/api/system.web.ui.losformatter?view=netframework-4.8&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://swapneildash.medium.com/deep-dive-into-net-viewstate-deserialization-and-its-exploitation-54bf5b788817&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://swapneildash.medium.com/deep-dive-into-net-viewstate-deserialization-and-its-exploitation-54bf5b788817&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-27852&quot;&gt;CVE-2021-27852  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-05-25&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-05-25&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-05-25 20:33 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;1 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23706695 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#667933: Pulse Connect Secure Samba buffer overflow</title><link href="https://kb.cert.org/vuls/id/667933" rel="alternate"><published>2021-05-24T23:03:20.245728+00:00</published><updated>2021-06-17T20:42:52.214282+00:00</updated><id>https://kb.cert.org/vuls/id/667933</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Pulse Connect Secure (PCS) gateway contains a buffer overflow vulnerability in Samba-related code that may allow an authenticated remote attacker to execute arbitrary code.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-22908&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PCS includes the ability to connect to Windows file shares (SMB). This capability is provided by a number of CGI scripts, which in turn use libraries and helper applications based on Samba 4.5.10. When specifying a long server name for some SMB operations, the &lt;code&gt;smbclt&lt;/code&gt; application may crash due to either a stack buffer overflow or a heap buffer overflow, depending on how long of a server name is specified. We have confirmed that PCS 9.1R11.4 systems are vulnerable, targeting a CGI endpoint of: &lt;code&gt;/dana/fb/smb/wnf.cgi&lt;/code&gt;. Other CGI endpoints may also trigger the vulnerable code.  &lt;/p&gt;
&lt;p&gt;Specifying a long server name to this endpoint may result in a PCS events log entry that may look like the following:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Critical ERR31093 2021-05-24 14:05:37 - ive - [127.0.0.1] Root::System()[] - Program smbclt recently failed. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Successful exploitation of this vulnerability may not produce such a log entry if the program is cleanly exited during exploitation, or if the log files are sanitized after successful exploitation.&lt;/p&gt;
&lt;p&gt;In order to be vulnerable, a PCS server must have a Windows File Access policy that &lt;strong&gt;allows&lt;/strong&gt; &lt;code&gt;\\*&lt;/code&gt; or it must have some other policy set that would allow an attacker to connect to an arbitrary server. In the administrative page for the PCS, see &lt;code&gt;Users -&amp;gt; Resource Policies -&amp;gt; Windows File Access Policies&lt;/code&gt; to view your current SMB policy. Any PCS device that started as version 9.1R2 or earlier will have a default policy that allows connecting to arbitrary SMB hosts. Starting with 9.1R3, this policy was changed from a default allow to a default deny.&lt;/p&gt;
&lt;p&gt;Note that the vendor implies that the &lt;code&gt;Files, Window[sic]&lt;/code&gt; access feature can be disabled for user roles in order to protect against this vulnerability. This is &lt;strong&gt;NOT&lt;/strong&gt; the case. The vulnerable CGI endpoints are still reachable in ways that will trigger the &lt;code&gt;smbclt&lt;/code&gt; application to crash, regardless of whether the &lt;code&gt;Files, Windows&lt;/code&gt; user role is enabled or not. These steps are only included in the advisory to limit excessive errors showing up in PCS logs after the XML workaround has been installed.&lt;/p&gt;
&lt;p&gt;In our testing, an attacker would need either valid PCS user credentials, or a &lt;code&gt;DSID&lt;/code&gt; value from an authenticated user to successfully reach the vulnerable code on a PCS server that has an open Windows File Access policy. We have created a &lt;a href=&quot;https://github.com/CERTCC/PoC-Exploits/tree/master/cve-2021-22908&quot;&gt;PoC utility to test for PCS systems vulnerable to CVE-2021-22908&lt;/a&gt; as well as which mitigations may be applied.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By performing certain SMB operations with a specially-crafted server name, an authenticated attacker may be able to execute arbitrary code with root privileges on a vulnerable PCS server.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in PCS 9.1R11.5. Please see advisory &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44800&quot;&gt;SA44800&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h4&gt;Apply an XML workaround&lt;/h4&gt;
&lt;p&gt;Pulse Secure has published advisory &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44800&quot;&gt;SA44800&lt;/a&gt; that mentions a &lt;a href=&quot;https://my.pulsesecure.net/&quot;&gt;Workaround-2105.xml&lt;/a&gt; file that contains a mitigation to protect against this vulnerability. &lt;a href=&quot;https://docs.pulsesecure.net/WebHelp/PCS/9.1R1/AG/Content/PCS/PCS_AdminGuide_9.1R1/Importing_an_XML_Configuration.htm&quot;&gt;Importing this XML workaround&lt;/a&gt; will activate the protections immediately and does not require any downtime for the VPN system. This workaround will block requests that match the following URI patterns:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;^/+dana/+fb/+smb
^/+dana-cached/+fb/+smb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Workaround-2105.xml&lt;/code&gt; will automatically deactivate the mitigations applied by &lt;code&gt;Workaround-2104.xml&lt;/code&gt; when it is installed. As such, it is imperative that a PCS system is running 9.1R11.4 &lt;strong&gt;before&lt;/strong&gt; applying the &lt;code&gt;Workaround-2105.xml&lt;/code&gt; mitigation, which will ensure that the vulnerabilities outlined in &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44784&quot;&gt;SA44784&lt;/a&gt; are not reintroduced as the result of applying this workaround.&lt;/p&gt;
&lt;p&gt;Note that installing this workaround will block the ability to use the following feature:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows File Share Browser&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Set a Windows File Access Policy&lt;/h4&gt;
&lt;p&gt;This vulnerability relies on the ability to connect to an arbitrary SMB server name to trigger the vulnerability. A PCS system that started as version 9.1R3 or later will have a default Initial File Browsing Policy of &lt;strong&gt;Deny&lt;/strong&gt; for &lt;code&gt;\\*&lt;/code&gt; SMB connections. If you have a PCS system that started as 9.1R2 or earlier, it will retain the default Initial File Browsing Policy of &lt;strong&gt;Allow&lt;/strong&gt; for &lt;code&gt;\\*&lt;/code&gt; SMB connections, which will expose this vulnerability. In the administrative page for the PCS, see &lt;code&gt;Users -&amp;gt; Resource Policies -&amp;gt; Windows File Access Policies&lt;/code&gt; to view your current SMB policy.&lt;/p&gt;
&lt;p&gt;If your PCS has a policy that explicitly allows &lt;code&gt;\\*&lt;/code&gt; or otherwise may allow users to initiate connections to arbitrary SMB server names, you should configure the PCS to &lt;strong&gt;Deny&lt;/strong&gt; connections to such resources to minimize your PCS attack surface.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Pulse Connect Secure (PCS) gateway contains a buffer overflow vulnerability in Samba-related code that may allow an authenticated remote attacker to execute arbitrary code.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-22908&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PCS includes the ability to connect to Windows file shares (SMB). This capability is provided by a number of CGI scripts, which in turn use libraries and helper applications based on Samba 4.5.10. When specifying a long server name for some SMB operations, the &lt;code&gt;smbclt&lt;/code&gt; application may crash due to either a stack buffer overflow or a heap buffer overflow, depending on how long of a server name is specified. We have confirmed that PCS 9.1R11.4 systems are vulnerable, targeting a CGI endpoint of: &lt;code&gt;/dana/fb/smb/wnf.cgi&lt;/code&gt;. Other CGI endpoints may also trigger the vulnerable code.  &lt;/p&gt;
&lt;p&gt;Specifying a long server name to this endpoint may result in a PCS events log entry that may look like the following:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Critical ERR31093 2021-05-24 14:05:37 - ive - [127.0.0.1] Root::System()[] - Program smbclt recently failed. 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Successful exploitation of this vulnerability may not produce such a log entry if the program is cleanly exited during exploitation, or if the log files are sanitized after successful exploitation.&lt;/p&gt;
&lt;p&gt;In order to be vulnerable, a PCS server must have a Windows File Access policy that &lt;strong&gt;allows&lt;/strong&gt; &lt;code&gt;\\*&lt;/code&gt; or it must have some other policy set that would allow an attacker to connect to an arbitrary server. In the administrative page for the PCS, see &lt;code&gt;Users -&amp;gt; Resource Policies -&amp;gt; Windows File Access Policies&lt;/code&gt; to view your current SMB policy. Any PCS device that started as version 9.1R2 or earlier will have a default policy that allows connecting to arbitrary SMB hosts. Starting with 9.1R3, this policy was changed from a default allow to a default deny.&lt;/p&gt;
&lt;p&gt;Note that the vendor implies that the &lt;code&gt;Files, Window[sic]&lt;/code&gt; access feature can be disabled for user roles in order to protect against this vulnerability. This is &lt;strong&gt;NOT&lt;/strong&gt; the case. The vulnerable CGI endpoints are still reachable in ways that will trigger the &lt;code&gt;smbclt&lt;/code&gt; application to crash, regardless of whether the &lt;code&gt;Files, Windows&lt;/code&gt; user role is enabled or not. These steps are only included in the advisory to limit excessive errors showing up in PCS logs after the XML workaround has been installed.&lt;/p&gt;
&lt;p&gt;In our testing, an attacker would need either valid PCS user credentials, or a &lt;code&gt;DSID&lt;/code&gt; value from an authenticated user to successfully reach the vulnerable code on a PCS server that has an open Windows File Access policy. We have created a &lt;a href=&quot;https://github.com/CERTCC/PoC-Exploits/tree/master/cve-2021-22908&quot;&gt;PoC utility to test for PCS systems vulnerable to CVE-2021-22908&lt;/a&gt; as well as which mitigations may be applied.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By performing certain SMB operations with a specially-crafted server name, an authenticated attacker may be able to execute arbitrary code with root privileges on a vulnerable PCS server.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in PCS 9.1R11.5. Please see advisory &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44800&quot;&gt;SA44800&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h4&gt;Apply an XML workaround&lt;/h4&gt;
&lt;p&gt;Pulse Secure has published advisory &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44800&quot;&gt;SA44800&lt;/a&gt; that mentions a &lt;a href=&quot;https://my.pulsesecure.net/&quot;&gt;Workaround-2105.xml&lt;/a&gt; file that contains a mitigation to protect against this vulnerability. &lt;a href=&quot;https://docs.pulsesecure.net/WebHelp/PCS/9.1R1/AG/Content/PCS/PCS_AdminGuide_9.1R1/Importing_an_XML_Configuration.htm&quot;&gt;Importing this XML workaround&lt;/a&gt; will activate the protections immediately and does not require any downtime for the VPN system. This workaround will block requests that match the following URI patterns:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;^/+dana/+fb/+smb
^/+dana-cached/+fb/+smb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Workaround-2105.xml&lt;/code&gt; will automatically deactivate the mitigations applied by &lt;code&gt;Workaround-2104.xml&lt;/code&gt; when it is installed. As such, it is imperative that a PCS system is running 9.1R11.4 &lt;strong&gt;before&lt;/strong&gt; applying the &lt;code&gt;Workaround-2105.xml&lt;/code&gt; mitigation, which will ensure that the vulnerabilities outlined in &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44784&quot;&gt;SA44784&lt;/a&gt; are not reintroduced as the result of applying this workaround.&lt;/p&gt;
&lt;p&gt;Note that installing this workaround will block the ability to use the following feature:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows File Share Browser&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Set a Windows File Access Policy&lt;/h4&gt;
&lt;p&gt;This vulnerability relies on the ability to connect to an arbitrary SMB server name to trigger the vulnerability. A PCS system that started as version 9.1R3 or later will have a default Initial File Browsing Policy of &lt;strong&gt;Deny&lt;/strong&gt; for &lt;code&gt;\\*&lt;/code&gt; SMB connections. If you have a PCS system that started as 9.1R2 or earlier, it will retain the default Initial File Browsing Policy of &lt;strong&gt;Allow&lt;/strong&gt; for &lt;code&gt;\\*&lt;/code&gt; SMB connections, which will expose this vulnerability. In the administrative page for the PCS, see &lt;code&gt;Users -&amp;gt; Resource Policies -&amp;gt; Windows File Access Policies&lt;/code&gt; to view your current SMB policy.&lt;/p&gt;
&lt;p&gt;If your PCS has a policy that explicitly allows &lt;code&gt;\\*&lt;/code&gt; or otherwise may allow users to initiate connections to arbitrary SMB server names, you should configure the PCS to &lt;strong&gt;Deny&lt;/strong&gt; connections to such resources to minimize your PCS attack surface.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44800&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44800&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://github.com/CERTCC/PoC-Exploits/blob/master/cve-2021-22908/cve-2021-22908.py&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/CERTCC/PoC-Exploits/blob/master/cve-2021-22908/cve-2021-22908.py&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-22908&quot;&gt;CVE-2021-22908  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-05-24&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-05-24&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-06-17 20:42 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;8 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23667933 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#799380: Devices supporting Bluetooth Core and Mesh Specifications are vulnerable to impersonation attacks and AuthValue disclosure</title><link href="https://kb.cert.org/vuls/id/799380" rel="alternate"><published>2021-05-24T16:04:50.707648+00:00</published><updated>2021-08-05T15:30:46.208068+00:00</updated><id>https://kb.cert.org/vuls/id/799380</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Devices supporting the Bluetooth Core and Mesh Specifications are vulnerable to impersonation attacks and AuthValue disclosure that could allow an attacker to impersonate a legitimate device during pairing. &lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The Bluetooth &lt;a href=&quot;https://www.bluetooth.com/specifications/specs/core-specification/&quot;&gt;Core Specification&lt;/a&gt; and &lt;a href=&quot;https://www.bluetooth.com/specifications/specs/mesh-profile-1-0-1/&quot;&gt;Mesh Profile Specification &lt;/a&gt; are two specifications used to define the technical and policy requirements for devices that want to operate over Bluetooth connections. Researchers at the Agence nationale de la sécurité des systèmes d'information (&lt;a href=&quot;https://www.ssi.gouv.fr/&quot;&gt;ANSSI&lt;/a&gt;) have identified a number of vulnerabilities in each specification that allow &lt;a href=&quot;https://francozappa.github.io/about-bias/publication/antonioli-20-bias/antonioli-20-bias.pdf&quot;&gt;impersonation attacks&lt;/a&gt; and AuthValue disclosures.      &lt;/p&gt;
&lt;p&gt;Devices supporting the Bluetooth Core Specification are affected by the following vulnerabilities:&lt;/p&gt;
&lt;h4&gt;Impersonation in the Passkey Entry Protocol&lt;/h4&gt;
&lt;p&gt;The Passkey Entry protocol used in Secure Simple Pairing (SSP), Secure Connections (SC), and LE Secure Connections (LESC) of the Bluetooth Core Specification is vulnerable to an impersonation attack that enables an active attacker to impersonate the initiating device without any previous knowledge (&lt;em&gt;CVE-2020-26558&lt;/em&gt;). An attacker acting as a man-in-the-middle (MITM) in the Passkey authentication procedure could use a crafted series of responses to determine each bit of the randomly generated Passkey selected by the pairing initiator in each round of the pairing procedure, and once identified, the attacker can use these Passkey bits during the same pairing session to successfully complete the authenticated pairing procedure with the responder. Devices supporting BR/EDR Secure Simple Pairing in Bluetooth Core Specifications 2.1 through 5.2, BR/EDR Secure Connections Pairing in Bluetooth Core Specifications 4.1 through 5.2 and LE Secure Connections Pairing in Bluetooth Core Specifications 4.2 through 5.2 are affected by this vulnerability. &lt;/p&gt;
&lt;h4&gt;Impersonation in the Pin Pairing Protocol&lt;/h4&gt;
&lt;p&gt;The Bluetooth BR/EDR PIN Pairing procedure is vulnerable to an impersonation attack (&lt;em&gt;CVE-2020-26555&lt;/em&gt;). An attacker could connect to a victim device by spoofing the Bluetooth Device Address (BD_ADDR) of the device, reflect the the encrypted nonce, and complete BR/EDR pin-code pairing with them without knowledge of the pin code. A successful attack requires the attacking device to be within wireless range of a vulnerable device supporting BR/EDR Legacy Pairing that is Connectable and Bondable. Devices supporting the Bluetooth Core Specification versions 1.0B through 5.2 are affected by this vulnerability.&lt;/p&gt;
&lt;p&gt;Devices supporting Bluetooth Mesh Profile Specification, versions 1.0 and 1.0.1, are affected by the following vulnerabilities:&lt;/p&gt;
&lt;h4&gt;Impersonation in Bluetooth Mesh Provisioning&lt;/h4&gt;
&lt;p&gt;The Mesh Provisioning procedure could allow an attacker without knowledge of the AuthValue, spoofing a device being provisioned, to use crafted responses to appear to possess the AuthValue and to be issued a valid NetKey and potentially an AppKey (&lt;em&gt;CVE-2020-26560&lt;/em&gt;). For this attack to be successful, an attacking device needs to be within wireless range of a Mesh Provisioner and either spoof the identity of a device being provisioned over the air or be directly provisioned onto a subnet controlled by the provisioner.&lt;/p&gt;
&lt;h4&gt;Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM&lt;/h4&gt;
&lt;p&gt;The Mesh Provisioning procedure could allow an attacker observing or taking part in the provisioning to brute force the AuthValue if it has a fixed value, or is selected predictably or with low entropy (&lt;em&gt;CVE-2020-26557&lt;/em&gt;). Identifying the AuthValue generally requires a brute-force search against the provisioning random and provisioning confirmation produced by the Provisioner. This brute-force search, for a randomly selected AuthValue, must complete before the provisioning procedure times out, which can require significant resources. If the AuthValue is not selected randomly with each new provisioning attempt, then the brute-force search can occur offline and if successful, would permit an attacker to identify the AuthValue and authenticate to both the Provisioner and provisioned devices, permitting a MITM attack on a future provisioning attempts with the same AuthValue. &lt;/p&gt;
&lt;h4&gt;Malleable Commitment&lt;/h4&gt;
&lt;p&gt;The authentication protocol is vulnerable if the AuthValue can be identified during the provisioning procedure, even if the AuthValue is selected randomly (&lt;em&gt;CVE-2020-26556&lt;/em&gt;). If an attacker can identify the AuthValue used before the provisioning procedure times out, it is possible to complete the provisioning operation and obtain a NetKey. Similar to CVE-2020-26557, identifying the AuthValue generally requires a brute-force search against the provisioning random and provisioning confirmation produced by the Provisioner. This brute-force search for a randomly selected AuthValue, which can require significant resources, must complete before the provisioning procedure times out.&lt;/p&gt;
&lt;h4&gt;AuthValue Leak&lt;/h4&gt;
&lt;p&gt;The Mesh Provisioning procedure could allow an attacker that was provisioned without access to the AuthValue to identify the AuthValue directly without brute-forcing its value (&lt;em&gt;CVE-2020-26559&lt;/em&gt;). Even when a randomly generated AuthValue with a full 128-bits of entropy is used, an attacker acquiring the Provisioner’s public key, provisioning confirmation value, and provisioning random value, and providing its public key for use in the provisioning procedure, will be able to compute the AuthValue directly.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;h4&gt;Impersonation in the Passkey Entry Protocol&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to authenticate to the response victim device and act as a legitimate encrypted device. The attacker cannot pair with the initiating device using this method of attack, which prevents a fully transparent man-in-the-middle attack between the initiator and responder. For this attack to be successful, an attacking device needs to be within wireless range of two vulnerable Bluetooth devices that are initiating pairing or bonding for which a BR/EDR IO Capabilities exchange or LE IO Capability in the pairing request and response results in the selection of the Passkey pairing procedure.&lt;/p&gt;
&lt;h4&gt;Impersonation in the Pin Pairing Protocol&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to complete pairing with a known link key, encrypt communications with the vulnerable device, and access any profiles permitted by a paired or bonded remote device supporting Legacy Pairing.&lt;/p&gt;
&lt;h4&gt;Impersonation in Bluetooth Mesh Provisioning&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to successfully authenticate without the AuthValue. Once authenticated, the attacker could perform any operation permitted to a node provisioned on the subnet until it is either denied access or a new subnet is formed without the attacking node present.&lt;/p&gt;
&lt;h4&gt;Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to successfully brute force the AuthValue and authenticate to both the Provisioner and provisioned devices, permitting a MITM attack on a future provisioning attempt with the same AuthValue.&lt;/p&gt;
&lt;h4&gt;Malleable Commitment&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to obtain a NetKey, which could be used to decrypt and authenticate up to the network layer, allowing the relay of messages, but no application data decryption.&lt;/p&gt;
&lt;h4&gt;AuthValue Leak&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to compute the AuthValue and authenticate to the Provisioner and provisioned devices.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Bluetooth users should ensure that they have installed the latest recommended updates from device and operating system manufacturers. &lt;/p&gt;
&lt;p&gt;In addition to the two vulnerabilities affecting the Bluetooth Core Specification, the researchers also identified a potential security vulnerability related to LE Legacy Pairing authentication in Bluetooth Core Specification versions 4.0 through 5.2. The researchers claim that an attacker can reflect the confirmation and random numbers of a peer device in LE legacy pairing to successfully complete legacy authentication phase 2 without knowledge of the temporary key (TK). Because the attacker does not acquire a TK, or valid short-term key (STK) during this attack, completing authentication phase 2 is not sufficient for an encrypted link to be established. While the Bluetooth SIG does not consider this to be a method which can provide unauthorized access to a device, they still recommend that LE implementations requiring pairing and encryption use LE Secure Connections. The Bluetooth SIG also recommends that, where possible, implementations enable and enforce Secure Connections Only Mode, ensuring that LE legacy pairing cannot be used.&lt;/p&gt;
&lt;p&gt;The Bluetooth SIG additionally makes the following &lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/reporting-security/&quot;&gt;recommendations&lt;/a&gt; for each vulnerability:&lt;/p&gt;
&lt;h4&gt;Impersonation in the Passkey Entry Protocol&lt;/h4&gt;
&lt;p&gt;For the attack to succeed the pairing device needs to accept the same public key that it provided to the remote peer as the remote peer’s public key. The Bluetooth SIG recommends that potentially vulnerable implementations restrict the public keys accepted from a remote peer device to disallow a remote peer to present the same public key chosen by the local device, and the pairing procedure should be terminated with a failure status if this occurs. &lt;/p&gt;
&lt;h4&gt;Impersonation in the Pin Pairing Protocol&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that potentially vulnerable devices not initiate or accept connections from remote devices claiming the same BD_ADDR as the local device. They also continue to recommend that devices use Secure Simple Pairing or BR/EDR Secure Connections to avoid known vulnerabilities with legacy BR/EDR pairing.&lt;/p&gt;
&lt;h4&gt;Impersonation in Bluetooth Mesh Provisioning&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that potentially vulnerable mesh provisioners restrict the authentication procedure and not accept provisioning both random and confirmation numbers from a remote peer that are the same as those selected by the local device.&lt;/p&gt;
&lt;h4&gt;Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that mesh implementations enforce a randomly selected AuthValue using all of the available bits, where permitted by the implementation. A large entropy helps ensure that a brute-force of the AuthValue, even a static AuthValue, cannot normally be completed in a reasonable time.&lt;/p&gt;
&lt;h4&gt;Malleable Commitment&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/malleable/&quot;&gt;statement from the Bluetooth SIG&lt;/a&gt; notes: &quot;AuthValues selected using a cryptographically secure random or pseudorandom number generator and having the maximum permitted entropy (128-bits) will be most difficult to brute-force. AuthValues with reduced entropy or generated in a predictable manner will not grant the same level of protection against this vulnerability. Selecting a new AuthValue with each provisioning attempt can also make it more difficult to launch a brute-force attack by requiring the attacker to restart the search with each provisioning attempt.&quot;&lt;/p&gt;
&lt;h4&gt;AuthValue Leak&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that potentially vulnerable mesh provisioners use an out-of-band mechanism to exchange the public keys.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to researchers at the Agence nationale de la sécurité des systèmes d'information (&lt;a href=&quot;https://www.ssi.gouv.fr/&quot;&gt;ANSSI&lt;/a&gt;) for reporting these vulnerabilities.&lt;/p&gt;
&lt;p&gt;This document was written by Madison Oliver.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Devices supporting the Bluetooth Core and Mesh Specifications are vulnerable to impersonation attacks and AuthValue disclosure that could allow an attacker to impersonate a legitimate device during pairing. &lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The Bluetooth &lt;a href=&quot;https://www.bluetooth.com/specifications/specs/core-specification/&quot;&gt;Core Specification&lt;/a&gt; and &lt;a href=&quot;https://www.bluetooth.com/specifications/specs/mesh-profile-1-0-1/&quot;&gt;Mesh Profile Specification &lt;/a&gt; are two specifications used to define the technical and policy requirements for devices that want to operate over Bluetooth connections. Researchers at the Agence nationale de la sécurité des systèmes d'information (&lt;a href=&quot;https://www.ssi.gouv.fr/&quot;&gt;ANSSI&lt;/a&gt;) have identified a number of vulnerabilities in each specification that allow &lt;a href=&quot;https://francozappa.github.io/about-bias/publication/antonioli-20-bias/antonioli-20-bias.pdf&quot;&gt;impersonation attacks&lt;/a&gt; and AuthValue disclosures.      &lt;/p&gt;
&lt;p&gt;Devices supporting the Bluetooth Core Specification are affected by the following vulnerabilities:&lt;/p&gt;
&lt;h4&gt;Impersonation in the Passkey Entry Protocol&lt;/h4&gt;
&lt;p&gt;The Passkey Entry protocol used in Secure Simple Pairing (SSP), Secure Connections (SC), and LE Secure Connections (LESC) of the Bluetooth Core Specification is vulnerable to an impersonation attack that enables an active attacker to impersonate the initiating device without any previous knowledge (&lt;em&gt;CVE-2020-26558&lt;/em&gt;). An attacker acting as a man-in-the-middle (MITM) in the Passkey authentication procedure could use a crafted series of responses to determine each bit of the randomly generated Passkey selected by the pairing initiator in each round of the pairing procedure, and once identified, the attacker can use these Passkey bits during the same pairing session to successfully complete the authenticated pairing procedure with the responder. Devices supporting BR/EDR Secure Simple Pairing in Bluetooth Core Specifications 2.1 through 5.2, BR/EDR Secure Connections Pairing in Bluetooth Core Specifications 4.1 through 5.2 and LE Secure Connections Pairing in Bluetooth Core Specifications 4.2 through 5.2 are affected by this vulnerability. &lt;/p&gt;
&lt;h4&gt;Impersonation in the Pin Pairing Protocol&lt;/h4&gt;
&lt;p&gt;The Bluetooth BR/EDR PIN Pairing procedure is vulnerable to an impersonation attack (&lt;em&gt;CVE-2020-26555&lt;/em&gt;). An attacker could connect to a victim device by spoofing the Bluetooth Device Address (BD_ADDR) of the device, reflect the the encrypted nonce, and complete BR/EDR pin-code pairing with them without knowledge of the pin code. A successful attack requires the attacking device to be within wireless range of a vulnerable device supporting BR/EDR Legacy Pairing that is Connectable and Bondable. Devices supporting the Bluetooth Core Specification versions 1.0B through 5.2 are affected by this vulnerability.&lt;/p&gt;
&lt;p&gt;Devices supporting Bluetooth Mesh Profile Specification, versions 1.0 and 1.0.1, are affected by the following vulnerabilities:&lt;/p&gt;
&lt;h4&gt;Impersonation in Bluetooth Mesh Provisioning&lt;/h4&gt;
&lt;p&gt;The Mesh Provisioning procedure could allow an attacker without knowledge of the AuthValue, spoofing a device being provisioned, to use crafted responses to appear to possess the AuthValue and to be issued a valid NetKey and potentially an AppKey (&lt;em&gt;CVE-2020-26560&lt;/em&gt;). For this attack to be successful, an attacking device needs to be within wireless range of a Mesh Provisioner and either spoof the identity of a device being provisioned over the air or be directly provisioned onto a subnet controlled by the provisioner.&lt;/p&gt;
&lt;h4&gt;Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM&lt;/h4&gt;
&lt;p&gt;The Mesh Provisioning procedure could allow an attacker observing or taking part in the provisioning to brute force the AuthValue if it has a fixed value, or is selected predictably or with low entropy (&lt;em&gt;CVE-2020-26557&lt;/em&gt;). Identifying the AuthValue generally requires a brute-force search against the provisioning random and provisioning confirmation produced by the Provisioner. This brute-force search, for a randomly selected AuthValue, must complete before the provisioning procedure times out, which can require significant resources. If the AuthValue is not selected randomly with each new provisioning attempt, then the brute-force search can occur offline and if successful, would permit an attacker to identify the AuthValue and authenticate to both the Provisioner and provisioned devices, permitting a MITM attack on a future provisioning attempts with the same AuthValue. &lt;/p&gt;
&lt;h4&gt;Malleable Commitment&lt;/h4&gt;
&lt;p&gt;The authentication protocol is vulnerable if the AuthValue can be identified during the provisioning procedure, even if the AuthValue is selected randomly (&lt;em&gt;CVE-2020-26556&lt;/em&gt;). If an attacker can identify the AuthValue used before the provisioning procedure times out, it is possible to complete the provisioning operation and obtain a NetKey. Similar to CVE-2020-26557, identifying the AuthValue generally requires a brute-force search against the provisioning random and provisioning confirmation produced by the Provisioner. This brute-force search for a randomly selected AuthValue, which can require significant resources, must complete before the provisioning procedure times out.&lt;/p&gt;
&lt;h4&gt;AuthValue Leak&lt;/h4&gt;
&lt;p&gt;The Mesh Provisioning procedure could allow an attacker that was provisioned without access to the AuthValue to identify the AuthValue directly without brute-forcing its value (&lt;em&gt;CVE-2020-26559&lt;/em&gt;). Even when a randomly generated AuthValue with a full 128-bits of entropy is used, an attacker acquiring the Provisioner’s public key, provisioning confirmation value, and provisioning random value, and providing its public key for use in the provisioning procedure, will be able to compute the AuthValue directly.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;h4&gt;Impersonation in the Passkey Entry Protocol&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to authenticate to the response victim device and act as a legitimate encrypted device. The attacker cannot pair with the initiating device using this method of attack, which prevents a fully transparent man-in-the-middle attack between the initiator and responder. For this attack to be successful, an attacking device needs to be within wireless range of two vulnerable Bluetooth devices that are initiating pairing or bonding for which a BR/EDR IO Capabilities exchange or LE IO Capability in the pairing request and response results in the selection of the Passkey pairing procedure.&lt;/p&gt;
&lt;h4&gt;Impersonation in the Pin Pairing Protocol&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to complete pairing with a known link key, encrypt communications with the vulnerable device, and access any profiles permitted by a paired or bonded remote device supporting Legacy Pairing.&lt;/p&gt;
&lt;h4&gt;Impersonation in Bluetooth Mesh Provisioning&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to successfully authenticate without the AuthValue. Once authenticated, the attacker could perform any operation permitted to a node provisioned on the subnet until it is either denied access or a new subnet is formed without the attacking node present.&lt;/p&gt;
&lt;h4&gt;Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to successfully brute force the AuthValue and authenticate to both the Provisioner and provisioned devices, permitting a MITM attack on a future provisioning attempt with the same AuthValue.&lt;/p&gt;
&lt;h4&gt;Malleable Commitment&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to obtain a NetKey, which could be used to decrypt and authenticate up to the network layer, allowing the relay of messages, but no application data decryption.&lt;/p&gt;
&lt;h4&gt;AuthValue Leak&lt;/h4&gt;
&lt;p&gt;This vulnerability could allow an attacker to compute the AuthValue and authenticate to the Provisioner and provisioned devices.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;Bluetooth users should ensure that they have installed the latest recommended updates from device and operating system manufacturers. &lt;/p&gt;
&lt;p&gt;In addition to the two vulnerabilities affecting the Bluetooth Core Specification, the researchers also identified a potential security vulnerability related to LE Legacy Pairing authentication in Bluetooth Core Specification versions 4.0 through 5.2. The researchers claim that an attacker can reflect the confirmation and random numbers of a peer device in LE legacy pairing to successfully complete legacy authentication phase 2 without knowledge of the temporary key (TK). Because the attacker does not acquire a TK, or valid short-term key (STK) during this attack, completing authentication phase 2 is not sufficient for an encrypted link to be established. While the Bluetooth SIG does not consider this to be a method which can provide unauthorized access to a device, they still recommend that LE implementations requiring pairing and encryption use LE Secure Connections. The Bluetooth SIG also recommends that, where possible, implementations enable and enforce Secure Connections Only Mode, ensuring that LE legacy pairing cannot be used.&lt;/p&gt;
&lt;p&gt;The Bluetooth SIG additionally makes the following &lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/reporting-security/&quot;&gt;recommendations&lt;/a&gt; for each vulnerability:&lt;/p&gt;
&lt;h4&gt;Impersonation in the Passkey Entry Protocol&lt;/h4&gt;
&lt;p&gt;For the attack to succeed the pairing device needs to accept the same public key that it provided to the remote peer as the remote peer’s public key. The Bluetooth SIG recommends that potentially vulnerable implementations restrict the public keys accepted from a remote peer device to disallow a remote peer to present the same public key chosen by the local device, and the pairing procedure should be terminated with a failure status if this occurs. &lt;/p&gt;
&lt;h4&gt;Impersonation in the Pin Pairing Protocol&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that potentially vulnerable devices not initiate or accept connections from remote devices claiming the same BD_ADDR as the local device. They also continue to recommend that devices use Secure Simple Pairing or BR/EDR Secure Connections to avoid known vulnerabilities with legacy BR/EDR pairing.&lt;/p&gt;
&lt;h4&gt;Impersonation in Bluetooth Mesh Provisioning&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that potentially vulnerable mesh provisioners restrict the authentication procedure and not accept provisioning both random and confirmation numbers from a remote peer that are the same as those selected by the local device.&lt;/p&gt;
&lt;h4&gt;Predictable AuthValue in Bluetooth Mesh Provisioning Leads to MITM&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that mesh implementations enforce a randomly selected AuthValue using all of the available bits, where permitted by the implementation. A large entropy helps ensure that a brute-force of the AuthValue, even a static AuthValue, cannot normally be completed in a reasonable time.&lt;/p&gt;
&lt;h4&gt;Malleable Commitment&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/malleable/&quot;&gt;statement from the Bluetooth SIG&lt;/a&gt; notes: &quot;AuthValues selected using a cryptographically secure random or pseudorandom number generator and having the maximum permitted entropy (128-bits) will be most difficult to brute-force. AuthValues with reduced entropy or generated in a predictable manner will not grant the same level of protection against this vulnerability. Selecting a new AuthValue with each provisioning attempt can also make it more difficult to launch a brute-force attack by requiring the attacker to restart the search with each provisioning attempt.&quot;&lt;/p&gt;
&lt;h4&gt;AuthValue Leak&lt;/h4&gt;
&lt;p&gt;The Bluetooth SIG recommends that potentially vulnerable mesh provisioners use an out-of-band mechanism to exchange the public keys.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to researchers at the Agence nationale de la sécurité des systèmes d'information (&lt;a href=&quot;https://www.ssi.gouv.fr/&quot;&gt;ANSSI&lt;/a&gt;) for reporting these vulnerabilities.&lt;/p&gt;
&lt;p&gt;This document was written by Madison Oliver.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/passkey-entry/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/passkey-entry/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/legacy-pairing/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/legacy-pairing/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-pin-pairing/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-pin-pairing/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-mesh/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/impersonation-mesh/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/predicatable-authvalue/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/predicatable-authvalue/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/malleable/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/malleable/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/authvalue-leak/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/authvalue-leak/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/reporting-security/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/learn-about-bluetooth/key-attributes/bluetooth-security/reporting-security/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/specifications/specs/core-specification/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/specifications/specs/core-specification/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bluetooth.com/specifications/specs/mesh-profile-1-0-1/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bluetooth.com/specifications/specs/mesh-profile-1-0-1/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.ieee-security.org/TC/SP2021/SPW2021/WOOT21/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ieee-security.org/TC/SP2021/SPW2021/WOOT21/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.novelbits.io/bluetooth-mesh-tutorial-part-3/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.novelbits.io/bluetooth-mesh-tutorial-part-3/&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26557&quot;&gt;CVE-2020-26557  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26559&quot;&gt;CVE-2020-26559  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId= 2020-26556&quot;&gt;CVE- 2020-26556  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26558&quot;&gt;CVE-2020-26558  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26555&quot;&gt;CVE-2020-26555  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-26560&quot;&gt;CVE-2020-26560  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-05-24&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-05-24&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-08-05 15:30 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;9 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23799380 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#567764: MySQL for Windows is vulnerable to privilege escalation due to OPENSSLDIR location</title><link href="https://kb.cert.org/vuls/id/567764" rel="alternate"><published>2021-04-20T22:14:05.229266+00:00</published><updated>2021-04-22T12:08:07.215541+00:00</updated><id>https://kb.cert.org/vuls/id/567764</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;MySQL for Windows contains a privilege escalation vulnerability due to the use of an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable that specifies a location where an unprivileged Windows user can create files.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-2307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MySQL includes an OpenSSL component that specifies an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable as a subdirectory of &lt;code&gt;/build_area/&lt;/code&gt;. On the Windows platform, this path is interpreted as &lt;code&gt;C:\build_area&lt;/code&gt;. MySQL contains a privileged service that uses this OpenSSL component. Because unprivileged Windows users can create subdirectories off of the system root, a user can create the appropriate path to a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; file to achieve arbitrary code execution with SYSTEM privileges.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; in a &lt;code&gt;C:\build_area&lt;/code&gt; subdirectory, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable MySQL software installed.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This vulnerability is &lt;a href=&quot;https://www.oracle.com/security-alerts/cpuapr2021.html&quot;&gt;addressed&lt;/a&gt; in the MySQL Windows installer version 8.0.24 and 5.7.34.&lt;/p&gt;
&lt;h4&gt;Create a C:\build_area directory&lt;/h4&gt;
&lt;p&gt;In cases where an update cannot be installed, this vulnerability can be mitigated by creating a &lt;code&gt;C:\build_area&lt;/code&gt; directory and restricting ACLs to prevent unprivileged users from being able to write to this location.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;MySQL for Windows contains a privilege escalation vulnerability due to the use of an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable that specifies a location where an unprivileged Windows user can create files.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-2307&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MySQL includes an OpenSSL component that specifies an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable as a subdirectory of &lt;code&gt;/build_area/&lt;/code&gt;. On the Windows platform, this path is interpreted as &lt;code&gt;C:\build_area&lt;/code&gt;. MySQL contains a privileged service that uses this OpenSSL component. Because unprivileged Windows users can create subdirectories off of the system root, a user can create the appropriate path to a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; file to achieve arbitrary code execution with SYSTEM privileges.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; in a &lt;code&gt;C:\build_area&lt;/code&gt; subdirectory, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable MySQL software installed.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This vulnerability is &lt;a href=&quot;https://www.oracle.com/security-alerts/cpuapr2021.html&quot;&gt;addressed&lt;/a&gt; in the MySQL Windows installer version 8.0.24 and 5.7.34.&lt;/p&gt;
&lt;h4&gt;Create a C:\build_area directory&lt;/h4&gt;
&lt;p&gt;In cases where an update cannot be installed, this vulnerability can be mitigated by creating a &lt;code&gt;C:\build_area&lt;/code&gt; directory and restricting ACLs to prevent unprivileged users from being able to write to this location.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/security-alerts/cpuapr2021.html&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.oracle.com/security-alerts/cpuapr2021.html&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-2307&quot;&gt;CVE-2021-2307  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-04-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-04-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-04-22 12:08 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23567764 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#213092: Pulse Connect Secure contains a use-after-free vulnerability</title><link href="https://kb.cert.org/vuls/id/213092" rel="alternate"><published>2021-04-20T21:52:54.610886+00:00</published><updated>2021-05-19T13:05:47.983959+00:00</updated><id>https://kb.cert.org/vuls/id/213092</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Pulse Connect Secure (PCS) gateway contains a use-after-free vulnerability that can allow an unauthenticated remote attacker to execute arbitrary code.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-22893&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A use-after-free vulnerability that can be reached via a license server handling endpoint may allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable Pulse Connect Secure gateway system. &lt;/p&gt;
&lt;p&gt;Every system that is running PCS 9.0R3 or higher or 9.1R1 through 9.2R11.3 is affected. Having the license server configuration enabled is &lt;strong&gt;NOT&lt;/strong&gt; a prerequisite to being vulnerable. The vulnerable endpoints are present regardless of whether the system is an actual license server or not.&lt;/p&gt;
&lt;p&gt;This vulnerability is being &lt;a href=&quot;https://www.fireeye.com/blog/threat-research/2021/04/suspected-apt-actors-leverage-bypass-techniques-pulse-secure-zero-day.html&quot;&gt;exploited in the wild&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By making a crafted request to a vulnerable Pulse Connect Secure system, an unauthenticated remote attacker may be able to execute arbitrary code on the gateway with root privileges.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This vulnerability and others are &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44784/&quot;&gt;addressed&lt;/a&gt; in Pulse Connect Secure 9.1R11.4.&lt;/p&gt;
&lt;h4&gt;Apply a workaround&lt;/h4&gt;
&lt;p&gt;If you are not using the features that the following workaround disables, we recommend applying the XML workaround even on systems that have been upgraded to 9.1R11.4 to reduce attack surface. Pulse Secure has published a &lt;a href=&quot;https://my.pulsesecure.net/&quot;&gt;Workaround-2104.xml&lt;/a&gt; file that contains mitigations to protect against this and other vulnerabilities.  &lt;a href=&quot;https://docs.pulsesecure.net/WebHelp/PCS/9.1R1/AG/Content/PCS/PCS_AdminGuide_9.1R1/Importing_an_XML_Configuration.htm&quot;&gt;Importing this XML workaround&lt;/a&gt; will activate the protections immediately and does not require any downtime for the VPN system. This workaround will block requests that match the following URI patterns:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;^/+dana/+meeting
^/+dana/+fb/+smb
^/+dana-cached/+fb/+smb
^/+dana-ws/+namedusers
^/+dana-ws/+metric
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that installing this workaround will block the ability to use the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows File Share Browser&lt;/li&gt;
&lt;li&gt;Pulse Secure Collaboration&lt;/li&gt;
&lt;li&gt;License Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Instead of using the workaround to protect a PCS that is being used as a license server, we recommend updating such systems to PCS 9.1R11.4. If this is not possible, restrict which IP addresses are allowed to communicate with the system.&lt;/p&gt;
&lt;h4&gt;Run the PCS Integrity Assurance utility&lt;/h4&gt;
&lt;p&gt;A PCS administrator should run the &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Secure_Article/KB44755&quot;&gt;PCS Integrity Assurance&lt;/a&gt; utility to help determine if a system has evidence that it has been compromised. Please be aware of two limitations of this tool:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upon completion of the Integrity Assurance tool, the PCS device will automatically reboot.&lt;/li&gt;
&lt;li&gt;Because running the Integrity Assurance tool relies on the use of the administrative web interface of the PCS device itself, it is reasonable to assume that it may be possible for a compromised device to display misleading results.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Enable Unauthenticated Request logging&lt;/h4&gt;
&lt;p&gt;By default, PCS devices do not log unauthenticated web requests. Additionally, the administrative interface for a PCS device will warn that: &lt;em&gt;Selecting this can quickly fill up User access log space in case of attack&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Because this vulnerability is exploitable via an unauthenticated request to the PCS, evidence of exploitation may only be present if the &quot;Unauthenticated Requests&quot; logging option is enabled. Enable this feature in the PCS administrative web interface by visiting:
System -&amp;gt; Log/Monitoring -&amp;gt; User Access -&amp;gt; Settings
and enabling the &quot;Unauthenticated Requests&quot; option.&lt;/p&gt;
&lt;h4&gt;Enable remote logging&lt;/h4&gt;
&lt;p&gt;Attackers who have compromised a PCS device may delete on-device logs in the process. For this reason, &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Secure_Article/KB22227&quot;&gt;configure a remote Syslog server&lt;/a&gt; to ensure that PCS log entries are not modified or deleted.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was publicly reported by Pulse Secure with additional details and context published by Fireye.&lt;/p&gt;
&lt;p&gt;This document was written by Chuck Yarbrough and Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Pulse Connect Secure (PCS) gateway contains a use-after-free vulnerability that can allow an unauthenticated remote attacker to execute arbitrary code.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-22893&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A use-after-free vulnerability that can be reached via a license server handling endpoint may allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable Pulse Connect Secure gateway system. &lt;/p&gt;
&lt;p&gt;Every system that is running PCS 9.0R3 or higher or 9.1R1 through 9.2R11.3 is affected. Having the license server configuration enabled is &lt;strong&gt;NOT&lt;/strong&gt; a prerequisite to being vulnerable. The vulnerable endpoints are present regardless of whether the system is an actual license server or not.&lt;/p&gt;
&lt;p&gt;This vulnerability is being &lt;a href=&quot;https://www.fireeye.com/blog/threat-research/2021/04/suspected-apt-actors-leverage-bypass-techniques-pulse-secure-zero-day.html&quot;&gt;exploited in the wild&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By making a crafted request to a vulnerable Pulse Connect Secure system, an unauthenticated remote attacker may be able to execute arbitrary code on the gateway with root privileges.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This vulnerability and others are &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44784/&quot;&gt;addressed&lt;/a&gt; in Pulse Connect Secure 9.1R11.4.&lt;/p&gt;
&lt;h4&gt;Apply a workaround&lt;/h4&gt;
&lt;p&gt;If you are not using the features that the following workaround disables, we recommend applying the XML workaround even on systems that have been upgraded to 9.1R11.4 to reduce attack surface. Pulse Secure has published a &lt;a href=&quot;https://my.pulsesecure.net/&quot;&gt;Workaround-2104.xml&lt;/a&gt; file that contains mitigations to protect against this and other vulnerabilities.  &lt;a href=&quot;https://docs.pulsesecure.net/WebHelp/PCS/9.1R1/AG/Content/PCS/PCS_AdminGuide_9.1R1/Importing_an_XML_Configuration.htm&quot;&gt;Importing this XML workaround&lt;/a&gt; will activate the protections immediately and does not require any downtime for the VPN system. This workaround will block requests that match the following URI patterns:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;^/+dana/+meeting
^/+dana/+fb/+smb
^/+dana-cached/+fb/+smb
^/+dana-ws/+namedusers
^/+dana-ws/+metric
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that installing this workaround will block the ability to use the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows File Share Browser&lt;/li&gt;
&lt;li&gt;Pulse Secure Collaboration&lt;/li&gt;
&lt;li&gt;License Server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Instead of using the workaround to protect a PCS that is being used as a license server, we recommend updating such systems to PCS 9.1R11.4. If this is not possible, restrict which IP addresses are allowed to communicate with the system.&lt;/p&gt;
&lt;h4&gt;Run the PCS Integrity Assurance utility&lt;/h4&gt;
&lt;p&gt;A PCS administrator should run the &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Secure_Article/KB44755&quot;&gt;PCS Integrity Assurance&lt;/a&gt; utility to help determine if a system has evidence that it has been compromised. Please be aware of two limitations of this tool:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Upon completion of the Integrity Assurance tool, the PCS device will automatically reboot.&lt;/li&gt;
&lt;li&gt;Because running the Integrity Assurance tool relies on the use of the administrative web interface of the PCS device itself, it is reasonable to assume that it may be possible for a compromised device to display misleading results.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Enable Unauthenticated Request logging&lt;/h4&gt;
&lt;p&gt;By default, PCS devices do not log unauthenticated web requests. Additionally, the administrative interface for a PCS device will warn that: &lt;em&gt;Selecting this can quickly fill up User access log space in case of attack&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Because this vulnerability is exploitable via an unauthenticated request to the PCS, evidence of exploitation may only be present if the &quot;Unauthenticated Requests&quot; logging option is enabled. Enable this feature in the PCS administrative web interface by visiting:
System -&amp;gt; Log/Monitoring -&amp;gt; User Access -&amp;gt; Settings
and enabling the &quot;Unauthenticated Requests&quot; option.&lt;/p&gt;
&lt;h4&gt;Enable remote logging&lt;/h4&gt;
&lt;p&gt;Attackers who have compromised a PCS device may delete on-device logs in the process. For this reason, &lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Secure_Article/KB22227&quot;&gt;configure a remote Syslog server&lt;/a&gt; to ensure that PCS log entries are not modified or deleted.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was publicly reported by Pulse Secure with additional details and context published by Fireye.&lt;/p&gt;
&lt;p&gt;This document was written by Chuck Yarbrough and Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44784/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44784/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://blog.pulsesecure.net/pulse-connect-secure-security-update/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.pulsesecure.net/pulse-connect-secure-security-update/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.fireeye.com/blog/threat-research/2021/04/suspected-apt-actors-leverage-bypass-techniques-pulse-secure-zero-day.html&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.fireeye.com/blog/threat-research/2021/04/suspected-apt-actors-leverage-bypass-techniques-pulse-secure-zero-day.html&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.bleepingcomputer.com/news/security/pulse-secure-vpn-zero-day-used-to-hack-defense-firms-govt-orgs/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bleepingcomputer.com/news/security/pulse-secure-vpn-zero-day-used-to-hack-defense-firms-govt-orgs/&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-22893&quot;&gt;CVE-2021-22893  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-04-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-04-20&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-05-19 13:05 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;13 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23213092 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#240785: Atlassian Bitbucket on Windows is vulnerable to privilege escalation due to weak ACLs</title><link href="https://kb.cert.org/vuls/id/240785" rel="alternate"><published>2021-02-18T18:01:37.684243+00:00</published><updated>2021-02-18T18:01:37.465763+00:00</updated><id>https://kb.cert.org/vuls/id/240785</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Atlassian Bitbucket on Windows fails to properly set ACLs, which can allow an unprivileged Windows user to run arbitrary code with SYSTEM privileges.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The Atlassian Bitbucket Windows installer fails to set a secure access-control list (ACL) on the default installation directory, such as &lt;code&gt;C:\Atlassian\Bitbucket\&lt;/code&gt;. By default, unprivileged users can create files in this directory structure, which creates a privilege-escalation vulnerability.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted DLL file in the Bitbucket installation directory, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable Bitbucket software installed. See &lt;a href=&quot;https://attack.mitre.org/techniques/T1574/001/&quot;&gt;DLL Search Order Hijacking&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue has been addressed in the Bitbucket Windows installer for versions 7.10.1, 7.6.4, and 6.10.9. Please see https://jira.atlassian.com/browse/BSERV-12753 for more details.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Atlassian Bitbucket on Windows fails to properly set ACLs, which can allow an unprivileged Windows user to run arbitrary code with SYSTEM privileges.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;The Atlassian Bitbucket Windows installer fails to set a secure access-control list (ACL) on the default installation directory, such as &lt;code&gt;C:\Atlassian\Bitbucket\&lt;/code&gt;. By default, unprivileged users can create files in this directory structure, which creates a privilege-escalation vulnerability.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted DLL file in the Bitbucket installation directory, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable Bitbucket software installed. See &lt;a href=&quot;https://attack.mitre.org/techniques/T1574/001/&quot;&gt;DLL Search Order Hijacking&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue has been addressed in the Bitbucket Windows installer for versions 7.10.1, 7.6.4, and 6.10.9. Please see https://jira.atlassian.com/browse/BSERV-12753 for more details.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://jira.atlassian.com/browse/BSERV-12753&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://jira.atlassian.com/browse/BSERV-12753&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-36233&quot;&gt;CVE-2020-36233  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-02-18&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-02-18&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-02-18 18:01 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;1 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23240785 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#466044: Siemens Totally Integrated Automation Portal vulnerable to privilege escalation due to Node.js paths</title><link href="https://kb.cert.org/vuls/id/466044" rel="alternate"><published>2021-02-09T15:09:41.705068+00:00</published><updated>2021-02-09T17:45:23.956181+00:00</updated><id>https://kb.cert.org/vuls/id/466044</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Siemens Totally Integrated Administrator (TIA) fails to properly set the module search path to be used by a privileged Node.js component, which can allow an unprivileged Windows user to run arbitrary code with SYSTEM privileges. The PCS neo administration console is reported to be affected as well.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;Siemens TIA runs a privileged Node.js component. The Node.js server fails to properly set the module search path. Because of this, Node.js will look for modules in the &lt;code&gt;C:\node_modules\&lt;/code&gt; directory when the server is started. Because unprivileged Windows users can create subdirectories off of the system root, a user can create this directory and place a specially-crafted &lt;code&gt;.js&lt;/code&gt; file in it to achieve arbitrary code execution with SYSTEM privileges when the server starts.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted JS file in the &lt;code&gt;C:\node_modules\&lt;/code&gt; directory, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable Siemens TIA or PCS neo administration console software installed.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in TIA Administrator &lt;a href=&quot;https://support.industry.siemens.com/cs/ww/en/view/114358/&quot;&gt;V1.0 SP2 Upd2&lt;/a&gt;. PCS neo administration console users should apply the mitigations described in &lt;a href=&quot;https://support.industry.siemens.com/cs/ww/en/view/109771524&quot;&gt;Industrial Security in SIMATIC PCS neo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more details see Siemens Security Advisory &lt;a href=&quot;https://cert-portal.siemens.com/productcert/pdf/ssa-428051.pdf&quot;&gt;SSA-428051&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;Siemens Totally Integrated Administrator (TIA) fails to properly set the module search path to be used by a privileged Node.js component, which can allow an unprivileged Windows user to run arbitrary code with SYSTEM privileges. The PCS neo administration console is reported to be affected as well.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;Siemens TIA runs a privileged Node.js component. The Node.js server fails to properly set the module search path. Because of this, Node.js will look for modules in the &lt;code&gt;C:\node_modules\&lt;/code&gt; directory when the server is started. Because unprivileged Windows users can create subdirectories off of the system root, a user can create this directory and place a specially-crafted &lt;code&gt;.js&lt;/code&gt; file in it to achieve arbitrary code execution with SYSTEM privileges when the server starts.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted JS file in the &lt;code&gt;C:\node_modules\&lt;/code&gt; directory, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable Siemens TIA or PCS neo administration console software installed.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;h4&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in TIA Administrator &lt;a href=&quot;https://support.industry.siemens.com/cs/ww/en/view/114358/&quot;&gt;V1.0 SP2 Upd2&lt;/a&gt;. PCS neo administration console users should apply the mitigations described in &lt;a href=&quot;https://support.industry.siemens.com/cs/ww/en/view/109771524&quot;&gt;Industrial Security in SIMATIC PCS neo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more details see Siemens Security Advisory &lt;a href=&quot;https://cert-portal.siemens.com/productcert/pdf/ssa-428051.pdf&quot;&gt;SSA-428051&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was reported by Will Dormann of the CERT/CC.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://cert-portal.siemens.com/productcert/pdf/ssa-428051.pdf&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cert-portal.siemens.com/productcert/pdf/ssa-428051.pdf&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://support.industry.siemens.com/cs/ww/en/view/109771524&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://support.industry.siemens.com/cs/ww/en/view/109771524&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25238&quot;&gt;CVE-2020-25238  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-02-09&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-02-09&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-02-09 17:45 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;4 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23466044 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#794544: Sudo set_cmd() is vulnerable to heap-based buffer overflow</title><link href="https://kb.cert.org/vuls/id/794544" rel="alternate"><published>2021-02-04T21:14:11.774891+00:00</published><updated>2021-04-26T14:25:43.091433+00:00</updated><id>https://kb.cert.org/vuls/id/794544</id><summary type="html">

&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;A heap-based overflow has been discovered in the &lt;code&gt;set_cmd()&lt;/code&gt; function in sudo, which may allow a local attacker to execute commands with elevated administrator privileges.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&quot;https://sudo.ws&quot;&gt;Sudo Main Page&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sudo (su &quot;do&quot;) allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is possible for a local Non-administrative user to exploit this vulnerability to elevate their privileges so that they can execute commands with administrator privileges. The team at &lt;a href=&quot;https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit&quot;&gt;Qualys&lt;/a&gt; assigned this vulnerability CVE-2021-3156 and found multiple *nix operating systems were vulnerable, including Fedora, Debian, and Ubuntu. A blog update from February 3, 2021, reports that macOS, AIX, and Solaris may be vulnerable, but Qualys had not yet confirmed this.
There is &lt;a href=&quot;https://www.zdnet.com/article/recent-root-giving-sudo-bug-also-impacts-macos/&quot;&gt;additional reporting&lt;/a&gt; that other operating systems are affected, including Apple’s Big Sur.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;If an attacker has local access to an affected machine then it is possible for them to execute commands with administrator privileges.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Apply an Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Update sudo to the latest version to address this vulnerability when operationally feasible. This issue is resolved in sudo version 1.9.5p2. Please install this version, or a version from your distribution that has the fix applied to it&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was researched and reported by the Qualys Research Team.&lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;A heap-based overflow has been discovered in the &lt;code&gt;set_cmd()&lt;/code&gt; function in sudo, which may allow a local attacker to execute commands with elevated administrator privileges.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;From the &lt;a href=&quot;https://sudo.ws&quot;&gt;Sudo Main Page&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sudo (su &quot;do&quot;) allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is possible for a local Non-administrative user to exploit this vulnerability to elevate their privileges so that they can execute commands with administrator privileges. The team at &lt;a href=&quot;https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit&quot;&gt;Qualys&lt;/a&gt; assigned this vulnerability CVE-2021-3156 and found multiple *nix operating systems were vulnerable, including Fedora, Debian, and Ubuntu. A blog update from February 3, 2021, reports that macOS, AIX, and Solaris may be vulnerable, but Qualys had not yet confirmed this.
There is &lt;a href=&quot;https://www.zdnet.com/article/recent-root-giving-sudo-bug-also-impacts-macos/&quot;&gt;additional reporting&lt;/a&gt; that other operating systems are affected, including Apple’s Big Sur.&lt;/p&gt;
&lt;h3&gt;Impact&lt;/h3&gt;
&lt;p&gt;If an attacker has local access to an affected machine then it is possible for them to execute commands with administrator privileges.&lt;/p&gt;
&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Apply an Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Update sudo to the latest version to address this vulnerability when operationally feasible. This issue is resolved in sudo version 1.9.5p2. Please install this version, or a version from your distribution that has the fix applied to it&lt;/p&gt;
&lt;h3&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This vulnerability was researched and reported by the Qualys Research Team.&lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	  
	  &lt;li&gt;&lt;a href=&quot;https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://www.zdnet.com/article/recent-root-giving-sudo-bug-also-impacts-macos/&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zdnet.com/article/recent-root-giving-sudo-bug-also-impacts-macos/&lt;/a&gt;&lt;/li&gt;
          
	  &lt;li&gt;&lt;a href=&quot;https://twitter.com/hackerfantastic/status/1356645638151303169&quot; class=&quot;vulreflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://twitter.com/hackerfantastic/status/1356645638151303169&lt;/a&gt;&lt;/li&gt;
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-3156&quot;&gt;CVE-2021-3156  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2021-02-04&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2021-02-04&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2021-04-26 14:25 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;18 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23794544 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry></feed>