<?xml version="1.0" encoding="utf-8"?>
<feed xml:lang="en-us" xmlns="http://www.w3.org/2005/Atom"><title>CERT Recently Published Vulnerability Notes</title><link href="https://kb.cert.org/vuls/" rel="alternate"><link href="https://kb.cert.org/vuls/atomfeed/" rel="self"><id>https://kb.cert.org/vuls/</id><updated>2022-11-16T21:30:21.285554+00:00</updated><author><name>CERT</name><email>cert@cert.org</email><uri>https://www.sei.cmu.edu</uri></author><subtitle>CERT publishes vulnerability advisories called &quot;Vulnerability Notes.&quot; Vulnerability Notes include summaries, technical details, remediation information, and lists of affected vendors.  Many vulnerability notes are the result of private coordination and disclosure efforts.</subtitle><entry><title>VU#709991: Netatalk contains multiple error and memory management vulnerabilities</title><link href="https://kb.cert.org/vuls/id/709991" rel="alternate"><published>2022-11-16T13:28:23.063553+00:00</published><updated>2022-11-16T13:57:16.209234+00:00</updated><id>https://kb.cert.org/vuls/id/709991</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;There are six new vulnerabilities in the latest release of Netatalk (3.1.12) that could allow for Remote Code Execution as well as Out-of-bounds Read.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Below are the new CVEs. Per ZDI: &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-0194&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the ad_addcomment function. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23121&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the parse_entries function. The issue results from the lack of proper error handling when parsing AppleDouble entries. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23122&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the setfilparams function. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23124&lt;/strong&gt;
This vulnerability allows remote attackers to disclose sensitive information on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the get_finderinfo method. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23125&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the copyapplfile function. When parsing the len element, the process does not properly validate the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23123&lt;/strong&gt;
This vulnerability allows remote attackers to disclose sensitive information on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the getdirparams method. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root.&lt;/p&gt;
&lt;p&gt;For more detailed information, please review the Netatalk announcement. Also available for reference are releases detailing the information from ZDI &amp;amp; Western Digital. &lt;/p&gt;
&lt;p&gt;Netatalk does not regularly receive security updates, is receiving security research attention, and is difficlut to get right because reverse engineering a proprietary protocol. WD has removed Netatalk code from NAS firmware. We suggest Samba+vfs_fruit for longer term use (more likely to get security updates in a timely way).
(see samba vfs_fruit vuls).&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An unauthenticated, remote attacker can execute arbitrary code on affected installations of Netatalk.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Netatalk has released version &lt;a href=&quot;https://netatalk.sourceforge.io/3.1/ReleaseNotes3.1.13.html&quot;&gt;3.1.13&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to ZDI, Western Digital, and Netatalk for researching and coordinating these vulnerabilities. &lt;/p&gt;
&lt;p&gt;This document was written by James Stanley and Art Manion.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;There are six new vulnerabilities in the latest release of Netatalk (3.1.12) that could allow for Remote Code Execution as well as Out-of-bounds Read.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Below are the new CVEs. Per ZDI: &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-0194&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the ad_addcomment function. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23121&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the parse_entries function. The issue results from the lack of proper error handling when parsing AppleDouble entries. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23122&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the setfilparams function. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23124&lt;/strong&gt;
This vulnerability allows remote attackers to disclose sensitive information on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the get_finderinfo method. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23125&lt;/strong&gt;
This vulnerability allows remote attackers to execute arbitrary code on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the copyapplfile function. When parsing the len element, the process does not properly validate the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-23123&lt;/strong&gt;
This vulnerability allows remote attackers to disclose sensitive information on affected installations of Netatalk. Authentication is not required to exploit this vulnerability.&lt;/p&gt;
&lt;p&gt;The specific flaw exists within the getdirparams method. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of root.&lt;/p&gt;
&lt;p&gt;For more detailed information, please review the Netatalk announcement. Also available for reference are releases detailing the information from ZDI &amp;amp; Western Digital. &lt;/p&gt;
&lt;p&gt;Netatalk does not regularly receive security updates, is receiving security research attention, and is difficlut to get right because reverse engineering a proprietary protocol. WD has removed Netatalk code from NAS firmware. We suggest Samba+vfs_fruit for longer term use (more likely to get security updates in a timely way).
(see samba vfs_fruit vuls).&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An unauthenticated, remote attacker can execute arbitrary code on affected installations of Netatalk.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Netatalk has released version &lt;a href=&quot;https://netatalk.sourceforge.io/3.1/ReleaseNotes3.1.13.html&quot;&gt;3.1.13&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to ZDI, Western Digital, and Netatalk for researching and coordinating these vulnerabilities. &lt;/p&gt;
&lt;p&gt;This document was written by James Stanley and Art Manion.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://netatalk.sourceforge.io/3.1/ReleaseNotes3.1.13.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://netatalk.sourceforge.io/3.1/ReleaseNotes3.1.13.html&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.westerndigital.com/support/product-security/wdc-22005-netatalk-security-vulnerabilities&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.westerndigital.com/support/product-security/wdc-22005-netatalk-security-vulnerabilities&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-0194&quot;&gt;CVE-2022-0194  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-23121&quot;&gt;CVE-2022-23121  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-23122&quot;&gt;CVE-2022-23122  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-23124&quot;&gt;CVE-2022-23124  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-23123&quot;&gt;CVE-2022-23123  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-23125&quot;&gt;CVE-2022-23125  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-01-10&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-11-16&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-11-16 13:57 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23709991 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#434994: Multiple race conditions due to TOCTOU flaws in various UEFI Implementations</title><link href="https://kb.cert.org/vuls/id/434994" rel="alternate"><published>2022-11-08T17:02:19.519813+00:00</published><updated>2022-11-11T15:44:06.591204+00:00</updated><id>https://kb.cert.org/vuls/id/434994</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Multiple Unified Extensible Firmware Interface (UEFI) implementations are vulnerable to code execution in System Management Mode (SMM) by an attacker who gains administrative privileges on the local machine. An attacker can corrupt the memory using Direct Memory Access (DMA) timing attacks that can lead to code execution. These threats are collectively referred to as RingHopper attacks.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The UEFI standard provides an open specification that defines a software interface between an operating system (OS) and the device hardware on the system.  UEFI can interface directly with hardware below the OS using SMM, a high-privilege CPU mode.  &lt;a href=&quot;https://edk2-docs.gitbook.io/edk-ii-secure-coding-guide/secure_coding_guidelines_intel_platforms/smm&quot;&gt;SMM operations&lt;/a&gt; are closely managed by the CPU using a dedicated portion of memory called the SMRAM.  The SMM can only be entered through System Management Interrupt (SMI) Handlers using a communication buffer.  SMI Handlers are essentially a system-call to access the CPU's SMRAM from its current operating mode, typically Protected Mode.&lt;/p&gt;
&lt;p&gt;A race condition involving the access and validation of the SMRAM can be achieved using DMA timing attacks that rely on time-of-use (&lt;a href=&quot;https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use&quot;&gt;TOCTOU&lt;/a&gt;) conditions. An attacker can use well-timed probing to try and overwrite the contents of SMRAM with arbitrary data, leading to attacker code being executed with the same elevated-privileges available to the CPU (i.e., &lt;a href=&quot;https://en.wikipedia.org/wiki/System_Management_Mode&quot;&gt;Ring -2 mode&lt;/a&gt;).  The asynchronous nature of SMRAM access via DMA controllers enables the attacker to perform such unauthorized access and bypass the verifications normally provided by the SMI Handler API.  &lt;/p&gt;
&lt;p&gt;The Intel-VT and Intel VT-d technologies provide some protection against DMA attacks using Input-Output Memory Management Unit (IOMMU) to address DMA threats.  Although IOMMU can protect from DMA hardware attacks, SMI Handlers vulnerable to RingHopper may still be abused.  SMRAM verification involving &lt;a href=&quot;https://www.sentinelone.com/labs/another-brick-in-the-wall-uncovering-smm-vulnerabilities-in-hp-firmware/&quot;&gt;validation of nested pointers&lt;/a&gt; adds even more complexity when analyzing how various SMI Handlers are used in UEFI. &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker with either local or remote administrative privileges can exploit DMA timing attacks to elevate privileges beyond the operating system and execute arbitrary code in SMM mode (Ring -2). These attacks can be invoked from the OS using vulnerable SMI Handlers.  In some cases, the vulnerabilities can be triggered in the UEFI early boot phases (as well as sleep and recovery) before the operating system is fully initialized.&lt;/p&gt;
&lt;p&gt;A successful attack enables any of the following impacts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Invalidation or bypass of UEFI security features (SecureBoot, Intel BootGuard).&lt;/li&gt;
&lt;li&gt;Installation of persistent software that cannot be easily detected or erased.&lt;/li&gt;
&lt;li&gt;Creation of backdoors and back communications channels to exfiltrate sensitive data&lt;/li&gt;
&lt;li&gt;Interruption of system execution leading to permanent shutdown.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because these attacks are against UEFI supported firmware, OS and EDR solutions may have diminished visibility into unauthorized access.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Install the latest stable version of UEFI firmware provided by your PC vendor or by the reseller of your computing environments. See the links below for resources and updates provided by specific vendors to address these issues.  &lt;/p&gt;
&lt;p&gt;If your operating system supports automatic or managed updates for firmware, such as Linux Vendor Firmware Service (&lt;a href=&quot;https://fwupd.org/lvfs/docs/users&quot;&gt;LVFS&lt;/a&gt;), check (&lt;code&gt;fwupdmgr get-updates&lt;/code&gt;) and apply the firmware updates provided by LVFS using &lt;code&gt;fwupdmgr update&lt;/code&gt; as appropriate. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the Intel iStare researchers Jonathan Lusky  and Benny Zeltser who discovered and reported this vulnerability. &lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli and Jeffrey S. Havrilla.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Multiple Unified Extensible Firmware Interface (UEFI) implementations are vulnerable to code execution in System Management Mode (SMM) by an attacker who gains administrative privileges on the local machine. An attacker can corrupt the memory using Direct Memory Access (DMA) timing attacks that can lead to code execution. These threats are collectively referred to as RingHopper attacks.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The UEFI standard provides an open specification that defines a software interface between an operating system (OS) and the device hardware on the system.  UEFI can interface directly with hardware below the OS using SMM, a high-privilege CPU mode.  &lt;a href=&quot;https://edk2-docs.gitbook.io/edk-ii-secure-coding-guide/secure_coding_guidelines_intel_platforms/smm&quot;&gt;SMM operations&lt;/a&gt; are closely managed by the CPU using a dedicated portion of memory called the SMRAM.  The SMM can only be entered through System Management Interrupt (SMI) Handlers using a communication buffer.  SMI Handlers are essentially a system-call to access the CPU's SMRAM from its current operating mode, typically Protected Mode.&lt;/p&gt;
&lt;p&gt;A race condition involving the access and validation of the SMRAM can be achieved using DMA timing attacks that rely on time-of-use (&lt;a href=&quot;https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use&quot;&gt;TOCTOU&lt;/a&gt;) conditions. An attacker can use well-timed probing to try and overwrite the contents of SMRAM with arbitrary data, leading to attacker code being executed with the same elevated-privileges available to the CPU (i.e., &lt;a href=&quot;https://en.wikipedia.org/wiki/System_Management_Mode&quot;&gt;Ring -2 mode&lt;/a&gt;).  The asynchronous nature of SMRAM access via DMA controllers enables the attacker to perform such unauthorized access and bypass the verifications normally provided by the SMI Handler API.  &lt;/p&gt;
&lt;p&gt;The Intel-VT and Intel VT-d technologies provide some protection against DMA attacks using Input-Output Memory Management Unit (IOMMU) to address DMA threats.  Although IOMMU can protect from DMA hardware attacks, SMI Handlers vulnerable to RingHopper may still be abused.  SMRAM verification involving &lt;a href=&quot;https://www.sentinelone.com/labs/another-brick-in-the-wall-uncovering-smm-vulnerabilities-in-hp-firmware/&quot;&gt;validation of nested pointers&lt;/a&gt; adds even more complexity when analyzing how various SMI Handlers are used in UEFI. &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker with either local or remote administrative privileges can exploit DMA timing attacks to elevate privileges beyond the operating system and execute arbitrary code in SMM mode (Ring -2). These attacks can be invoked from the OS using vulnerable SMI Handlers.  In some cases, the vulnerabilities can be triggered in the UEFI early boot phases (as well as sleep and recovery) before the operating system is fully initialized.&lt;/p&gt;
&lt;p&gt;A successful attack enables any of the following impacts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Invalidation or bypass of UEFI security features (SecureBoot, Intel BootGuard).&lt;/li&gt;
&lt;li&gt;Installation of persistent software that cannot be easily detected or erased.&lt;/li&gt;
&lt;li&gt;Creation of backdoors and back communications channels to exfiltrate sensitive data&lt;/li&gt;
&lt;li&gt;Interruption of system execution leading to permanent shutdown.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because these attacks are against UEFI supported firmware, OS and EDR solutions may have diminished visibility into unauthorized access.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Install the latest stable version of UEFI firmware provided by your PC vendor or by the reseller of your computing environments. See the links below for resources and updates provided by specific vendors to address these issues.  &lt;/p&gt;
&lt;p&gt;If your operating system supports automatic or managed updates for firmware, such as Linux Vendor Firmware Service (&lt;a href=&quot;https://fwupd.org/lvfs/docs/users&quot;&gt;LVFS&lt;/a&gt;), check (&lt;code&gt;fwupdmgr get-updates&lt;/code&gt;) and apply the firmware updates provided by LVFS using &lt;code&gt;fwupdmgr update&lt;/code&gt; as appropriate. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the Intel iStare researchers Jonathan Lusky  and Benny Zeltser who discovered and reported this vulnerability. &lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli and Jeffrey S. Havrilla.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://edk2-docs.gitbook.io/edk-ii-secure-coding-guide/secure_coding_guidelines_general&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://edk2-docs.gitbook.io/edk-ii-secure-coding-guide/secure_coding_guidelines_general&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://edk2-docs.gitbook.io/a-tour-beyond-bios-memory-protection-in-uefi-bios/memory-protection-in-smm&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://edk2-docs.gitbook.io/a-tour-beyond-bios-memory-protection-in-uefi-bios/memory-protection-in-smm&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://eclypsium.com/2020/01/30/direct-memory-access-attacks/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://eclypsium.com/2020/01/30/direct-memory-access-attacks/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.intel.com/content/dam/develop/external/us/en/documents/intel-whitepaper-using-iommu-for-dma-protection-in-uefi-820238.pdf&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.intel.com/content/dam/develop/external/us/en/documents/intel-whitepaper-using-iommu-for-dma-protection-in-uefi-820238.pdf&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;http://blog.cr4.sh/2015/09/breaking-uefi-security-with-software.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.cr4.sh/2015/09/breaking-uefi-security-with-software.html&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.sentinelone.com/labs/another-brick-in-the-wall-uncovering-smm-vulnerabilities-in-hp-firmware/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.sentinelone.com/labs/another-brick-in-the-wall-uncovering-smm-vulnerabilities-in-hp-firmware/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://fwupd.org/lvfs/docs/users&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://fwupd.org/lvfs/docs/users&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://jvn.jp/vu/JVNVU96604488/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://jvn.jp/vu/JVNVU96604488/&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-33164&quot;&gt;CVE-2021-33164  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-11-08&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-11-08&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-11-11 15:44 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;5 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23434994 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#794340: OpenSSL 3.0.0 to 3.0.6 decodes some punycode email addresses in X.509 certificates improperly</title><link href="https://kb.cert.org/vuls/id/794340" rel="alternate"><published>2022-11-01T23:01:07.697319+00:00</published><updated>2022-11-16T21:30:21.285554+00:00</updated><id>https://kb.cert.org/vuls/id/794340</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Two buffer overflow vulnerabilities were discovered in OpenSSL versions 3.0.0 through 3.0.6. These vulnerabilities were introduced in version 3.0.0 with the inclusion of support for punycode email address parsing for X.509 certificates.   OpenSSL's assessment of the severity of the vulnerabilities has &lt;a href=&quot;https://www.openssl.org/blog/blog/2022/11/01/email-address-overflows/&quot;&gt;reduced from CRITICAL to HIGH&lt;/a&gt;, and OpenSSL 3.0.7 addresses the issues.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Two buffer overflows have been reported in the OpenSSL 3.0.x branch prior to version 3.0.7 that, when exploited, may lead to denial of services or, in some cases, remote code execution in the vulnerable target environment. OpenSSL client and server implementations that use the vulnerable libraries are affected.  The server implementation also requires that &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc4346#appendix-F.1.1&quot;&gt;TLS client authentication&lt;/a&gt; is enabled in order to attack, and potentially exploit, a vulnerable target.   &lt;a href=&quot;https://gist.github.com/FiloSottile/611fc3fa95c3aceebf2580983f76148c&quot;&gt;OpenSSL provides details:&lt;/a&gt; &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* Fixed two buffer overflows in punycode decoding functions.

   A buffer overrun can be triggered in X.509 certificate verification,
   specifically in name constraint checking. Note that this occurs after
   certificate chain signature verification and requires either a CA to
   have signed the malicious certificate or for the application to continue
   certificate verification despite failure to construct a path to a trusted
   issuer.

   In a TLS client, this can be triggered by connecting to a malicious
   server.  In a TLS server, this can be triggered if the server requests
   client authentication and a malicious client connects.

   An attacker can craft a malicious email address to overflow
   an arbitrary number of bytes containing the `.`  character (decimal 46)
   on the stack.  This buffer overflow could result in a crash (causing a
   denial of service).
   ([CVE-2022-3786])

   An attacker can craft a malicious email address to overflow four
   attacker-controlled bytes on the stack.  This buffer overflow could
   result in a crash (causing a denial of service) or potentially remote code
   execution depending on stack layout for any given platform/compiler.
   ([CVE-2022-3602])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OpenSSL versions 1.1.1 and 1.0.2 are not affected.&lt;/p&gt;
&lt;p&gt;CERT/CC is unaware of any exploitation of this vulnerability at this time.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;Successful exploitation could lead to denial of service or remote execution of arbitrary code in the target environment.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Any services depending on versions of OpenSSL 3.0.x prior to OpenSSL 3.0.7 should be upgraded to version 3.0.7 or later.  Operators may also consider temporarily disabling TLS client authentication until applying an update.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to OpenSSL for coordinating and remediating the vulnerability. Polar Bear is credited as having discovered CVE--2022-3602. Viktor Dukhovni is reported as the source of CVE-2022-3786.&lt;/p&gt;
&lt;p&gt;This document was written by Kevin Stephens, Eric Hatleback, Vijay Sarvepalli, and Jeffrey S. Havrilla.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Two buffer overflow vulnerabilities were discovered in OpenSSL versions 3.0.0 through 3.0.6. These vulnerabilities were introduced in version 3.0.0 with the inclusion of support for punycode email address parsing for X.509 certificates.   OpenSSL's assessment of the severity of the vulnerabilities has &lt;a href=&quot;https://www.openssl.org/blog/blog/2022/11/01/email-address-overflows/&quot;&gt;reduced from CRITICAL to HIGH&lt;/a&gt;, and OpenSSL 3.0.7 addresses the issues.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Two buffer overflows have been reported in the OpenSSL 3.0.x branch prior to version 3.0.7 that, when exploited, may lead to denial of services or, in some cases, remote code execution in the vulnerable target environment. OpenSSL client and server implementations that use the vulnerable libraries are affected.  The server implementation also requires that &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc4346#appendix-F.1.1&quot;&gt;TLS client authentication&lt;/a&gt; is enabled in order to attack, and potentially exploit, a vulnerable target.   &lt;a href=&quot;https://gist.github.com/FiloSottile/611fc3fa95c3aceebf2580983f76148c&quot;&gt;OpenSSL provides details:&lt;/a&gt; &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* Fixed two buffer overflows in punycode decoding functions.

   A buffer overrun can be triggered in X.509 certificate verification,
   specifically in name constraint checking. Note that this occurs after
   certificate chain signature verification and requires either a CA to
   have signed the malicious certificate or for the application to continue
   certificate verification despite failure to construct a path to a trusted
   issuer.

   In a TLS client, this can be triggered by connecting to a malicious
   server.  In a TLS server, this can be triggered if the server requests
   client authentication and a malicious client connects.

   An attacker can craft a malicious email address to overflow
   an arbitrary number of bytes containing the `.`  character (decimal 46)
   on the stack.  This buffer overflow could result in a crash (causing a
   denial of service).
   ([CVE-2022-3786])

   An attacker can craft a malicious email address to overflow four
   attacker-controlled bytes on the stack.  This buffer overflow could
   result in a crash (causing a denial of service) or potentially remote code
   execution depending on stack layout for any given platform/compiler.
   ([CVE-2022-3602])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OpenSSL versions 1.1.1 and 1.0.2 are not affected.&lt;/p&gt;
&lt;p&gt;CERT/CC is unaware of any exploitation of this vulnerability at this time.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;Successful exploitation could lead to denial of service or remote execution of arbitrary code in the target environment.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;Any services depending on versions of OpenSSL 3.0.x prior to OpenSSL 3.0.7 should be upgraded to version 3.0.7 or later.  Operators may also consider temporarily disabling TLS client authentication until applying an update.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to OpenSSL for coordinating and remediating the vulnerability. Polar Bear is credited as having discovered CVE--2022-3602. Viktor Dukhovni is reported as the source of CVE-2022-3786.&lt;/p&gt;
&lt;p&gt;This document was written by Kevin Stephens, Eric Hatleback, Vijay Sarvepalli, and Jeffrey S. Havrilla.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://www.openssl.org/news/secadv/20221101.txt&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.openssl.org/news/secadv/20221101.txt&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://gist.github.com/FiloSottile/611fc3fa95c3aceebf2580983f76148c&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gist.github.com/FiloSottile/611fc3fa95c3aceebf2580983f76148c&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://github.com/NCSC-NL/OpenSSL-2022/tree/main/software&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/NCSC-NL/OpenSSL-2022/tree/main/software&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.openssl.org/blog/blog/2022/11/01/email-address-overflows/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.openssl.org/blog/blog/2022/11/01/email-address-overflows/&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-3602&quot;&gt;CVE-2022-3602  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-3786&quot;&gt;CVE-2022-3786  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-11-01&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-11-01&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-11-16 21:30 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;10 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23794340 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#730793: Heimdal Kerberos vulnerable to remotely triggered NULL pointer dereference</title><link href="https://kb.cert.org/vuls/id/730793" rel="alternate"><published>2022-10-07T19:25:00.480694+00:00</published><updated>2022-11-09T17:32:22.058157+00:00</updated><id>https://kb.cert.org/vuls/id/730793</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The Heimdal Software Kerberos 5 implementation is vulnerable to a null pointer dereferance. An attacker with network access to an application that depends on the vulnerable code path can cause the application to crash.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-3116&lt;/strong&gt;
A flawed logical condition in lib/gssapi/spnego/accept_sec_context.c allows a malicious actor to remotely trigger a NULL pointer dereference using a crafted negTokenInit token.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can use a specially crafted network packet to cause a vulnerable application to crash.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;The latest version of code in the Heimdal master branch fixes the issue. However, the current stable release 7.7.0 does not include the fix. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the anonymous researcher for reporting this issue.&lt;/p&gt;
&lt;p&gt;This document was written by Kevin Stephens.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The Heimdal Software Kerberos 5 implementation is vulnerable to a null pointer dereferance. An attacker with network access to an application that depends on the vulnerable code path can cause the application to crash.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CVE-2022-3116&lt;/strong&gt;
A flawed logical condition in lib/gssapi/spnego/accept_sec_context.c allows a malicious actor to remotely trigger a NULL pointer dereference using a crafted negTokenInit token.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can use a specially crafted network packet to cause a vulnerable application to crash.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;The latest version of code in the Heimdal master branch fixes the issue. However, the current stable release 7.7.0 does not include the fix. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the anonymous researcher for reporting this issue.&lt;/p&gt;
&lt;p&gt;This document was written by Kevin Stephens.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-3116&quot;&gt;CVE-2022-3116  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-10-07&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-10-07&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-11-09 17:32 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;3 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23730793 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#915563: Microsoft Exchange vulnerable to server-side request forgery and remote code execution.</title><link href="https://kb.cert.org/vuls/id/915563" rel="alternate"><published>2022-10-03T21:59:10.233578+00:00</published><updated>2022-11-10T01:59:24.894200+00:00</updated><id>https://kb.cert.org/vuls/id/915563</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Microsoft Exchange Server 2019, Exchange Server 2016 and Exchange Server 2013 are vulnerable to a server-side request forgery (SSRF) attack and remote code execution.  An authenticated attacker can use the combination of these two vulnerabilities to elevate privileges and execute arbitrary code on the target Exchange server. &lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Microsoft Exchange Server's &lt;a href=&quot;https://learn.microsoft.com/en-us/exchange/architecture/client-access/autodiscover?view=exchserver-2019&quot;&gt; Autodiscover service&lt;/a&gt; is a web service widely available to any Microsoft Exchange Web Services (EWS) client.  Since Microsoft Exchange version 2016, the Autodiscover service has become an integral part of the Microsoft Exchange system, and it is no longer independently provided by a Client Access server.  The Autodiscover service and a number of other privileged mailbox services are hosted on the default Internet Information Services server running on the Mailbox server.  &lt;/p&gt;
&lt;p&gt;Cybersecurity company GTSC &lt;a href=&quot;https://www.gteltsc.vn/blog/warning-new-attack-campaign-utilized-a-new-0day-rce-vulnerability-on-microsoft-exchange-server-12715.html&quot;&gt;observed an abuse of the Autodiscover service in August of 2022&lt;/a&gt; using a crafted URL SSRF attack, similar to the earlier &lt;a href=&quot;https://techcommunity.microsoft.com/t5/exchange-team-blog/proxyshell-vulnerabilities-and-your-exchange-server/ba-p/2684705&quot;&gt;ProxyShell&lt;/a&gt; vulnerability reported in August 2021.  The observed attack appears to have implemented &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41040&quot;&gt;CVE-2022-41040&lt;/a&gt; to gain privileged access and &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41082&quot;&gt;CVE-2022-41082&lt;/a&gt; to perform remote code execution via PowerShell.  Microsoft Security Research Center has &lt;a href=&quot;https://msrc-blog.microsoft.com/2022/09/29/customer-guidance-for-reported-zero-day-vulnerabilities-in-microsoft-exchange-server/&quot;&gt;acknowledged the vulnerability and provided guidance for mitigation&lt;/a&gt;.  The guidance highlights that Microsoft Exchange Online customers will be provided with detection and mitigation defenses automatically from Microsoft's managed Infrastructure, informing them of any attempts to exploit these vulnerabilities. &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An authenticated remote attacker can perform SSRF attacks to escalate privileges and execute arbtirary PowerShell code on vulnerable Microsoft Exchange servers.  As the attack is targeted against Microsoft Exchange Mailbox server, the attacker can potentially gain access to other resources via lateral movement into Exchange and Active Directory environments.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;workaround-guidance&quot;&gt;Workaround guidance&lt;/h4&gt;
&lt;p&gt;Microsoft has provided guidance in their &lt;a href=&quot;https://msrc-blog.microsoft.com/2022/09/29/customer-guidance-for-reported-zero-day-vulnerabilities-in-microsoft-exchange-server/&quot;&gt;recent blog post&lt;/a&gt; to address the issue. Note that Microsoft has updated their guidance for the Option 3 Step 6 with the URL filter to be &lt;em&gt;.*autodiscover\.json.*Powershell.*&lt;/em&gt; (excluding the &lt;em&gt;@&lt;/em&gt; symbol)  instead of the earlier &lt;em&gt;.*autodiscover\.json.*\@.*Powershell.*&lt;/em&gt;. The recommended block pattern is a regular expression suggested by  &lt;a href=&quot;https://twitter.com/testanull&quot;&gt;Jang&lt;/a&gt; to prevent known variants of the #ProxyNotShell attacks.   Microsoft further updated their advisory on October 8th suggesting &lt;strong&gt;Condition Input&lt;/strong&gt; should be changed from {URL} to {UrlDecode:{REQUEST_URI}} to ensure all encoded variations are evaluated before being blocked.&lt;/p&gt;
&lt;h4 id=&quot;apply-update-when-available&quot;&gt;Apply update when available&lt;/h4&gt;
&lt;p&gt;As of October 3, 2022, there is no patch available to mitigate this issue. It is recommended that Microsoft Exchange administrators stay on alert for any advisory or patch released by Microsoft.  Note the latest security updates from Microsoft on &lt;a href=&quot;https://techcommunity.microsoft.com/t5/exchange-team-blog/released-october-2022-exchange-server-security-updates/ba-p/3646263&quot;&gt;October 11th&lt;/a&gt; &lt;strong&gt;do not&lt;/strong&gt; address the vulnerabilities highlighted here. Even with the workaround in place, many on-premise Microsoft Exchange instances remain at risk until Microsoft provides a patch and the patch has been applied.&lt;/p&gt;
&lt;p&gt;On November 8th 2022, Microsoft has provided fixes as part of their Patch Tuesday rollout, see updated Microsoft's guidance at &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41082&quot;&gt;CVE-2022-41082&lt;/a&gt; and &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41040&quot;&gt;CVE-2022-41040&lt;/a&gt;.  &lt;/p&gt;
&lt;h4 id=&quot;third-party-web-application-protection&quot;&gt;Third-party web application protection&lt;/h4&gt;
&lt;p&gt;Exchange Administrators who use third-party Web Application Firewall (WAF) products can implement the recommended URL filters and blocks as part of their WAF policy.&lt;/p&gt;
&lt;h4 id=&quot;other-mitigations&quot;&gt;Other mitigations&lt;/h4&gt;
&lt;p&gt;Exchange Administrators can limit the outgoing connection from the Exchange Mailbox server using specific allowed list on an outgoing proxy to limit suspicious web requests.&lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Microsoft Exchange Server 2019, Exchange Server 2016 and Exchange Server 2013 are vulnerable to a server-side request forgery (SSRF) attack and remote code execution.  An authenticated attacker can use the combination of these two vulnerabilities to elevate privileges and execute arbitrary code on the target Exchange server. &lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Microsoft Exchange Server's &lt;a href=&quot;https://learn.microsoft.com/en-us/exchange/architecture/client-access/autodiscover?view=exchserver-2019&quot;&gt; Autodiscover service&lt;/a&gt; is a web service widely available to any Microsoft Exchange Web Services (EWS) client.  Since Microsoft Exchange version 2016, the Autodiscover service has become an integral part of the Microsoft Exchange system, and it is no longer independently provided by a Client Access server.  The Autodiscover service and a number of other privileged mailbox services are hosted on the default Internet Information Services server running on the Mailbox server.  &lt;/p&gt;
&lt;p&gt;Cybersecurity company GTSC &lt;a href=&quot;https://www.gteltsc.vn/blog/warning-new-attack-campaign-utilized-a-new-0day-rce-vulnerability-on-microsoft-exchange-server-12715.html&quot;&gt;observed an abuse of the Autodiscover service in August of 2022&lt;/a&gt; using a crafted URL SSRF attack, similar to the earlier &lt;a href=&quot;https://techcommunity.microsoft.com/t5/exchange-team-blog/proxyshell-vulnerabilities-and-your-exchange-server/ba-p/2684705&quot;&gt;ProxyShell&lt;/a&gt; vulnerability reported in August 2021.  The observed attack appears to have implemented &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41040&quot;&gt;CVE-2022-41040&lt;/a&gt; to gain privileged access and &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41082&quot;&gt;CVE-2022-41082&lt;/a&gt; to perform remote code execution via PowerShell.  Microsoft Security Research Center has &lt;a href=&quot;https://msrc-blog.microsoft.com/2022/09/29/customer-guidance-for-reported-zero-day-vulnerabilities-in-microsoft-exchange-server/&quot;&gt;acknowledged the vulnerability and provided guidance for mitigation&lt;/a&gt;.  The guidance highlights that Microsoft Exchange Online customers will be provided with detection and mitigation defenses automatically from Microsoft's managed Infrastructure, informing them of any attempts to exploit these vulnerabilities. &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An authenticated remote attacker can perform SSRF attacks to escalate privileges and execute arbtirary PowerShell code on vulnerable Microsoft Exchange servers.  As the attack is targeted against Microsoft Exchange Mailbox server, the attacker can potentially gain access to other resources via lateral movement into Exchange and Active Directory environments.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;workaround-guidance&quot;&gt;Workaround guidance&lt;/h4&gt;
&lt;p&gt;Microsoft has provided guidance in their &lt;a href=&quot;https://msrc-blog.microsoft.com/2022/09/29/customer-guidance-for-reported-zero-day-vulnerabilities-in-microsoft-exchange-server/&quot;&gt;recent blog post&lt;/a&gt; to address the issue. Note that Microsoft has updated their guidance for the Option 3 Step 6 with the URL filter to be &lt;em&gt;.*autodiscover\.json.*Powershell.*&lt;/em&gt; (excluding the &lt;em&gt;@&lt;/em&gt; symbol)  instead of the earlier &lt;em&gt;.*autodiscover\.json.*\@.*Powershell.*&lt;/em&gt;. The recommended block pattern is a regular expression suggested by  &lt;a href=&quot;https://twitter.com/testanull&quot;&gt;Jang&lt;/a&gt; to prevent known variants of the #ProxyNotShell attacks.   Microsoft further updated their advisory on October 8th suggesting &lt;strong&gt;Condition Input&lt;/strong&gt; should be changed from {URL} to {UrlDecode:{REQUEST_URI}} to ensure all encoded variations are evaluated before being blocked.&lt;/p&gt;
&lt;h4 id=&quot;apply-update-when-available&quot;&gt;Apply update when available&lt;/h4&gt;
&lt;p&gt;As of October 3, 2022, there is no patch available to mitigate this issue. It is recommended that Microsoft Exchange administrators stay on alert for any advisory or patch released by Microsoft.  Note the latest security updates from Microsoft on &lt;a href=&quot;https://techcommunity.microsoft.com/t5/exchange-team-blog/released-october-2022-exchange-server-security-updates/ba-p/3646263&quot;&gt;October 11th&lt;/a&gt; &lt;strong&gt;do not&lt;/strong&gt; address the vulnerabilities highlighted here. Even with the workaround in place, many on-premise Microsoft Exchange instances remain at risk until Microsoft provides a patch and the patch has been applied.&lt;/p&gt;
&lt;p&gt;On November 8th 2022, Microsoft has provided fixes as part of their Patch Tuesday rollout, see updated Microsoft's guidance at &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41082&quot;&gt;CVE-2022-41082&lt;/a&gt; and &lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41040&quot;&gt;CVE-2022-41040&lt;/a&gt;.  &lt;/p&gt;
&lt;h4 id=&quot;third-party-web-application-protection&quot;&gt;Third-party web application protection&lt;/h4&gt;
&lt;p&gt;Exchange Administrators who use third-party Web Application Firewall (WAF) products can implement the recommended URL filters and blocks as part of their WAF policy.&lt;/p&gt;
&lt;h4 id=&quot;other-mitigations&quot;&gt;Other mitigations&lt;/h4&gt;
&lt;p&gt;Exchange Administrators can limit the outgoing connection from the Exchange Mailbox server using specific allowed list on an outgoing proxy to limit suspicious web requests.&lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://msrc-blog.microsoft.com/2022/09/29/customer-guidance-for-reported-zero-day-vulnerabilities-in-microsoft-exchange-server/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc-blog.microsoft.com/2022/09/29/customer-guidance-for-reported-zero-day-vulnerabilities-in-microsoft-exchange-server/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41040&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41040&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41082&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-41082&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/security/blog/2022/09/30/analyzing-attacks-using-the-exchange-vulnerabilities-cve-2022-41040-and-cve-2022-41082/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.microsoft.com/security/blog/2022/09/30/analyzing-attacks-using-the-exchange-vulnerabilities-cve-2022-41040-and-cve-2022-41082/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://doublepulsar.com/proxynotshell-the-story-of-the-claimed-zero-day-in-microsoft-exchange-5c63d963a9e9&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://doublepulsar.com/proxynotshell-the-story-of-the-claimed-zero-day-in-microsoft-exchange-5c63d963a9e9&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://rw.md/2022/11/09/ProxyNotRelay.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://rw.md/2022/11/09/ProxyNotRelay.html&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-41082&quot;&gt;CVE-2022-41082  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-41040&quot;&gt;CVE-2022-41040  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-10-03&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-10-03&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-11-10 01:59 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;9 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23915563 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#855201: L2 network security controls can be bypassed using VLAN 0 stacking and/or 802.3 headers</title><link href="https://kb.cert.org/vuls/id/855201" rel="alternate"><published>2022-09-27T16:13:54.486649+00:00</published><updated>2022-11-07T12:52:20.467801+00:00</updated><id>https://kb.cert.org/vuls/id/855201</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Layer-2 (L2) network security controls provided by various devices, such as switches, routers, and operating systems, can be bypassed by stacking Ethernet protocol headers. An attacker can send crafted packets through vulnerable devices to cause Denial-of-service (DoS) or to perform a man-in-the-middle (MitM) attack against a target network.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;This vulnerability exists within Ethernet encapsulation protocols that allow for stacking of Virtual Local Area Network (VLAN) headers.  Network standards such as  &lt;a href=&quot;https://standards.ieee.org/standard/802_1Q-1998.html&quot;&gt;IEEE 802.1Q-1998&lt;/a&gt; and &lt;a href=&quot;https://standards.ieee.org/standard/802_3-2018.html&quot;&gt;IEEE 802.3&lt;/a&gt; define a system of tagging Ethernet frames that help isolate networks to provide virtual networking capability.  IEEE standard &lt;a href=&quot;https://standards.ieee.org/standard/802_1ad-2005.html&quot;&gt;802.1ad&lt;/a&gt;, also known as QinQ, allows for the stacking of these VLAN tags, extending the VLAN capability into multiple network segments. This widely adopted Ethernet feature is also referred to as &quot;provider bridging&quot; and &quot;stacked VLANs&quot;.  In order to properly isolate and protect these virtual networks, many network devices and operating systems provide an L2 network filtering capability.   It is important to note that in modern computing environments , such as Cloud based virtualization and virtual networking, the L2 network capability is extended beyond the local area networks.  This can lead to exposure of this vulnerabilities in unintended ways to the larger Internet.&lt;/p&gt;
&lt;p&gt;The identified vulnerabilities allow an attacker to bypass the security controls by stacking encapsulating headers. This is done by stacking a combination of one or more VLAN 0 (priority tag) headers and &lt;a href=&quot;https://standards.ieee.org/standard/802_2-1985.html&quot;&gt;802.2&lt;/a&gt; LLC/SNAP headers.  An attacker can send these crafted network packets and exploit vulnerable devices by bypassing their inspection and filtering capabilities.   Some examples of bypassed L2 inspections include, but are not limited to, &lt;a href=&quot;https://blogs.nwkings.com/what-is-dai-dynamic-arp-inspection/&quot;&gt;Dynamic ARP inspection&lt;/a&gt;, &lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4861/&quot;&gt;IPv6 Neighbor Discovery&lt;/a&gt; (ND) protection, and &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6105&quot;&gt;IPv6 RA Guard&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27853&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard or ARP inspection can be bypassed using combinations of VLAN 0 headers and LLC/SNAP headers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27854&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard can be bypassed using combinations of VLAN 0 headers, LLC/SNAP headers in Ethernet to Wifi frame translation and the reverse Wifi to Ethernet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27861&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard can be bypassed using LLC/SNAP headers with invalid length (and optionally VLAN0 headers).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27862&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard can be bypassed using LLC/SNAP headers with invalid length and Ethernet to Wifi frame conversion (and optionally VLAN0 headers).&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can bypass security controls and deceive a locally connected target host to route traffic to arbitrary destinations.  Victim devices experience either a DoS (blackholing traffic) or MitM (observing the unencrypted traffic and maybe breaking encryption). &lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-updates&quot;&gt;Apply Updates&lt;/h4&gt;
&lt;p&gt;Install vendor-provided patches and updates to ensure malicious content is blocked or rejected by the security controls (such as RA Guard), thereby blocking router advertisements or other network configuration related advertisements that originate on host ports.&lt;/p&gt;
&lt;h4 id=&quot;inspect-and-block-router-advertisements&quot;&gt;Inspect and Block Router Advertisements&lt;/h4&gt;
&lt;p&gt;Utilize the interface security controls on your router or managed switch to perform DHCP snooping, IPv6 RA guard, IP source guard, and ARP/ND inspection. It is also recommended to only allow needed protocol on access ports (ARP/ICMP/IPv4/IPv6), some applications may have additional needs so be prepared to modify the allow list as needed. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Etienne Champetier for reporting this vulnerability. &lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Layer-2 (L2) network security controls provided by various devices, such as switches, routers, and operating systems, can be bypassed by stacking Ethernet protocol headers. An attacker can send crafted packets through vulnerable devices to cause Denial-of-service (DoS) or to perform a man-in-the-middle (MitM) attack against a target network.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;This vulnerability exists within Ethernet encapsulation protocols that allow for stacking of Virtual Local Area Network (VLAN) headers.  Network standards such as  &lt;a href=&quot;https://standards.ieee.org/standard/802_1Q-1998.html&quot;&gt;IEEE 802.1Q-1998&lt;/a&gt; and &lt;a href=&quot;https://standards.ieee.org/standard/802_3-2018.html&quot;&gt;IEEE 802.3&lt;/a&gt; define a system of tagging Ethernet frames that help isolate networks to provide virtual networking capability.  IEEE standard &lt;a href=&quot;https://standards.ieee.org/standard/802_1ad-2005.html&quot;&gt;802.1ad&lt;/a&gt;, also known as QinQ, allows for the stacking of these VLAN tags, extending the VLAN capability into multiple network segments. This widely adopted Ethernet feature is also referred to as &quot;provider bridging&quot; and &quot;stacked VLANs&quot;.  In order to properly isolate and protect these virtual networks, many network devices and operating systems provide an L2 network filtering capability.   It is important to note that in modern computing environments , such as Cloud based virtualization and virtual networking, the L2 network capability is extended beyond the local area networks.  This can lead to exposure of this vulnerabilities in unintended ways to the larger Internet.&lt;/p&gt;
&lt;p&gt;The identified vulnerabilities allow an attacker to bypass the security controls by stacking encapsulating headers. This is done by stacking a combination of one or more VLAN 0 (priority tag) headers and &lt;a href=&quot;https://standards.ieee.org/standard/802_2-1985.html&quot;&gt;802.2&lt;/a&gt; LLC/SNAP headers.  An attacker can send these crafted network packets and exploit vulnerable devices by bypassing their inspection and filtering capabilities.   Some examples of bypassed L2 inspections include, but are not limited to, &lt;a href=&quot;https://blogs.nwkings.com/what-is-dai-dynamic-arp-inspection/&quot;&gt;Dynamic ARP inspection&lt;/a&gt;, &lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4861/&quot;&gt;IPv6 Neighbor Discovery&lt;/a&gt; (ND) protection, and &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6105&quot;&gt;IPv6 RA Guard&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27853&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard or ARP inspection can be bypassed using combinations of VLAN 0 headers and LLC/SNAP headers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27854&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard can be bypassed using combinations of VLAN 0 headers, LLC/SNAP headers in Ethernet to Wifi frame translation and the reverse Wifi to Ethernet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27861&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard can be bypassed using LLC/SNAP headers with invalid length (and optionally VLAN0 headers).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CVE-2021-27862&lt;/strong&gt;
Layer 2 network filtering capabilities such as IPv6 RA guard can be bypassed using LLC/SNAP headers with invalid length and Ethernet to Wifi frame conversion (and optionally VLAN0 headers).&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can bypass security controls and deceive a locally connected target host to route traffic to arbitrary destinations.  Victim devices experience either a DoS (blackholing traffic) or MitM (observing the unencrypted traffic and maybe breaking encryption). &lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-updates&quot;&gt;Apply Updates&lt;/h4&gt;
&lt;p&gt;Install vendor-provided patches and updates to ensure malicious content is blocked or rejected by the security controls (such as RA Guard), thereby blocking router advertisements or other network configuration related advertisements that originate on host ports.&lt;/p&gt;
&lt;h4 id=&quot;inspect-and-block-router-advertisements&quot;&gt;Inspect and Block Router Advertisements&lt;/h4&gt;
&lt;p&gt;Utilize the interface security controls on your router or managed switch to perform DHCP snooping, IPv6 RA guard, IP source guard, and ARP/ND inspection. It is also recommended to only allow needed protocol on access ports (ARP/ICMP/IPv4/IPv6), some applications may have additional needs so be prepared to modify the allow list as needed. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Etienne Champetier for reporting this vulnerability. &lt;/p&gt;
&lt;p&gt;This document was written by Timur Snoke.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://blog.champtar.fr/VLAN0/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.champtar.fr/VLAN0/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://blog.champtar.fr/VLAN0_LLC_SNAP/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.champtar.fr/VLAN0_LLC_SNAP/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://lore.kernel.org/netdev/CAOdf3grDKBkYmt54ZAzG1zZ6zz1JXeoHSv67_Fc9-nRiY662mQ@mail.gmail.com/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://lore.kernel.org/netdev/CAOdf3grDKBkYmt54ZAzG1zZ6zz1JXeoHSv67_Fc9-nRiY662mQ@mail.gmail.com/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://bugs.launchpad.net/neutron/+bug/1884341&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bugs.launchpad.net/neutron/+bug/1884341&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://standards.ieee.org/standard/802_1Q-1998.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://standards.ieee.org/standard/802_1Q-1998.html&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://standards.ieee.org/standard/802_2-1985.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://standards.ieee.org/standard/802_2-1985.html&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://standards.ieee.org/standard/802_3-2018.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://standards.ieee.org/standard/802_3-2018.html&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://standards.ieee.org/standard/802_1ad-2005.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://standards.ieee.org/standard/802_1ad-2005.html&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://blogs.nwkings.com/what-is-dai-dynamic-arp-inspection/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blogs.nwkings.com/what-is-dai-dynamic-arp-inspection/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/rfc4861/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://datatracker.ietf.org/doc/rfc4861/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6105&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://datatracker.ietf.org/doc/html/rfc6105&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.ieee802.org/1/files/public/docs2022/q-rev-seaman-priority-in-tags-0122-v0.pdf &quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ieee802.org/1/files/public/docs2022/q-rev-seaman-priority-in-tags-0122-v0.pdf &lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.ieee802.org/1/files/public/docs2022/q-rev-seaman-vlan-tag-encoding-ppt-0122-v0.pdf&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ieee802.org/1/files/public/docs2022/q-rev-seaman-vlan-tag-encoding-ppt-0122-v0.pdf&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-27861&quot;&gt;CVE-2021-27861  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-27862&quot;&gt;CVE-2021-27862  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-27854&quot;&gt;CVE-2021-27854  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-27853&quot;&gt;CVE-2021-27853  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-09-27&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-09-27&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-11-07 12:52 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;7 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23855201 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#309662: Signed third party UEFI bootloaders are vulnerable to Secure Boot bypass</title><link href="https://kb.cert.org/vuls/id/309662" rel="alternate"><published>2022-08-11T19:04:56.804694+00:00</published><updated>2022-09-28T15:32:23.097278+00:00</updated><id>https://kb.cert.org/vuls/id/309662</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;A security feature bypass vulnerability exists in signed 3rd party UEFI  bootloaders that allows bypass of the UEFI Secure Boot feature.   An attacker who successfully exploits this vulnerability can bypass the UEFI Secure Boot feature and execute unsigned code during the boot process.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;UEFI firmware is software written by vendors in the &lt;a href=&quot;https://uefi.org/node/4046&quot;&gt;UEFI ecosystem&lt;/a&gt; to provide capabilities in the early start up phases of a computer.  &lt;a href=&quot;https://edk2-docs.gitbook.io/understanding-the-uefi-secure-boot-chain/secure_boot_chain_in_uefi/uefi_secure_boot&quot;&gt;Secure Boot&lt;/a&gt; is a UEFI standard that can be enabled and used to verify firmware and to protect a system against malicious code being loaded and executed early in the boot process, prior to the loading of the operating system.  &lt;/p&gt;
&lt;p&gt;Security researchers at &lt;a href=&quot;https://eclypsium.com&quot;&gt;Eclypsium&lt;/a&gt;  have found three specific UEFI  bootloaders that are signed and authenticated by Microsoft to be vulnerable to a security feature bypass vulnerability allowing an attacker to bypass Secure Boot when it is enabled. The vulnerable bootloaders can be tricked to bypass Secure Boot via a custom installer  (CVE-2022-34302) or an EFI shell (CVE-2022-34301 and CVE-2022-34303). As a vulnerable bootloader executes unsigned code prior to initialization of the the Operating System's (OS) boot process, it cannot be easily monitored by the OS or common Endpoint Detection and Response (EDR) tools.&lt;/p&gt;
&lt;p&gt;The following vendor-specific bootloaders were found vulnerable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inherently vulnerable bootloader to bypass Secure Boot&lt;ul&gt;
&lt;li&gt;New Horizon Datasys Inc (CVE-2022-34302) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UEFI Shell execution to bypass Secure Boot&lt;ul&gt;
&lt;li&gt;CryptoPro Secure Disk (CVE-2022-34301)&lt;/li&gt;
&lt;li&gt;Eurosoft (UK) Ltd (CVE-2022-34303)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can bypass a system's Secure Boot feature at startup and execute arbitrary code before the operating system (OS) loads.  Code executed in these early boot phases can provide persistence to an attacker, potentially loading arbitrary kernel extensions that survive both reboot and re-installation of an OS. It may also evade common OS-based and EDR security defenses.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-a-patch&quot;&gt;Apply a patch&lt;/h4&gt;
&lt;p&gt;Apply your vendor-provided security updates that address these vulnerabilities to block vulnerable firmware from bypassing Secure Boot.  Microsoft has provided details with their &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5012170-security-update-for-secure-boot-dbx-august-9-2022-72ff5eed-25b4-47c7-be28-c42bd211bb15&quot;&gt;KB5012170&lt;/a&gt; article released on August 9th 2022.  Note, these updates can be delivered from your OEM vendor or the OS vendor to install an updated &lt;a href=&quot;https://uefi.org/revocationlistfile&quot;&gt;Secure Boot Forbidden Signature Database (DBX) &lt;/a&gt;. &lt;/p&gt;
&lt;h4 id=&quot;enterprise-and-product-developers&quot;&gt;Enterprise and Product Developers&lt;/h4&gt;
&lt;p&gt;As DBX file changes can cause a system to become &lt;a href=&quot;https://www.zdnet.com/article/microsoft-pulls-security-update-after-reports-of-issues-affecting-some-pcs/&quot;&gt;unstable&lt;/a&gt;, Vendors are urged to verify the DBX updates do not cause the machine to be unusable.  Enterprises and Cloud Providers that manage large number of computers are also urged to do the required security updates and ensure DBX files are implemented reliably without any risk of boot failure.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Mickey Shkatov and Jesse Michael of Eclypsium who researched and reported these vulnerabilities.&lt;/p&gt;
&lt;p&gt;This document was written by Brad Runyon &amp;amp; Vijay Sarvepalli.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;A security feature bypass vulnerability exists in signed 3rd party UEFI  bootloaders that allows bypass of the UEFI Secure Boot feature.   An attacker who successfully exploits this vulnerability can bypass the UEFI Secure Boot feature and execute unsigned code during the boot process.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;UEFI firmware is software written by vendors in the &lt;a href=&quot;https://uefi.org/node/4046&quot;&gt;UEFI ecosystem&lt;/a&gt; to provide capabilities in the early start up phases of a computer.  &lt;a href=&quot;https://edk2-docs.gitbook.io/understanding-the-uefi-secure-boot-chain/secure_boot_chain_in_uefi/uefi_secure_boot&quot;&gt;Secure Boot&lt;/a&gt; is a UEFI standard that can be enabled and used to verify firmware and to protect a system against malicious code being loaded and executed early in the boot process, prior to the loading of the operating system.  &lt;/p&gt;
&lt;p&gt;Security researchers at &lt;a href=&quot;https://eclypsium.com&quot;&gt;Eclypsium&lt;/a&gt;  have found three specific UEFI  bootloaders that are signed and authenticated by Microsoft to be vulnerable to a security feature bypass vulnerability allowing an attacker to bypass Secure Boot when it is enabled. The vulnerable bootloaders can be tricked to bypass Secure Boot via a custom installer  (CVE-2022-34302) or an EFI shell (CVE-2022-34301 and CVE-2022-34303). As a vulnerable bootloader executes unsigned code prior to initialization of the the Operating System's (OS) boot process, it cannot be easily monitored by the OS or common Endpoint Detection and Response (EDR) tools.&lt;/p&gt;
&lt;p&gt;The following vendor-specific bootloaders were found vulnerable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inherently vulnerable bootloader to bypass Secure Boot&lt;ul&gt;
&lt;li&gt;New Horizon Datasys Inc (CVE-2022-34302) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UEFI Shell execution to bypass Secure Boot&lt;ul&gt;
&lt;li&gt;CryptoPro Secure Disk (CVE-2022-34301)&lt;/li&gt;
&lt;li&gt;Eurosoft (UK) Ltd (CVE-2022-34303)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker can bypass a system's Secure Boot feature at startup and execute arbitrary code before the operating system (OS) loads.  Code executed in these early boot phases can provide persistence to an attacker, potentially loading arbitrary kernel extensions that survive both reboot and re-installation of an OS. It may also evade common OS-based and EDR security defenses.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-a-patch&quot;&gt;Apply a patch&lt;/h4&gt;
&lt;p&gt;Apply your vendor-provided security updates that address these vulnerabilities to block vulnerable firmware from bypassing Secure Boot.  Microsoft has provided details with their &lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5012170-security-update-for-secure-boot-dbx-august-9-2022-72ff5eed-25b4-47c7-be28-c42bd211bb15&quot;&gt;KB5012170&lt;/a&gt; article released on August 9th 2022.  Note, these updates can be delivered from your OEM vendor or the OS vendor to install an updated &lt;a href=&quot;https://uefi.org/revocationlistfile&quot;&gt;Secure Boot Forbidden Signature Database (DBX) &lt;/a&gt;. &lt;/p&gt;
&lt;h4 id=&quot;enterprise-and-product-developers&quot;&gt;Enterprise and Product Developers&lt;/h4&gt;
&lt;p&gt;As DBX file changes can cause a system to become &lt;a href=&quot;https://www.zdnet.com/article/microsoft-pulls-security-update-after-reports-of-issues-affecting-some-pcs/&quot;&gt;unstable&lt;/a&gt;, Vendors are urged to verify the DBX updates do not cause the machine to be unusable.  Enterprises and Cloud Providers that manage large number of computers are also urged to do the required security updates and ensure DBX files are implemented reliably without any risk of boot failure.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Mickey Shkatov and Jesse Michael of Eclypsium who researched and reported these vulnerabilities.&lt;/p&gt;
&lt;p&gt;This document was written by Brad Runyon &amp;amp; Vijay Sarvepalli.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://eclypsium.com/2022/08/11/vulnerable-bootloaders-2022&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://eclypsium.com/2022/08/11/vulnerable-bootloaders-2022&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/en-us/topic/kb5012170-security-update-for-secure-boot-dbx-august-9-2022-72ff5eed-25b4-47c7-be28-c42bd211bb15&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://support.microsoft.com/en-us/topic/kb5012170-security-update-for-secure-boot-dbx-august-9-2022-72ff5eed-25b4-47c7-be28-c42bd211bb15&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://edk2-docs.gitbook.io/understanding-the-uefi-secure-boot-chain/secure_boot_chain_in_uefi/uefi_secure_boot&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://edk2-docs.gitbook.io/understanding-the-uefi-secure-boot-chain/secure_boot_chain_in_uefi/uefi_secure_boot&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows-hardware/design/device-experiences/oem-secure-boot&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/en-us/windows-hardware/design/device-experiences/oem-secure-boot&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://uefi.org/sites/default/files/resources/Insyde%20HPE%20NSA%20and%20UEFI%20Secure%20Boot%20Guidelines_FINAL%20v2.pdf&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://uefi.org/sites/default/files/resources/Insyde%20HPE%20NSA%20and%20UEFI%20Secure%20Boot%20Guidelines_FINAL%20v2.pdf&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://eclypsium.com/2022/07/26/firmware-security-realizations-part-1-secure-boot-and-dbx/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://eclypsium.com/2022/07/26/firmware-security-realizations-part-1-secure-boot-and-dbx/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.zdnet.com/article/microsoft-pulls-security-update-after-reports-of-issues-affecting-some-pcs/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zdnet.com/article/microsoft-pulls-security-update-after-reports-of-issues-affecting-some-pcs/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://uefi.org/revocationlistfile&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://uefi.org/revocationlistfile&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-34301&quot;&gt;CVE-2022-34301  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-34302&quot;&gt;CVE-2022-34302  &lt;/a&gt;
		
                
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-34303&quot;&gt;CVE-2022-34303  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-08-11&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-08-11&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-09-28 15:32 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;5 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23309662 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#495801: muhttpd versions 1.1.5 and earlier are vulnerable to path traversal</title><link href="https://kb.cert.org/vuls/id/495801" rel="alternate"><published>2022-08-04T18:22:26.080953+00:00</published><updated>2022-08-05T20:02:52.605648+00:00</updated><id>https://kb.cert.org/vuls/id/495801</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Versions 1.1.5 and earlier of the mu HTTP deamon (muhttpd) are vulnerable to path traversal via crafted HTTP request from an unauthenticated user. This vulnerability can allow unauthenticated users to download arbitrary files and collect private information on the target device.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The muhttpd, hosted at &lt;a href=&quot;https://sourceforge.net/projects/muhttpd/&quot;&gt;SourceForge&lt;/a&gt; as an opensource project, is a lightweight webserver.  This software is commonly used in customer premise equipment (CPE), such as home routers and small office routers, to provide device management capability through a web interface. The muhttpd supports the use of &lt;a href=&quot;https://en.wikipedia.org/wiki/Common_Gateway_Interface&quot;&gt;CGI&lt;/a&gt; scripts that enable remote management of CPE devices.&lt;/p&gt;
&lt;p&gt;A path traversal vulnerability in muhttpd (version 1.1.5 and earlier) could allow an unauthenticated attacker to read arbitrary content on the target device, including usernames and passwords, Wireless SSID configurations, ISP connection information, and private keys.  If remote management is enabled on a device running vulnerable version of muhttpd, this attack is possible from a remote network. Even in cases with restricted Local Area Network access, a vulnerable version of muhttpd can be accessed using other attack methods such as &lt;a href=&quot;https://en.wikipedia.org/wiki/DNS_rebinding/&quot;&gt;DNS Rebinding&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An unauthenticated attacker can use crafted HTTP request to download arbitrary files or gather sensitive information from a vulnerable target device. In cases where remote management is enabled on a vulnerable device, a remote unauthenticated attacker can perform these attacks.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-updates&quot;&gt;Apply Updates&lt;/h4&gt;
&lt;p&gt;Update to the latest version of firmware/software provided by your vendor; see &lt;a href=&quot;#vendor-information&quot;&gt;Vendor Information&lt;/a&gt; section for details.  Downstream developers of embedded systems should update muhttpd software (to version 1.1.7 or later) from &lt;a href=&quot;https://sourceforge.net/p/muhttpd/code/ci/main/tree/&quot;&gt;SourceForget git repository&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;disable-remote-management&quot;&gt;Disable remote management&lt;/h4&gt;
&lt;p&gt;Disabling remote management access, which thereby limits access strictly to local area network, can minimize the exposure introduced by the vulnerable software.  Use access control to limit remote management if remote management is desired from specific IP network locations. Additional mitigations are described in the &lt;a href=&quot;https://derekabdine.com/blog/2022-arris-advisory&quot;&gt;security researcher's advisory&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Derek Abdine for reporting this vulnerability. &lt;/p&gt;
&lt;p&gt;This document was written by Brad Runyon, Vijay Sarvepalli, and Eric Hatleback.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Versions 1.1.5 and earlier of the mu HTTP deamon (muhttpd) are vulnerable to path traversal via crafted HTTP request from an unauthenticated user. This vulnerability can allow unauthenticated users to download arbitrary files and collect private information on the target device.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The muhttpd, hosted at &lt;a href=&quot;https://sourceforge.net/projects/muhttpd/&quot;&gt;SourceForge&lt;/a&gt; as an opensource project, is a lightweight webserver.  This software is commonly used in customer premise equipment (CPE), such as home routers and small office routers, to provide device management capability through a web interface. The muhttpd supports the use of &lt;a href=&quot;https://en.wikipedia.org/wiki/Common_Gateway_Interface&quot;&gt;CGI&lt;/a&gt; scripts that enable remote management of CPE devices.&lt;/p&gt;
&lt;p&gt;A path traversal vulnerability in muhttpd (version 1.1.5 and earlier) could allow an unauthenticated attacker to read arbitrary content on the target device, including usernames and passwords, Wireless SSID configurations, ISP connection information, and private keys.  If remote management is enabled on a device running vulnerable version of muhttpd, this attack is possible from a remote network. Even in cases with restricted Local Area Network access, a vulnerable version of muhttpd can be accessed using other attack methods such as &lt;a href=&quot;https://en.wikipedia.org/wiki/DNS_rebinding/&quot;&gt;DNS Rebinding&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An unauthenticated attacker can use crafted HTTP request to download arbitrary files or gather sensitive information from a vulnerable target device. In cases where remote management is enabled on a vulnerable device, a remote unauthenticated attacker can perform these attacks.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-updates&quot;&gt;Apply Updates&lt;/h4&gt;
&lt;p&gt;Update to the latest version of firmware/software provided by your vendor; see &lt;a href=&quot;#vendor-information&quot;&gt;Vendor Information&lt;/a&gt; section for details.  Downstream developers of embedded systems should update muhttpd software (to version 1.1.7 or later) from &lt;a href=&quot;https://sourceforge.net/p/muhttpd/code/ci/main/tree/&quot;&gt;SourceForget git repository&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;disable-remote-management&quot;&gt;Disable remote management&lt;/h4&gt;
&lt;p&gt;Disabling remote management access, which thereby limits access strictly to local area network, can minimize the exposure introduced by the vulnerable software.  Use access control to limit remote management if remote management is desired from specific IP network locations. Additional mitigations are described in the &lt;a href=&quot;https://derekabdine.com/blog/2022-arris-advisory&quot;&gt;security researcher's advisory&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Derek Abdine for reporting this vulnerability. &lt;/p&gt;
&lt;p&gt;This document was written by Brad Runyon, Vijay Sarvepalli, and Eric Hatleback.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://derekabdine.com/blog/2022-arris-advisory&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://derekabdine.com/blog/2022-arris-advisory&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://blog.malwarebytes.com/exploits-and-vulnerabilities/2022/08/millions-of-arris-routers-are-vulnerable-to-path-traversal-attacks&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.malwarebytes.com/exploits-and-vulnerabilities/2022/08/millions-of-arris-routers-are-vulnerable-to-path-traversal-attacks&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.cisa.gov/uscert/ncas/tips/ST15-002&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cisa.gov/uscert/ncas/tips/ST15-002&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-31793&quot;&gt;CVE-2022-31793  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-08-04&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-08-04&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-08-05 20:02 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23495801 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#142546: SMA Technologies OpCon UNIX agent adds the same SSH key to all installations</title><link href="https://kb.cert.org/vuls/id/142546" rel="alternate"><published>2022-06-21T16:38:18.496148+00:00</published><updated>2022-06-21T16:38:18.075208+00:00</updated><id>https://kb.cert.org/vuls/id/142546</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;SMA Technologies OpCon UNIX agent adds the same SSH key on every installation and subsequent updates. An attacker with access to the private key can gain root access on affected systems.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;During OpCon UNIX agent installation and updates, an SSH public key is added to the root account's &lt;code&gt;authorized_keys&lt;/code&gt; file. The corresponding private key titled &lt;code&gt;sma_id_rsa&lt;/code&gt; is included with the installation files and is not encrypted with a passphrase. Removal of the OpCon software does not remove the entry from the &lt;code&gt;authorized_keys&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker with access to the private key included with the OpCon UNIX agent installation files can gain SSH access as root on affected systems.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;remove-private-key&quot;&gt;Remove private key&lt;/h4&gt;
&lt;p&gt;SMA Technologies has &lt;a href=&quot;https://smatechnologies.hosted-by-files.com/SMAUnixLSAMVulnerabilityFix/&quot;&gt;provided a tool&lt;/a&gt; to address the issue.&lt;/p&gt;
&lt;p&gt;Another option is to manually remove the SSH key entry from root's &lt;code&gt;authorized_keys&lt;/code&gt; file. The key can be identified by its fingerprints:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SHA256:qbgTVNkLGI5G7erZqDhte63Vpw+9g88jYCxMuh8cLeg&lt;/code&gt;
&lt;code&gt;MD5:f1:6c:c9:ba:21:66:ce:7c:5a:55:e2:4d:07:72:cc:31&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Depending on the shell and operating system there are &lt;a href=&quot;https://serverfault.com/questions/413231/how-to-get-all-fingerprints-for-ssh-authorized-keys2-file&quot;&gt;various ways&lt;/a&gt; to generate fingerprints for public keys listed in &lt;code&gt;authorized_keys&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;upgrade&quot;&gt;Upgrade&lt;/h4&gt;
&lt;p&gt;SMA Technologies &lt;a href=&quot;https://kb.cert.org/vuls/id/142546#SMA%20Technlogies&quot;&gt;reports&lt;/a&gt; that &quot;We have updated our UNIX agent version 21.2 package to no longer include (and also remove) any existing vulnerability.&quot;&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Nick Holland at Holland Consulting for researching and reporting this vulnerability.&lt;/p&gt;
&lt;p&gt;This document was written by Kevin Stephens.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;SMA Technologies OpCon UNIX agent adds the same SSH key on every installation and subsequent updates. An attacker with access to the private key can gain root access on affected systems.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;During OpCon UNIX agent installation and updates, an SSH public key is added to the root account's &lt;code&gt;authorized_keys&lt;/code&gt; file. The corresponding private key titled &lt;code&gt;sma_id_rsa&lt;/code&gt; is included with the installation files and is not encrypted with a passphrase. Removal of the OpCon software does not remove the entry from the &lt;code&gt;authorized_keys&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker with access to the private key included with the OpCon UNIX agent installation files can gain SSH access as root on affected systems.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;remove-private-key&quot;&gt;Remove private key&lt;/h4&gt;
&lt;p&gt;SMA Technologies has &lt;a href=&quot;https://smatechnologies.hosted-by-files.com/SMAUnixLSAMVulnerabilityFix/&quot;&gt;provided a tool&lt;/a&gt; to address the issue.&lt;/p&gt;
&lt;p&gt;Another option is to manually remove the SSH key entry from root's &lt;code&gt;authorized_keys&lt;/code&gt; file. The key can be identified by its fingerprints:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SHA256:qbgTVNkLGI5G7erZqDhte63Vpw+9g88jYCxMuh8cLeg&lt;/code&gt;
&lt;code&gt;MD5:f1:6c:c9:ba:21:66:ce:7c:5a:55:e2:4d:07:72:cc:31&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Depending on the shell and operating system there are &lt;a href=&quot;https://serverfault.com/questions/413231/how-to-get-all-fingerprints-for-ssh-authorized-keys2-file&quot;&gt;various ways&lt;/a&gt; to generate fingerprints for public keys listed in &lt;code&gt;authorized_keys&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;upgrade&quot;&gt;Upgrade&lt;/h4&gt;
&lt;p&gt;SMA Technologies &lt;a href=&quot;https://kb.cert.org/vuls/id/142546#SMA%20Technlogies&quot;&gt;reports&lt;/a&gt; that &quot;We have updated our UNIX agent version 21.2 package to no longer include (and also remove) any existing vulnerability.&quot;&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Nick Holland at Holland Consulting for researching and reporting this vulnerability.&lt;/p&gt;
&lt;p&gt;This document was written by Kevin Stephens.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://smatechnologies.hosted-by-files.com/SMAUnixLSAMVulnerabilityFix/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://smatechnologies.hosted-by-files.com/SMAUnixLSAMVulnerabilityFix/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://serverfault.com/questions/413231/how-to-get-all-fingerprints-for-ssh-authorized-keys2-file&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://serverfault.com/questions/413231/how-to-get-all-fingerprints-for-ssh-authorized-keys2-file&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-2154&quot;&gt;CVE-2022-2154  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-06-21&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-06-21&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-06-21 16:38 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;1 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23142546 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#473698: uClibc, uClibc-ng libraries have monotonically increasing DNS transaction ID</title><link href="https://kb.cert.org/vuls/id/473698" rel="alternate"><published>2022-05-09T18:58:24.747763+00:00</published><updated>2022-08-29T12:19:11.738084+00:00</updated><id>https://kb.cert.org/vuls/id/473698</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The uClibc and uClibc-ng libraries, prior to uClibc-ng 1.0.41, are vulnerable to DNS cache poisoning due to the use of predicatble DNS transaction IDs when making DNS requests.  This vulnerability can allow an attacker to perform DNS cache poisoning attacks against a vulnerable environment.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The uClibc and the Uclibc-ng software are lightweight C standard libraries intended for use in embedded systems and mobile devices. The &lt;a href=&quot;https://uclibc.org/&quot;&gt;uClibc&lt;/a&gt; library has not been updated since May of 2012.  The newer  &lt;a href=&quot;https://uclibc-ng.org/&quot;&gt;uClibc-ng &lt;/a&gt;is the currently maintained fork of uClibc, as announced on the OpenWRT mailing list in July 2014. &lt;/p&gt;
&lt;p&gt;Researchers at the Nozomi Networks Security Research Team discovered that all existing versions of uClibc and uClibc-ng libraries are vulnerable to DNS cache poisoning.  These libraries do not employ any randomization in the DNS Transaction ID (DNS TXID) field when creating a new DNS request.  This can allow an attacker to send maliciously crafted DNS packets to corrupt the DNS cache with invalid entries and redirect users to arbitrary sites.  As uClibc and uClibc-ng are used in devices such as home routers and firewalls, an attacker can perform attacks against multiple users in a shared network environment that relies on DNS responses from the vulnerable device. &lt;/p&gt;
&lt;p&gt;The DNS cache poisoning scenarios and defenses are discussed in &lt;a href=&quot;https://tools.ietf.org/html/rfc5452&quot;&gt;IETF RFC5452&lt;/a&gt;.   &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;The lack of DNS response validation can allow an attacker to use unsolicited DNS responses to poison the DNS cache and redirect users to malicious sites.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-a-patch&quot;&gt;Apply a patch&lt;/h4&gt;
&lt;p&gt;If your vendor has developed a patched version of uClibc or uClibc-ng to address this issue, apply the updates provided by your vendor. &lt;a href=&quot;https://mailman.openadk.org/mailman3/hyperkitty/list/devel@uclibc-ng.org/thread/KZD3HQ3MUT63JC3STZ6IH7E7RGQSOV75/&quot;&gt;uClibc-ng was updated to 1.0.41&lt;/a&gt; on 05/20/2022.&lt;/p&gt;
&lt;h4 id=&quot;product-developers&quot;&gt;Product Developers&lt;/h4&gt;
&lt;p&gt;If you have a forked or customized version of uClibc or uClibc-ng, develop or adopt a patch to ensure the &lt;code&gt;dns_lookup&lt;/code&gt; function provides adequate randomization of DNS TXID's while making DNS requests. Review and consider applying the patch has been made available in &lt;a href=&quot;https://patchwork.ozlabs.org/project/uclibc-ng/list/?state=new&quot;&gt;patchwork repository&lt;/a&gt; of uClibc-ng with VU#638879 tag.&lt;/p&gt;
&lt;h4 id=&quot;follow-security-best-practices&quot;&gt;Follow security best practices&lt;/h4&gt;
&lt;p&gt;Consider the following security best-practices to protect DNS infrastructure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prevent direct exposure of IoT devices and lightweight devices over the Internet to minimize attacks against a caching DNS server.&lt;/li&gt;
&lt;li&gt;Provide secure DNS recursion service with features such as DNSSEC validation and the interim &lt;a href=&quot;https://astrolavos.gatech.edu/articles/increased_dns_resistance.pdf&quot;&gt;0x20-bit encoding&lt;/a&gt; as part of enterprise DNS recursion services where applicable.&lt;/li&gt;
&lt;li&gt;Implement a &lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_by_default&quot;&gt;Secure By Default &lt;/a&gt; configuration suitable for your operating environment (e.g., disable caching on embedded IoT devices when an upstream caching resolver is available).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the Nozomi Networks Security Research Team for this &lt;a href=&quot;https://www.nozominetworks.com/blog/nozomi-networks-discovers-unpatched-dns-bug-in-popular-c-standard-library-putting-iot-at-risk/&quot;&gt;report&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli and Timur Snoke.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The uClibc and uClibc-ng libraries, prior to uClibc-ng 1.0.41, are vulnerable to DNS cache poisoning due to the use of predicatble DNS transaction IDs when making DNS requests.  This vulnerability can allow an attacker to perform DNS cache poisoning attacks against a vulnerable environment.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The uClibc and the Uclibc-ng software are lightweight C standard libraries intended for use in embedded systems and mobile devices. The &lt;a href=&quot;https://uclibc.org/&quot;&gt;uClibc&lt;/a&gt; library has not been updated since May of 2012.  The newer  &lt;a href=&quot;https://uclibc-ng.org/&quot;&gt;uClibc-ng &lt;/a&gt;is the currently maintained fork of uClibc, as announced on the OpenWRT mailing list in July 2014. &lt;/p&gt;
&lt;p&gt;Researchers at the Nozomi Networks Security Research Team discovered that all existing versions of uClibc and uClibc-ng libraries are vulnerable to DNS cache poisoning.  These libraries do not employ any randomization in the DNS Transaction ID (DNS TXID) field when creating a new DNS request.  This can allow an attacker to send maliciously crafted DNS packets to corrupt the DNS cache with invalid entries and redirect users to arbitrary sites.  As uClibc and uClibc-ng are used in devices such as home routers and firewalls, an attacker can perform attacks against multiple users in a shared network environment that relies on DNS responses from the vulnerable device. &lt;/p&gt;
&lt;p&gt;The DNS cache poisoning scenarios and defenses are discussed in &lt;a href=&quot;https://tools.ietf.org/html/rfc5452&quot;&gt;IETF RFC5452&lt;/a&gt;.   &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;The lack of DNS response validation can allow an attacker to use unsolicited DNS responses to poison the DNS cache and redirect users to malicious sites.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-a-patch&quot;&gt;Apply a patch&lt;/h4&gt;
&lt;p&gt;If your vendor has developed a patched version of uClibc or uClibc-ng to address this issue, apply the updates provided by your vendor. &lt;a href=&quot;https://mailman.openadk.org/mailman3/hyperkitty/list/devel@uclibc-ng.org/thread/KZD3HQ3MUT63JC3STZ6IH7E7RGQSOV75/&quot;&gt;uClibc-ng was updated to 1.0.41&lt;/a&gt; on 05/20/2022.&lt;/p&gt;
&lt;h4 id=&quot;product-developers&quot;&gt;Product Developers&lt;/h4&gt;
&lt;p&gt;If you have a forked or customized version of uClibc or uClibc-ng, develop or adopt a patch to ensure the &lt;code&gt;dns_lookup&lt;/code&gt; function provides adequate randomization of DNS TXID's while making DNS requests. Review and consider applying the patch has been made available in &lt;a href=&quot;https://patchwork.ozlabs.org/project/uclibc-ng/list/?state=new&quot;&gt;patchwork repository&lt;/a&gt; of uClibc-ng with VU#638879 tag.&lt;/p&gt;
&lt;h4 id=&quot;follow-security-best-practices&quot;&gt;Follow security best practices&lt;/h4&gt;
&lt;p&gt;Consider the following security best-practices to protect DNS infrastructure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prevent direct exposure of IoT devices and lightweight devices over the Internet to minimize attacks against a caching DNS server.&lt;/li&gt;
&lt;li&gt;Provide secure DNS recursion service with features such as DNSSEC validation and the interim &lt;a href=&quot;https://astrolavos.gatech.edu/articles/increased_dns_resistance.pdf&quot;&gt;0x20-bit encoding&lt;/a&gt; as part of enterprise DNS recursion services where applicable.&lt;/li&gt;
&lt;li&gt;Implement a &lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_by_default&quot;&gt;Secure By Default &lt;/a&gt; configuration suitable for your operating environment (e.g., disable caching on embedded IoT devices when an upstream caching resolver is available).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to the Nozomi Networks Security Research Team for this &lt;a href=&quot;https://www.nozominetworks.com/blog/nozomi-networks-discovers-unpatched-dns-bug-in-popular-c-standard-library-putting-iot-at-risk/&quot;&gt;report&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This document was written by Vijay Sarvepalli and Timur Snoke.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://uclibc.org/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://uclibc.org/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://uclibc-ng.org/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://uclibc-ng.org/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln/detail/CVE-2022-30295&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nvd.nist.gov/vuln/detail/CVE-2022-30295&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5452&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://tools.ietf.org/html/rfc5452&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://astrolavos.gatech.edu/articles/increased_dns_resistance.pdf&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://astrolavos.gatech.edu/articles/increased_dns_resistance.pdf&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_by_default&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://en.wikipedia.org/wiki/Secure_by_default&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.nozominetworks.com/blog/nozomi-networks-discovers-unpatched-dns-bug-in-popular-c-standard-library-putting-iot-at-risk/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.nozominetworks.com/blog/nozomi-networks-discovers-unpatched-dns-bug-in-popular-c-standard-library-putting-iot-at-risk/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.kb.cert.org/vuls/id/800113&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.kb.cert.org/vuls/id/800113&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.kb.cert.org/vuls/id/210620 &quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.kb.cert.org/vuls/id/210620 &lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.kb.cert.org/vuls/id/484649&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.kb.cert.org/vuls/id/484649&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.kb.cert.org/vuls/id/252735 &quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.kb.cert.org/vuls/id/252735 &lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.kb.cert.org/vuls/id/927905&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.kb.cert.org/vuls/id/927905&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://patchwork.ozlabs.org/project/uclibc-ng/list/?state=new&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://patchwork.ozlabs.org/project/uclibc-ng/list/?state=new&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://mailman.openadk.org/mailman3/hyperkitty/list/devel@uclibc-ng.org/thread/KZD3HQ3MUT63JC3STZ6IH7E7RGQSOV75/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mailman.openadk.org/mailman3/hyperkitty/list/devel@uclibc-ng.org/thread/KZD3HQ3MUT63JC3STZ6IH7E7RGQSOV75/&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-30295&quot;&gt;CVE-2022-30295  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-05-02&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-05-09&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-08-29 12:19 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;13 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23473698 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#730007: Tychon is vulnerable to privilege escalation due to OPENSSLDIR location</title><link href="https://kb.cert.org/vuls/id/730007" rel="alternate"><published>2022-04-28T13:07:20.607869+00:00</published><updated>2022-04-28T13:07:20.456849+00:00</updated><id>https://kb.cert.org/vuls/id/730007</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Tychon contains a privilege escalation vulnerability due to the use of an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable that specifies a location where an unprivileged Windows user may be able to place files.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Tychon includes an OpenSSL component that specifies an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable as a subdirectory that my be controllable by an unprivileged user on Windows. Tychon contains a privileged service that uses this OpenSSL component. A user who can place a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; file at an appropriate path may be able to achieve arbitrary code execution with SYSTEM privileges.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; in a location used by Tychon, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable Tychon software installed.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-an-update&quot;&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in Tychon 1.7.857.82&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Tychon contains a privilege escalation vulnerability due to the use of an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable that specifies a location where an unprivileged Windows user may be able to place files.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Tychon includes an OpenSSL component that specifies an &lt;code&gt;OPENSSLDIR&lt;/code&gt; variable as a subdirectory that my be controllable by an unprivileged user on Windows. Tychon contains a privileged service that uses this OpenSSL component. A user who can place a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; file at an appropriate path may be able to achieve arbitrary code execution with SYSTEM privileges.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a specially-crafted &lt;code&gt;openssl.cnf&lt;/code&gt; in a location used by Tychon, an unprivileged user may be able to execute arbitrary code with SYSTEM privileges on a Windows system with the vulnerable Tychon software installed.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-an-update&quot;&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in Tychon 1.7.857.82&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-26872&quot;&gt;CVE-2022-26872  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-04-28&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-04-28&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-04-28 13:07 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;1 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23730007 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#411271: Qt allows for privilege escalation due to hard-coding of qt_prfxpath value</title><link href="https://kb.cert.org/vuls/id/411271" rel="alternate"><published>2022-04-28T13:03:12.520093+00:00</published><updated>2022-04-29T16:35:56.269480+00:00</updated><id>https://kb.cert.org/vuls/id/411271</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Prior to version 5.14, Qt hard-codes the &lt;code&gt;qt_prfxpath&lt;/code&gt; value to a fixed value, which may lead to privilege escalation vulnerabilities in Windows software that uses Qt.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Prior to version 5.14, Qt hard-codes the &lt;code&gt;qt_prfxpath&lt;/code&gt; value to a value that reflects the path where Qt exists on the system that was used to build Qt. For example, it may refer to a specific subdirectory within &lt;code&gt;C:\Qt\&lt;/code&gt;, which is the default installation location for Qt on Windows. If software that is built with Qt runs with privileges on a Windows system, this may allow for privilege escalation due to the fact that Windows by default allows unprivileged users to create subdirectories off of the root &lt;code&gt;C:\&lt;/code&gt; drive location.&lt;/p&gt;
&lt;p&gt;In 2015, a &lt;a href=&quot;https://codereview.qt-project.org/gitweb?p=qt%2Fqttools.git&amp;amp;a=commit&amp;amp;h=c2952ff8df1e18fe0120d8b29901b0b794afccc7&quot;&gt;patch&lt;/a&gt; was made to &lt;a href=&quot;https://doc.qt.io/qt-5/windows-deployment.html&quot;&gt;windeployqt&lt;/a&gt; to strip out any existing &lt;code&gt;qt_prfxpath&lt;/code&gt; value from &lt;code&gt;Qt5Core.dll&lt;/code&gt;. If Windows software that uses Qt prior to version 5.14 is not properly packaged using windeployqt, then it may be vulnerable to privilege escalation.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a file in an appropriate location on a Windows system, an unprivileged attacker may be able to execute arbitrary code with the privileges of the software that uses Qt.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-an-update&quot;&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in Qt 5.14. Starting with this version, Qt no longer hard-codes the &lt;code&gt;qt_prfxpath&lt;/code&gt; value in &lt;code&gt;Qt5Core.dll&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;run-windeployqt-to-prepare-windows-qt-software-for-deployment&quot;&gt;Run windeployqt to prepare Windows Qt software for deployment&lt;/h4&gt;
&lt;p&gt;The windeployqt utility will replace the &lt;code&gt;qt_prfxpath&lt;/code&gt; value in the Qt core DLL with the value of &lt;code&gt;.&lt;/code&gt;, which helps prevent this path from being used to achieve privilege escalation.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Prior to version 5.14, Qt hard-codes the &lt;code&gt;qt_prfxpath&lt;/code&gt; value to a fixed value, which may lead to privilege escalation vulnerabilities in Windows software that uses Qt.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;Prior to version 5.14, Qt hard-codes the &lt;code&gt;qt_prfxpath&lt;/code&gt; value to a value that reflects the path where Qt exists on the system that was used to build Qt. For example, it may refer to a specific subdirectory within &lt;code&gt;C:\Qt\&lt;/code&gt;, which is the default installation location for Qt on Windows. If software that is built with Qt runs with privileges on a Windows system, this may allow for privilege escalation due to the fact that Windows by default allows unprivileged users to create subdirectories off of the root &lt;code&gt;C:\&lt;/code&gt; drive location.&lt;/p&gt;
&lt;p&gt;In 2015, a &lt;a href=&quot;https://codereview.qt-project.org/gitweb?p=qt%2Fqttools.git&amp;amp;a=commit&amp;amp;h=c2952ff8df1e18fe0120d8b29901b0b794afccc7&quot;&gt;patch&lt;/a&gt; was made to &lt;a href=&quot;https://doc.qt.io/qt-5/windows-deployment.html&quot;&gt;windeployqt&lt;/a&gt; to strip out any existing &lt;code&gt;qt_prfxpath&lt;/code&gt; value from &lt;code&gt;Qt5Core.dll&lt;/code&gt;. If Windows software that uses Qt prior to version 5.14 is not properly packaged using windeployqt, then it may be vulnerable to privilege escalation.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;By placing a file in an appropriate location on a Windows system, an unprivileged attacker may be able to execute arbitrary code with the privileges of the software that uses Qt.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-an-update&quot;&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in Qt 5.14. Starting with this version, Qt no longer hard-codes the &lt;code&gt;qt_prfxpath&lt;/code&gt; value in &lt;code&gt;Qt5Core.dll&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;run-windeployqt-to-prepare-windows-qt-software-for-deployment&quot;&gt;Run windeployqt to prepare Windows Qt software for deployment&lt;/h4&gt;
&lt;p&gt;The windeployqt utility will replace the &lt;code&gt;qt_prfxpath&lt;/code&gt; value in the Qt core DLL with the value of &lt;code&gt;.&lt;/code&gt;, which helps prevent this path from being used to achieve privilege escalation.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This document was written by Will Dormann.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://codereview.qt-project.org/gitweb?p=qt%2Fqttools.git&amp;amp;a=commit&amp;amp;h=c2952ff8df1e18fe0120d8b29901b0b794afccc7&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://codereview.qt-project.org/gitweb?p=qt%2Fqttools.git&amp;amp;a=commit&amp;amp;h=c2952ff8df1e18fe0120d8b29901b0b794afccc7&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://bugreports.qt.io/browse/QTBUG-15234&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://bugreports.qt.io/browse/QTBUG-15234&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://doc.qt.io/qt-5/windows-deployment.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://doc.qt.io/qt-5/windows-deployment.html&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-26873&quot;&gt;CVE-2022-26873  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2010-10-10&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-04-28&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-04-29 16:35 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;4 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23411271 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#970766: Spring Framework insecurely handles PropertyDescriptor objects with data binding</title><link href="https://kb.cert.org/vuls/id/970766" rel="alternate"><published>2022-03-31T13:52:51.505752+00:00</published><updated>2022-05-19T16:09:54.147761+00:00</updated><id>https://kb.cert.org/vuls/id/970766</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The Spring Framework insecurely handles PropertyDescriptor objects, which may allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable system.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://spring.io/&quot;&gt;Spring Framework&lt;/a&gt; is a Java framework that can be used to create applications such as web applications. Due to improper handling of PropertyDescriptor objects used with data binding, Java applications written with Spring may allow for the execution of arbitrary code.&lt;/p&gt;
&lt;p&gt;Exploit code that targets affected WAR-packaged Java code for tomcat servers is publicly available.&lt;/p&gt;
&lt;p&gt;NCSC-NL has a &lt;a href=&quot;https://github.com/NCSC-NL/spring4shell/blob/main/software/README.md&quot;&gt;list of products and their statuses&lt;/a&gt; with respect to this vulnerability.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;By providing crafted data to a Spring Java application, such as a web application, an attacker may be able to execute arbitrary code with the privileges of the affected application. Depending on the application, exploitation may be possible by a remote attacker without requiring authentication.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-an-update&quot;&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in Spring Framework 5.3.18 and 5.2.20. Please see the &lt;a href=&quot;https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement&quot;&gt;Spring Framework RCE Early Announcement&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This issue was publicly disclosed by heige.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The Spring Framework insecurely handles PropertyDescriptor objects, which may allow a remote, unauthenticated attacker to execute arbitrary code on a vulnerable system.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://spring.io/&quot;&gt;Spring Framework&lt;/a&gt; is a Java framework that can be used to create applications such as web applications. Due to improper handling of PropertyDescriptor objects used with data binding, Java applications written with Spring may allow for the execution of arbitrary code.&lt;/p&gt;
&lt;p&gt;Exploit code that targets affected WAR-packaged Java code for tomcat servers is publicly available.&lt;/p&gt;
&lt;p&gt;NCSC-NL has a &lt;a href=&quot;https://github.com/NCSC-NL/spring4shell/blob/main/software/README.md&quot;&gt;list of products and their statuses&lt;/a&gt; with respect to this vulnerability.&lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;By providing crafted data to a Spring Java application, such as a web application, an attacker may be able to execute arbitrary code with the privileges of the affected application. Depending on the application, exploitation may be possible by a remote attacker without requiring authentication.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;h4 id=&quot;apply-an-update&quot;&gt;Apply an update&lt;/h4&gt;
&lt;p&gt;This issue is addressed in Spring Framework 5.3.18 and 5.2.20. Please see the &lt;a href=&quot;https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement&quot;&gt;Spring Framework RCE Early Announcement&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;This issue was publicly disclosed by heige.&lt;/p&gt;
&lt;p&gt;This document was written by Will Dormann&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://tanzu.vmware.com/security/cve-2022-22965&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://tanzu.vmware.com/security/cve-2022-22965&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://github.com/NCSC-NL/spring4shell/blob/main/software/README.md&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/NCSC-NL/spring4shell/blob/main/software/README.md&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-22965&quot;&gt;CVE-2022-22965  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-03-30&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-03-31&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-05-19 16:09 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;22 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23970766 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#383864: Visual Voice Mail (VVM) services transmit unencrypted credentials via SMS</title><link href="https://kb.cert.org/vuls/id/383864" rel="alternate"><published>2022-02-24T19:51:20.581449+00:00</published><updated>2022-02-24T19:51:20.333649+00:00</updated><id>https://kb.cert.org/vuls/id/383864</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Visual Voice Mail (VVM) services transmit unencrypted credentials via SMS. An attacker with the ability to read SMS messages can obtain VVM IMAP credentials and gain access to VVM data.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;VVM is specified by &lt;a href=&quot;https://www.gsma.com/newsroom/wp-content/uploads/2012/07/OMTP_VVM_Specification_1_3.pdf&quot;&gt;Open Mobile Terminal Platform-OMPT&lt;/a&gt; and is implemented with SMS and IMAP (and other protocols). VVM IMAP credentials are sent unencrypted in SMS messages. From &lt;a href=&quot;https://gitlab.com/kop316/vvm-disclosure&quot;&gt;vvm-disclosure&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When a client sends any sort of STATUS SMS (activate, deactivate, status), the carrier will respond with all credentials needed to log into the IMAP server (i.e. username, password, server host-name).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From section 2.1.1.2 AUTHENTICATE of the &lt;a href=&quot;https://www.gsma.com/newsroom/wp-content/uploads/2012/07/OMTP_VVM_Specification_1_3.pdf&quot;&gt;OMTP VISUAL VOICEMAIL INTERFACE SPECIFICATION v1.3&lt;/a&gt;: &quot;The IMAP4 password is sent in the STATUS SMS message.&quot;&lt;/p&gt;
&lt;p&gt;To intercept an SMS message, an attacker would need, for example:
*   temporary physical access to the SIM card,
*   to operate a spoofed a base station (cell tower), or
*   to convince a user to install a malicious application that has SMS access.&lt;/p&gt;
&lt;p&gt;VVM IMAP services may be widely accessible over the internet or carrier networks.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&quot;https://gitlab.com/kop316/vvm-disclosure&quot;&gt;vvm-disclosure&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no indication on to a victim that someone else has access to their VVM. Android leaves their VVMs on the IMAP server until the client deletes it, so any VVMs on the client are accessible to a malicious actor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker with the ability to read SMS messages can obtain VVM IMAP credentials and gain access to VVM data.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;We are not aware of a practical solution to this vulnerability.&lt;/p&gt;
&lt;p&gt;Take general precautions against SMS interception.&lt;/p&gt;
&lt;p&gt;If supported, change your VMM password on some basis.&lt;/p&gt;
&lt;p&gt;Delete VMM data quickly.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Chris Talbot for researching and reporting this vulnerability.&lt;/p&gt;
&lt;p&gt;This document was written by Brad Runyon.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;Visual Voice Mail (VVM) services transmit unencrypted credentials via SMS. An attacker with the ability to read SMS messages can obtain VVM IMAP credentials and gain access to VVM data.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;VVM is specified by &lt;a href=&quot;https://www.gsma.com/newsroom/wp-content/uploads/2012/07/OMTP_VVM_Specification_1_3.pdf&quot;&gt;Open Mobile Terminal Platform-OMPT&lt;/a&gt; and is implemented with SMS and IMAP (and other protocols). VVM IMAP credentials are sent unencrypted in SMS messages. From &lt;a href=&quot;https://gitlab.com/kop316/vvm-disclosure&quot;&gt;vvm-disclosure&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When a client sends any sort of STATUS SMS (activate, deactivate, status), the carrier will respond with all credentials needed to log into the IMAP server (i.e. username, password, server host-name).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From section 2.1.1.2 AUTHENTICATE of the &lt;a href=&quot;https://www.gsma.com/newsroom/wp-content/uploads/2012/07/OMTP_VVM_Specification_1_3.pdf&quot;&gt;OMTP VISUAL VOICEMAIL INTERFACE SPECIFICATION v1.3&lt;/a&gt;: &quot;The IMAP4 password is sent in the STATUS SMS message.&quot;&lt;/p&gt;
&lt;p&gt;To intercept an SMS message, an attacker would need, for example:
*   temporary physical access to the SIM card,
*   to operate a spoofed a base station (cell tower), or
*   to convince a user to install a malicious application that has SMS access.&lt;/p&gt;
&lt;p&gt;VVM IMAP services may be widely accessible over the internet or carrier networks.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&quot;https://gitlab.com/kop316/vvm-disclosure&quot;&gt;vvm-disclosure&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is no indication on to a victim that someone else has access to their VVM. Android leaves their VVMs on the IMAP server until the client deletes it, so any VVMs on the client are accessible to a malicious actor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An attacker with the ability to read SMS messages can obtain VVM IMAP credentials and gain access to VVM data.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;We are not aware of a practical solution to this vulnerability.&lt;/p&gt;
&lt;p&gt;Take general precautions against SMS interception.&lt;/p&gt;
&lt;p&gt;If supported, change your VMM password on some basis.&lt;/p&gt;
&lt;p&gt;Delete VMM data quickly.&lt;/p&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Chris Talbot for researching and reporting this vulnerability.&lt;/p&gt;
&lt;p&gt;This document was written by Brad Runyon.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://gitlab.com/kop316/vvm-disclosure&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gitlab.com/kop316/vvm-disclosure&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.gsma.com/newsroom/wp-content/uploads/2012/07/OMTP_VVM_Specification_1_3.pdf&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.gsma.com/newsroom/wp-content/uploads/2012/07/OMTP_VVM_Specification_1_3.pdf&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-23835&quot;&gt;CVE-2022-23835  &lt;/a&gt;
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-02-24&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-02-24&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-02-24 19:51 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;1 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23383864 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry><entry><title>VU#229438: Mobile device monitoring services do not authenticate API requests</title><link href="https://kb.cert.org/vuls/id/229438" rel="alternate"><published>2022-02-22T16:33:11.513436+00:00</published><updated>2022-02-24T20:41:23.265961+00:00</updated><id>https://kb.cert.org/vuls/id/229438</id><summary type="html">

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The backend infrastructure shared by multiple mobile device monitoring services does not adequately authenticate or authorize API requests, creating an IDOR (Insecure Direct Object Reference) vulnerability. These services and their associated apps can be used to perform non-consensual, unauthorized monitoring and are commonly called &quot;stalkerware.&quot; An unauthenticated remote attacker can access personal information collected from any device with one of the stalkerware variants installed.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;IDOR is a common web application flaw that essentially exposes information on a server because of insufficient authentication or authorization controls. Multiple services and apps are affected by this backend vulnerability. A list of known vendors is included below. &lt;/p&gt;
&lt;p&gt;For more information and a detailed account of the flaw and investigation, please see &quot;&lt;a href=&quot;https://techcrunch.com/2022/02/22/stalkerware-network-spilling-data/&quot;&gt;Behind the stalkerware network spilling the private phone data of hundreds of thousands&lt;/a&gt;.&quot; &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An unauthenticated remote attacker can access personal information collected from any device with one of the stalkerware variants installed.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;We are unaware of a practical solution to this problem. The infrastructure provider (according to the &lt;a href=&quot;https://techcrunch.com/2022/02/22/stalkerware-network-spilling-data/&quot;&gt;TechCrunch investigation&lt;/a&gt;, 1Byte Software), would need to address the IDOR vulnerability. &lt;/p&gt;
&lt;p&gt;For advice on detecting and removing stalkerware apps, see &quot;&lt;a href=&quot;https://techcrunch.com/2022/02/22/remove-android-spyware/&quot;&gt;Your Android phone could have stalkerware, here's how to remove it&lt;/a&gt;.&quot; As noted by TechCrunch:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before you proceed, have a safety plan in place. The &lt;a href=&quot;https://stopstalkerware.org/information-for-survivors/&quot;&gt;Coalition Against Stalkerware&lt;/a&gt; offers advice and guidance for victims and survivors of stalkerware. Spyware is designed to be covert, but keep in mind that removing the spyware from your phone will likely alert the person who planted it, which could create an unsafe situation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Zack Whittaker from TechCrunch for researching and reporting this vulnerability and investigating the wider security concerns related to stalkerware.&lt;/p&gt;
&lt;p&gt;This document was written by James Stanley and Art Manion.&lt;/p&gt;

</summary><content type="html">

&lt;div class=&quot;row&quot; id=&quot;content&quot;&gt;
  &lt;div class=&quot;large-9 medium-9 columns&quot;&gt;
    &lt;div class=&quot;blog-post&quot;&gt;
      &lt;div class=&quot;row&quot;&gt;
        &lt;div class=&quot;large-12 columns&quot;&gt;
	  
	  &lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;The backend infrastructure shared by multiple mobile device monitoring services does not adequately authenticate or authorize API requests, creating an IDOR (Insecure Direct Object Reference) vulnerability. These services and their associated apps can be used to perform non-consensual, unauthorized monitoring and are commonly called &quot;stalkerware.&quot; An unauthenticated remote attacker can access personal information collected from any device with one of the stalkerware variants installed.&lt;/p&gt;
&lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
&lt;p&gt;IDOR is a common web application flaw that essentially exposes information on a server because of insufficient authentication or authorization controls. Multiple services and apps are affected by this backend vulnerability. A list of known vendors is included below. &lt;/p&gt;
&lt;p&gt;For more information and a detailed account of the flaw and investigation, please see &quot;&lt;a href=&quot;https://techcrunch.com/2022/02/22/stalkerware-network-spilling-data/&quot;&gt;Behind the stalkerware network spilling the private phone data of hundreds of thousands&lt;/a&gt;.&quot; &lt;/p&gt;
&lt;h3 id=&quot;impact&quot;&gt;Impact&lt;/h3&gt;
&lt;p&gt;An unauthenticated remote attacker can access personal information collected from any device with one of the stalkerware variants installed.&lt;/p&gt;
&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;We are unaware of a practical solution to this problem. The infrastructure provider (according to the &lt;a href=&quot;https://techcrunch.com/2022/02/22/stalkerware-network-spilling-data/&quot;&gt;TechCrunch investigation&lt;/a&gt;, 1Byte Software), would need to address the IDOR vulnerability. &lt;/p&gt;
&lt;p&gt;For advice on detecting and removing stalkerware apps, see &quot;&lt;a href=&quot;https://techcrunch.com/2022/02/22/remove-android-spyware/&quot;&gt;Your Android phone could have stalkerware, here's how to remove it&lt;/a&gt;.&quot; As noted by TechCrunch:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before you proceed, have a safety plan in place. The &lt;a href=&quot;https://stopstalkerware.org/information-for-survivors/&quot;&gt;Coalition Against Stalkerware&lt;/a&gt; offers advice and guidance for victims and survivors of stalkerware. Spyware is designed to be covert, but keep in mind that removing the spyware from your phone will likely alert the person who planted it, which could create an unsafe situation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;p&gt;Thanks to Zack Whittaker from TechCrunch for researching and reporting this vulnerability and investigating the wider security concerns related to stalkerware.&lt;/p&gt;
&lt;p&gt;This document was written by James Stanley and Art Manion.&lt;/p&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; Vendor Information &lt;/h3&gt;
	  
	  &lt;div id=&quot;vendorinfo&quot;&gt;
	    One or more vendors are listed for this advisory. Please reference the full report for more information.
	  &lt;/div&gt;
	  
	&lt;/div&gt;
      &lt;/div&gt;
      &lt;br/&gt;
      
      
      &lt;div class=&quot;row&quot;&gt;
	&lt;div class=&quot;large-12 columns&quot;&gt;
	  &lt;h3&gt; References &lt;/h3&gt;
	  &lt;ul&gt;
	    
	    
	    
            &lt;li&gt;&lt;a href=&quot;https://techcrunch.com/2022/02/22/stalkerware-network-spilling-data/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://techcrunch.com/2022/02/22/stalkerware-network-spilling-data/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://techcrunch.com/2022/02/22/remove-android-spyware/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://techcrunch.com/2022/02/22/remove-android-spyware/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://stopstalkerware.org/&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://stopstalkerware.org/&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://www.ftc.gov/news-events/press-releases/2021/09/ftc-bans-spyfone-and-ceo-from-surveillance-business&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ftc.gov/news-events/press-releases/2021/09/ftc-bans-spyfone-and-ceo-from-surveillance-business&lt;/a&gt;&lt;/li&gt;
            
          
	    
            &lt;li&gt;&lt;a href=&quot;https://cwe.mitre.org/data/definitions/284.html&quot; class=&quot;vulreflink safereflink&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://cwe.mitre.org/data/definitions/284.html&lt;/a&gt;&lt;/li&gt;
            
          
	  
	  &lt;/ul&gt;
	&lt;/div&gt;
      &lt;/div&gt;
      
      &lt;h3&gt;Other Information&lt;/h3&gt;
        &lt;div class=&quot;vulcontent&quot;&gt;
          &lt;table class=&quot;unstriped&quot;&gt;
            &lt;tbody&gt;
	      
              &lt;tr&gt;
                &lt;td width=&quot;200&quot;&gt;&lt;b&gt;CVE IDs:&lt;/b&gt;&lt;/td&gt;
		&lt;td&gt;
		
		
                &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=2022-0732&quot;&gt;CVE-2022-0732  &lt;/a&gt;
		
                
		
                
		&lt;/td&gt;
	      &lt;/tr&gt;
	      
	      &lt;tr&gt;
		&lt;td&gt;
		  &lt;b&gt;Date Public:&lt;/b&gt;
		&lt;/td&gt;
                &lt;td&gt;2022-02-22&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date First Published:&lt;/b&gt;&lt;/td&gt;
                &lt;td id=&quot;datefirstpublished&quot;&gt;2022-02-22&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Date Last Updated: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;2022-02-24 20:41 UTC&lt;/td&gt;
              &lt;/tr&gt;
              &lt;tr&gt;
                &lt;td&gt;&lt;b&gt;Document Revision: &lt;/b&gt;&lt;/td&gt;
                &lt;td&gt;4 &lt;/td&gt;
              &lt;/tr&gt;
            &lt;/tbody&gt;
          &lt;/table&gt;
	&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;large-3 medium-3 columns&quot; data-sticky-container&gt;
  &lt;div class=&quot;sticky&quot; data-sticky data-anchor=&quot;content&quot;&gt;
    &lt;div class=&quot;sidebar-links&quot;&gt;
      &lt;ul class=&quot;menu vertical&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About vulnerability notes&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;mailto:cert@cert.org?Subject=VU%23229438 Feedback&quot;&gt;Contact us about this vulnerability&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement&quot; target=&quot;_blank&quot; &gt;Provide a vendor statement&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;



</content></entry></feed>