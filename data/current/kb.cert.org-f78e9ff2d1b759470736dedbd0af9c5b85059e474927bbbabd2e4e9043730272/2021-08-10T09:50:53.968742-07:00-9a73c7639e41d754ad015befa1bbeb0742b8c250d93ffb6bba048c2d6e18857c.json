{
  "title":"VU#608209: NicheStack embedded TCP/IP has vulnerabilities",
  "date":"2021-08-10T09:50:53.968742-07:00",
  "author":null,
  "id":"https://kb.cert.org/vuls/id/608209",
  "link":"https://kb.cert.org/vuls/id/608209",
  "content":"\n\n<div class=\"row\" id=\"content\">\n  <div class=\"large-9 medium-9 columns\">\n    <div class=\"blog-post\">\n      <div class=\"row\">\n        <div class=\"large-12 columns\">\n\t  \n\t  <h3>Overview</h3>\n<p>HCC Embedded's software called InterNiche stack (NicheStack) and NicheLite, which provides TCP/IP networking capability to embedded systems, is impacted by multiple vulnerabilities. The Forescout and JFrog researchers who discovered this set of vulnerabilities have identified these as &quot;INFRA:HALT&quot; </p>\n<h3>Description</h3>\n<p>HCC Embedded acquired NicheStack from Interniche in order to provide TCP/IP protocol capabilities to lightweight devices such as IoT.  NicheStack has been made available since late 1990's to a widely varied customer base in multiple forms to support various implementations.  This has made NicheStack to be part of a complex supply chain into major industries including devices in <a href=\"https://us-cert.cisa.gov/ics/advisories/icsa-21-217-01\"> critical infrastructure</a>.  </p>\n<p>Forescout and JFrog researchers have identified <a href=\"https://www.forescout.com/blog/new-critical-operational-technology-vulnerabilities-found-on-nichestack/\">14 vulnerabilities</a> related to network packet processing errors in NicheStack and NicheLite versions 4.3 released before 2021-05-28.  Most of these vulnerabilities stem from improper <a href=\"https://wiki.sei.cmu.edu/confluence/pages/viewpage.action?pageId=87152142\">memory management </a> commonly seen in lightweight operating systems.  Of these 14 vulnerabilities, five involve processing of TCP and ICMP (<a href=\"https://en.wikipedia.org/wiki/OSI_model\">OSI</a> Layer-4 protocols) and the rest involve common application protocols such as HTTP and DNS (OSI Layer-7).  The processing of these OSI layers involve a number of boundary checks and some specific &quot;application&quot; processing capabilities (such as randomization) commonly overlooked in development of lightweight networking software.  </p>\n<p>Various stakeholders, including HCC Embedded, have made attempts to reach  impacted vendors to provide software fixes that address these issues. A lack of formalization of software OEM relationships and a lack of Software Bill of Materials (SBOM) has complicated this outreach and the much-needed identification of impacted devices. </p>\n<h3>Impact</h3>\n<p>The impact of exploiting these vulnerabilities will vary widely, depending on the implementation options used while developing embedded systems that use NicheStack or NicheLite. As these vulnerabilities involve processing of network packets, attackers can generally abuse these errors via remote network access. In summary, a remote, unauthenticated attacker may be able to use specially-crafted network packets to cause a denial of service, disclose information, or in some cases be able to execute arbitrary code on the target device. </p>\n<h3>Solution</h3>\n<h4>Apply updates</h4>\n<p>The most reliable way to address these vulnerabilities is to update to the latest stable version of NicheStack software mentioned in HCC Embedded mentioned in their <a href=\"https://www.hcc-embedded.com/support/security-advisories\">Security Advisories</a>. If you are unsure or have discovered NicheStack using <a href=\"https://github.com/Forescout/project-memoria-detector\">open-source tools</a> provided by Forescout, reach out to HCC Embedded via their <a href=\"https://www.hcc-embedded.com/support/security-advisories/product-security-policy\">PSIRT</a> security team or to your upstream vendor in your supply chain to obtain the software fixes.  HCC has also provided a <a href=\"https://www.hcc-embedded.com/support/security-advisories/security-advisories-notification\">register to be notified</a>  web page for sustaining this outreach for their long-standing customers.</p>\n<h4>Block anomalous IP traffic</h4>\n<p>CERT/CC recognizes that many implementations of NicheStack involve longer lifecycles for patching.  In the meantime, if feasible, organizations can consider isolating impacted devices and blocking network attacks using network inspection, as detailed below, when network isolation is not feasible.  It is recommended that security features available to you in devices such as router, firewalls for blocking anomalous network packets are enabled and properly configured. Below is a list of possible mitigations that address some specific network attacks that attempt to exploit these vulnerabilities.</p>\n<ul>\n<li>Provide DNS recursion services to the embedded devices using recursive DNS servers that are securely configured, and well-maintained with patches and updates.</li>\n<li>Provide HTTP access to embedded devices that are in an isolated network via securely configured HTTP reverse proxy or using HTTP deep packet inspection firewalls.</li>\n<li>Filter ICMP and TFTP access to embedded devices from the wider Internet and use stateful inspection of these protocols when accessible to wider Internet to avoid abuse.</li>\n<li>Enforce TCP stateful inspection for embedded device and reject malformed TCP packets using router, firewall features as available to the operational environment.</li>\n</ul>\n<p>When blocking or isolating is not an option, perform passive inspection using IDS that can alert on anomalous attempts to exploit these vulnerabilities. See also our recommendations and IDS rules that were made available for Treck TCP/IP stack related vulnerabilities <a href=\"https://kb.cert.org/vuls/id/257161\">VU#257161</a> for <a href=\"https://github.com/CERTCC/PoC-Exploits/tree/master/vu-257161\">examples</a>.</p>\n<h3>Acknowledgements</h3>\n<p>Thanks to Amine Amri, Stanislav Dashevskyi, and Daniel dos Santos from Forescout, and Asaf Karas and Shachar Menashe from JFrog who reported these vulnerabilities and supported coordinated disclosure.  HCC Embedded, the primary OEM vendor, also supported our efforts to coordinate and develop security fixes to address these issues.</p>\n<p>This document was written by Vijay Sarvepalli.</p>\n\t  \n\t</div>\n      </div>\n      <div class=\"row\">\n\t<div class=\"large-12 columns\">\n\t  <h3> Vendor Information </h3>\n\t  \n\t  <div id=\"vendorinfo\">\n\t    One or more vendors are listed for this advisory. Please reference the full report for more information.\n\t  </div>\n\t  \n\t</div>\n      </div>\n      <br>\n      \n      \n      <div class=\"row\">\n\t<div class=\"large-12 columns\">\n\t  <h3> References </h3>\n\t  <ul>\n\t    \n\t  \n\t  <li><a href=\"https://www.hcc-embedded.com/support/security-advisories\" class=\"vulreflink\" rel=\"noopener\">https://www.hcc-embedded.com/support/security-advisories</a></li>\n          \n\t  <li><a href=\"https://www.forescout.com/blog/new-critical-operational-technology-vulnerabilities-found-on-nichestack/\" class=\"vulreflink\" rel=\"noopener\">https://www.forescout.com/blog/new-critical-operational-technology-vulnerabilities-found-on-nichestack/</a></li>\n          \n\t  <li><a href=\"https://jfrog.com/blog/infrahalt-14-new-security-vulnerabilities-found-in-nichestack/\" class=\"vulreflink\" rel=\"noopener\">https://jfrog.com/blog/infrahalt-14-new-security-vulnerabilities-found-in-nichestack/</a></li>\n          \n\t  <li><a href=\"https://us-cert.cisa.gov/ics/advisories/icsa-21-217-01\" class=\"vulreflink\" rel=\"noopener\">https://us-cert.cisa.gov/ics/advisories/icsa-21-217-01</a></li>\n          \n\t  <li><a href=\"https://cert.vde.com/de-de/advisories/vde-2021-032\" class=\"vulreflink\" rel=\"noopener\">https://cert.vde.com/de-de/advisories/vde-2021-032</a></li>\n          \n\t  \n\t  </ul>\n\t</div>\n      </div>\n      \n      <h3>Other Information</h3>\n        <div class=\"vulcontent\">\n          <table class=\"unstriped\">\n            <tbody>\n\t      \n              <tr>\n                <td width=\"200\"><b>CVE IDs:</b></td>\n\t\t<td>\n\t\t\n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25928\">CVE-2020-25928  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31400\">CVE-2021-31400  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31228\">CVE-2021-31228  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-35685\">CVE-2020-35685  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31401\">CVE-2021-31401  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-27565\">CVE-2021-27565  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-35683\">CVE-2020-35683  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-35684\">CVE-2020-35684  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25926\">CVE-2020-25926  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25767\">CVE-2020-25767  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31226\">CVE-2021-31226  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-31227\">CVE-2021-31227  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2020-25927\">CVE-2020-25927  </a>\n\t\t\n                \n\t\t\n                <a href=\"http://web.nvd.nist.gov/view/vuln/detail?vulnId=2021-36762\">CVE-2021-36762  </a>\n\t\t\n                \n\t\t</td>\n\t      </tr>\n\t      \n\t      <tr>\n\t\t<td>\n\t\t  <b>Date Public:</b>\n\t\t</td>\n                <td>2021-08-10</td>\n              </tr>\n              <tr>\n                <td><b>Date First Published:</b></td>\n                <td id=\"datefirstpublished\">2021-08-10</td>\n              </tr>\n              <tr>\n                <td><b>Date Last Updated: </b></td>\n                <td>2021-08-10 16:50 UTC</td>\n              </tr>\n              <tr>\n                <td><b>Document Revision: </b></td>\n                <td>1 </td>\n              </tr>\n            </tbody>\n          </table>\n\t</div>\n    </div>\n  </div>\n  <div class=\"large-3 medium-3 columns\">\n  <div class=\"sticky\">\n    <div class=\"sidebar-links\">\n      <ul class=\"menu vertical\">\n\t<li><a href=\"https://vuls.cert.org/confluence/display/VIN/Vulnerability+Note+Help\" rel=\"noopener\">About vulnerability notes</a></li>\n\t<li><a href=\"mailto:cert@cert.org?Subject=VU%23608209 Feedback\">Contact us about this vulnerability</a></li>\n\t<li><a href=\"https://vuls.cert.org/confluence/display/VIN/Case+Handling#CaseHandling-Givingavendorstatusandstatement\">Provide a vendor statement</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n\n</div>\n\n\n\n"
}