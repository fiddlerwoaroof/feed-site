{
  "title":"ANN: Goal (Geometric OptimizAtion Libraries)",
  "date":"2021-08-31T06:05:01.000000-07:00",
  "author":"/u/sacha-sokoloski",
  "id":"t3_pf5fuw",
  "link":"https://www.reddit.com/r/haskell/comments/pf5fuw/ann_goal_geometric_optimization_libraries/",
  "content":"<div class=\"md\"><p>Hi everyone,</p> <p>Today I'm happy to announce the release of version 0.20 of my numerical optimization libraries that I call Goal (Geometric OptimizAtion Libraries). I'm a postdoc working in the areas of machine learning and computational neuroscience, and I've been working on Goal for about 5 years. I've been doing my research with these libraries for the duration, but I now feel that they're well-developed and feature rich enough that they might be of wider interest.</p> <p>Goal is essentially my attempt at doing type-safe numerical optimization, with types based on information geometry, which is the combination of Riemannian geometry with probability theory, exponential families, and statistics. Some features include:</p> <ul> <li>Strongly-typed vectors (understood as points on a manifold), which distinguish based on dimension, underlying manifold, and coordinate system (and even derivatives vs differentials).</li> <li>Flexible and easily extensible class hierarchy, designed to incorporate various new instances of e.g. exponential family models or backpropagatable functions.</li> <li>Implementations for some uncommon probability distributions including: von Mises and CoM-Poisson distributions.</li> <li>Flexible implementations of various latent variable models including: arbitrary exponential family mixture models, restricted Boltzmann machines, Kalman filters and HMMs, and factor analysis.</li> <li>Implementations of optimization algorithms for these models, including backpropagation, expectation-maximization, gradient pursuit, and more advanced gradient optimizers such as momentum and Adam.</li> <li>Efficient batch implementations of all algorithms, driven by hmatrix. Implementations should be fast, at least up to CPU-bound performance.</li> </ul> <p>You can find Goal at my gitlab repo <a href=\"https://gitlab.com/sacha-sokoloski/goal\">here</a>. I've done my best to make Goal accessible. Nearly every function is documented, and I've done my best to write readable code. At the repository I've added a few README.mds that explain Goal overall, and the four libraries of which it's composed. In the <a href=\"https://gitlab.com/sacha-sokoloski/goal/-/tree/master/scripts\">scripts</a> folder you can find a dozen or so scripts that do various fun things in Goal. Finally, on my <a href=\"https://sacha-sokoloski.gitlab.io/website/\">website</a> you can find a few tutorials, where I try to go more in depth on a few topics, in particular:</p> <ul> <li>a very simple <a href=\"https://sacha-sokoloski.gitlab.io/website/posts/01-gradient-descent.html\">introduction to gradient pursuit with Goal</a>,</li> <li>a more complex tutorial on <a href=\"https://sacha-sokoloski.gitlab.io/website/posts/02-von-mises-mixture.html\">fitting a mixture of von Mises distributions</a>,</li> <li>and a <a href=\"https://sacha-sokoloski.gitlab.io/website/posts/03-neural-network.html\">review of my idiosyncratic implementation of neural networks and backpropagation</a>.</li> </ul> <p>(on a side note, I use laziness to implement backprop implicitly, and I'm curious if this is a widely known trick).</p> <p>Anyway, I'll always keep hacking away at Goal to fit the needs of my research projects, but I'd be happy if there were wider community interest. Right now the libraries are only available at my gitlab repo (there's an ancient version on hackage) but with mild prodding I would package them up for hackage/stackage.</p> </div>   submitted by   <a href=\"https://www.reddit.com/user/sacha-sokoloski\"> /u/sacha-sokoloski </a>   to   <a href=\"https://www.reddit.com/r/haskell/\"> r/haskell </a> <br> <span><a href=\"https://www.reddit.com/r/haskell/comments/pf5fuw/ann_goal_geometric_optimization_libraries/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/haskell/comments/pf5fuw/ann_goal_geometric_optimization_libraries/\">[comments]</a></span>"
}