{
  "title":"SRFI 242: The CFG Language",
  "date":"2022-11-16T00:57:41.000000Z",
  "author":"/u/arthurgleckler",
  "id":"t3_ywf3mp",
  "link":"https://www.reddit.com/r/scheme/comments/ywf3mp/srfi_242_the_cfg_language/",
  "content":"<div class=\"md\"><p>Scheme Request for Implementation 242,<br> &quot;The CFG Language,&quot;<br> by Marc Nieper-Wi√ükirchen,<br> is now available for discussion.</p> <p>Its draft and an archive of the ongoing discussion are available at <a href=\"https://srfi.schemers.org/srfi-242/\">https://srfi.schemers.org/srfi-242/</a>.</p> <p>You can join the discussion of the draft by filling out the subscription form on that page.</p> <p>You can contribute a message to the discussion by sending it to [<a href=\"mailto:srfi-242@srfi.schemers.org\">srfi-242@srfi.schemers.org</a>](mailto:<a href=\"mailto:srfi-242@srfi.schemers.org\">srfi-242@srfi.schemers.org</a>).</p> <p>Here's the abstract:</p> <blockquote> <p>This SRFI defines a language to describe control-flow graphs (CFGs) suitable for formulating iterative and recursive algorithms. Using the notion of a CFG term, this language can be seamlessly embedded in the Scheme language. Complex CFG terms can be composed from simple CFG terms.</p> </blockquote> <p>Regards, </p> <p>SRFI Editor</p> </div>   submitted by   <a href=\"https://www.reddit.com/user/arthurgleckler\"> /u/arthurgleckler </a>   to   <a href=\"https://www.reddit.com/r/scheme/\"> r/scheme </a> <br> <span><a href=\"https://www.reddit.com/r/scheme/comments/ywf3mp/srfi_242_the_cfg_language/\">[link]</a></span>   <span><a href=\"https://www.reddit.com/r/scheme/comments/ywf3mp/srfi_242_the_cfg_language/\">[comments]</a></span>"
}