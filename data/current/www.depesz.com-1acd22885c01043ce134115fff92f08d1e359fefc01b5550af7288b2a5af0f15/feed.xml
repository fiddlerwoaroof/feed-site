<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/">

<channel>
	<title>select * from depesz;</title>
	<atom:link href="https://www.depesz.com/feed/" rel="self" type="application/rss+xml"/>
	<link>https://www.depesz.com</link>
	<description/>
	<lastBuildDate>Thu, 03 Nov 2022 19:02:19 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1.1</generator>
	<item>
		<title>Waiting for PostgreSQL 16 – Add support for regexps on database and user entries in pg_hba.conf</title>
		<link>https://www.depesz.com/2022/11/03/waiting-for-postgresql-16-add-support-for-regexps-on-database-and-user-entries-in-pg_hba-conf/</link>
					<comments>https://www.depesz.com/2022/11/03/waiting-for-postgresql-16-add-support-for-regexps-on-database-and-user-entries-in-pg_hba-conf/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Thu, 03 Nov 2022 19:02:19 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[auth]]></category>
		<category><![CDATA[authentication]]></category>
		<category><![CDATA[hba]]></category>
		<category><![CDATA[pg16]]></category>
		<category><![CDATA[pg_hba]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[regexp]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4121</guid>

					<description><![CDATA[On 24th of October 2022, Michael Paquier committed patch: Add support for regexps on database and user entries in pg_hba.conf &#160; As of this commit, any database or user entry beginning with a slash (/) is considered as a regular expression. This is particularly useful for users, as now there is no clean way to &#8230; <a href="https://www.depesz.com/2022/11/03/waiting-for-postgresql-16-add-support-for-regexps-on-database-and-user-entries-in-pg_hba-conf/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 16 &#8211; Add support for regexps on database and user entries in pg_hba.conf"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/11/03/waiting-for-postgresql-16-add-support-for-regexps-on-database-and-user-entries-in-pg_hba-conf/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Prettify SQL queries from command line</title>
		<link>https://www.depesz.com/2022/09/21/prettify-sql-queries-from-command-line/</link>
					<comments>https://www.depesz.com/2022/09/21/prettify-sql-queries-from-command-line/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Wed, 21 Sep 2022 14:05:42 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[paste.depesz.com]]></category>
		<category><![CDATA[pg-sql-prettyformat]]></category>
		<category><![CDATA[pg_prettify]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[shell_utils]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4112</guid>

					<description><![CDATA[Around a month ago I wrote about new pretty-printer for SQL queries that I created. Today, figured I'll add command line tool for putting queries through it, to make my life a bit easier. Tool is named pg_prettify, and you can find in in my shell_utils repo. Example usage: =$ cat bad.sql SELECT n.nspname as &#8230; <a href="https://www.depesz.com/2022/09/21/prettify-sql-queries-from-command-line/" class="more-link">Continue reading<span class="screen-reader-text"> "Prettify SQL queries from command line"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/09/21/prettify-sql-queries-from-command-line/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>What is LATERAL, what is it for, and how can one use it?</title>
		<link>https://www.depesz.com/2022/09/18/what-is-lateral-what-is-it-for-and-how-can-one-use-it/</link>
					<comments>https://www.depesz.com/2022/09/18/what-is-lateral-what-is-it-for-and-how-can-one-use-it/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Sun, 18 Sep 2022 14:53:58 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[generate_series]]></category>
		<category><![CDATA[join]]></category>
		<category><![CDATA[lateral]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[tutorial]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4108</guid>

					<description><![CDATA[Lately in couple of places I recommended people that they can solve their problem with queries using LATERAL. In some cases recipient of such suggestion indicated that they had no idea what LATERAL is. Which made me think that it might be good idea to write more about them (lateral queries)&#8230; Also &#8211; I know &#8230; <a href="https://www.depesz.com/2022/09/18/what-is-lateral-what-is-it-for-and-how-can-one-use-it/" class="more-link">Continue reading<span class="screen-reader-text"> "What is LATERAL, what is it for, and how can one use it?"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/09/18/what-is-lateral-what-is-it-for-and-how-can-one-use-it/feed/</wfw:commentRss>
			<slash:comments>6</slash:comments>
		
		
			</item>
		<item>
		<title>SQL/JSON is postponed</title>
		<link>https://www.depesz.com/2022/09/02/sql-json-is-postponed/</link>
					<comments>https://www.depesz.com/2022/09/02/sql-json-is-postponed/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Fri, 02 Sep 2022 10:16:54 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[revert]]></category>
		<category><![CDATA[sql/json]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4104</guid>

					<description><![CDATA[Back in March and April I wrote couple of blogposts about upcoming new great feature &#8211; full SQL/JSON. Unfortunately, as of today SQL/JSON has been reverted (removed from sources), both from development version 16, but also from &#8220;almost ready" version 15. There is lengthy discussion about it which you can definitely read if you're so &#8230; <a href="https://www.depesz.com/2022/09/02/sql-json-is-postponed/" class="more-link">Continue reading<span class="screen-reader-text"> "SQL/JSON is postponed"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/09/02/sql-json-is-postponed/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>New SQL pretty printer – based on parsing, and not regexps</title>
		<link>https://www.depesz.com/2022/08/31/new-sql-pretty-printer-based-on-parsing-and-not-regexps/</link>
					<comments>https://www.depesz.com/2022/08/31/new-sql-pretty-printer-based-on-parsing-and-not-regexps/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Wed, 31 Aug 2022 11:41:52 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[explain.depesz.com]]></category>
		<category><![CDATA[formatting]]></category>
		<category><![CDATA[libpg_query]]></category>
		<category><![CDATA[paste.depesz.com]]></category>
		<category><![CDATA[pg-sql-prettyformat]]></category>
		<category><![CDATA[pg_format]]></category>
		<category><![CDATA[pg_query]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[pretty]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4101</guid>

					<description><![CDATA[For a long time I was looking for SQL pretty printer. Some queries that I had to deal with, over the years, were just insane to read, like this: SELECT DECODE&#40;a.category,NULL,b.category,a.category&#41; &#34;category&#34;,b.par &#34;Total object Request&#34;,b.ps &#34;objects Served&#34;, b.ar &#34;Total sushi Request&#34;, a.sushis &#34;sushis Served&#34;, ROUND&#40;&#40;DECODE&#40;b.ar,0,0,&#40;b.ar - CAST&#40;DECODE&#40;a.sushis,NULL,0,a.sushis&#41; AS numeric&#41;&#41;/b.ar&#41;&#41;*100,3&#41; &#34;USR&#34;, a.clk &#34;points&#34;, DECODE&#40;b.ps,0,0,ROUND&#40;&#40;a.clk/b.ps&#41;*100,3&#41;&#41; &#34;CTR&#34;,a.cpc &#34;CPC&#34;, &#8230; <a href="https://www.depesz.com/2022/08/31/new-sql-pretty-printer-based-on-parsing-and-not-regexps/" class="more-link">Continue reading<span class="screen-reader-text"> "New SQL pretty printer &#8211; based on parsing, and not regexps"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/08/31/new-sql-pretty-printer-based-on-parsing-and-not-regexps/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Better scrolling of long explain plans on explain.depesz.com</title>
		<link>https://www.depesz.com/2022/07/12/better-scrolling-of-long-explain-plans-on-explain-depesz-com/</link>
					<comments>https://www.depesz.com/2022/07/12/better-scrolling-of-long-explain-plans-on-explain-depesz-com/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Tue, 12 Jul 2022 11:52:40 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[alexandre]]></category>
		<category><![CDATA[contribution]]></category>
		<category><![CDATA[explain.depesz.com]]></category>
		<category><![CDATA[felipe]]></category>
		<category><![CDATA[gitlab]]></category>
		<category><![CDATA[postgresql]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4098</guid>

					<description><![CDATA[Thanks to some discussion on Slack, and work by Alexandre Felipe viewing of large explains will be now a bit easier. You can see it, for example, in this explain. First of all, when you scroll down, the column headers stay in place. Plus &#8211; you can always see the horizontal scrollbar to see the &#8230; <a href="https://www.depesz.com/2022/07/12/better-scrolling-of-long-explain-plans-on-explain-depesz-com/" class="more-link">Continue reading<span class="screen-reader-text"> "Better scrolling of long explain plans on explain.depesz.com"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/07/12/better-scrolling-of-long-explain-plans-on-explain-depesz-com/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Understanding pg_stat_activity</title>
		<link>https://www.depesz.com/2022/07/05/understanding-pg_stat_activity/</link>
					<comments>https://www.depesz.com/2022/07/05/understanding-pg_stat_activity/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Tue, 05 Jul 2022 01:59:24 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[duration]]></category>
		<category><![CDATA[lock]]></category>
		<category><![CDATA[monitoring]]></category>
		<category><![CDATA[pg_stat_activity]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[query]]></category>
		<category><![CDATA[understanding]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4096</guid>

					<description><![CDATA[pg_stat_activity is system view that shows what is currently happening in the DB. With newer pgs it's rather wide (22 columns as I write this). And, it's not always obvious what all this means. So let's try to figure it out. Connected to database depesz with user test and got: $ select * from pg_stat_activity &#8230; <a href="https://www.depesz.com/2022/07/05/understanding-pg_stat_activity/" class="more-link">Continue reading<span class="screen-reader-text"> "Understanding pg_stat_activity"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/07/05/understanding-pg_stat_activity/feed/</wfw:commentRss>
			<slash:comments>4</slash:comments>
		
		
			</item>
		<item>
		<title>How to log selects from specific table?</title>
		<link>https://www.depesz.com/2022/07/04/how-to-log-selects-from-specific-table/</link>
					<comments>https://www.depesz.com/2022/07/04/how-to-log-selects-from-specific-table/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Mon, 04 Jul 2022 12:40:18 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[audit]]></category>
		<category><![CDATA[howto]]></category>
		<category><![CDATA[log]]></category>
		<category><![CDATA[logging]]></category>
		<category><![CDATA[pgaudit]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[select]]></category>
		<category><![CDATA[view]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4093</guid>

					<description><![CDATA[Someone, somewhere (on IRC or Slack), asked about logging read access to specific table. This is interesting question with at least couple options. So, let's dig in&#8230; First things first, I need to have some tables to test it on: $ create table this_is_normal &#40;i int4&#41;; $ create table this_is_special &#40;i int4&#41;; Let's put there &#8230; <a href="https://www.depesz.com/2022/07/04/how-to-log-selects-from-specific-table/" class="more-link">Continue reading<span class="screen-reader-text"> "How to log selects from specific table?"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/07/04/how-to-log-selects-from-specific-table/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Stop the war in Ukraine</title>
		<link>https://www.depesz.com/2022/04/12/stop-the-war-in-ukraine/</link>
					<comments>https://www.depesz.com/2022/04/12/stop-the-war-in-ukraine/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Tue, 12 Apr 2022 09:59:34 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[ban]]></category>
		<category><![CDATA[belarus]]></category>
		<category><![CDATA[irc]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[russia]]></category>
		<category><![CDATA[slack]]></category>
		<category><![CDATA[ukraine]]></category>
		<category><![CDATA[war]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4084</guid>

					<description><![CDATA[Since yesterday my sites (explain.depesz.com, paste.depesz.com, and this blog) are no longer available from IPs that are in Russia or Belarus. I know this is not huge loss for them, but, I think, every single bit counts. If you'd like to do the same thing for their site/service: You can download free Geoip2Lite database from &#8230; <a href="https://www.depesz.com/2022/04/12/stop-the-war-in-ukraine/" class="more-link">Continue reading<span class="screen-reader-text"> "Stop the war in Ukraine"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/04/12/stop-the-war-in-ukraine/feed/</wfw:commentRss>
			<slash:comments>9</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Documentation for SQL/JSON features</title>
		<link>https://www.depesz.com/2022/04/08/waiting-for-postgresql-15-documentation-for-sql-json-features/</link>
					<comments>https://www.depesz.com/2022/04/08/waiting-for-postgresql-15-documentation-for-sql-json-features/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Fri, 08 Apr 2022 10:53:40 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[docs]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[sql/json]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4082</guid>

					<description><![CDATA[On 8th of April 2022, Andrew Dunstan committed patch: Documentation for SQL/JSON features &#160; This documents the features added in commits f79b803dcc, f4fb45d15c, 33a377608f, 1a36bc9dba, 606948b058, 49082c2cc3, 4e34747c88, and fadb48b00e. &#160; I have cleaned up the aggregate section of the submitted docs, but there is still a deal of copy editing required. However, I thought &#8230; <a href="https://www.depesz.com/2022/04/08/waiting-for-postgresql-15-documentation-for-sql-json-features/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Documentation for SQL/JSON features"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/04/08/waiting-for-postgresql-15-documentation-for-sql-json-features/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – JSON_TABLE</title>
		<link>https://www.depesz.com/2022/04/06/waiting-for-postgresql-15-json_table/</link>
					<comments>https://www.depesz.com/2022/04/06/waiting-for-postgresql-15-json_table/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Wed, 06 Apr 2022 17:40:42 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[jsonb]]></category>
		<category><![CDATA[json_table]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[sql/json]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4080</guid>

					<description><![CDATA[On 4th of April 2022, Andrew Dunstan committed patch: JSON_TABLE &#160; This feature allows jsonb data to be treated as a table and thus used in a FROM clause like other tabular data. Data can be selected from the jsonb using jsonpath expressions, and hoisted out of nested structures in the jsonb to form multiple &#8230; <a href="https://www.depesz.com/2022/04/06/waiting-for-postgresql-15-json_table/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; JSON_TABLE"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/04/06/waiting-for-postgresql-15-json_table/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>DBA tips ‘n tricks – search in every field in a table</title>
		<link>https://www.depesz.com/2022/04/05/dba-tips-n-tricks-search-in-every-field-in-a-table/</link>
					<comments>https://www.depesz.com/2022/04/05/dba-tips-n-tricks-search-in-every-field-in-a-table/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Tue, 05 Apr 2022 12:53:53 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[tnt]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4078</guid>

					<description><![CDATA[Sometimes you just want to find some value, regardless of which column it's in. If the table has few columns you can easily: =$ select * from table where a ~ '...' or b ~ '...' or c ~ '...' But if there are many columns writing such query quickly becomes tedious. Luckily there is &#8230; <a href="https://www.depesz.com/2022/04/05/dba-tips-n-tricks-search-in-every-field-in-a-table/" class="more-link">Continue reading<span class="screen-reader-text"> "DBA tips &#8216;n tricks &#8211; search in every field in a table"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/04/05/dba-tips-n-tricks-search-in-every-field-in-a-table/feed/</wfw:commentRss>
			<slash:comments>5</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – SQL/JSON query functions</title>
		<link>https://www.depesz.com/2022/04/01/waiting-for-postgresql-15-sql-json-query-functions/</link>
					<comments>https://www.depesz.com/2022/04/01/waiting-for-postgresql-15-sql-json-query-functions/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Fri, 01 Apr 2022 10:13:31 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[sql/json]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4073</guid>

					<description><![CDATA[On 29th of March 2022, Andrew Dunstan committed patch: SQL/JSON query functions &#160; This introduces the SQL/JSON functions for querying JSON data using jsonpath expressions. The functions are: &#160; JSON_EXISTS() JSON_QUERY() JSON_VALUE() &#160; All of these functions only operate on jsonb. The workaround for now is to cast the argument to jsonb. &#160; JSON_EXISTS() tests &#8230; <a href="https://www.depesz.com/2022/04/01/waiting-for-postgresql-15-sql-json-query-functions/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; SQL/JSON query functions"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/04/01/waiting-for-postgresql-15-sql-json-query-functions/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – IS JSON predicate</title>
		<link>https://www.depesz.com/2022/04/01/waiting-for-postgresql-15-is-json-predicate/</link>
					<comments>https://www.depesz.com/2022/04/01/waiting-for-postgresql-15-is-json-predicate/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Fri, 01 Apr 2022 01:13:25 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[IS]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[predicate]]></category>
		<category><![CDATA[sql/json]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4071</guid>

					<description><![CDATA[On 28th of March 2022, Andrew Dunstan]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/04/01/waiting-for-postgresql-15-is-json-predicate/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – SQL/JSON constructors</title>
		<link>https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-sql-json-constructors/</link>
					<comments>https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-sql-json-constructors/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Thu, 31 Mar 2022 19:32:28 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[constructor]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[sql/json]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4068</guid>

					<description><![CDATA[On 27th of March 2022, Andrew Dunstan committed patch: SQL/JSON constructors &#160; This patch introduces the SQL/JSON standard constructors for JSON: &#160; JSON() JSON_ARRAY() JSON_ARRAYAGG() JSON_OBJECT() JSON_OBJECTAGG() &#160; For the most part these functions provide facilities that mimic existing json/jsonb functions. However, they also offer some useful additional functionality. In addition to text input, the &#8230; <a href="https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-sql-json-constructors/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; SQL/JSON constructors"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-sql-json-constructors/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Add support for MERGE SQL command</title>
		<link>https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-add-support-for-merge-sql-command/</link>
					<comments>https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-add-support-for-merge-sql-command/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Thu, 31 Mar 2022 12:44:47 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[merge]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[upsert]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4065</guid>

					<description><![CDATA[On 28th of March 2022, Alvaro Herrera committed patch: Add support for MERGE SQL command &#160; MERGE performs actions that modify rows in the target table using a source table or query. MERGE provides a single SQL statement that can conditionally INSERT/UPDATE/DELETE rows -- a task that would otherwise require multiple PL statements. For example, &#8230; <a href="https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-add-support-for-merge-sql-command/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Add support for MERGE SQL command"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/03/31/waiting-for-postgresql-15-add-support-for-merge-sql-command/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Add support for security invoker views.</title>
		<link>https://www.depesz.com/2022/03/22/waiting-for-postgresql-15-add-support-for-security-invoker-views/</link>
					<comments>https://www.depesz.com/2022/03/22/waiting-for-postgresql-15-add-support-for-security-invoker-views/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Tue, 22 Mar 2022 12:12:58 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[invoker]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[privileges]]></category>
		<category><![CDATA[security]]></category>
		<category><![CDATA[view]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4063</guid>

					<description><![CDATA[On 22nd of March 2022, Dean Rasheed committed patch: Add support for security invoker views. &#160; A security invoker view checks permissions for accessing its underlying base relations using the privileges of the user of the view, rather than the privileges of the view owner. Additionally, if any of the base relations are tables with &#8230; <a href="https://www.depesz.com/2022/03/22/waiting-for-postgresql-15-add-support-for-security-invoker-views/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Add support for security invoker views."</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/03/22/waiting-for-postgresql-15-add-support-for-security-invoker-views/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>PGDayPL postponed…</title>
		<link>https://www.depesz.com/2022/03/16/pgdaypl-postponed/</link>
					<comments>https://www.depesz.com/2022/03/16/pgdaypl-postponed/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Wed, 16 Mar 2022 13:14:37 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[2022]]></category>
		<category><![CDATA[conference]]></category>
		<category><![CDATA[pgday]]></category>
		<category><![CDATA[pgdaypl]]></category>
		<category><![CDATA[poland]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[warsaw]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4061</guid>

					<description><![CDATA[Just got information that PGDay.PL is postponed till 4th quarter of 2022. This is due to situation in Ukraine. Figured I'll let you know, given that I previously wrote about it.]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/03/16/pgdaypl-postponed/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Is my autovacuum configured properly?</title>
		<link>https://www.depesz.com/2022/03/13/is-my-autovacuum-configured-properly/</link>
					<comments>https://www.depesz.com/2022/03/13/is-my-autovacuum-configured-properly/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Sun, 13 Mar 2022 16:14:52 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[autovacuum]]></category>
		<category><![CDATA[autovacuum_max_workers]]></category>
		<category><![CDATA[autovacuum_vacuum_cost_delay]]></category>
		<category><![CDATA[autovacuum_vacuum_cost_limit]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[understanding]]></category>
		<category><![CDATA[vacuum_cost_delay]]></category>
		<category><![CDATA[vacuum_cost_limit]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4059</guid>

					<description><![CDATA[Autovacuum was added LONG time ago (in 7.4, as pg_autovacuum). Since then, there were many changes related to it. These days, hopefully, we no longer see someone saying that they have to disable autovacuum due to performance issues. But I still see people that say that they have to run daily/weekly vacuum because &#8220;autovacuum is &#8230; <a href="https://www.depesz.com/2022/03/13/is-my-autovacuum-configured-properly/" class="more-link">Continue reading<span class="screen-reader-text"> "Is my autovacuum configured properly?"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/03/13/is-my-autovacuum-configured-properly/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>New type of hints on explain.depesz.com</title>
		<link>https://www.depesz.com/2022/03/07/new-type-of-hints-on-explain-depesz-com/</link>
					<comments>https://www.depesz.com/2022/03/07/new-type-of-hints-on-explain-depesz-com/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Mon, 07 Mar 2022 12:22:50 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[explain]]></category>
		<category><![CDATA[explain.depesz.com]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[perl]]></category>
		<category><![CDATA[postgresql]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4057</guid>

					<description><![CDATA[As of now, explain.depesz.com will provide hints for seq scans with multiple equality conditions joined with AND. For example: select * from table where proj_type = 'GR14' AND week = 2000 AND pop_flag = '1' You can see it in action in this plan. Hope you'll find it useful.]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/03/07/new-type-of-hints-on-explain-depesz-com/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>How to index data with tsearch?</title>
		<link>https://www.depesz.com/2022/03/01/how-to-index-data-with-tsearch/</link>
					<comments>https://www.depesz.com/2022/03/01/how-to-index-data-with-tsearch/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Tue, 01 Mar 2022 10:54:27 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[column]]></category>
		<category><![CDATA[function]]></category>
		<category><![CDATA[generated]]></category>
		<category><![CDATA[index]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[slack]]></category>
		<category><![CDATA[tsearch]]></category>
		<category><![CDATA[tsvector]]></category>
		<category><![CDATA[virtual]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4052</guid>

					<description><![CDATA[Someone asked recently on Slack, whether one should build tsvector data in a field, and index it, or make index on expression. We talked about it for a while, and I thought I'll reformat my thoughts into blogpost to avoid retyping it next time. For starters &#8211; I don't like having tsvector column. It doesn't &#8230; <a href="https://www.depesz.com/2022/03/01/how-to-index-data-with-tsearch/" class="more-link">Continue reading<span class="screen-reader-text"> "How to index data with tsearch?"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/03/01/how-to-index-data-with-tsearch/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>PGDayPL is coming :)</title>
		<link>https://www.depesz.com/2022/02/21/pgdaypl-is-coming/</link>
					<comments>https://www.depesz.com/2022/02/21/pgdaypl-is-coming/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Mon, 21 Feb 2022 11:28:06 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[2022]]></category>
		<category><![CDATA[announcements]]></category>
		<category><![CDATA[conference]]></category>
		<category><![CDATA[pgday]]></category>
		<category><![CDATA[pgdaypl]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[warsaw]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4050</guid>

					<description><![CDATA[Following is text provided by organizers. On my end I can say that I'll be there, and I'm on &#8220;Talk selection team" 🙂 The first ever Polish PostgreSQL conference is approaching faster than we think. On April 22, 2022, we invite you to spend the whole day gaining top technical knowledge and broadening your horizons. &#8230; <a href="https://www.depesz.com/2022/02/21/pgdaypl-is-coming/" class="more-link">Continue reading<span class="screen-reader-text"> "PGDayPL is coming :)"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/02/21/pgdaypl-is-coming/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>explain.depesz.com – now with HINTS!</title>
		<link>https://www.depesz.com/2022/02/16/explain-depesz-com-now-with-hints/</link>
					<comments>https://www.depesz.com/2022/02/16/explain-depesz-com-now-with-hints/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Wed, 16 Feb 2022 11:31:43 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[announce]]></category>
		<category><![CDATA[explain.depesz.com]]></category>
		<category><![CDATA[hint]]></category>
		<category><![CDATA[perl]]></category>
		<category><![CDATA[pg::explain]]></category>
		<category><![CDATA[postgresql]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4047</guid>

					<description><![CDATA[I just pushed change to explain.depesz.com that allows for processing and displaying hints for plans. For example, take a look at this plan, and check if you'll notice subtle &#8220;HINTS" tab. In there you will see example hints &#8211; one about sort and memory, and the other about missing index. It is not much, but &#8230; <a href="https://www.depesz.com/2022/02/16/explain-depesz-com-now-with-hints/" class="more-link">Continue reading<span class="screen-reader-text"> "explain.depesz.com &#8211; now with HINTS!"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/02/16/explain-depesz-com-now-with-hints/feed/</wfw:commentRss>
			<slash:comments>3</slash:comments>
		
		
			</item>
		<item>
		<title>How much disk space you can save by using INT4/INT instead of INT8/BIGINT?</title>
		<link>https://www.depesz.com/2022/02/13/how-much-disk-space-you-can-save-by-using-int4-int-instead-of-int8-bigint/</link>
					<comments>https://www.depesz.com/2022/02/13/how-much-disk-space-you-can-save-by-using-int4-int-instead-of-int8-bigint/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Sun, 13 Feb 2022 13:37:06 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[bool]]></category>
		<category><![CDATA[float4]]></category>
		<category><![CDATA[float8]]></category>
		<category><![CDATA[int]]></category>
		<category><![CDATA[int2]]></category>
		<category><![CDATA[int4]]></category>
		<category><![CDATA[int8]]></category>
		<category><![CDATA[integer]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[saving]]></category>
		<category><![CDATA[size]]></category>
		<category><![CDATA[space]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4045</guid>

					<description><![CDATA[Lately there have been couple of discussions on IRC, Slack, and Reddit that showed that people assume that by using int4/integer they use 4 bytes less than they would in case of int8/bigint. This is not really the case. Let me explain why. First quick test. On my computer, which is running some Ryzen processor, &#8230; <a href="https://www.depesz.com/2022/02/13/how-much-disk-space-you-can-save-by-using-int4-int-instead-of-int8-bigint/" class="more-link">Continue reading<span class="screen-reader-text"> "How much disk space you can save by using INT4/INT instead of INT8/BIGINT?"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/02/13/how-much-disk-space-you-can-save-by-using-int4-int-instead-of-int8-bigint/feed/</wfw:commentRss>
			<slash:comments>5</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Allow archiving via loadable modules.</title>
		<link>https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-allow-archiving-via-loadable-modules/</link>
					<comments>https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-allow-archiving-via-loadable-modules/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Sun, 06 Feb 2022 22:55:57 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[archive_command]]></category>
		<category><![CDATA[archive_library]]></category>
		<category><![CDATA[archive_mode]]></category>
		<category><![CDATA[archiving]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[pg_stat_archiver]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4038</guid>

					<description><![CDATA[On 3rd of February 2022, Robert Haas committed patch: Allow archiving via loadable modules. &#160; Running a shell command for each file to be archived has a lot of overhead and may not offer as much error checking as you want, or the exact semantics that you want. So, offer the option to call a &#8230; <a href="https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-allow-archiving-via-loadable-modules/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Allow archiving via loadable modules."</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-allow-archiving-via-loadable-modules/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Add UNIQUE null treatment option</title>
		<link>https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-add-unique-null-treatment-option/</link>
					<comments>https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-add-unique-null-treatment-option/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Sun, 06 Feb 2022 14:34:48 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[constraint]]></category>
		<category><![CDATA[distinct]]></category>
		<category><![CDATA[index]]></category>
		<category><![CDATA[not]]></category>
		<category><![CDATA[null]]></category>
		<category><![CDATA[nulls]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[unique]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4036</guid>

					<description><![CDATA[On 3rd of February 2022, Peter Eisentraut committed patch: Add UNIQUE null treatment option &#160; The SQL standard has been ambiguous about whether null values in unique constraints should be considered equal or not. Different implementations have different behaviors. In the SQL:202x draft, this has been formalized by making this implementation-defined and adding an option &#8230; <a href="https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-add-unique-null-treatment-option/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Add UNIQUE null treatment option"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/02/06/waiting-for-postgresql-15-add-unique-null-treatment-option/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Add HEADER support to COPY text format</title>
		<link>https://www.depesz.com/2022/01/28/waiting-for-postgresql-15-add-header-support-to-copy-text-format/</link>
					<comments>https://www.depesz.com/2022/01/28/waiting-for-postgresql-15-add-header-support-to-copy-text-format/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Fri, 28 Jan 2022 11:00:22 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[copy]]></category>
		<category><![CDATA[csv]]></category>
		<category><![CDATA[header]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4034</guid>

					<description><![CDATA[On 28th of January 2022, Peter Eisentraut committed patch: Add HEADER support to COPY text format &#160; The COPY CSV format supports the HEADER option to output a header line. This patch adds the same option to the default text format. On input, the HEADER option causes the first line to be skipped, same as &#8230; <a href="https://www.depesz.com/2022/01/28/waiting-for-postgresql-15-add-header-support-to-copy-text-format/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Add HEADER support to COPY text format"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/01/28/waiting-for-postgresql-15-add-header-support-to-copy-text-format/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Introduce log_destination=jsonlog</title>
		<link>https://www.depesz.com/2022/01/17/waiting-for-postgresql-15-introduce-log_destinationjsonlog/</link>
					<comments>https://www.depesz.com/2022/01/17/waiting-for-postgresql-15-introduce-log_destinationjsonlog/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Mon, 17 Jan 2022 11:46:03 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[jq]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[jsonlog]]></category>
		<category><![CDATA[log]]></category>
		<category><![CDATA[logs]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4032</guid>

					<description><![CDATA[On 17th of January 2022, Michael Paquier committed patch: Introduce log_destination=jsonlog &#160; &#34;jsonlog&#34; is a new value that can be added to log_destination to provide logs in the JSON format, with its output written to a file, making it the third type of destination of this kind, after &#34;stderr&#34; and &#34;csvlog&#34;. The format is convenient &#8230; <a href="https://www.depesz.com/2022/01/17/waiting-for-postgresql-15-introduce-log_destinationjsonlog/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Introduce log_destination=jsonlog"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/01/17/waiting-for-postgresql-15-introduce-log_destinationjsonlog/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Configuration changes across Pg versions</title>
		<link>https://www.depesz.com/2022/01/17/configuration-changes-across-pg-versions/</link>
					<comments>https://www.depesz.com/2022/01/17/configuration-changes-across-pg-versions/#comments</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Mon, 17 Jan 2022 10:45:14 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[changes]]></category>
		<category><![CDATA[docs]]></category>
		<category><![CDATA[guc]]></category>
		<category><![CDATA[perl]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[why-upgrade]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4030</guid>

					<description><![CDATA[Back in 2018 I wrote why-upgrade.depesz.com &#8211; aggregator of changelogs between various versions of Pg. Want to know what you will get when upgrading from 12.1 to 12.9? Here you go. Longer time changes? Like, from 9.5.20 to 14.1? I've got your back. It even has a way to list every change that relates to &#8230; <a href="https://www.depesz.com/2022/01/17/configuration-changes-across-pg-versions/" class="more-link">Continue reading<span class="screen-reader-text"> "Configuration changes across Pg versions"</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2022/01/17/configuration-changes-across-pg-versions/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
		<item>
		<title>Waiting for PostgreSQL 15 – Add assorted new regexp_xxx SQL functions.</title>
		<link>https://www.depesz.com/2021/11/26/waiting-for-postgresql-15-add-assorted-new-regexp_xxx-sql-functions/</link>
					<comments>https://www.depesz.com/2021/11/26/waiting-for-postgresql-15-add-assorted-new-regexp_xxx-sql-functions/#respond</comments>
		
		<dc:creator><![CDATA[depesz]]></dc:creator>
		<pubDate>Fri, 26 Nov 2021 12:04:15 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[pg15]]></category>
		<category><![CDATA[postgresql]]></category>
		<category><![CDATA[regexp]]></category>
		<category><![CDATA[regexp_count]]></category>
		<category><![CDATA[regexp_instr]]></category>
		<category><![CDATA[regexp_like]]></category>
		<category><![CDATA[regexp_replace]]></category>
		<category><![CDATA[regexp_substr]]></category>
		<category><![CDATA[waiting]]></category>
		<guid isPermaLink="false">https://www.depesz.com/?p=4025</guid>

					<description><![CDATA[On 3rd of August 2021, Tom Lane committed patch: Add assorted new regexp_xxx SQL functions. &#160; This patch adds new functions regexp_count(), regexp_instr(), regexp_like(), and regexp_substr(), and extends regexp_replace() with some new optional arguments. All these functions follow the definitions used in Oracle, although there are small differences in the regexp language due to using &#8230; <a href="https://www.depesz.com/2021/11/26/waiting-for-postgresql-15-add-assorted-new-regexp_xxx-sql-functions/" class="more-link">Continue reading<span class="screen-reader-text"> "Waiting for PostgreSQL 15 &#8211; Add assorted new regexp_xxx SQL functions."</span></a>]]></description>
		
					<wfw:commentRss>https://www.depesz.com/2021/11/26/waiting-for-postgresql-15-add-assorted-new-regexp_xxx-sql-functions/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
