{
  "title":"Introducing Omnimattes: A New Approach to Matte Generation using Layered Neural Rendering",
  "date":"2021-08-31T12:11:00.161000-07:00",
  "author":"Google AI",
  "id":"tag:blogger.com,1999:blog-8474926331452026626.post-9122495542218916204",
  "link":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/5iEJxUm_GYw/introducing-omnimattes-new-approach-to.html",
  "content":"<span class=\"byline-author\">Posted by Forrester Cole, Software Engineer and Tali Dekel, Research Scientist</span> <p>Image and video editing operations often rely on accurate <em><a href=\"https://en.wikipedia.org/wiki/Matte_(filmmaking)\">mattes</a></em> — images that define a separation between foreground and background. While recent computer vision techniques can produce high-quality mattes for natural images and videos, allowing real-world applications such as <a href=\"https://ai.googleblog.com/2017/10/portrait-mode-on-pixel-2-and-pixel-2-xl.html\">generating synthetic depth-of-field</a>, <a href=\"https://nvlabs.github.io/SPADE/\">editing and synthesising images</a>, or <a href=\"http://remove.bg\">removing backgrounds from images</a>, one fundamental piece is missing: the various scene effects that the subject may generate, like shadows, reflections, or smoke, are typically overlooked. </p><p>In “<a href=\"https://arxiv.org/pdf/2105.06993.pdf\">Omnimatte: Associating Objects and Their Effects in Video</a>”, presented at <a href=\"http://cvpr2021.thecvf.com/\">CVPR 2021</a>, we describe a new approach to matte generation that leverages <a href=\"http://retiming.github.io\">layered neural rendering</a> to separate a video into layers called <em>omnimattes</em> that include not only the subjects but also all of the effects related to them in the scene. Whereas a typical state-of-the-art segmentation model extracts masks for the subjects in a scene, for example, a person and a dog, the method proposed here can isolate and extract additional details associated with the subjects, such as shadows cast on the ground.  </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://1.bp.blogspot.com/-Ls9dI4deXPg/YS5Tady9aHI/AAAAAAAAICI/kzxGDtAYNQsI9EBm7id_t3c4kk7Mg-sTwCLcBGAsYHQ/s1384/image6.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-Ls9dI4deXPg/YS5Tady9aHI/AAAAAAAAICI/kzxGDtAYNQsI9EBm7id_t3c4kk7Mg-sTwCLcBGAsYHQ/s16000/image6.gif\"></a></td></tr><tr><td class=\"tr-caption\">A state-of-the-art segmentation network (e.g., <a href=\"https://github.com/facebookresearch/detectron2\">MaskRCNN</a>) takes an input video (<b>left</b>) and produces plausible masks for people and animals (<b>middle</b>), but misses their associated effects. Our method produces mattes that include not only the subjects, but their shadows as well (<b>right</b>; individual channels for person and dog visualized as blue and green).</td></tr></tbody></table><p>Also unlike segmentation masks, omnimattes can capture partially-transparent, soft effects such as reflections, splashes, or tire smoke. Like conventional mattes, omnimattes are <a href=\"https://en.wikipedia.org/wiki/RGBA_color_model\">RGBA images</a> that can be manipulated using widely-available image or video editing tools, and can be used wherever conventional mattes are used, for example, to insert text into a video underneath a smoke trail. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://1.bp.blogspot.com/-vN2PKtEEeKc/YS5UOQke4cI/AAAAAAAAICY/XQGVCx2z4H4M_jNz-tBgYRBcYGJEdJqiwCLcBGAsYHQ/s1920/drift.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-vN2PKtEEeKc/YS5UOQke4cI/AAAAAAAAICY/XQGVCx2z4H4M_jNz-tBgYRBcYGJEdJqiwCLcBGAsYHQ/s16000/drift.gif\"></a></td></tr><tr><td class=\"tr-caption\"/></tr></tbody></table><p><b>Layered Decomposition of Video</b><br>To generate omnimattes, we split the input video into a set of layers: one for each moving subject, and one additional layer for stationary background objects. In the example below, there is one layer for the person, one for the dog, and one for the background. When merged together using conventional <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">alpha blending</a>, these layers reproduce the input video. </p><div><a href=\"https://1.bp.blogspot.com/-Qq3cN8QyjUg/YS5UYDmPN1I/AAAAAAAAICc/CFjjT0MYe681xNRMcB1wukJSPSQ6lXp4ACLcBGAsYHQ/s1892/image5.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-Qq3cN8QyjUg/YS5UYDmPN1I/AAAAAAAAICc/CFjjT0MYe681xNRMcB1wukJSPSQ6lXp4ACLcBGAsYHQ/s16000/image5.gif\"></a></div><p>Besides reproducing the video, the decomposition must capture the correct effects in each layer. For example, if the person’s shadow appears in the dog’s layer, the merged layers would still reproduce the input video, but inserting an additional element between the person and dog would produce an obvious error. The challenge is to find a decomposition where each subject’s layer captures only that subject’s effects, producing a true omnimatte.  </p><p>Our solution is to apply our previously developed layered neural rendering approach to train a <a href=\"https://en.wikipedia.org/wiki/Convolutional_neural_network\">convolutional neural network</a> (CNN) to map the subject’s segmentation mask and a background noise image into an omnimatte. Due to their structure, CNNs are naturally inclined to learn correlations between image effects, and the stronger the correlation between the effects, the easier for the CNN to learn. In the above video, for example, the spatial relationships between the person and their shadow, and the dog and its shadow, remain similar as they walk from right to left. The relationships change more (hence, the correlations are weaker) between the <em>person</em> and the <em>dog’s shadow</em>, or the <em>dog</em> and the <em>person’s shadow</em>. The CNN learns the stronger correlations first, leading to the correct decomposition.  </p><p>The omnimatte system is shown in detail below. In a preprocess, the user chooses the subjects and specifies a layer for each. A segmentation mask for each subject is extracted using an off-the-shelf segmentation network, such as <a href=\"https://github.com/facebookresearch/detectron2\">MaskRCNN</a>, and camera transformations relative to the background are found using standard camera stabilization tools. A random noise image is defined in the background reference frame and sampled using the camera transformations to produce per-frame noise images. The noise images provide image features that are random but consistently track the background over time, providing a natural input for the CNN to learn to reconstruct the background colors. </p><p>The rendering CNN takes as input the segmentation mask and the per-frame noise images and produces the RGB color images and alpha maps, which capture the transparency of each layer. These outputs are merged using conventional alpha-blending to produce the output frame. The CNN is trained from scratch to reconstruct the input frames by finding and associating the effects not captured in a mask (e.g., shadows, reflections or smoke) with the given foreground layer, and to ensure the subject’s alpha roughly includes the segmentation mask. To make sure the foreground layers only capture the foreground elements and none of the stationary background, a sparsity loss is also applied on the foreground alpha. </p><div><a href=\"https://1.bp.blogspot.com/-f9_xN5FA7YU/YS5UnO_1NpI/AAAAAAAAICk/IQGAVz3uoewvVyG6E_728h5lIYe9xXX3gCLcBGAsYHQ/s1999/image4.jpg\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-f9_xN5FA7YU/YS5UnO_1NpI/AAAAAAAAICk/IQGAVz3uoewvVyG6E_728h5lIYe9xXX3gCLcBGAsYHQ/s16000/image4.jpg\"></a></div><p>A new rendering network is trained for each video. Because the network is only required to reconstruct the single input video, it is able to capture fine structures and fast motion in addition to separating the effects of each subject, as seen below. In the walking example, the omnimatte includes the shadow cast on the slats of the park bench. In the tennis example, the thin shadow and even the tennis ball are captured. In the soccer example, the shadow of the player and the ball are decomposed into their proper layers (with a slight error when the player’s foot is occluded by the ball). </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\"><tbody>  <tr><td><a href=\"https://1.bp.blogspot.com/-jVTCSl4Xxdw/YS5WEgGzsQI/AAAAAAAAIC4/oHDnCt02wSUj_n_M9j9e7eeKUJCPnBqtgCLcBGAsYHQ/s1958/LNR1.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-jVTCSl4Xxdw/YS5WEgGzsQI/AAAAAAAAIC4/oHDnCt02wSUj_n_M9j9e7eeKUJCPnBqtgCLcBGAsYHQ/s16000/LNR1.gif\"></a></td></tr>  <tr><td><a href=\"https://1.bp.blogspot.com/--uMevLo4TT0/YS5WI-skb8I/AAAAAAAAIC8/ona8JErFlekbSmL4bQfr855k7xJ8Iw-BgCLcBGAsYHQ/s1999/LNR2.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/--uMevLo4TT0/YS5WI-skb8I/AAAAAAAAIC8/ona8JErFlekbSmL4bQfr855k7xJ8Iw-BgCLcBGAsYHQ/s16000/LNR2.gif\"></a></td></tr>  <tr><td><a href=\"https://1.bp.blogspot.com/-GvZZz55oQDU/YS5WOIFGrCI/AAAAAAAAIDA/iyBI8gu_CwsNpYwZNuhi72ajZCAqu4OcQCLcBGAsYHQ/s1999/image7.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-GvZZz55oQDU/YS5WOIFGrCI/AAAAAAAAIDA/iyBI8gu_CwsNpYwZNuhi72ajZCAqu4OcQCLcBGAsYHQ/s16000/image7.gif\"></a></td></tr></tbody></table><p>This basic model already works well, but <a href=\"https://omnimatte.github.io/supplementary/index.html#ablations\">one can improve the results</a> by augmenting the input of the CNN with additional buffers such as optical flow or texture coordinates. </p><p><b>Applications</b><br>Once the omnimattes are generated, how can they be used? As shown above, we can remove objects, simply by removing their layer from the composition. We can also duplicate objects, by repeating their layer in the composition. In the example below, the video has been “unwrapped” into a panorama, and the horse duplicated several times to produce a <a href=\"https://en.wikipedia.org/wiki/Stroboscopic_effect\">stroboscopic photograph</a> effect. Note that the shadow that the horse casts on the ground and onto the obstacle is correctly captured. </p><div><a href=\"https://1.bp.blogspot.com/-At-5jhezNCY/YS5WZJ4R8tI/AAAAAAAAIDI/R1ss5X7zw5cuLoIloOyWkY9b8RFsSE68gCLcBGAsYHQ/s1652/image2.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-At-5jhezNCY/YS5WZJ4R8tI/AAAAAAAAIDI/R1ss5X7zw5cuLoIloOyWkY9b8RFsSE68gCLcBGAsYHQ/s16000/image2.gif\"></a></div><p>A more subtle, but powerful application is to <em>retime</em> the subjects. Manipulation of time is widely used in film, but usually requires separate shots for each subject and a controlled filming environment. A decomposition into omnimattes makes retiming effects possible for everyday videos using only post-processing, simply by independently changing the playback rate of each layer. Since the omnimattes are standard RGBA images, this retiming edit can be done using conventional video editing software.  </p><p>The video below is decomposed into three layers, one for each child. The children’s initial, unsynchronized jumps are aligned by simply adjusting the playback rate of their layers, producing realistic retiming for the splashes and reflections in the water.  </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://1.bp.blogspot.com/-scdYcnEj-Zs/YS5Wgas87cI/AAAAAAAAIDQ/43nqnHxuRTcl4rSosq-6aM7OrpIgq3aXQCLcBGAsYHQ/s720/image8.gif\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-scdYcnEj-Zs/YS5Wgas87cI/AAAAAAAAIDQ/43nqnHxuRTcl4rSosq-6aM7OrpIgq3aXQCLcBGAsYHQ/s16000/image8.gif\"></a></td></tr><tr><td class=\"tr-caption\">In the original video (<b>left</b>), each child jumps at a different time. After editing (<b>right</b>), everyone jumps together.</td></tr></tbody></table><p>It’s important to consider that any novel technique for manipulating images should be developed and applied responsibly, as it could be misused to produce fake or misleading information. Our technique was developed in accordance with our <a href=\"https://ai.google/principles/\">AI Principles</a> and only allows rearrangement of content already present in the video, but even simple rearrangement can significantly alter the effect of a video, as shown in these examples. Researchers should be aware of these risks.  </p><p><b>Future Work</b><br>There are a number of exciting directions to improve the quality of the omnimattes. On a practical level, this system currently only supports backgrounds that can be modeled as panoramas, where the position of the camera is fixed. When the camera position moves, the panorama model cannot accurately capture the entire background, and some background elements may clutter the foreground layers (sometimes visible in the above figures). Handling fully general camera motion, such as walking through a room or down a street, would require a 3D background model. Reconstruction of 3D scenes in the presence of moving objects and effects is still a difficult research challenge, but one that has seen promising recent progress. </p><p>On a theoretical level, the ability of CNNs to learn correlations is powerful, but still somewhat mysterious, and does not always lead to the expected layer decomposition. While our system allows for manual editing when the automatic result is imperfect, a better solution would be to fully understand the capabilities and limitations of CNNs to learn image correlations. Such an understanding could lead to improved denoising, inpainting, and many other video editing applications besides layer decomposition. </p><p><b>Acknowledgements</b><br><em>Erika Lu, from the University of Oxford, developed the omnimatte system during two internships at Google, in collaboration with Google researchers Forrester Cole, Tali Dekel, Michael Rubinstein, William T. Freeman and David Salesin, and University of Oxford researchers Weidi Xie and Andrew Zisserman.</em></p><p><em>Thank you to the friends and families of the authors who agreed to appear in the example videos. The “horse jump low”, “lucia”, and “tennis” videos are from the <a href=\"https://davischallenge.org/\">DAVIS 2016 dataset</a>. The soccer video is used by permission from <a href=\"https://www.youtube.com/watch?v=70k5fJ4A_6g&amp;t=75s\">Online Soccer Skills</a>. The car drift video was licensed from Shutterstock. </em></p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?a=5iEJxUm_GYw:LukkNC0p9ls:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA\" border=\"0\">&lt;img&gt;</a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/blogspot/gJZg/~4/5iEJxUm_GYw\" height=\"1\" width=\"1\" alt=\"\">"
}