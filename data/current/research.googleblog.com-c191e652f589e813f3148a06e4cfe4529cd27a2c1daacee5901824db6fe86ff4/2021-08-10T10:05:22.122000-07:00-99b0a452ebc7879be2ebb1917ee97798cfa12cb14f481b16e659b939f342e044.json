{
  "title":"The C4_200M Synthetic Dataset for Grammatical Error Correction",
  "date":"2021-08-10T10:05:22.122000-07:00",
  "author":"Google AI",
  "id":"tag:blogger.com,1999:blog-8474926331452026626.post-666974994619027383",
  "link":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/8aK9rONXDvA/the-c4200m-synthetic-dataset-for.html",
  "content":"<span class=\"byline-author\">Posted by Felix Stahlberg and Shankar Kumar, Research Scientists, Google Research</span> <p>Grammatical error correction (GEC) attempts to model grammar and other types of writing errors in order to provide <a href=\"https://support.google.com/docs/answer/57859?hl=en&amp;co=GENIE.Platform%3DDesktop\">grammar and spelling suggestions</a>, improving the quality of written output in documents,  emails, blog posts and even informal chats.  Over the past 15 years, there has been a substantial improvement in GEC quality, which can in large part be credited to <a href=\"https://aclanthology.org/P06-1032/\">recasting the problem as a &quot;translation&quot; task</a>. When introduced in Google Docs, for example, this approach resulted in a <a href=\"https://cloud.google.com/blog/products/productivity-collaboration/using-neural-machine-translation-to-correct-grammatical-in-google-docs\">significant increase</a> in the number of accepted grammar correction suggestions. </p><p>One of the biggest challenges for GEC models, however, is data sparsity. Unlike other <a href=\"https://en.wikipedia.org/wiki/Natural_language_processing\">natural language processing</a> (NLP) tasks, such as <a href=\"https://en.wikipedia.org/wiki/Speech_recognition\">speech recognition</a> and <a href=\"https://en.wikipedia.org/wiki/Machine_translation\">machine translation</a>, there is very limited training data available for GEC, even for high-resource languages like English. A common remedy for this is to generate synthetic data using a range of techniques, from heuristic-based random word- or character-level corruptions to model-based approaches. However, such methods tend to be simplistic and do not reflect the true distribution of error types from actual users. </p><p>In “<a href=\"https://aclanthology.org/2021.bea-1.4/\">Synthetic Data Generation for Grammatical Error Correction with Tagged Corruption Models</a>”, presented at the <a href=\"https://sig-edu.org/bea/current\">EACL 16th Workshop on Innovative Use of NLP for Building Educational Applications</a>, we introduce <em>tagged corruption models</em>. Inspired by the popular <a href=\"https://aclanthology.org/P16-1009/\">back-translation</a> data synthesis technique for machine translation, this approach enables the precise control of synthetic data generation, ensuring diverse outputs that are more consistent with the distribution of errors seen in practice. We used tagged corruption models to generate a new <a href=\"https://github.com/google-research-datasets/C4_200M-synthetic-dataset-for-grammatical-error-correction\">200M sentence dataset</a>, which we have released in order to provide researchers with realistic pre-training data for GEC. By integrating this new dataset into our training pipeline, we were able to significantly improve on GEC baselines. </p><p><b>Tagged Corruption Models</b><br>The idea behind applying a conventional corruption model to GEC is to begin with a grammatically correct sentence and then to “corrupt” it by adding errors. A corruption model can be easily trained by switching the source and target sentences in existing GEC datasets, a method that <a href=\"https://aclanthology.org/D19-1119.pdf\">previous studies</a> have shown that can be very effective for generating improved GEC datasets. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://1.bp.blogspot.com/-Zx6Flw-RtQw/YRKkRss4C_I/AAAAAAAAIAU/4q9TyaAKxgoDZtwjRtbe6qe1YTRq6rRsgCLcBGAsYHQ/s898/image1.png\"><img border=\"0\" height=\"65\" src=\"https://1.bp.blogspot.com/-Zx6Flw-RtQw/YRKkRss4C_I/AAAAAAAAIAU/4q9TyaAKxgoDZtwjRtbe6qe1YTRq6rRsgCLcBGAsYHQ/w400-h65/image1.png\" width=\"400\"></a></td></tr><tr><td class=\"tr-caption\">A conventional corruption model generates an ungrammatical sentence (red) given a clean input sentence (green).</td></tr></tbody></table><p>The tagged corruption model that we propose builds on this idea by taking a clean sentence as input along with an error type tag that describes the kind of error one wishes to reproduce. It then generates an ungrammatical version of the input sentence that contains the given error type. Choosing different error types for different sentences increases the diversity of corruptions compared to a conventional corruption model. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://1.bp.blogspot.com/-uCHKxsDfiMs/YRKkZaOh5wI/AAAAAAAAIAY/yFPMFMdXGbgV-6ttFnvCecQYYmAUzDuAQCLcBGAsYHQ/s905/image3.png\"><img border=\"0\" height=\"175\" src=\"https://1.bp.blogspot.com/-uCHKxsDfiMs/YRKkZaOh5wI/AAAAAAAAIAY/yFPMFMdXGbgV-6ttFnvCecQYYmAUzDuAQCLcBGAsYHQ/w400-h175/image3.png\" width=\"400\"></a></td></tr><tr><td class=\"tr-caption\">Tagged corruption models generate corruptions (red) for the clean input sentence (green) depending on the error type tag. A determiner error may lead to dropping the “a”, whereas a noun-inflection error may produce the incorrect plural “sheeps”.</td></tr></tbody></table><p>To use this model for data generation we first randomly selected 200M clean sentences from the <a href=\"https://ai.googleblog.com/2020/02/exploring-transfer-learning-with-t5.html\">C4 corpus</a>, and assigned an error type tag to each sentence such that their relative frequencies matched the error type tag distribution of the small development set <a href=\"https://aclanthology.org/W19-4406.pdf\">BEA-dev</a>. Since <a href=\"https://aclanthology.org/W19-4406.pdf\">BEA-dev</a> is a carefully curated set that covers a wide range of different English proficiency levels, we expect its tag distribution to be representative for writing errors found in the wild. We then used a tagged corruption model to synthesize the source sentence. </p><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://1.bp.blogspot.com/-p-MlaFmtZdk/YRKkeiueWKI/AAAAAAAAIAc/G5toJpx3nHILZ6u_hGypQISNvKnOxCr3QCLcBGAsYHQ/s1213/image2.png\"><img border=\"0\" height=\"288\" src=\"https://1.bp.blogspot.com/-p-MlaFmtZdk/YRKkeiueWKI/AAAAAAAAIAc/G5toJpx3nHILZ6u_hGypQISNvKnOxCr3QCLcBGAsYHQ/w640-h288/image2.png\" width=\"640\"></a></td></tr><tr><td class=\"tr-caption\">Synthetic data generation with tagged corruption models. The clean C4 sentences (green) are paired with the corrupted sentences (red) in the synthetic GEC training corpus. The corrupted sentences are generated using a tagged corruption model by following the error type frequencies in the development set (bar chart).</td></tr></tbody></table><p><b>Results</b><br>In our experiments, tagged corruption models outperformed untagged corruption models on two standard development sets (<a href=\"https://aclanthology.org/W13-3601.pdf\">CoNLL-13</a> and <a href=\"https://aclanthology.org/W19-4406.pdf\">BEA-dev</a>) by more than three F0.5-points (a <a href=\"https://aclanthology.org/P17-1074/\">standard metric</a> in GEC research that combines <a href=\"https://en.wikipedia.org/wiki/Precision_and_recall\">precision and recall</a> with more weight on precision), advancing the state-of-the-art on the two widely used academic test sets, <a href=\"https://aclanthology.org/W14-1701.pdf\">CoNLL-14</a> and <a href=\"https://aclanthology.org/W19-4406.pdf\">BEA-test</a>.  </p><p>In addition, the use of tagged corruption models not only yields gains on standard GEC test sets, it is also able to adapt GEC systems to the proficiency levels of users. This could be useful, for example, because the error tag distribution for native English writers often differs significantly from the distributions for non-native English speakers. For example, native speakers tend to make more punctuation and spelling mistakes, whereas determiner errors (e.g., missing or superfluous articles, like “a”, “an” or “the”) are more common in text from non-native writers. </p><p><b>Conclusion</b><br>Neural sequence models are notoriously data-hungry, but the availability of annotated training data for grammatical error correction is rare. Our new <a href=\"https://github.com/google-research-datasets/C4_200M-synthetic-dataset-for-grammatical-error-correction\">C4_200M corpus</a> is a synthetic dataset containing diverse grammatical errors, which yields state-of-the-art performance when used to pre-train GEC systems. By releasing the dataset we hope to provide GEC researchers with a valuable resource to train strong baseline systems. </p><div class=\"feedflare\">\r\n<a href=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?a=8aK9rONXDvA:gykdO2p2itI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA\" border=\"0\">&lt;img&gt;</a>\r\n</div><img src=\"http://feeds.feedburner.com/~r/blogspot/gJZg/~4/8aK9rONXDvA\" height=\"1\" width=\"1\" alt=\"\">"
}