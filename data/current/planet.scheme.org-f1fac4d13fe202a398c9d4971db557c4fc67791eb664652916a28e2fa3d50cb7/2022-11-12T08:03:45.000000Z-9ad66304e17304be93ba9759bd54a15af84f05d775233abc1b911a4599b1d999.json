{
  "title":"First steps toward Guix Home",
  "date":"2022-11-12T08:03:45.000000Z",
  "author":null,
  "id":"https://rednosehacker.com/first-steps-toward-guix-home",
  "link":"https://rednosehacker.com/first-steps-toward-guix-home?pk_campaign=rss-feed",
  "content":"\n\nIn this article, I will show you, step by step, how one can simply install and configure software they use with Guix Home. For the demonstration, I will focus on a single package.\n\nDisclaimer: I'm not an experienced Guix Home user. So don't take my words for granted. Read manuals, ask questions.\n\nSo far, to install a software, say Emacs, for my user, I could simply :\n$ guix install emacs\nOr, I could write a manifest and use it to populate my default user profile (or a custom one) :\n$ guix package --manifest=$HOME/manifest.scm\nWhere manifest.scm contains the following :\n\n(specifications-&gt;manifest (list &quot;emacs&quot;))\n\n\nThen, the configuration for the new software had to be edited separately.\nHere is a dummy ~/.config/emacs/init.el :\n\n(setq initial-scratch-message nil)\n\n\nNow, let's use Guix Home to start managing the whole !\n\nThe blank home\n\nGuix Home ask you for two things : a list of packages and a list of home services.\nSo a blank Guix Home configuration file (which installs and configures nothing) would look like this :\n\n(use-modules (gnu home))\n\n(home-environment\n (packages (list))\n (services (list)))\n\n\nYou can save this expressions in a file named home-configuration.scm. So you now can invoke Guix Home to generate a home environment from this blank configuration :\n\n$ guix home container home-configuration.scm\n\n\nNo worries, this won't affect your current environment.\nTake a few seconds to see how empty this shell is and move on !\n\nOops, you need to leave the empty shell.\n\n$ exit\n\n\nInstalling the software\n\nTo tell Guix Home to add a software package to the generated home environment, you have to edit home-configuration.scm and add its name to the package list :\n\n(use-modules\n (gnu home)\n (gnu packages emacs))\n\n(home-environment\n (packages\n  (list emacs)))\n\n\nYou can now try it out.\n\n$ guix home container home-configuration.scm\n\n\nIn this shell, you can run Emacs, proof that Emacs has been added to the generated home environment.\n\n$ emacs -nw\n\n\nThen you can quit the shell.\n\nInstall the software's configuration\n\nFrom Guix Home perspective, things are packages or services. It's time to look for services. Especially one that can handle the process to configure Emacs. Simply put, a service capable of installing the init.el file on the right place : home-xdg-configuration-files-service-type.\n\nEdit home-configuration.scm to be like :\n\n(use-modules\n (gnu home)\n (gnu home services)\n (gnu packages emacs)\n (gnu services)\n (guix gexp))\n\n(home-environment\n (packages\n  (list emacs))\n (services\n  (list (service home-xdg-configuration-files-service-type\n\t\t `((&quot;emacs/init.el&quot; ,(local-file &quot;init.el&quot;)))))))\n\n\nThen, create a init.el file, with your Emacs configuration, next to the home-configuration.scm :\n\n(setq initial-scratch-message nil)\n\n\nTry it with :\n\n$ guix home container home-configuration.scm\n\n\nHere you can see there is the init.el file at ~/.config/emacs/init.el !\nSo the Emacs in this environment will use this configuration file at startupâ€¦ Ok, maybe not in the container, but trust me, it will when running (careful, it will have an effect to your current environment this time) :\n\n$ guix home reconfigure home-configuration.scm\n\n\nWarning : because there is no shell configuration in the home-configuration.scm (yet), you will need to manually configure your shell to make it benefits from the generated home environment.\n\nThank you very much for reading this article!\n\nDon't hesitate to give me your opinion, suggest an idea for improvement, report an error, or ask a question ! I would be so glad to discuss about the topic covered here with you ! You can reach me here.\n\nDon't miss out on the next ones ! Either via RSS or via e-mail !\n\n\n\nAnd more importantly, share this blog and tell your friends why they should read this post!\n\n#gnu #guix #english\n\nGPG: 036B 4D54 B7B4 D6C8 DA62 2746 700F 5E0C CBB2 E2D1\n    "
}