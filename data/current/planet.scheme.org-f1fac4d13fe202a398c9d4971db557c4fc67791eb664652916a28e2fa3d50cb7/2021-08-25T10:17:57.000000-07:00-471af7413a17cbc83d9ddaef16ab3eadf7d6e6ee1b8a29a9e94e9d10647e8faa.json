{
  "title":"Ruse Scheme shall be",
  "date":"2021-08-25T10:17:57.000000-07:00",
  "author":null,
  "id":"http://letloop.xyz/notes/2021/ruse-scheme-shall-be.html",
  "link":"http://letloop.xyz/notes/2021/ruse-scheme-shall-be.html",
  "content":"2021/05/18 - Ruse Scheme shall be\nRuse Scheme, formely known as Arew Scheme, is at this stage, a\ncollection of Scheme libraries for Chez Scheme. There is a grand\nscheme plan plot machination for it. Read on.\nWhat is a civilization kit?\nA civilization kit is a software or set of software that ease the\norganization of life. So far, there is really one civkit that is\nmostly privateer that includes and is not limited to:\n\nWikimedia project such as Wikipedia, Wikidata, Wiktionary...\nGoogle, Facebook, Github, Instagram, Twitter, Reddit, StackOverflow, Quora...\nAndroid, iOS, Firefox, Chrome..\nMacOS, FreeBSD, NetBSD, Windows, Debian, Fedora, Ubuntu...\nMastodon, and other projects that rely on activitypub...\n\nAnd many more... that is only the visible part of Earth software\nsystem. They are software that aim to ease the the production of\nsoftware or hardware. They are also software that helps with\ngovernance, provide tools to ease law making process, sustain\nproduction chain of food, energy, medecine, culture, education...\nThey are a lot of software, and that collection form a civkit.\nIs Ruse Scheme a new Scheme?\nYes, and no. It depends what is meant by a new Scheme.\nSometime a Scheme is a software that gathers many Scheme libraries,\nand rely on existing Scheme to execute their code. That is the case of\nRuse.\nMost of the time, a Scheme is a software that interpret and/or compile\na lot of parentheses that is more or less compatible with RnRS. In\nthis regard, Ruse is a Scheme, but it is not completly new. It rely on\nChez Scheme to produce executables that can be run on a server or a\ndesktop. Ruse will support Web Assembly and JavaScript to run Scheme\nin a Web browser.\nSome Scheme implementation do a little of both, and also deliver\nfeatures that go beyond past or current RnRS. Ruse does that, and\nshall reach beyond...\nThe main difference with existing Scheme implementations is not found\nat the programming language level. Ruse is and will stay a Scheme.\nThe main area Ruse try to innovate is the rest: whether it is the the\nproduction or sharing of code, Ruse aim to make it easier than sharing\na meme. Another area Ruse try to innovate is to state upfront the\nscope of the project.\nWhat are the short term goal of Ruse Scheme?\nThe short term goal of Ruse Scheme is to build a scalable search\nengine: Babelia. Babelia will both scale-up and scale-down in terms of\nrequired hardware. In other words, it may run in the cloud or on a\nRaspberry Pi.\nThat first milestone will demonstrate how to build a distributed Von\nNeumann architecture that aim to be easier to work with than current\napproaches.\nThis is the first milestone because it is easier than going fully\ndencentralized first. It will deliver the necessary tools to work with\nthe current Internet.\nThe plan is to deliver Babelia in 2022.\nWhat is the next Internet?\nThe next Internet is an Internet that is more open, more\ndecentralized, more accessible, and resting upon the fundamental\nprinciple.\nWhat is the distributed Von Neumann architecture?\nThe distributed Von Neumann architecture is like a regular computer\nthat rely on multiple commodity computers.\nIt is different from a compute grid, because it is not meant only for\nbatch processing.\nIn Babelia, that distributed computer has volatile memory,\nnon-volatile memory, possibly vectors or graphics processing units,\nand generic computation units.\nThe goal is to make it easier to build software inside a trusted\nnetwork of computers.\nWhat are the mid term goals of Ruse Scheme?\nMid term goals of Ruse Scheme are three folds:\n\nOffer enough tooling to make it easier to create, sell and make a\nliving by producing Scheme code. This includes making it painless to\ninterop with existing software.\n\nImplement a package manager inspired from Nix, and backed up by\ncontent-addressable code that can be translated into multiple\nnatural languages with the help of a decentralized peer-to-peer\nnetwork.\n\nExplore a new operating system desktop paradigm resting upon the\nfundamental principle.\n\n\nWhat is the goal of Ruse Scheme?\nThe goal of Ruse Scheme is to build a coherant bootstrapable\nwhole-stack civkit for a sustainable civilization, resting upon the\nfundamental principle.\nWhat is whole-stack?\nWhole-stack build upon the full-stack concept to include programming\ndatabases, and kernels.\nWhat is Ruse Scheme license?\nRuse Scheme is licensed under the Cooperative Non-violent Public\nLicense without exceptions.\nWhat is the fundamental principle?\nIf a system must serve the creative spirit, it must be entirely\ncomprehensible by a single individual.\n\n\n    "
}