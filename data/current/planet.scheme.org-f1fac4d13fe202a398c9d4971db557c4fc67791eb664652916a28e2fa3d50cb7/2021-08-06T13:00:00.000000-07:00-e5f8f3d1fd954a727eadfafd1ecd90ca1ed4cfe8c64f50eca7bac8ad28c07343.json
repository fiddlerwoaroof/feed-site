{
  "title":"SRFI 226: Control Features",
  "date":"2021-08-06T13:00:00.000000-07:00",
  "author":"Marc Nieper-Wi√ükirchen",
  "id":"https://srfi.schemers.org/srfi-226",
  "link":"https://srfi.schemers.org/srfi-226/srfi-226.html",
  "content":"SRFI 226 is now in draft status.    This SRFI defines a rich set of control operators for the\n      Scheme programming language, including the\n      venerable call/cc\n      (call-with-current-continuation).  The set of\n      operators was highly influenced by the control operators provided\n      by Racket.\n\n    Continuations can be delimited by continuation prompts, and all\n      continuations become delimited continuations, at the latest by\n      the default prompt at the start of each thread.  Moreover,\n      continuations are divided into composable and non-composable\n      continuations, which can be captured and reinstated.\n\n    To investigate continuations, this SRFI supports continuation\n      marks and offers operators to set and retrieve them.\n\n    Moreover, this SRFI defines clear semantics of\n      exceptions, parameter objects, promises, and threads consistent\n      with the other concepts defined here.\n    "
}