{
  "title":"Building an OCR service with Amazon Textract and AWS Lambda",
  "date":"2022-11-17T04:11:14.000000Z",
  "author":"Muhammed Ali",
  "id":"https://www.honeybadger.io/blog/amazon-textract-ocr-lambda/",
  "link":"https://www.honeybadger.io/blog/amazon-textract-ocr-lambda/",
  "content":"<p>Are you looking for a good way to extract text from PDFs and images?\nWhat about extracting text from tables? If you have these questions in mind, you are in the right place.</p>\n\n<p>In this tutorial, you will learn how to use Amazon’s Optical Character Recognition (OCR) service, Textract, to extract text from image files, PDF files, or handwritten text. The extraction can be done using Lambda functions and Textract. While we will demonstrate the process of extracting content from images,   the same process applies to PDFs and handwritten text. We will also go further to extract tables into CSV files, which can then be used in other applications. The repository for this article can be found on <a href=\"https://github.com/khabdrick/LambdaXtextract\">GitHub</a>.</p>\n\n<h2 id=\"prerequisites\">Prerequisites</h2>\n\n<p>This tutorial will be a hands-on demonstration. If you'd like to follow along, be sure you have the following:</p>\n\n<ul>\n<li>An <a href=\"http://aws.amazon.com\">AWS</a> account</li>\n<li>Basic knowledge of python</li>\n<li><strong><a href=\"https://aws.amazon.com/cli/\">AWS CLI v2</a></strong> setup with a User with Textract Permission.</li>\n</ul>\n\n<h2 id=\"what-is-amazon-textract\">What is Amazon Textract?</h2>\n\n<p><a href=\"https://aws.amazon.com/textract/\">Amazon Textract</a> is Machine Learning (ML) powered OCR provided by Amazon Web Services. Amazon Textract is used to extract text, tables, and forms from organized PDF, image(JPEG, PNG), or handwritten documents. The advantages of using Textract are that:</p>\n\n<ol>\n<li>It can extract printed text, handwritten text, images, and structured data from documents like financial records, tax forms, student results, and grades, etc.</li>\n<li>You can extract data from different file types with consistent  data configuration.</li>\n<li>You do not need any knowledge of ML in order to use this service.</li>\n</ol>\n\n<p>Don’t confuse AWS Textract with <a href=\"https://aws.amazon.com/rekognition/\">Amazon Rekognition</a>. You can use Amazon Rekognition if there is simple random text in an image or video; for example, if you want to extract text from a signboard.</p>\n\n<p>You can see the pricing for Textract <a href=\"https://aws.amazon.com/textract/pricing/\">here</a>, and you can find the limits of Textract <a href=\"https://docs.aws.amazon.com/textract/latest/dg/limits.html\">here</a>.</p>\n\n<h3 id=\"practical-applications-and-use-cases-for-textract\">Practical Applications and Use Cases for Textract</h3>\n\n<ul>\n<li>Text extraction for document classification</li>\n<li>Creation of intelligent search indexes</li>\n<li>Extraction of text from documents for word processing</li>\n<li>Automation of document processing workflows</li>\n<li>Maintenance of compliant document archives</li>\n<li>Extraction of text for Natural Language Processing (NLP)</li>\n</ul>\n\n<h2 id=\"setting-up-s3-and-lambda\">Setting up S3 and Lambda</h2>\n\n<p>The whole extraction process follows these steps:</p>\n\n<ol>\n<li>User uploads files to S3 bucket</li>\n<li>The Lambda function is triggered</li>\n<li>The text gets extracted from the image or PDF</li>\n</ol>\n\n<p>We need to set up our Lambda function to follow suit. The Lambda function will run automatically, and the content will be extracted when the S3 bucket receives a document.</p>\n\n<p>To get started with the setup, let’s go to the <a href=\"https://s3.console.aws.amazon.com/s3/home\">S3 Management Console</a> and create an S3 bucket for our documents. On the S3 management console, click the “<strong>Create bucket</strong>” button, give the bucket a name, then click the “<strong>Create bucket</strong>” button again to submit the name.</p>\n\n<p>To set up text extraction, you need to follow the steps below.</p>\n\n<p>Click on the “<strong>Services</strong>” button on the AWS nav bar and select “<strong>Lambda”</strong> in the “<strong>Compute”</strong> section. This will take you to the Lambda management console.</p>\n\n<p><img src=\"/images/blog/posts/amazon-textract-ocr-lambda/lambda-service.png\" alt=\"Selecting Lambda service\"></p>\n\n<p>Selecting Lambda Service</p>\n\n<p>Now, click the <strong><a href=\"https://eu-west-3.console.aws.amazon.com/lambda/home?region=eu-west-3#/create/function\">Create function</a></strong> button and set up your lambda function as shown in the images below; then submit your selection.</p>\n\n<p><img src=\"/images/blog/posts/amazon-textract-ocr-lambda/lambda.png\" alt=\"setting up lambda function\"></p>\n\n<p>Next, we have to give our Lambda function permission to enable it to run functions and also access Textract functionalities. To do this, click on the <strong>Configuration</strong> tab and then find <strong>Permissions</strong> on the sidebar  (below “<strong>Role name</strong>”); click on it to update the permissions.\nNow click the “<strong>Add permissions</strong>” dropdown, then click on “<strong>Attach policies</strong>”<strong>.</strong> You will be provided with a list of policies; pick <a href=\"https://us-east-1.console.aws.amazon.com/iam/home#/policies/arn:aws:iam::aws:policy/AWSLambdaExecute\">AWSLambdaExecute</a> and <a href=\"https://us-east-1.console.aws.amazon.com/iam/home#/policies/arn:aws:iam::aws:policy/AmazonTextractFullAccess\">AmazonTextractFullAccess</a> by checking the box attached to each of them and clicking on the “<strong>Attach policies</strong>” button.</p>\n\n<p>As I mentioned earlier, we want the Lambda function to be triggered when the S3 bucket we created receives a file. To enable this trigger in your Lambda function, go to the <a href=\"http://console.aws.amazon.com/lambda/home\">lambda function</a> console and then click on the function you just created.</p>\n\n<p>You will see the “<strong>Add trigger</strong>” button. Click on it, then  select S3 as the type of trigger, select your bucket name, and click the “<strong>Add”</strong> button.</p>\n\n<p><img src=\"/images/blog/posts/amazon-textract-ocr-lambda/configure-trigger.png\" alt=\"Trigger configuration\"></p>\n\n<h2 id=\"how-to-extract-text-from-an-image-pdf-file-using-lambda-functions-and-textract\">How to Extract Text from an Image/PDF File Using Lambda Functions and Textract</h2>\n\n<p>This section will take you through how to extract text from image or PDF files using Lambda functions and Textract. You can do this by following the steps below:</p>\n\n<p>Go to the Lambda function you just created, where you will be taken to a Python file.\nPaste the following code sample into the Python file, then click the “<strong>Deploy</strong>” button.</p>\n<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">boto3</span> <span class=\"c1\"># used to get the textract service in our Python code\n</span>\n<span class=\"k\">def</span> <span class=\"nf\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">textract</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"p\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s\">&quot;textract&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"c1\"># the event==True when S3 receives a document\n</span>        <span class=\"n\">file_obj</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s\">&quot;Records&quot;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># get the current event\n</span>        <span class=\"n\">bucketname</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">file_obj</span><span class=\"p\">[</span><span class=\"s\">&quot;s3&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;bucket&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">])</span> <span class=\"c1\">#get bucket name from event\n</span>        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">file_obj</span><span class=\"p\">[</span><span class=\"s\">&quot;s3&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;object&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;key&quot;</span><span class=\"p\">])</span> <span class=\"c1\">#get file name from event\n</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">textract</span><span class=\"p\">.</span><span class=\"n\">detect_document_text</span><span class=\"p\">(</span> \n        <span class=\"c1\"># a call to textract API to just extract text (detect_document_text), then we state the bucket name and file name\n</span>            <span class=\"n\">Document</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s\">&quot;S3Object&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s\">&quot;Bucket&quot;</span><span class=\"p\">:</span> <span class=\"n\">bucketname</span><span class=\"p\">,</span>\n                    <span class=\"s\">&quot;Name&quot;</span><span class=\"p\">:</span> <span class=\"n\">filename</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">))</span> <span class=\"c1\"># print the extracted data\n</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s\">&quot;statusCode&quot;</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n            <span class=\"s\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"s\">&quot;Content extracted successfully!&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n<p>To trigger our Lambda function, open the S3 bucket you just created, then drag and drop the image file from which you want to extract the text content.\nTo see the output of this trigger, go back to your Lambda function and click the “<strong>Monitor</strong>” tab, then click on the “View logs in CloudWatch” link.\nClick on your Lambda function, then click on the current trigger to see the outputs. The output will be in JSON format which provides each line, word, bounding box of each line, etc. This output is not really useful since we just want to see the whole text line by line.</p>\n\n<p>You can find each line in the JSON response where <code>“Block&quot;</code> is  <code>“BlockType&quot;</code> and <code>“BlockType&quot;</code> is <code>“LINE”</code>.</p>\n\n<p>To get each of the text lines we need, we have to create a new function that traverses the JSON response and collects each text line. Update your current code with the following:</p>\n<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">boto3</span> <span class=\"c1\"># used to get the textract service in our Python code\n</span>\n <span class=\"c1\">#####################New###########################\n</span><span class=\"k\">def</span> <span class=\"nf\">display_text</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">extract_by</span><span class=\"p\">):</span>\n    <span class=\"c1\"># traverse response and get each line\n</span>    <span class=\"n\">line_text</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s\">&quot;Blocks&quot;</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">block</span><span class=\"p\">[</span><span class=\"s\">&quot;BlockType&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">extract_by</span><span class=\"p\">:</span>\n            <span class=\"n\">line_text</span><span class=\"p\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">[</span><span class=\"s\">&quot;Text&quot;</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">line_text</span>\n  <span class=\"c1\">##################################################\n</span>\n<span class=\"k\">def</span> <span class=\"nf\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">textract</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"p\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s\">&quot;textract&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"p\">:</span> <span class=\"c1\"># the event==True when S3 receives a document\n</span>        <span class=\"c1\">#...\n</span>        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">))</span> <span class=\"c1\"># print the extracted data\n</span>\n      <span class=\"c1\">#####################New###########################\n</span>        <span class=\"n\">raw_text</span> <span class=\"o\">=</span> <span class=\"n\">display_text</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">extract_by</span><span class=\"o\">=</span><span class=\"s\">&quot;LINE&quot;</span><span class=\"p\">)</span> <span class=\"c1\"># pass response to display_text()\n</span>        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">raw_text</span><span class=\"p\">)</span>\n      <span class=\"c1\">##################################################\n</span></code></pre></div>\n<p>Repeat these steps to trigger the Lambda function like you did in the previous section. You should now see the text line by line in the output.</p>\n\n<p><img src=\"/images/blog/posts/amazon-textract-ocr-lambda/text-output.png\" alt=\"output for plain text extraction\"></p>\n\n<p><em>Note: You can find the images I used in this tutorial on <a href=\"https://github.com/khabdrick/LambdaXtextract/blob/main/table.png\">GitHub</a></em></p>\n\n<h2 id=\"how-to-extract-tables-from-image-files-using-lambda\">How to Extract Tables from Image Files Using Lambda</h2>\n\n<p>This section will show you how you can use it to extract data from tables.</p>\n\n<p>To extract forms and tables from an image, you have to use the <code>textract.analyze_document</code> instead of <code>textract.detect_document_text</code> like we did in the previous section.</p>\n\n<p>In the Lambda function you created in the previous section, replace all of your code with the code below.</p>\n<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">boto3</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">lambda_handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">textract</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"p\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s\">&quot;textract&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"p\">:</span>\n        <span class=\"n\">file_obj</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s\">&quot;Records&quot;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">bucketname</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">file_obj</span><span class=\"p\">[</span><span class=\"s\">&quot;s3&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;bucket&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;name&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">file_obj</span><span class=\"p\">[</span><span class=\"s\">&quot;s3&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;object&quot;</span><span class=\"p\">][</span><span class=\"s\">&quot;key&quot;</span><span class=\"p\">])</span>\n\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">textract</span><span class=\"p\">.</span><span class=\"n\">analyze_document</span><span class=\"p\">(</span>\n            <span class=\"n\">Document</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s\">&quot;S3Object&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s\">&quot;Bucket&quot;</span><span class=\"p\">:</span> <span class=\"n\">bucketname</span><span class=\"p\">,</span>\n                    <span class=\"s\">&quot;Name&quot;</span><span class=\"p\">:</span> <span class=\"n\">filename</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">FeatureTypes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">&quot;TABLES&quot;</span><span class=\"p\">],</span> <span class=\"c1\">#if you have forms and table FeatureTypes=[&quot;TABLES&quot;, &quot;FORMS&quot;]\n</span>        <span class=\"p\">)</span>\n\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"p\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>Repeat these steps to trigger the Lambda function like you did in the previous sections and you should see the JSON output.</p>\n\n<p>The <code>&quot;BlockType&quot;: &quot;TABLE&quot;</code> includes a list of child IDs for the cells within the table. My <a href=\"https://github.com/khabdrick/LambdaXtextract/blob/main/response.json\">JSON response</a> shows that the table has twenty cells, which are listed in the <code>Ids</code> array.</p>\n\n<p>You can find the content of each cell where <code>&quot;BlockType&quot;: &quot;LINE”</code>. From this, you can use Python to traverse the response and get the output whichever way you want it. Here is the <a href=\"https://github.com/khabdrick/LambdaXtextract/blob/main/extract_table.py\">relevant code</a> file for this section.</p>\n\n<h2 id=\"how-to-extract-tables-from-pdfs-and-save-as-csvs\">How to Extract Tables From PDFs and Save as CSVs</h2>\n\n<p>In the previous section, we were able to extract table content from an image. But this data might not be very useful if you want to use it in other applications such as databases or ML models. This is why it is useful to extract the data as a Comma-Separated Values (CSV) format.</p>\n\n<p>AWS has provided a solution for this; all I had to do is modify it and add some comments to make the code more readable.</p>\n\n<p>On your local machine, with AWS CLI configured properly, run the following command to install Boto3.</p>\n<div class=\"highlight\"><pre class=\"highlight shell\"><code>pip <span class=\"nb\">install </span>boto3\n</code></pre></div>\n<p>Now, clone the <a href=\"https://github.com/khabdrick/LambdaXtextract\">code for this tutorial</a> and run the following command, which will produce the CSV output.</p>\n<div class=\"highlight\"><pre class=\"highlight shell\"><code>python extract_table_csv.py table.png\n</code></pre></div>\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>In this article, we learned a lot about Textract and how useful it can be when building applications that involve content extracted from images.</p>\n\n<p>We demonstrated how you can extract plain text from an image, extract a table from an image, and extract a table as a CSV file. This knowledge will come in handy when you want to build an application to analyze PDFs or images. From what you have learned in this tutorial, you can go further by integrating some of the processes into a Python application that requires you to extract text for an ML model or for Natural Language Processing. You could also look into extracting content from forms (Textract extracts forms from documents in key-value pairs) and try extracting content into other file types besides CSV.</p>\n"
}