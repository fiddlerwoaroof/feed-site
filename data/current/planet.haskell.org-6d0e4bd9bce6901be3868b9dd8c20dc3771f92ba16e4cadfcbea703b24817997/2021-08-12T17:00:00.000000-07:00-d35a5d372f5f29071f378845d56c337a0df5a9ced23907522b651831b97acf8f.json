{
  "title":"Bitwarden encrypted backup tool",
  "date":"2021-08-12T17:00:00.000000-07:00",
  "author":null,
  "id":"https://www.snoyman.com/blog/2021/08/bitwarden-encrypted-backup-tool/",
  "link":"https://www.snoyman.com/blog/2021/08/bitwarden-encrypted-backup-tool/",
  "content":"I've been using Bitwarden as my password manager for years. At this point, my whole family is on it, as well as my company. Suffice it to say that if I ever lost access to that vault, I would be in a lot of trouble. While I overall really like Bitwarden, one limitation is has is a lack of an encrypted export function.\nA few weeks ago, I decided to write a tool to automate the process of exporting a Bitwarden vault to a JSON file and encrypting it. And today I decided to release this tool as open source. Hopefully it will be useful to someone else.\nBelow is the README.md, which contains relevant information on how this tool works internally and how to get started.\n\nbwbackup\n\nCreate encrypted backups of your Bitwarden vault.\nThis is a simple tool, intended to solve a simple problem. When you use the Bitwarden CLI, you're able to extract a CSV or JSON encoded copy of your entire vault. Unfortunately, this copy isn't encrypted. The purpose of this tool is to run the relevant commands against the bw executable and encrypt the data before it ever touches your hard drive.\nImportant notes:\n\nIf you have MFA enabled, you'll likely need to run bw login at least once before running this executable to provide the MFA token.\nIf you log in with multiple different Bitwarden accounts, running this tool will switch which one you're logged in with.\nThe bw unlock and bw export commands (at time of writing) unfortunately do not allow specifying the password via environment variables. Therefore, the password will be passed as a command line argument, which is less secure. It's possible that other processes on your system may be able to see that password. Caveat emptor!\nThe file is encrypted using a sodiumoxide secretbox, using your master password for key generation.\nThis tool will produce a new salt and nonce and each invocation, meaning even if your vault and password remain unchanged, you will get different encrypted output on each invocation.\n\nThis tool is lightly tested, but I've been using it myself and have had no issues. Hopefully others will find it useful too!\nInstalling\nYou can check the GitHub Actions for recent artifacts, or can build it yourself by installing Rust and running cargo install --git https://github.com/snoyberg/bwbackup.\nBackup procedure\nI use the following wrapper shell script to backup to my ~/dotfiles repo and create a new commit once a week:\n#!/usr/bin/env bash\n\nset -euxo pipefail\n\ncd ~/dotfiles\nbwbackup backup --email MYEMAILADDRESS --file bwbackup.json.enc\ngit add bwbackup.json.enc\ngit commit -m &quot;BitWarden backup at $(date)&quot;\ngit push\n\n    "
}