{
  "title":"Ruby 3.2.0 Preview 3 Released",
  "date":"2022-11-11T00:00:00.000000Z",
  "author":null,
  "id":"https://www.ruby-lang.org/en/news/2022/11/11/ruby-3-2-0-preview3-released/",
  "link":"https://www.ruby-lang.org/en/news/2022/11/11/ruby-3-2-0-preview3-released/",
  "content":"\n<p>We are pleased to announce the release of Ruby 3.2.0-preview3. Ruby 3.2 adds many features and performance improvements.</p>\n\n<h2>WASI based WebAssembly support</h2>\n\n<p>This is an initial port of WASI based WebAssembly support. This enables a CRuby binary to be available on Web browser, Serverless Edge environment, and other WebAssembly/WASI embedders. Currently this port passes basic and bootstrap test suites not using Thread API.</p>\n\n<p><img src=\"https://i.imgur.com/opCgKy2.png\" alt=\"\"></p>\n\n<h3>Background</h3>\n\n<p><a href=\"https://webassembly.org/\">WebAssembly (Wasm)</a> is originally introduced to run programs safely and fast in web browsers. But its objective - running programs efficinently with security on various environment - is long wanted not only by web but also by general applications.</p>\n\n<p><a href=\"https://wasi.dev/\">WASI (The WebAssembly System Interface)</a> is designed for such use cases. Though such applications need to communicate with operating systems, WebAssembly runs on a virtual machine which didn’t have a system interface. WASI standardizes it.</p>\n\n<p>WebAssembly/WASI Support in Ruby intends to leverage those projects. It enables Ruby developers to write applications which runs on such promised platform.</p>\n\n<h3>Use case</h3>\n\n<p>This support encourages developers can utilize CRuby in WebAssembly environment. An example use case of it is <a href=\"https://try.ruby-lang.org/playground/\">TryRuby playground</a>’s CRuby support. Now you can try original CRuby in your web browser.</p>\n\n<h3>Technical points</h3>\n\n<p>Today’s WASI and WebAssembly itself has some missing features to implement Fiber, exception, and GC because it’s still evolving and also for security reasons. So CRuby fills the gap by using Asyncify, which is a binary transformation technique to control execution in userland.</p>\n\n<p>In addition, we built <a href=\"https://github.com/kateinoigakukun/wasi-vfs/wiki/Getting-Started-with-CRuby\">a VFS on top of WASI</a> so that we can easily pack Ruby apps into a single .wasm file. This makes distribution of Ruby apps a bit easier.</p>\n\n<h3>Related links</h3>\n\n<ul>\n  <li><a href=\"https://github.com/ruby/ruby/pull/5407\">Add WASI based WebAssembly support #5407</a></li>\n  <li><a href=\"https://itnext.io/final-report-webassembly-wasi-support-in-ruby-4aface7d90c9\">An Update on WebAssembly/WASI Support in Ruby</a></li>\n</ul>\n\n<h2>Regexp improvements against ReDoS</h2>\n\n<p>It is known that Regexp matching may take unexpectedly long. If your code attempts to match an possibly inefficient Regexp against an untrusted input, an attacker may exploit it for efficient Denial of Service (so-called Regular expression DoS, or ReDoS).</p>\n\n<p>We have introduced two improvements that significantly mitigate ReDoS.</p>\n\n<h3>Improved Regexp matching algorithm</h3>\n\n<p>Since Ruby 3.2, Regexp’s matching algorithm has been greatly improved by using memoization technique.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># This matching takes 10 sec. in Ruby 3.1, and does 0.003 sec. in Ruby 3.2\n\n/^a*b?a*$/ =~ &quot;a&quot; * 50000 + &quot;x&quot;\n</code></pre></div></div>\n\n<p>The improved matching algorithm allows most of Regexp matching (about 90% in our experiments) to be completed in linear time.</p>\n\n<p>(For preview users: this optimization may consume memory proportional to the input length for each matching. We expect no practical problems to arise because this memory allocation is usually delayed, and a normal Regexp matching should consume at most 10 times as much memory as the input length. If you run out of memory when matching Regexps in a real-world application, please report it.)</p>\n\n<p>The original proposal is https://bugs.ruby-lang.org/issues/19104</p>\n\n<h3>Regexp timeout</h3>\n\n<p>The optimization above cannot be applied to some kind of regular expressions, such as including advanced features (e.g., back-references or look-around), or with huge fixed number of repetitions. As a fallback measure, a timeout feature for Regexp matching is also introduced.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Regexp</span><span class=\"p\">.</span><span class=\"nf\">timeout</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\n<span class=\"sr\">/^a*b?a*()\\1$/</span> <span class=\"o\">=~</span> <span class=\"s2\">&quot;a&quot;</span> <span class=\"o\">*</span> <span class=\"mi\">50000</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;x&quot;</span>\n<span class=\"c1\">#=&gt; Regexp::TimeoutError is raised in one second</span>\n</code></pre></div></div>\n\n<p>Note that <code class=\"language-plaintext highlighter-rouge\">Regexp.timeout</code> is a global configuration. If you want to use different timeout settings for some special Regexps, you may want to use <code class=\"language-plaintext highlighter-rouge\">timeout</code> keyword for <code class=\"language-plaintext highlighter-rouge\">Regexp.new</code>.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">Regexp</span><span class=\"p\">.</span><span class=\"nf\">timeout</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\n<span class=\"c1\"># This regexp has no timeout</span>\n<span class=\"n\">long_time_re</span> <span class=\"o\">=</span> <span class=\"no\">Regexp</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"s2\">&quot;^a*b?a*()</span><span class=\"se\">\\1</span><span class=\"s2\">$&quot;</span><span class=\"p\">,</span> <span class=\"ss\">timeout: </span><span class=\"no\">Float</span><span class=\"o\">::</span><span class=\"no\">INFINITY</span><span class=\"p\">)</span>\n\n<span class=\"n\">long_time_re</span> <span class=\"o\">=~</span> <span class=\"s2\">&quot;a&quot;</span> <span class=\"o\">*</span> <span class=\"mi\">50000</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;x&quot;</span> <span class=\"c1\"># never interrupted</span>\n</code></pre></div></div>\n\n<p>The original proposal is https://bugs.ruby-lang.org/issues/17837</p>\n\n<h2>Other Notable New Features</h2>\n\n<h3>No longer bundle 3rd party sources</h3>\n\n<ul>\n  <li>\n    <p>We no longer bundle 3rd party sources like <code class=\"language-plaintext highlighter-rouge\">libyaml</code>, <code class=\"language-plaintext highlighter-rouge\">libffi</code>.</p>\n\n    <ul>\n      <li>\n        <p>libyaml source has been removed from psych. You may need to install <code class=\"language-plaintext highlighter-rouge\">libyaml-dev</code> with Ubuntu/Debian platfrom. The package name is different each platforms.</p>\n      </li>\n      <li>\n        <p>bundled libffi source is also removed from <code class=\"language-plaintext highlighter-rouge\">fiddle</code></p>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<h3>Language</h3>\n\n<ul>\n  <li>\n    <p>Anonymous rest and keyword rest arguments can now be passed as\narguments, instead of just used in method parameters.\n[<a href=\"https://bugs.ruby-lang.org/issues/18351\">Feature #18351</a>]</p>\n\n    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span>\n    <span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n  <span class=\"k\">def</span> <span class=\"nf\">baz</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>\n    <span class=\"n\">quux</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>A proc that accepts a single positional argument and keywords will\nno longer autosplat. [<a href=\"https://bugs.ruby-lang.org/issues/18633\">Bug #18633</a>]</p>\n\n    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">proc</span><span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">k</span><span class=\"o\">|</span> <span class=\"n\">a</span><span class=\"p\">}.</span><span class=\"nf\">call</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"c1\"># Ruby 3.1 and before</span>\n<span class=\"c1\"># =&gt; 1</span>\n<span class=\"c1\"># Ruby 3.2 and after</span>\n<span class=\"c1\"># =&gt; [1, 2]</span>\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>Constant assignment evaluation order for constants set on explicit\nobjects has been made consistent with single attribute assignment\nevaluation order. With this code:</p>\n\n    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"n\">foo</span><span class=\"o\">::</span><span class=\"no\">BAR</span> <span class=\"o\">=</span> <span class=\"n\">baz</span>\n</code></pre></div>    </div>\n\n    <p><code class=\"language-plaintext highlighter-rouge\">foo</code> is now called before <code class=\"language-plaintext highlighter-rouge\">baz</code>. Similarly, for multiple assignments\nto constants,  left-to-right evaluation order is used. With this\ncode:</p>\n\n    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"n\">foo1</span><span class=\"o\">::</span><span class=\"no\">BAR1</span><span class=\"p\">,</span> <span class=\"n\">foo2</span><span class=\"o\">::</span><span class=\"no\">BAR2</span> <span class=\"o\">=</span> <span class=\"n\">baz1</span><span class=\"p\">,</span> <span class=\"n\">baz2</span>\n</code></pre></div>    </div>\n\n    <p>The following evaluation order is now used:</p>\n\n    <ol>\n      <li><code class=\"language-plaintext highlighter-rouge\">foo1</code></li>\n      <li><code class=\"language-plaintext highlighter-rouge\">foo2</code></li>\n      <li><code class=\"language-plaintext highlighter-rouge\">baz1</code></li>\n      <li><code class=\"language-plaintext highlighter-rouge\">baz2</code></li>\n    </ol>\n\n    <p>[<a href=\"https://bugs.ruby-lang.org/issues/15928\">Bug #15928</a>]</p>\n  </li>\n  <li>\n    <p>Find pattern is no longer experimental.\n[<a href=\"https://bugs.ruby-lang.org/issues/18585\">Feature #18585</a>]</p>\n  </li>\n  <li>\n    <p>Methods taking a rest parameter (like <code class=\"language-plaintext highlighter-rouge\">*args</code>) and wishing to delegate keyword\narguments through <code class=\"language-plaintext highlighter-rouge\">foo(*args)</code> must now be marked with <code class=\"language-plaintext highlighter-rouge\">ruby2_keywords</code>\n(if not already the case). In other words, all methods wishing to delegate\nkeyword arguments through <code class=\"language-plaintext highlighter-rouge\">*args</code> must now be marked with <code class=\"language-plaintext highlighter-rouge\">ruby2_keywords</code>,\nwith no exception. This will make it easier to transition to other ways of\ndelegation once a library can require Ruby 3+. Previously, the <code class=\"language-plaintext highlighter-rouge\">ruby2_keywords</code>\nflag was kept if the receiving method took <code class=\"language-plaintext highlighter-rouge\">*args</code>, but this was a bug and an\ninconsistency. A good technique to find the potentially-missing <code class=\"language-plaintext highlighter-rouge\">ruby2_keywords</code>\nis to run the test suite, for where it fails find the last method which must\nreceive keyword arguments, use <code class=\"language-plaintext highlighter-rouge\">puts nil, caller, nil</code> there, and check each\nmethod/block on the call chain which must delegate keywords is correctly marked\nas <code class=\"language-plaintext highlighter-rouge\">ruby2_keywords</code>. [<a href=\"https://bugs.ruby-lang.org/issues/18625\">Bug #18625</a>] [<a href=\"https://bugs.ruby-lang.org/issues/16466\">Bug #16466</a>]</p>\n\n    <div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"k\">def</span> <span class=\"nf\">target</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"c1\"># Accidentally worked without ruby2_keywords in Ruby 2.7-3.1, ruby2_keywords</span>\n  <span class=\"c1\"># needed in 3.2+. Just like (*args, **kwargs) or (...) would be needed on</span>\n  <span class=\"c1\"># both #foo and #bar when migrating away from ruby2_keywords.</span>\n  <span class=\"n\">ruby2_keywords</span> <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"n\">target</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">ruby2_keywords</span> <span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n    <span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"ss\">k: </span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<h2>Performance improvements</h2>\n\n<h3>YJIT</h3>\n\n<ul>\n  <li>Support arm64 / aarch64 on UNIX platforms.</li>\n  <li>Building YJIT requires Rust 1.58.1+. [<a href=\"https://bugs.ruby-lang.org/issues/18481\">Feature #18481</a>]</li>\n</ul>\n\n<h2>Other notable changes since 3.1</h2>\n\n<ul>\n  <li>Hash\n    <ul>\n      <li>Hash#shift now always returns nil if the hash is\nempty, instead of returning the default value or\ncalling the default proc. [<a href=\"https://bugs.ruby-lang.org/issues/16908\">Bug #16908</a>]</li>\n    </ul>\n  </li>\n  <li>MatchData\n    <ul>\n      <li>MatchData#byteoffset has been added. [<a href=\"https://bugs.ruby-lang.org/issues/13110\">Feature #13110</a>]</li>\n    </ul>\n  </li>\n  <li>Module\n    <ul>\n      <li>Module.used_refinements has been added. [<a href=\"https://bugs.ruby-lang.org/issues/14332\">Feature #14332</a>]</li>\n      <li>Module#refinements has been added. [<a href=\"https://bugs.ruby-lang.org/issues/12737\">Feature #12737</a>]</li>\n      <li>Module#const_added has been added. [<a href=\"https://bugs.ruby-lang.org/issues/17881\">Feature #17881</a>]</li>\n    </ul>\n  </li>\n  <li>Proc\n    <ul>\n      <li>Proc#dup returns an instance of subclass. [<a href=\"https://bugs.ruby-lang.org/issues/17545\">Bug #17545</a>]</li>\n      <li>Proc#parameters now accepts lambda keyword. [<a href=\"https://bugs.ruby-lang.org/issues/15357\">Feature #15357</a>]</li>\n    </ul>\n  </li>\n  <li>Refinement\n    <ul>\n      <li>Refinement#refined_class has been added. [<a href=\"https://bugs.ruby-lang.org/issues/12737\">Feature #12737</a>]</li>\n    </ul>\n  </li>\n  <li>RubyVM::AbstractSyntaxTree\n    <ul>\n      <li>Add <code class=\"language-plaintext highlighter-rouge\">error_tolerant</code> option for <code class=\"language-plaintext highlighter-rouge\">parse</code>, <code class=\"language-plaintext highlighter-rouge\">parse_file</code> and <code class=\"language-plaintext highlighter-rouge\">of</code>. [[Feature #19013]]</li>\n    </ul>\n  </li>\n  <li>Set\n    <ul>\n      <li>Set is now available as a builtin class without the need for <code class=\"language-plaintext highlighter-rouge\">require &quot;set&quot;</code>. [<a href=\"https://bugs.ruby-lang.org/issues/16989\">Feature #16989</a>]\nIt is currently autoloaded via the <code class=\"language-plaintext highlighter-rouge\">Set</code> constant or a call to <code class=\"language-plaintext highlighter-rouge\">Enumerable#to_set</code>.</li>\n    </ul>\n  </li>\n  <li>String\n    <ul>\n      <li>String#byteindex and String#byterindex have been added. [<a href=\"https://bugs.ruby-lang.org/issues/13110\">Feature #13110</a>]</li>\n      <li>Update Unicode to Version 14.0.0 and Emoji Version 14.0. [<a href=\"https://bugs.ruby-lang.org/issues/18037\">Feature #18037</a>]\n(also applies to Regexp)</li>\n      <li>String#bytesplice has been added.  [<a href=\"https://bugs.ruby-lang.org/issues/18598\">Feature #18598</a>]</li>\n    </ul>\n  </li>\n  <li>Struct\n    <ul>\n      <li>A Struct class can also be initialized with keyword arguments\nwithout <code class=\"language-plaintext highlighter-rouge\">keyword_init: true</code> on <code class=\"language-plaintext highlighter-rouge\">Struct.new</code> [<a href=\"https://bugs.ruby-lang.org/issues/16806\">Feature #16806</a>]</li>\n    </ul>\n  </li>\n</ul>\n\n<h2>Compatibility issues</h2>\n\n<p>Note: Excluding feature bug fixes.</p>\n\n<h3>Removed constants</h3>\n\n<p>The following deprecated constants are removed.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">Fixnum</code> and <code class=\"language-plaintext highlighter-rouge\">Bignum</code> [<a href=\"https://bugs.ruby-lang.org/issues/12005\">Feature #12005</a>]</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Random::DEFAULT</code> [<a href=\"https://bugs.ruby-lang.org/issues/17351\">Feature #17351</a>]</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Struct::Group</code></li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Struct::Passwd</code></li>\n</ul>\n\n<h3>Removed methods</h3>\n\n<p>The following deprecated methods are removed.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">Dir.exists?</code> [<a href=\"https://bugs.ruby-lang.org/issues/17391\">Feature #17391</a>]</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">File.exists?</code> [<a href=\"https://bugs.ruby-lang.org/issues/17391\">Feature #17391</a>]</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Kernel#=~</code> [<a href=\"https://bugs.ruby-lang.org/issues/15231\">Feature #15231</a>]</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Kernel#taint</code>, <code class=\"language-plaintext highlighter-rouge\">Kernel#untaint</code>, <code class=\"language-plaintext highlighter-rouge\">Kernel#tainted?</code>\n[<a href=\"https://bugs.ruby-lang.org/issues/16131\">Feature #16131</a>]</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Kernel#trust</code>, <code class=\"language-plaintext highlighter-rouge\">Kernel#untrust</code>, <code class=\"language-plaintext highlighter-rouge\">Kernel#untrusted?</code>\n[<a href=\"https://bugs.ruby-lang.org/issues/16131\">Feature #16131</a>]</li>\n</ul>\n\n<h2>Stdlib compatibility issues</h2>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">Psych</code> no longer bundles libyaml sources.\nUsers need to install the libyaml library themselves via the package\nsystem. [<a href=\"https://bugs.ruby-lang.org/issues/18571\">Feature #18571</a>]</li>\n</ul>\n\n<h2>C API updates</h2>\n\n<h3>Updated C APIs</h3>\n\n<p>The following APIs are updated.</p>\n\n<ul>\n  <li>PRNG update\n<code class=\"language-plaintext highlighter-rouge\">rb_random_interface_t</code> updated and versioned.\nExtension libraries which use this interface and built for older versions.\nAlso <code class=\"language-plaintext highlighter-rouge\">init_int32</code> function needs to be defined.</li>\n</ul>\n\n<h3>Removed C APIs</h3>\n\n<p>The following deprecated APIs are removed.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">rb_cData</code> variable.</li>\n  <li>“taintedness” and “trustedness” functions. [<a href=\"https://bugs.ruby-lang.org/issues/16131\">Feature #16131</a>]</li>\n</ul>\n\n<h3>Standard libraries updates</h3>\n\n<ul>\n  <li>\n    <p>SyntaxSuggest</p>\n\n    <ul>\n      <li>The feature of <code class=\"language-plaintext highlighter-rouge\">syntax_suggest</code> formerly <code class=\"language-plaintext highlighter-rouge\">dead_end</code> is integrated in Ruby.\n[<a href=\"https://bugs.ruby-lang.org/issues/18159\">Feature #18159</a>]</li>\n    </ul>\n  </li>\n  <li>\n    <p>ErrorHighlight</p>\n    <ul>\n      <li>Now it points an argument(s) of TypeError and ArgumentError</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>test.rb:2:in `+': nil can't be coerced into Integer (TypeError)\n\nsum = ary[0] + ary[1]\n               ^^^^^^\n</code></pre></div></div>\n\n<ul>\n  <li>The following default gems are updated.\n    <ul>\n      <li>RubyGems 3.4.0.dev</li>\n      <li>bigdecimal 3.1.2</li>\n      <li>bundler 2.4.0.dev</li>\n      <li>cgi 0.3.2</li>\n      <li>date 3.2.3</li>\n      <li>error_highlight 0.4.0</li>\n      <li>etc 1.4.0</li>\n      <li>io-console 0.5.11</li>\n      <li>io-nonblock 0.1.1</li>\n      <li>io-wait 0.3.0.pre</li>\n      <li>ipaddr 1.2.4</li>\n      <li>json 2.6.2</li>\n      <li>logger 1.5.1</li>\n      <li>net-http 0.2.2</li>\n      <li>net-protocol 0.1.3</li>\n      <li>ostruct 0.5.5</li>\n      <li>psych 5.0.0.dev</li>\n      <li>reline 0.3.1</li>\n      <li>securerandom 0.2.0</li>\n      <li>set 1.0.3</li>\n      <li>stringio 3.0.3</li>\n      <li>syntax_suggest 0.0.1</li>\n      <li>timeout 0.3.0</li>\n    </ul>\n  </li>\n  <li>The following bundled gems are updated.\n    <ul>\n      <li>minitest 5.16.3</li>\n      <li>net-imap 0.2.3</li>\n      <li>rbs 2.6.0</li>\n      <li>typeprof 0.21.3</li>\n      <li>debug 1.6.2</li>\n    </ul>\n  </li>\n  <li>The following default gems are now bundled gems.</li>\n</ul>\n\n<p>See <a href=\"https://github.com/ruby/ruby/blob/v3_2_0_preview3/NEWS.md\">NEWS</a>\nor <a href=\"https://github.com/ruby/ruby/compare/v3_1_0...v3_2_0_preview3\">commit logs</a>\nfor more details.</p>\n\n<p>With those changes, <a href=\"https://github.com/ruby/ruby/compare/v3_1_0...v3_2_0_preview3#file_bucket\">2719 files changed, 191269 insertions(+), 120315 deletions(-)</a>\nsince Ruby 3.1.0!</p>\n\n<h2>Download</h2>\n\n<ul>\n  <li>\n    <p><a href=\"https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.0-preview3.tar.gz\">https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.0-preview3.tar.gz</a></p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SIZE: 20086542\nSHA1: dafca8116d36ceaa32482ab38359768de8c3ae5e\nSHA256: c041d1488e62730d3a10dbe7cf7a3b3e4268dc867ec20ec991e7d16146640487\nSHA512: 860634d95e4b9c48f18d38146dfbdc3c389666d45454248a4ccdfc3a5d3cd0c71c73533aabf359558117de9add1472af228d8eaec989c9336b1a3a6f03f1ae88\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p><a href=\"https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.0-preview3.tar.xz\">https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.0-preview3.tar.xz</a></p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SIZE: 14799804\nSHA1: c94e2add05502cb5c39afffc995b7c8f000f7df0\nSHA256: d3f5619de544240d92a5d03aa289e71bd1103379622c523a0e80ed029a74b3bb\nSHA512: c1864e2e07c3711eaa17d0f85dfbcc6e0682b077782bb1c155315af45139ae66dc4567c73682d326975b0f472111eb0a70f949811cb54bed0b3a816ed6ac34df\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p><a href=\"https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.0-preview3.zip\">https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.0-preview3.zip</a></p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SIZE: 24426893\nSHA1: 346c051c4be7ab8d0b551fd2ff8169785697db62\nSHA256: cf49aa70e7ebd8abebffd5e49cd3bd92e5b9f3782d587cc7ed88c98dd5f17069\nSHA512: 4f22b5ea91be17ef5f68cf0acb1e3a226dcc549ad71cc9b40e623220087c4065ca9bea942710f668e5c94ca0323da8d2ccd565f95a9085c1a0e38e9c0543b22f\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<h2>What is Ruby</h2>\n\n<p>Ruby was first developed by Matz (Yukihiro Matsumoto) in 1993,\nand is now developed as Open Source. It runs on multiple platforms\nand is used all over the world especially for web development.</p>\n\n\n<p>Posted by naruse on 11 Nov 2022</p>"
}