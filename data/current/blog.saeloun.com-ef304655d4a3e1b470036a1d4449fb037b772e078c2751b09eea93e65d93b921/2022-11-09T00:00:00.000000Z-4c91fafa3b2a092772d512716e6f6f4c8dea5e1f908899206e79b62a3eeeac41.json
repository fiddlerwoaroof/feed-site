{
  "title":"Rails now validates options used in migration functions",
  "date":"2022-11-09T00:00:00.000000Z",
  "author":null,
  "id":"https://blog.saeloun.com/2022/11/09/validate-options-in-migration-files.html",
  "link":"https://blog.saeloun.com/2022/11/09/validate-options-in-migration-files.html",
  "content":"<p>There are some aspects of Rails that seem like they shouldn’t have existed in the first place! \nOne such neglected piece of code is the fact that Rails silently ignores options that are not valid for a given migration function.</p>\n\n<h3 id=\"before\">Before</h3>\n<p>For example, the following migration would have worked fine in Rails 7.0 or lower:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"c1\"># db/migrate/20221018030445_add_gender_to_patients.rb</span>\n  <span class=\"k\">class</span> <span class=\"nc\">AddGenderToPatients</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Migration</span><span class=\"p\">[</span><span class=\"mf\">7.0</span><span class=\"p\">]</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change</span>\n      <span class=\"n\">add_column</span> <span class=\"ss\">:patients</span><span class=\"p\">,</span> <span class=\"ss\">:gender</span><span class=\"p\">,</span> <span class=\"ss\">:integer</span><span class=\"p\">,</span> <span class=\"ss\">default: </span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"ss\">hola: :bola</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<p>Though the option “hola” is completely invalid for the “add_column” function, \nRails would have happily accepted it and created the migration file. \nThis is because the “add_column” function accepts a variable number of options, \nand Rails would have simply ignored the invalid option.</p>\n\n<p>This is a problem because it can lead to a lot of confusion. \nFor example, if one misspells an option, Rails would not raise an error, \nand the knowledge of the option not being applied would not have been communicated back to the user. \nThis can lead to wasted debugging time \nor even potential security risks among other issues.</p>\n\n<h3 id=\"after\">After</h3>\n<p>Thanks to <a href=\"https://github.com/rails/rails/pull/46178\">this PR</a> \nRails now raises an error if an invalid option is passed to a migration function. \nThis is a much better experience for the user, as they will be \nimmediately notified of the error \nand can fix it.</p>\n\n<p>It must be noted that validation of the options will only be applied \nfor new migrations that are created after the upgrade to Rails 7.1. \nFor existing migrations, the validation will not be applied, \nand the migration will continue to work as before.</p>\n\n<p>Existing migrations are identified by the version of the migration class. \nFor example, the migration class in the example above is “ActiveRecord::Migration[7.0]”, \nwhere the version is “7.0”. If the migration class is “ActiveRecord::Migration[7.1]”, \nwhere the version is “7.1”, then the validation will be applied.</p>\n\n<p>Let’s change the migration class to “ActiveRecord::Migration[7.1]” \nand run the migration again:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"k\">class</span> <span class=\"nc\">AddGenderToPatients</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Migration</span><span class=\"p\">[</span><span class=\"mf\">7.1</span><span class=\"p\">]</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change</span>\n      <span class=\"n\">add_column</span> <span class=\"ss\">:patients</span><span class=\"p\">,</span> <span class=\"ss\">:gender</span><span class=\"p\">,</span> <span class=\"ss\">:integer</span><span class=\"p\">,</span> <span class=\"ss\">default: </span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"ss\">hola: :bola</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<p>To redo a migration simply run:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"err\">➜</span> <span class=\"n\">rails</span> <span class=\"n\">db</span><span class=\"ss\">:migrate:redo</span> <span class=\"no\">VERSION</span><span class=\"o\">=</span><span class=\"mi\">20221018030445</span> </code></pre></figure>\n\n<p>Now an error is raised indicating \nthe use of an invalid migration option.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"o\">==</span> <span class=\"mi\">20221018030445</span> <span class=\"no\">AddGenderToPatients</span><span class=\"p\">:</span> <span class=\"n\">migrating</span> <span class=\"o\">==============================</span>\n  <span class=\"o\">--</span> <span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"ss\">:patients</span><span class=\"p\">,</span> <span class=\"ss\">:gender</span><span class=\"p\">,</span> <span class=\"ss\">:integer</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"ss\">:default</span><span class=\"o\">=&gt;</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"ss\">:hola</span><span class=\"o\">=&gt;</span><span class=\"ss\">:bola</span><span class=\"p\">})</span>\n  <span class=\"n\">rails</span> <span class=\"n\">aborted!</span>\n  <span class=\"no\">StandardError</span><span class=\"p\">:</span> <span class=\"no\">An</span> <span class=\"n\">error</span> <span class=\"n\">has</span> <span class=\"n\">occurred</span><span class=\"p\">,</span> <span class=\"n\">this</span> <span class=\"n\">and</span> <span class=\"n\">all</span> <span class=\"n\">later</span> <span class=\"n\">migrations</span> <span class=\"ss\">canceled:\n\n  </span><span class=\"no\">Unknown</span> <span class=\"ss\">key: :hola</span><span class=\"o\">.</span> <span class=\"no\">Valid</span> <span class=\"n\">keys</span> <span class=\"ss\">are: :limit</span><span class=\"p\">,</span> <span class=\"ss\">:precision</span><span class=\"p\">,</span> <span class=\"ss\">:scale</span><span class=\"p\">,</span> <span class=\"ss\">:default</span><span class=\"p\">,</span> <span class=\"ss\">:null</span><span class=\"p\">,</span> <span class=\"ss\">:collation</span><span class=\"p\">,</span> <span class=\"ss\">:comment</span><span class=\"p\">,</span> <span class=\"ss\">:primary_key</span><span class=\"p\">,</span> <span class=\"ss\">:if_exists</span><span class=\"p\">,</span> <span class=\"ss\">:if_not_exists</span><span class=\"p\">,</span> <span class=\"ss\">:array</span><span class=\"p\">,</span> <span class=\"ss\">:using</span><span class=\"p\">,</span> <span class=\"ss\">:cast_as</span><span class=\"p\">,</span> <span class=\"ss\">:as</span><span class=\"p\">,</span> <span class=\"ss\">:type</span><span class=\"p\">,</span> <span class=\"ss\">:enum_type</span><span class=\"p\">,</span> <span class=\"ss\">:stored</span>\n  <span class=\"sr\">/Users/s</span><span class=\"n\">waathi</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">edge_rails</span><span class=\"o\">/</span><span class=\"n\">db</span><span class=\"o\">/</span><span class=\"n\">migrate</span><span class=\"o\">/</span><span class=\"mi\">20221018030445</span><span class=\"n\">_add_gender_to_patients</span><span class=\"p\">.</span><span class=\"nf\">rb</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"ss\">:in</span> <span class=\"sb\">`change'\n\n  Caused by:\n  ArgumentError: Unknown key: :hola. Valid keys are: :limit, :precision, :scale, :default, :null, :collation, :comment, :primary_key, :if_exists, :if_not_exists, :array, :using, :cast_as, :as, :type, :enum_type, :stored\n  /Users/swaathi/code/work/edge_rails/db/migrate/20221018030445_add_gender_to_patients.rb:3:in `</span><span class=\"n\">change</span><span class=\"err\">'</span>\n  <span class=\"no\">Tasks</span><span class=\"p\">:</span> <span class=\"no\">TOP</span> <span class=\"o\">=&gt;</span> <span class=\"n\">db</span><span class=\"ss\">:migrate:redo</span>\n  <span class=\"p\">(</span><span class=\"no\">See</span> <span class=\"n\">full</span> <span class=\"n\">trace</span> <span class=\"n\">by</span> <span class=\"n\">running</span> <span class=\"n\">task</span> <span class=\"n\">with</span> <span class=\"o\">--</span><span class=\"n\">trace</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>The same validation is also applied to the “create_table” function. The valid migration options as of now are,</p>\n<ul>\n  <li>:limit</li>\n  <li>:precision</li>\n  <li>:scale</li>\n  <li>:default</li>\n  <li>:null</li>\n  <li>:collation</li>\n  <li>:comment</li>\n  <li>:primary_key</li>\n  <li>:if_exists</li>\n  <li>:if_not_exists</li>\n</ul>\n\n<p>Right now the check is a complete manual effort and is not automated. \nThis means that if a new option is added to a migration function, \nthe validation will not be applied until the Rails team manually adds it to the list of valid options. \nThis is a limitation of the current implementation, and we hope it improves in the future.</p>\n\n"
}