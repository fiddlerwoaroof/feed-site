{
  "title":"Rails adds the --parent option to the job generator",
  "date":"2022-11-17T00:00:00.000000Z",
  "author":null,
  "id":"https://blog.saeloun.com/2022/11/17/add-parent-option-to-job-generator.html",
  "link":"https://blog.saeloun.com/2022/11/17/add-parent-option-to-job-generator.html",
  "content":"<p>Rails generators allow developers to quickly create files that follow Rails conventions. \nThe most power-packed one is the scaffold generator which creates a model, controller, views, \nand tests for a given resource. \nOf course, each file can be created individually using the model, controller, \nand job generators.</p>\n\n<h3 id=\"before\">Before</h3>\n\n<p>The job generator can be used to create an ApplicationJob class. \nThis class is the parent class for all jobs in the application. \nHowever, it is not possible to create a job that inherits from a different class.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"err\">➜</span> <span class=\"n\">rails</span> <span class=\"n\">generate</span> <span class=\"n\">job</span> <span class=\"no\">MyJob</span>\n      <span class=\"n\">invoke</span>  <span class=\"n\">test_unit</span>\n      <span class=\"n\">create</span>    <span class=\"nb\">test</span><span class=\"o\">/</span><span class=\"n\">jobs</span><span class=\"o\">/</span><span class=\"n\">my_job_test</span><span class=\"p\">.</span><span class=\"nf\">rb</span>\n      <span class=\"n\">create</span>  <span class=\"n\">app</span><span class=\"o\">/</span><span class=\"n\">jobs</span><span class=\"o\">/</span><span class=\"n\">my_job</span><span class=\"p\">.</span><span class=\"nf\">rb</span>\n  <span class=\"err\">➜</span> <span class=\"n\">cat</span> <span class=\"n\">app</span><span class=\"o\">/</span><span class=\"n\">jobs</span><span class=\"o\">/</span><span class=\"n\">my_job</span><span class=\"p\">.</span><span class=\"nf\">rb</span> \n  <span class=\"k\">class</span> <span class=\"nc\">MyJob</span> <span class=\"o\">&lt;</span> <span class=\"no\">ApplicationJob</span>\n    <span class=\"n\">queue_as</span> <span class=\"ss\">:default</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n      <span class=\"c1\"># Do something later</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<h3 id=\"after\">After</h3>\n\n<p>Thanks to <a href=\"https://github.com/rails/rails/pull/45528\">this PR</a>, \nthe job generator now allows to specify a parent class for the job. \nThis is similar to the working of the model generator.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"err\">➜</span> <span class=\"n\">rails</span> <span class=\"n\">generate</span> <span class=\"n\">job</span> <span class=\"no\">MyJob</span> <span class=\"o\">--</span><span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"no\">YourJob</span>\n      <span class=\"n\">invoke</span>  <span class=\"n\">test_unit</span>\n      <span class=\"n\">create</span>    <span class=\"nb\">test</span><span class=\"o\">/</span><span class=\"n\">jobs</span><span class=\"o\">/</span><span class=\"n\">my_job_test</span><span class=\"p\">.</span><span class=\"nf\">rb</span>\n      <span class=\"n\">create</span>  <span class=\"n\">app</span><span class=\"o\">/</span><span class=\"n\">jobs</span><span class=\"o\">/</span><span class=\"n\">my_job</span><span class=\"p\">.</span><span class=\"nf\">rb</span>\n  <span class=\"err\">➜</span> <span class=\"n\">cat</span> <span class=\"n\">app</span><span class=\"o\">/</span><span class=\"n\">jobs</span><span class=\"o\">/</span><span class=\"n\">my_job</span><span class=\"p\">.</span><span class=\"nf\">rb</span> \n  <span class=\"k\">class</span> <span class=\"nc\">MyJob</span> <span class=\"o\">&lt;</span> <span class=\"no\">YourJob</span>\n    <span class=\"n\">queue_as</span> <span class=\"ss\">:default</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n      <span class=\"c1\"># Do something later</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n"
}