{
  "title":"Rails now allows specifying the HTTP status code in assert_redirected_to",
  "date":"2022-11-08T00:00:00.000000Z",
  "author":null,
  "id":"https://blog.saeloun.com/2022/11/08/assert-redirected-to-http-status-code.html",
  "link":"https://blog.saeloun.com/2022/11/08/assert-redirected-to-http-status-code.html",
  "content":"<p>Rails provides a plethora of assertion methods to test the request/response flow in applications. \nOne of the most commonly used assertion methods is <code class=\"highlighter-rouge\">assert_redirected_to</code> \nwhich is used to assert that the request was redirected to the specified path.</p>\n\n<h3 id=\"before\">Before</h3>\n\n<p>Let’s create a controller \nand some actions to test this assertion method.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"k\">class</span> <span class=\"nc\">HomeController</span> <span class=\"o\">&lt;</span> <span class=\"no\">ApplicationController</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index</span>\n    <span class=\"k\">end</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">go_back</span>\n      <span class=\"n\">redirect_to</span> <span class=\"n\">root_path</span><span class=\"p\">,</span> <span class=\"ss\">status: :moved_permanently</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<p>When users visit the <code class=\"highlighter-rouge\">go_back</code> action, they are redirected to the <code class=\"highlighter-rouge\">root_path</code> \nwith a <code class=\"highlighter-rouge\">:moved_permanently</code> status code (can be a HTTP response code as well). \nLet’s write a test to assert that the request was redirected to the <code class=\"highlighter-rouge\">root_path</code>.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"k\">class</span> <span class=\"nc\">HomeControllerTest</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActionDispatch</span><span class=\"o\">::</span><span class=\"no\">IntegrationTest</span>\n    <span class=\"nb\">test</span> <span class=\"s2\">&quot;should redirect to root path&quot;</span> <span class=\"k\">do</span>\n      <span class=\"n\">get</span> <span class=\"n\">go_back_path</span>\n      <span class=\"n\">assert_redirected_to</span> <span class=\"n\">root_path</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<p>However, if we are unable to assert the status code, \nwe can’t be sure that the request was redirected with the correct status code.</p>\n\n<h3 id=\"after\">After</h3>\n\n<p>Thanks to <a href=\"https://github.com/rails/rails/pull/46057\">this PR</a> the assertion statement \ncan now be used to assert status codes \nand the corresponding symbols (as shown below).</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"k\">class</span> <span class=\"nc\">HomeControllerTest</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActionDispatch</span><span class=\"o\">::</span><span class=\"no\">IntegrationTest</span>\n    <span class=\"nb\">test</span> <span class=\"s2\">&quot;should redirect to root path with status code&quot;</span> <span class=\"k\">do</span>\n      <span class=\"n\">get</span> <span class=\"n\">go_back_path</span>\n      <span class=\"n\">assert_redirected_to</span> <span class=\"n\">root_path</span><span class=\"p\">,</span> <span class=\"ss\">status: :moved_permanently</span>\n      <span class=\"c1\"># equivalent to</span>\n      <span class=\"c1\"># assert_redirected_to root_path, status: 301</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<table>\n  <thead>\n    <tr>\n      <th>Response Class</th>\n      <th>HTTP Status Code</th>\n      <th>Symbol</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><strong>Informational</strong></td>\n      <td>100</td>\n      <td>:continue</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>101</td>\n      <td>:switching_protocols</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>102</td>\n      <td>:processing</td>\n    </tr>\n    <tr>\n      <td><strong>Success</strong></td>\n      <td>200</td>\n      <td>:ok</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>201</td>\n      <td>:created</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>202</td>\n      <td>:accepted</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>203</td>\n      <td>:non_authoritative_information</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>204</td>\n      <td>:no_content</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>205</td>\n      <td>:reset_content</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>206</td>\n      <td>:partial_content</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>207</td>\n      <td>:multi_status</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>208</td>\n      <td>:already_reported</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>226</td>\n      <td>:im_used</td>\n    </tr>\n    <tr>\n      <td><strong>Redirection</strong></td>\n      <td>300</td>\n      <td>:multiple_choices</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>301</td>\n      <td>:moved_permanently</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>302</td>\n      <td>:found</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>303</td>\n      <td>:see_other</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>304</td>\n      <td>:not_modified</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>305</td>\n      <td>:use_proxy</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>307</td>\n      <td>:temporary_redirect</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>308</td>\n      <td>:permanent_redirect</td>\n    </tr>\n    <tr>\n      <td><strong>Client Error</strong></td>\n      <td>400</td>\n      <td>:bad_request</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>401</td>\n      <td>:unauthorized</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>402</td>\n      <td>:payment_required</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>403</td>\n      <td>:forbidden</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>404</td>\n      <td>:not_found</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>405</td>\n      <td>:method_not_allowed</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>406</td>\n      <td>:not_acceptable</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>407</td>\n      <td>:proxy_authentication_required</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>408</td>\n      <td>:request_timeout</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>409</td>\n      <td>:conflict</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>410</td>\n      <td>:gone</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>411</td>\n      <td>:length_required</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>412</td>\n      <td>:precondition_failed</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>413</td>\n      <td>:payload_too_large</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>414</td>\n      <td>:uri_too_long</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>415</td>\n      <td>:unsupported_media_type</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>416</td>\n      <td>:range_not_satisfiable</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>417</td>\n      <td>:expectation_failed</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>421</td>\n      <td>:misdirected_request</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>422</td>\n      <td>:unprocessable_entity</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>423</td>\n      <td>:locked</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>424</td>\n      <td>:failed_dependency</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>426</td>\n      <td>:upgrade_required</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>428</td>\n      <td>:precondition_required</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>429</td>\n      <td>:too_many_requests</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>431</td>\n      <td>:request_header_fields_too_large</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>451</td>\n      <td>:unavailable_for_legal_reasons</td>\n    </tr>\n    <tr>\n      <td><strong>Server Error</strong></td>\n      <td>500</td>\n      <td>:internal_server_error</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>501</td>\n      <td>:not_implemented</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>502</td>\n      <td>:bad_gateway</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>503</td>\n      <td>:service_unavailable</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>504</td>\n      <td>:gateway_timeout</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>505</td>\n      <td>:http_version_not_supported</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>506</td>\n      <td>:variant_also_negotiates</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>507</td>\n      <td>:insufficient_storage</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>508</td>\n      <td>:loop_detected</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>510</td>\n      <td>:not_extended</td>\n    </tr>\n    <tr>\n      <td> </td>\n      <td>511</td>\n      <td>:network_authentication_required</td>\n    </tr>\n  </tbody>\n</table>\n\n"
}