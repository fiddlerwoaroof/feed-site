{
  "title":"Rails adds source attribute to its ErrorReporting API",
  "date":"2022-11-03T00:00:00.000000Z",
  "author":null,
  "id":"https://blog.saeloun.com/2022/11/03/add-context-attribute-to-error-reporting-api.html",
  "link":"https://blog.saeloun.com/2022/11/03/add-context-attribute-to-error-reporting-api.html",
  "content":"<p>Rails provides a common interface, ActiveSupport::ErrorReporter, \nfor error reporting services. \nhis allows external gems such as HoneyBadger, Sentry, Rollbar and more to standardize their \nmonitoring of errors throughout the platform.</p>\n\n<p>The ActiveSupport::ErrorReporter follows a pub-sub pattern, \nwhere subscribers can register to receive error reports. \nEvery subscriber must be registered \nand respond to,</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"n\">report</span><span class=\"p\">(</span><span class=\"no\">Exception</span><span class=\"p\">,</span> <span class=\"ss\">handled: </span><span class=\"no\">Boolean</span><span class=\"p\">,</span> <span class=\"ss\">context: </span><span class=\"no\">Hash</span><span class=\"p\">)</span></code></pre></figure>\n\n<p>The context hash is used to provide additional information about the error. \nFor example, the context hash can include the current user, the current request, \nthe current controller, \nand more.</p>\n\n<p>Here’s an example,</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"k\">class</span> <span class=\"nc\">ErrorSubscriber</span>\n    <span class=\"nb\">attr_reader</span> <span class=\"ss\">:events</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span>\n      <span class=\"vi\">@events</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">end</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">report</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">handled</span><span class=\"p\">:,</span> <span class=\"n\">context</span><span class=\"p\">:)</span>\n      <span class=\"vi\">@events</span> <span class=\"o\">&lt;&lt;</span> <span class=\"p\">[</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"ss\">handled: </span><span class=\"n\">handled</span><span class=\"p\">,</span> <span class=\"ss\">context: </span><span class=\"n\">context</span> <span class=\"p\">}]</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<p>To capture an error ActiveSupport::ErrorReporter provides two methods, <code class=\"highlighter-rouge\">handle</code> and <code class=\"highlighter-rouge\">record</code>. \nThe basic difference is that <code class=\"highlighter-rouge\">handle</code> swallows the error while <code class=\"highlighter-rouge\">record</code> re-raises the error. \nBoth methods take an exception \nand an optional context hash.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span> <span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">handle</span> <span class=\"k\">do</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">002</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span>   <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"s1\">'1'</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">003</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"k\">end</span>\n  <span class=\"o\">=&gt;</span> <span class=\"kp\">nil</span>\n\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">004</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span> <span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">record</span> <span class=\"k\">do</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">005</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span>   <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"s1\">'1'</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">006</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"k\">end</span>\n  <span class=\"p\">(</span><span class=\"n\">irb</span><span class=\"p\">):</span><span class=\"mi\">5</span><span class=\"ss\">:in</span> <span class=\"sb\">`+': String can't be coerced into Integer (TypeError)</span></code></pre></figure>\n\n<p>All captured errors are sent to all registered subscribers.</p>\n\n<h3 id=\"before\">Before</h3>\n<p>In order to capture the source of the error, \nusers previously could send the source as part of the context hash. \nThis was not ideal because it was not standardized \nand hence was not possible to filter on the source.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"no\">Rails</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">.</span><span class=\"nf\">record</span> <span class=\"k\">do</span>\n    <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"s1\">'1'</span>\n  <span class=\"k\">end</span><span class=\"p\">,</span> <span class=\"ss\">context: </span><span class=\"p\">{</span> <span class=\"ss\">source: </span><span class=\"s1\">'my_app'</span> <span class=\"p\">}</span></code></pre></figure>\n\n<h3 id=\"after\">After</h3>\n<p>Thanks to <a href=\"https://github.com/rails/rails/pull/44998\">this PR</a>, \nRails now provides a standardized way to capture the source of the error. \nThe source can be set using the <code class=\"highlighter-rouge\">source</code> attribute of the ErrorReporter.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"vi\">@reporter</span><span class=\"p\">.</span><span class=\"nf\">record</span><span class=\"p\">(</span><span class=\"ss\">source: </span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"s1\">'1'</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<p>This works in a similar fashion to the <code class=\"highlighter-rouge\">severity</code> attribute. \nThe source can be set to any string value. \nThe default value is <code class=\"highlighter-rouge\">application</code>.</p>\n\n<p>Let’s now see an example. First let’s modify the Subscriber to capture the <code class=\"highlighter-rouge\">source</code> and <code class=\"highlighter-rouge\">severity</code> attribute. \nWe then register the subscriber \nand then capture an error with a source.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">001</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span> <span class=\"k\">class</span> <span class=\"nc\">ErrorSubscriber</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">002</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span>   <span class=\"nb\">attr_reader</span> <span class=\"ss\">:events</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">003</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span> \n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">004</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"o\">*</span>   <span class=\"k\">def</span> <span class=\"nf\">initialize</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">005</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"o\">*</span>     <span class=\"vi\">@events</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">006</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span>   <span class=\"k\">end</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">007</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span> \n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">00</span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"o\">*</span>   <span class=\"k\">def</span> <span class=\"nf\">report</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">handled</span><span class=\"p\">:,</span> <span class=\"n\">severity</span><span class=\"p\">:,</span> <span class=\"n\">source</span><span class=\"p\">:,</span> <span class=\"n\">context</span><span class=\"p\">:)</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">00</span><span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"o\">*</span>     <span class=\"vi\">@events</span> <span class=\"o\">&lt;&lt;</span> <span class=\"p\">[</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"ss\">handled: </span><span class=\"n\">handled</span><span class=\"p\">,</span> <span class=\"ss\">severity: </span><span class=\"n\">severity</span><span class=\"p\">,</span> <span class=\"ss\">source: </span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"ss\">context: </span><span class=\"n\">context</span> <span class=\"p\">}]</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">010</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span>   <span class=\"k\">end</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">011</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"k\">end</span>\n  <span class=\"o\">=&gt;</span> <span class=\"ss\">:report</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">012</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"vi\">@reporter</span> <span class=\"o\">=</span> <span class=\"no\">ActiveSupport</span><span class=\"o\">::</span><span class=\"no\">ErrorReporter</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n  <span class=\"o\">=&gt;</span> <span class=\"c1\">#&lt;ActiveSupport::ErrorReporter:0x0000000112c8d170 @logger=nil, @subscribers=[]&gt;</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">013</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"vi\">@subscriber</span> <span class=\"o\">=</span> <span class=\"no\">ErrorSubscriber</span><span class=\"p\">.</span><span class=\"nf\">new</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">014</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"vi\">@reporter</span><span class=\"p\">.</span><span class=\"nf\">subscribe</span><span class=\"p\">(</span><span class=\"vi\">@subscriber</span><span class=\"p\">)</span>\n  <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"c1\">#&lt;ErrorSubscriber:0x00000001126a4d80 @events=[]&gt;]</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">015</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span> <span class=\"vi\">@reporter</span><span class=\"p\">.</span><span class=\"nf\">record</span><span class=\"p\">(</span><span class=\"ss\">source: </span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">016</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"o\">*</span>   <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mi\">0</span>\n  <span class=\"n\">irb</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">):</span><span class=\"mo\">017</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span> <span class=\"k\">end</span>\n  <span class=\"p\">(</span><span class=\"n\">irb</span><span class=\"p\">):</span><span class=\"mi\">16</span><span class=\"ss\">:in</span> <span class=\"sb\">`/': divided by 0 (ZeroDivisionError)\n  irb(main):018:0&gt; @subscriber.events\n  =&gt; [[#&lt;ZeroDivisionError: divided by 0&gt;, {:handled=&gt;false, :severity=&gt;:error, :source=&gt;&quot;myapp&quot;, :context=&gt;{}}]]</span></code></pre></figure>\n\n<p>Now, we can further modify the error subscriber \nto ignore all “application” source errors.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\">  <span class=\"k\">class</span> <span class=\"nc\">ErrorSubscriber</span>\n    <span class=\"nb\">attr_reader</span> <span class=\"ss\">:events</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span>\n      <span class=\"vi\">@events</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">end</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">report</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"n\">handled</span><span class=\"p\">:,</span> <span class=\"n\">severity</span><span class=\"p\">:,</span> <span class=\"n\">source</span><span class=\"p\">:,</span> <span class=\"n\">context</span><span class=\"p\">:)</span>\n      <span class=\"k\">return</span> <span class=\"k\">if</span> <span class=\"n\">source</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;application&quot;</span>\n\n      <span class=\"vi\">@events</span> <span class=\"o\">&lt;&lt;</span> <span class=\"p\">[</span><span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"ss\">handled: </span><span class=\"n\">handled</span><span class=\"p\">,</span> <span class=\"ss\">severity: </span><span class=\"n\">severity</span><span class=\"p\">,</span> <span class=\"ss\">source: </span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"ss\">context: </span><span class=\"n\">context</span> <span class=\"p\">}]</span>\n    <span class=\"k\">end</span>\n  <span class=\"k\">end</span></code></pre></figure>\n\n<p>This makes it easier to filter out internal errors \nand focus on specific errors.</p>\n\n"
}