{
  "title":"Infinite Nature: Generating 3D Flythroughs from Still Photos",
  "date":"2022-11-16T23:55:34.244000Z",
  "author":"Google AI",
  "id":"tag:blogger.com,1999:blog-8474926331452026626.post-7514729444885986403",
  "link":"http://ai.googleblog.com/2022/11/infinite-nature-generating-3d.html",
  "content":"<span class=\"byline-author\">Posted by Noah Snavely and Zhengqi Li, Research Scientists, Google Research</span> <img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhcaExGymnLPSg-keBVSNJO5EbxE1otdQHc48pzNg1sH9bOeZs78wfl9kO3il1N7E7oPbc2GJqBp3jWVQftwQtNrNJr6NzcGowmtQm_IGJ0UW8mNwKnHtmhx4fadhYlnvFLbpRrUY7agBg47tH9YRmOCtMLyemtyEsUFFgPb6B-Tc8hYGrEP5jKwEsm8g/s720/InfNatResults_v3.gif\"> <p>We live in a world of great natural beauty — of majestic mountains, dramatic seascapes, and serene forests. Imagine seeing this beauty as a bird does, flying past richly detailed, three-dimensional landscapes. Can computers learn to synthesize this kind of visual experience? Such a capability would allow for new kinds of content for games and virtual reality experiences: for instance, relaxing within an immersive flythrough of an infinite nature scene. But existing methods that synthesize <a href=\"https://ai.googleblog.com/2021/02/the-technology-behind-cinematic-photos.html\">new views from images</a> tend to allow for only limited camera motion. </p> <a name=\"more\"></a> <p>In a research effort we call <em>Infinite Nature</em>, we show that computers can learn to generate such rich 3D experiences simply by viewing nature videos and photographs. Our latest work on this theme, <a href=\"https://infinite-nature-zero.github.io/\">InfiniteNature-Zero</a> (presented at <a href=\"https://eccv2022.ecva.net/\">ECCV 2022</a>) can produce high-resolution, high-quality flythroughs starting from a single seed image, using a system trained only on still photographs, a breakthrough capability not seen before. We call the underlying research problem <em>perpetual view generation</em>: given a single input view of a scene, how can we synthesize a photorealistic set of output views corresponding to an arbitrarily long, user-controlled 3D path through that scene? Perpetual view generation is very challenging because the system must generate new content on the other side of large landmarks (e.g., mountains), and render that new content with high realism and in high resolution. </p><br><br> <div class=\"separator\"><video loop=\"\" width=\"100%\"> <source src=\"https://infinite-nature-zero.github.io/static/videos/PerpetualViewGenerationHD.mp4\" type=\"video/mp4\">&lt;source&gt; </video></div> <br><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td class=\"tr-caption\">Example flythrough generated with InfiniteNature-Zero. It takes a single input image of a natural scene and synthesizes a long camera path flying into that scene, generating new scene content as it goes.</td></tr></tbody></table> <br> <h2>Background: Learning 3D Flythroughs from Videos</h2><p>To establish the basics of how such a system could work, we’ll describe our first version, “<a href=\"https://infinite-nature.github.io/\">Infinite Nature: Perpetual View Generation of Natural Scenes from a Single Image</a>” (presented at <a href=\"https://iccv2021.thecvf.com/home\">ICCV 2021</a>). In that work we explored a “learn from video” approach, where we collected a set of online videos captured from drones flying along coastlines, with the idea that we could learn to synthesize new flythroughs that resemble these real videos. This set of online videos is called the <a href=\"https://infinite-nature.github.io/\">Aerial Coastline Imagery Dataset</a> (ACID). In order to learn how to synthesize scenes that respond dynamically to any desired 3D camera path, however, we couldn’t simply treat these videos as raw collections of pixels; we also had to compute their underlying 3D geometry, including the camera position at each frame. </p><p>The basic idea is that we learn to generate flythroughs step-by-step. Given a starting view, like the first image in the figure below, we first compute a <a href=\"https://en.wikipedia.org/wiki/Depth_map\">depth map</a> using <a href=\"https://ai.googleblog.com/2021/02/the-technology-behind-cinematic-photos.html\">single-image depth prediction methods</a>. We then use that depth map to <em>render</em> the image forward to a new camera viewpoint, shown in the middle, resulting in a new image and depth map from that new viewpoint. </p><p>However, this intermediate image has some problems — it has holes where we can see behind objects into regions that weren’t visible in the starting image. It is also blurry, because we are now closer to objects, but are stretching the pixels from the previous frame to render these now-larger objects.  </p><p>To handle these problems, we learn a neural <em>image refinement</em> network that takes this low-quality intermediate image and outputs a complete, high-quality image and corresponding depth map. These steps can then be repeated, with this synthesized image as the new starting point. Because we refine both the image and the depth map, this process can be iterated as many times as desired — the system automatically learns to generate new scenery, like mountains, islands, and oceans, as the camera moves further into the scene. </p>   <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjqVNDQtTkXSpotcE_u3PVX4TdQWEfFB4IdWMx90BTEY7fLwVx-54T1_1e912Ym_yUdSImgc84oVJ1DzYe-KfPfMeVhxbzVYlhi6Z1AdBrffa1W_zWEUom4-eA4udAbellv_Ubh49WAMJ4S3J4_OwA-mGgKzDOxfxTBEHm5KN-4RBB2j_vEoKhIXG0LUw/s1999/image4.png\"><img border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjqVNDQtTkXSpotcE_u3PVX4TdQWEfFB4IdWMx90BTEY7fLwVx-54T1_1e912Ym_yUdSImgc84oVJ1DzYe-KfPfMeVhxbzVYlhi6Z1AdBrffa1W_zWEUom4-eA4udAbellv_Ubh49WAMJ4S3J4_OwA-mGgKzDOxfxTBEHm5KN-4RBB2j_vEoKhIXG0LUw/s16000/image4.png\"></a></td></tr><tr><td class=\"tr-caption\">Our Infinite Nature methods take an input view and its corresponding depth map (<b>left</b>). Using this depth map, the system renders the input image to a new desired viewpoint (<b>center</b>). This intermediate image has problems, such as missing pixels revealed behind foreground content (<b>shown in magenta</b>). We learn a deep network that refines this image to produce a new high-quality image (<b>right</b>). This process can be repeated to produce a long trajectory of views. We thus call this approach “render-refine-repeat”.</td></tr></tbody></table>    <p>We train this <em>render-refine-repeat </em>synthesis approach using the ACID dataset. In particular, we sample a video from the dataset and then a frame from that video. We then use this method to render several new views moving into the scene along the same camera trajectory as the ground truth video, as shown in the figure below, and compare these rendered frames to the corresponding ground truth video frames to derive a training signal. We also include an <a href=\"https://en.wikipedia.org/wiki/Generative_adversarial_network\">adversarial setup</a> that tries to distinguish synthesized frames from real images, encouraging the generated imagery to appear more realistic. </p>  <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYiQncG1u9JcVDn-mbmxUVGVttHLuQ-zFIZCg7isifUTozbfdLuVPIWAwziyhnyTScgqaO4BKKKlEytPORvJcF8tlUyGReUZqYw0U0n12mNLiBNL8T_9C5cAjMxCzwB7wONgvTawVCPOsbUUi16qY9uzSLWxJWOCOcagEEfgqGVdgAAczCXCCLH366Ug/s1999/image2.png\"><img border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYiQncG1u9JcVDn-mbmxUVGVttHLuQ-zFIZCg7isifUTozbfdLuVPIWAwziyhnyTScgqaO4BKKKlEytPORvJcF8tlUyGReUZqYw0U0n12mNLiBNL8T_9C5cAjMxCzwB7wONgvTawVCPOsbUUi16qY9uzSLWxJWOCOcagEEfgqGVdgAAczCXCCLH366Ug/s16000/image2.png\"></a></td></tr><tr><td class=\"tr-caption\">Infinite Nature can synthesize views corresponding to any camera trajectory. During training, we run our system for <em>T</em> steps to generate <em>T</em> views along a camera trajectory calculated from a training video sequence, then compare the resulting synthesized views to the ground truth ones. In the figure, each camera viewpoint is generated from the previous one by performing a warp operation <em>R</em>, followed by the neural refinement operation <em>g<sub>θ</sub></em>.</td></tr></tbody></table>  <p>The resulting system can generate compelling flythroughs, as featured on the <a href=\"https://infinite-nature.github.io/\">project webpage</a>, along with a “flight simulator” Colab demo. Unlike prior methods on video synthesis, this method allows the user to interactively control the camera and can generate much longer camera paths. </p> <div>    <br></div><h2>InfiniteNature-Zero: Learning Flythroughs from Still Photos</h2><p>One problem with this first approach is that video is difficult to work with as training data. High-quality video with the right kind of camera motion is challenging to find, and the aesthetic quality of an individual video frame generally cannot compare to that of an intentionally captured nature photograph. Therefore, in “<a href=\"https://arxiv.org/abs/2207.11148\">InfiniteNature-Zero: Learning Perpetual View Generation of Natural Scenes from Single Images</a>”, we build on the <em>render-refine-repeat</em> strategy above, but devise a way to learn perpetual view synthesis from collections of <em>still photos</em> — no videos needed. We call this method <em><a href=\"http://infinite-nature-zero.github.io/\">InfiniteNature-Zero</a></em> because it learns from “zero” videos. At first, this might seem like an impossible task — how can we train a model to generate video flythroughs of scenes when all it’s ever seen are isolated photos? </p><p>To solve this problem, we had the key insight that if we take an image and render a camera path that forms a <em>cycle</em> — that is, where the path loops back such that the last image is from the same viewpoint as the first — then we know that the last synthesized image along this path should be the same as the input image. Such <em>cycle consistency</em> provides a training constraint that helps the model learn to fill in missing regions and increase image resolution during each step of view generation. </p><p>However, training with these camera cycles is insufficient for generating long and stable view sequences, so as in our original work, we include an adversarial strategy that considers long, non-cyclic camera paths, like the one shown in the figure above. In particular, if we render <em>T </em>frames from a starting frame, we optimize our <em>render-refine-repeat</em> model such that a discriminator network can’t tell which was the starting frame and which was the final synthesized frame. Finally, we add a component trained to generate high-quality sky regions to increase the perceived realism of the results. </p><p>With these insights, we trained InfiniteNature-Zero on collections of landscape photos, which are available in large quantities online. Several resulting videos are shown below — these demonstrate beautiful, diverse natural scenery that can be explored along arbitrarily long camera paths. Compared to our prior work — and to prior video synthesis methods — these results exhibit significant improvements in quality and diversity of content (details available in <a href=\"https://arxiv.org/abs/2207.11148\">the paper</a>). </p> <br><br> <div class=\"separator\"><video loop=\"\" width=\"100%\"> <source src=\"https://infinite-nature-zero.github.io/static/videos/InfNatZeroResults.mp4\" type=\"video/mp4\">&lt;source&gt; </video></div><br><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\"><tbody><tr><td class=\"tr-caption\">Several nature flythroughs generated by InfiniteNature-Zero from single starting photos.</td></tr></tbody></table>   <h2>Conclusion</h2><p>There are a number of exciting future directions for this work. For instance, our methods currently synthesize scene content based only on the previous frame and its depth map; there is no persistent underlying 3D representation. Our work points towards future algorithms that can generate complete, photorealistic, and consistent 3D worlds. </p>  <div>    <br></div><h2>Acknowledgements</h2><p><em>Infinite Nature and InfiniteNature-Zero are the result of a collaboration between researchers at Google Research, UC Berkeley, and Cornell University. The key contributors to the work represented in this post include Angjoo Kanazawa, Andrew Liu, Richard Tucker, Zhengqi Li, Noah Snavely, Qianqian Wang, Varun Jampani, and Ameesh Makadia.</em></p>   "
}