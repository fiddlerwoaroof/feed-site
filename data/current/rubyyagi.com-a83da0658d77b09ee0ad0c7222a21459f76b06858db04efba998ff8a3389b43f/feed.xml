<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://rubyyagi.com/feed.xml" rel="self" type="application/atom+xml"><link href="https://rubyyagi.com/" rel="alternate" type="text/html"><updated>2021-09-23T11:08:50+00:00</updated><id>https://rubyyagi.com/feed.xml</id><title type="html">Ruby Yagi üêê</title><subtitle>Ruby, Rails, Web dev articles</subtitle><author><name>Axel Kee</name></author><entry><title type="html">Simplify loop using any?, all? and none?</title><link href="https://rubyyagi.com/simplify-loop-using-any-all-none/" rel="alternate" type="text/html" title="Simplify loop using any?, all? and none?"><published>2021-09-23T11:01:00+00:00</published><updated>2021-09-23T11:01:00+00:00</updated><id>https://rubyyagi.com/simplify-loop-using-any-all-none</id><content type="html" xml:base="https://rubyyagi.com/simplify-loop-using-any-all-none/">&lt;p&gt;Ruby has some useful methods for enumerable (Array, Hash, etc),  this post will talk about usage of &lt;a href=&quot;https://ruby-doc.org/core-3.0.2/Enumerable.html#method-i-any-3F&quot;&gt;any?&lt;/a&gt;, &lt;a href=&quot;https://ruby-doc.org/core-3.0.2/Enumerable.html#method-i-all-3F&quot;&gt;all?&lt;/a&gt;, and &lt;a href=&quot;https://ruby-doc.org/core-3.0.2/Enumerable.html#method-i-none-3F&quot;&gt;none?&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For examples used on this post, an &lt;strong&gt;Order&lt;/strong&gt; model might have many &lt;strong&gt;Payment&lt;/strong&gt;  model (customer can pay order using split payments).&lt;/p&gt;

&lt;h2 id=&quot;any&quot;&gt;any?&lt;/h2&gt;

&lt;p&gt;To check if an order has any paid payments, a loop-based implementation might look like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;has_paid_payment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;paid&quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# one of the payment is paid&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;has_paid_payment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has_paid_payment&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can simplify the code above using &lt;strong&gt;any?&lt;/strong&gt; like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;any?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'paid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# this will be executed if there is at least one paid payment&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;any?&lt;/strong&gt; method can take in a block, and it will return true if the block ever returns a value that is not false or nil. (ie. true, or 123, or ‚Äúabc‚Äù)&lt;/p&gt;

&lt;p&gt;If no block is supplied, it will perform a self check for the elements:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;any?&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# is equivalent to&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;any?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;all&quot;&gt;all?&lt;/h2&gt;

&lt;p&gt;To check if all payments has been paid for an order, a loop-based implementation might look like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fully_paid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;paid&quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# one of the payment is not paid, hence not fully paid&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fully_paid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fully_paid&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can simplify the code above using &lt;strong&gt;all?&lt;/strong&gt; like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'paid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# this will be executed if all payments are paid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;all?&lt;/strong&gt; method can take in a block, and it will return true if the block &lt;strong&gt;never&lt;/strong&gt; returns a value that is false or nil for all of the elements.&lt;/p&gt;

&lt;p&gt;If no block is supplied, it will perform a self check for the elements:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all?&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# is equivalent to&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;none&quot;&gt;none?&lt;/h2&gt;

&lt;p&gt;This is the opposite of &lt;strong&gt;all?&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;none?&lt;/strong&gt; method accepts a block, and only returns true if the block &lt;strong&gt;never returns true&lt;/strong&gt; for all elements.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;none?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'paid'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# this will be executed if there is no paid payment for the order&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If no block is supplied, it will perform a self check for the elements:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;none?&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# is equivalent to&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;payments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;none?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;payment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By utilizing any?, all? and none?, we can remove the usage of loop and make it more readable.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://ruby-doc.org/core-3.0.2/Enumerable.html&quot;&gt;Ruby doc on enumeration&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;4776ba93ea&quot; src=&quot;https://rubyyagi.ck.page/4776ba93ea/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">Ruby has some useful methods for enumerable (Array, Hash, etc), this post will talk about usage of any?, all?, and none?.</summary></entry><entry><title type="html">How to truncate long text and show read more / less button</title><link href="https://rubyyagi.com/how-to-truncate-long-text-and-show-read-more-less-button/" rel="alternate" type="text/html" title="How to truncate long text and show read more / less button"><published>2021-08-26T10:43:00+00:00</published><updated>2021-08-26T10:43:00+00:00</updated><id>https://rubyyagi.com/how-to-truncate-long-text-and-show-read-more-less-button</id><content type="html" xml:base="https://rubyyagi.com/how-to-truncate-long-text-and-show-read-more-less-button/">&lt;p&gt;If you are working on an app that has user generated content (like blog posts, comments etc), there might be scenario where it is too long to display and it would make sense to truncate them and put a ‚Äúread more‚Äù button below it.&lt;/p&gt;

&lt;p&gt;This post will solely focus on the front end, which the web browser will detect if the text needs to be truncated, and only show read more / read less as needed. (dont show ‚Äúread more‚Äù if the text is short enough)&lt;/p&gt;

&lt;p&gt;TL;DR? Check out the &lt;a href=&quot;https://codepen.io/cupnoodle/pen/powvObw&quot;&gt;Demo at CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;truncate-text-using-css&quot;&gt;Truncate text using CSS&lt;/h2&gt;

&lt;p&gt;Referenced from &lt;a href=&quot;https://github.com/tailwindlabs/tailwindcss-line-clamp&quot;&gt;TailwindCSS/line-clamp plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using the combination of these CSS properties, we can truncate the text (eg: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;&lt;/code&gt;) to the number of lines we want :&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.line-clamp-4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-webkit-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-box-orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* truncate to 4 lines */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;-webkit-line-clamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the text is longer than 4 lines, it will be truncated and will have ending of ‚Äú&lt;strong&gt;‚Ä¶&lt;/strong&gt;‚Äù. 
If the text is shorter than 4 lines, no changes is made.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/25-how-to-truncate-long-text-and-show-read-more-less-button/truncate_demo.png&quot; alt=&quot;truncate demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that we managed to truncate the text, the next step is to check whether a text is truncated or not, as you can see, the short text above (second paragraph) is not truncated even if we have set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webkit-line-clamp&lt;/code&gt; for it.&lt;/p&gt;

&lt;p&gt;We want to check if the text is actually truncated so that we can show ‚Äúread more‚Äù button for it (we dont need to show read more for short text that is not truncated).&lt;/p&gt;

&lt;h2 id=&quot;check-if-a-text-is-truncated-using-offsetheight-and-scrollheight&quot;&gt;Check if a text is truncated using offsetHeight and scrollHeight&lt;/h2&gt;

&lt;p&gt;There‚Äôs two attributes for HTML elements which we can use to check if the text is truncated, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight&quot;&gt;offsetHeight&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight&quot;&gt;scrollHeight&lt;/a&gt;. From Mozilla Dev Documentation,&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;offsetHeight&lt;/strong&gt; :&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;is a measurement in pixels of the element‚Äôs CSS height, including any borders, padding, and horizontal scrollbars (if rendered).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;scrollHeight&lt;/strong&gt; :&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;is equal to the minimum height the element would require in order to fit all the content in the viewport without using a vertical scrollbar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here‚Äôs &lt;a href=&quot;https://stackoverflow.com/a/22675563/1901264&quot;&gt;a good answer&lt;/a&gt; from StackOverflow on what is offsetHeight and scrollHeight. Here‚Äôs the visualized summary :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/25-how-to-truncate-long-text-and-show-read-more-less-button/heights.png&quot; alt=&quot;heights&quot; /&gt;&lt;/p&gt;

&lt;p&gt;scrollHeight is the total scrollable content height, and offsetHeight is the visible height on the screen. For an overflow view, the scrollHeight is larger than offsetHeight.&lt;/p&gt;

&lt;p&gt;We can deduce that if the scrollHeight is larger than the offsetHeight, then the element is truncated.&lt;/p&gt;

&lt;p&gt;Here‚Äôs the javascript code to check if an element is truncated :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// your element has overflow and truncated&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// show read more / read less button&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// your element doesn't overflow (not truncated)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This code should be run after the paragraph element is rendered on the screen, you can put this in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag right before the body closing tag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;toggle-truncation&quot;&gt;Toggle truncation&lt;/h2&gt;

&lt;p&gt;Assuming you already have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.line-clamp-4&lt;/code&gt; CSS class ready, we can toggle truncation by adding / removing this class on the paragraph element, the code for this can be put into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onclick&lt;/code&gt; action of the read more / read less button:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;document.querySelector('p').classList.remove('line-clamp-4')&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Read more...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;document.querySelector('p').classList.add('line-clamp-4')&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Read less...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;demo&quot;&gt;Demo&lt;/h2&gt;
&lt;p&gt;I have made a demo for this using Alpine.js and TailwindCSS, you can check the demo at CodePen here : &lt;a href=&quot;https://codepen.io/cupnoodle/pen/powvObw&quot;&gt;https://codepen.io/cupnoodle/pen/powvObw&lt;/a&gt;. Feel free to use this in your project.&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;4776ba93ea&quot; src=&quot;https://rubyyagi.ck.page/4776ba93ea/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">If you are working on an app that has user generated content (like blog posts, comments etc), there might be scenario where it is too long to display and it would make sense to truncate them and put a ‚Äúread more‚Äù button below it.</summary></entry><entry><title type="html">Rails tip: use #presence to get params value, or default to a preset value</title><link href="https://rubyyagi.com/rails-tip-presence/" rel="alternate" type="text/html" title="Rails tip: use #presence to get params value, or default to a preset value"><published>2021-08-21T08:55:00+00:00</published><updated>2021-08-21T08:55:00+00:00</updated><id>https://rubyyagi.com/rails-tip-presence</id><content type="html" xml:base="https://rubyyagi.com/rails-tip-presence/">&lt;p&gt;Here‚Äôs a method I encountered recently at my work and I found it might be useful to you as well.&lt;/p&gt;

&lt;p&gt;There might be some attribute which you want to set to a default parameter if the user didn‚Äôt supply any, eg:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# if the parameters is nil or blank, we will default to french fries&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sides&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;present?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;french fries&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This one liner looks concise, but we can make it even shorter like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sides&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;presence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;french fries&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;presence&lt;/strong&gt; method will return nil if the string is a blank string / empty array or nil , then the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;||&lt;/code&gt; (double pipe) will use the value on the right side (‚Äúfrench fries‚Äù).&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;presence&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; nil&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the string is not blank, &lt;strong&gt;.presence&lt;/strong&gt; will return the string itself.&lt;/p&gt;

&lt;p&gt;When &lt;strong&gt;params[:sides]&lt;/strong&gt; == ‚Äú‚Äù  :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sides&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;presence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;french fries&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;french fries&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When &lt;strong&gt;params[:sides]&lt;/strong&gt; == ‚Äúcorn‚Äù ,&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sides&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:sides&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;presence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;french fries&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &quot;corn&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Documentation : &lt;a href=&quot;http://api.rubyonrails.org/classes/Object.html#method-i-presence&quot;&gt;http://api.rubyonrails.org/classes/Object.html#method-i-presence&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;4776ba93ea&quot; src=&quot;https://rubyyagi.ck.page/4776ba93ea/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">Here‚Äôs a method I encountered recently at my work and I found it might be useful to you as well.</summary></entry><entry><title type="html">How to get started with TailwindCSS</title><link href="https://rubyyagi.com/start-tailwind/" rel="alternate" type="text/html" title="How to get started with TailwindCSS"><published>2021-06-24T14:44:00+00:00</published><updated>2021-06-24T14:44:00+00:00</updated><id>https://rubyyagi.com/start-tailwind</id><content type="html" xml:base="https://rubyyagi.com/start-tailwind/">&lt;h1 id=&quot;how-to-get-started-with-tailwindcss&quot;&gt;How to get started with TailwindCSS&lt;/h1&gt;

&lt;p&gt;This article assumes you have heard of &lt;a href=&quot;https://tailwindcss.com&quot;&gt;TailwindCSS&lt;/a&gt;, and interested to try it out but have no idea where to start.&lt;/p&gt;

&lt;h2 id=&quot;try-it-out-online-on-tailwind-play&quot;&gt;Try it out online on Tailwind Play&lt;/h2&gt;

&lt;p&gt;If you just want to try out TailwindCSS and don‚Äôt want to install anything on your computer yet, &lt;a href=&quot;https://play.tailwindcss.com&quot;&gt;the official Tailwind Play&lt;/a&gt; online playground is a good place to start!&lt;/p&gt;

&lt;h2 id=&quot;try-it-on-your-html-file-without-fiddling-with-the-nodejs-stuff&quot;&gt;Try it on your HTML file without fiddling with the nodeJS stuff&lt;/h2&gt;

&lt;p&gt;This section is for when you want to use TailwindCSS on a static website, but you don‚Äôt want to deal with the nodeJS NPM stuff.&lt;/p&gt;

&lt;p&gt;Thankfully, &lt;a href=&quot;https://beyondco.de/blog/tailwind-jit-compiler-via-cdn&quot;&gt;Beyond Code&lt;/a&gt; has released TailwindCSS JIT via CDN. You can read more on how it works on the linked article here : &lt;a href=&quot;https://beyondco.de/blog/tailwind-jit-compiler-via-cdn&quot;&gt;https://beyondco.de/blog/tailwind-jit-compiler-via-cdn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use TailwindCSS classes on your HTML file, simply include this script in between the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;...&amp;lt;/head&amp;gt;&lt;/code&gt; tag  :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Include CDN JavaScript --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://unpkg.com/tailwindcss-jit-cdn&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can use TailwindCSS class names on your HTML file and it will work!&lt;/p&gt;

&lt;p&gt;Keep in mind that this JIT javascript file is &amp;gt; 375 KB , which is quite sizeable if you want to use it for production.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bundle size is pretty big (375kb gzipped) when compared to a production built CSS that is usually ~10kb. But some people don‚Äôt mind this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you would like to compile a production TailwindCSS, you would have to deal with NPM / nodeJS (I promise it would be painless) , which will go into in the next section.&lt;/p&gt;

&lt;h2 id=&quot;compile-and-purge-tailwindcss-into-a-css-file-for-production-use&quot;&gt;Compile and purge TailwindCSS into a .css file for production use&lt;/h2&gt;

&lt;p&gt;Say you already have the HTML ready with TailwindCSS classes, and now you want to build a production ready CSS file, this is where we need to npm install some stuff and run some npm build script.&lt;/p&gt;

&lt;p&gt;If you haven‚Äôt already, open terminal, and navigate to your project folder root, and &lt;strong&gt;initiate npm&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create a package.json file in your project folder root.&lt;/p&gt;

&lt;p&gt;Next, we are going to install TailwindCSS, PostCSS and AutoPrefixer package :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -D tailwindcss@latest postcss@latest autoprefixer@latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, create a PostCSS config file on the project folder root, the file name should be &lt;strong&gt;postcss.config.js&lt;/strong&gt; , and add TailwindCSS and Autoprefixer plugin into this config file.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// postcss.config.js&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;tailwindcss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you have custom configuration for TailwindCSS (eg: extension or replacement of default class/font), you can create a Tailwind config file using this command :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx tailwindcss init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create a  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tailwind.config.js&lt;/code&gt; file at the root of your project folder.&lt;/p&gt;

&lt;p&gt;You can customize this file to extend / replace existing settings, let‚Äôs open it and change the &lt;strong&gt;purge&lt;/strong&gt; dictionary to include all html files :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// tailwind.config.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;purge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./**/*.html&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;darkMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// or 'media' or 'class'&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;variants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will tell TailwindCSS to search for all .html and .js files in the project folder for TailwindCSS classes (eg: mx-4 , text-xl etc), and remove classes that did not appear in the .html and .js files, this can cut down the generated production css file later.&lt;/p&gt;

&lt;p&gt;Next, create a .css file if you don‚Äôt have one already, and insert these tailwind directive into it :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* style.css */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@tailwind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@tailwind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@tailwind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* your custom css class/ids here */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.custom-class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These directives (eg: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@tailwind base&lt;/code&gt;) will be replaced with tailwind styles later on.&lt;/p&gt;

&lt;p&gt;Now you can run the following line in terminal to generate the production purged Tailwind CSS file :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NODE_ENV=production npx tailwindcss -i ./style.css  -c ./tailwind.config.js -o ./dist.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will read the original CSS file (&lt;strong&gt;style.css&lt;/strong&gt;), use the config located in the &lt;strong&gt;tailwind.config.js&lt;/strong&gt;  file, and save the production CSS file into &lt;strong&gt;dist.css&lt;/strong&gt; file (on the project folder root).&lt;/p&gt;

&lt;p&gt;Then you can use this production css file in the HTML &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; part like this :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- production compiled CSS --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dist.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It might be tedious to type out the long command above to generate production css, especially if you need to generate it more than one time.&lt;/p&gt;

&lt;p&gt;To save some typing, you can move the command above into the ‚Äúscripts‚Äù section of the &lt;strong&gt;package.json&lt;/strong&gt; file :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// package.json&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;your-project-name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1.0.0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;echo &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Error: no test specified&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;amp;&amp;amp; exit 1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;NODE_ENV=production npx tailwindcss -i ./style.css  -c ./tailwind.config.js -o ./dist.css&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;keywords&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;license&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ISC&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;devDependencies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^10.2.6&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;postcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^8.3.5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwindcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;^2.2.2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that I have added ‚Äú&lt;strong&gt;css&lt;/strong&gt;‚Äù and the command to generate production css into the ‚Äú&lt;strong&gt;scripts&lt;/strong&gt;‚Äù section.&lt;/p&gt;

&lt;p&gt;Now you can simply type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run css&lt;/code&gt; on your terminal to generate the production css! üôå&lt;/p&gt;

&lt;p&gt;I have also created a repo here : &lt;a href=&quot;https://github.com/rubyyagi/tailwindcss-generator&quot;&gt;https://github.com/rubyyagi/tailwindcss-generator&lt;/a&gt; , which you can simply clone it, replace the repo with your own HTML files, and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run css&lt;/code&gt; to generate production CSS!&lt;/p&gt;

&lt;h2 id=&quot;using-tailwindcss-on-ruby-on-rails&quot;&gt;Using TailwindCSS on Ruby on Rails&lt;/h2&gt;

&lt;p&gt;If you are interested to use TailwindCSS on a Rails app, you can refer &lt;a href=&quot;https://rubyyagi.com/tailwindcss2-rails6/&quot;&gt;this article on how to install and use TailwindCSS on a Rails project&lt;/a&gt;.&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;4776ba93ea&quot; src=&quot;https://rubyyagi.ck.page/4776ba93ea/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">How to get started with TailwindCSS</summary></entry><entry><title type="html">Getting started with automated testing workflow and CI on Ruby</title><link href="https://rubyyagi.com/unit-test-start/" rel="alternate" type="text/html" title="Getting started with automated testing workflow and CI on Ruby"><published>2021-06-15T11:06:00+00:00</published><updated>2021-06-15T11:06:00+00:00</updated><id>https://rubyyagi.com/unit-test-start</id><content type="html" xml:base="https://rubyyagi.com/unit-test-start/">&lt;p&gt;If you have been writing Ruby / Rails code for a while, but still can‚Äôt grasp on the ‚Äò&lt;strong&gt;why&lt;/strong&gt;‚Äô to write automated test, (eg. why do so many Ruby dev job posting requires automated test skill like Rspec, minitest etc? How does writing automated test makes me a better developer or help the company I work with? )&lt;/p&gt;

&lt;p&gt;or if you are not sure on how the &lt;strong&gt;CI&lt;/strong&gt; (continuous integration) stuff works, this article is written to address these questions!&lt;/p&gt;

&lt;p&gt;This article won‚Äôt go into how to write unit test, but it will let you &lt;strong&gt;experience what is it like working on a codebase that has automated testing in place, and how it can speed up the development flow and assure quality&lt;/strong&gt; (ie. confirm the code works). This article assume you have basic knowledge on how to use Git and Github.&lt;/p&gt;

&lt;p&gt;I have written a small Ruby Sinatra app (with automated test written using Rspec, you dont have to worry about Rspec for now), you can fork it to your Github account: &lt;a href=&quot;https://github.com/rubyyagi/cart&quot;&gt;https://github.com/rubyyagi/cart&lt;/a&gt; , then follow along this article to add a feature for it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/fork.png&quot; alt=&quot;fork&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After forking the repo, you can download the repo as zip or clone it to your computer. The repo is a simple shopping cart web app, which user can add items to cart and checkout, you can also try the completed online demo here : &lt;a href=&quot;https://alpine-cart.herokuapp.com&quot;&gt;https://alpine-cart.herokuapp.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I recommend &lt;strong&gt;creating a new git branch&lt;/strong&gt; before start working on it, to make creating pull request easier in the next step. (create a new branch instead of working on master branch directly.)&lt;/p&gt;

&lt;p&gt;Remember to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; after downloading the repo, to install the required gem (Sinatra and Rspec for testing).&lt;/p&gt;

&lt;p&gt;To run the web app, open terminal, navigate to that repo, and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruby app.rb&lt;/code&gt; , it should spin up a Sinatra web app, which you can access in your web browser at ‚Äú&lt;strong&gt;localhost:4567&lt;/strong&gt;‚Äù&lt;/p&gt;

&lt;p&gt;You can add items to the cart, then click ‚Äò&lt;strong&gt;Checkout&lt;/strong&gt;‚Äô , which it then will show the total (you will implement the discount part later).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/example.gif&quot; alt=&quot;checkout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Open the repo with your favorite code editor, you will notice a folder named ‚Äú&lt;strong&gt;spec&lt;/strong&gt;‚Äù :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/specs.png&quot; alt=&quot;specs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This folder contains the test script I have pre written, there are two test files inside (bulk_discount_spec.rb and cart_spec.rb) , they are used to verify if the &lt;strong&gt;bulk_discount&lt;/strong&gt; logic and &lt;strong&gt;cart&lt;/strong&gt; logic is implemented correctly, you don‚Äôt have to make changes on these files.&lt;/p&gt;

&lt;p&gt;To run these test, open terminal, navigate to this repo, and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rspec&lt;/code&gt; (type ‚Äòrspec‚Äô and press enter).&lt;/p&gt;

&lt;p&gt;You should see some test cases fail like this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/fail_test.png&quot; alt=&quot;test fail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is expected, as the &lt;strong&gt;bulk_discount.rb&lt;/strong&gt; file (it contains logic for bulk discount, located in  models/bulk_discount.rb) has not been implemented yet, hence the total returned from the cart on those test are incorrect.&lt;/p&gt;

&lt;p&gt;For this exercise, you will need to implement the bulk discount logic in &lt;strong&gt;models/bulk_discount.rb&lt;/strong&gt; , specifically inside the &lt;strong&gt;def apply&lt;/strong&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/bulk_discount.png&quot; alt=&quot;bulk discount file&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;BulkDiscount&lt;/strong&gt; class has three properties, amount (in cents), quantity_required (integer), and product_name (string).&lt;/p&gt;

&lt;p&gt;For example in the &lt;strong&gt;app.rb&lt;/strong&gt;, we have two bulk discounts :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;discounts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BulkDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;amount: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;quantity_required: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;product_name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;BulkDiscount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;amount: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;quantity_required: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;product_name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'banana'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Cart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;discounts: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;discounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;products: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;products&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We want to give $1 (100 cents in amount) discount off the cart for every 3 Apple (product_name: ‚Äòapple‚Äô) purchased. For example if the customer buys 7 Apple, the cart will be discounted $2  ($1 discount for every 3 apple, 6 apple = discount $2).&lt;/p&gt;

&lt;p&gt;For the code in &lt;strong&gt;app.rb&lt;/strong&gt; , we want to give bulk discount for apple and banana.  Say if the cart has 7 apple and 5 banana, it will be discounted with $6  ($1 x 2 + $2 x 2 = $6, discount of $1 x 2 for apple, $2 x 2 for banana).&lt;/p&gt;

&lt;p&gt;Back to &lt;strong&gt;bulk_discount.rb&lt;/strong&gt;,  the &lt;strong&gt;apply&lt;/strong&gt; method accepts two parameter, first parameter &lt;strong&gt;total&lt;/strong&gt; , which is the total of the carts, in cents (eg: $4 is 400 cents), before the current bulk discount is applied.&lt;/p&gt;

&lt;p&gt;The second parameter &lt;strong&gt;products&lt;/strong&gt; in an array of product (you can check &lt;strong&gt;models/product.rb&lt;/strong&gt;) that is currently in the cart.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;apply&lt;/strong&gt; method should go through all of the product in the products array, and check if there is product matching the &lt;strong&gt;product_name&lt;/strong&gt; of the BulkDiscount, and then check if the quantity of the product is larger than the &lt;strong&gt;quantity_required&lt;/strong&gt; , and calculate the amount to be deducted and save it to &lt;strong&gt;amount_to_deduct&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Then the &lt;strong&gt;apply&lt;/strong&gt; method will return the discounted total (total - amount_to_deduct).&lt;/p&gt;

&lt;p&gt;Each time you finish writing the code, you can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rspec&lt;/code&gt; to check if the test cases pass. If all of them pass, it means your implementation is correct.&lt;/p&gt;

&lt;p&gt;This feedback loop process should be a lot faster than opening the web browser and navigate to the web app, add a few products in cart, click ‚Äòcheckout‚Äô and see if the discount is displayed and if the displayed discount amount is correct.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/rspec.gif&quot; alt=&quot;rspec&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Compared to opening web browser and press ‚Äòadd to cart‚Äô and click ‚Äòcheckout‚Äô every time you want to test if your code is correct :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/example.gif&quot; alt=&quot;example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With automated test, you can check if an implementation is correct a lot faster than testing it manually.&lt;/p&gt;

&lt;p&gt;And with automated test in place, you can be confident that you didn‚Äôt break existing feature when you add new feature or make changes in the future, which makes refactoring safe.&lt;/p&gt;

&lt;p&gt;(Please work on the exercise yourself first before checking the answer üôà)&lt;/p&gt;

&lt;p&gt;You can compare your implementation with my implementation here (&lt;a href=&quot;https://github.com/rubyyagi/cart/blob/answer/models/bulk_discount.rb&quot;&gt;https://github.com/rubyyagi/cart/blob/answer/models/bulk_discount.rb&lt;/a&gt;) for the bulk discount.&lt;/p&gt;

&lt;h2 id=&quot;continuous-integration-ci&quot;&gt;Continuous Integration (CI)&lt;/h2&gt;

&lt;p&gt;Once you have finished implementing the bulk discount code part and ensure the test passes, you can push the commit to your forked repo.&lt;/p&gt;

&lt;p&gt;And then you can create a new pull request from your branch to the original repo (the &lt;strong&gt;rubyyagi/cart&lt;/strong&gt;) like this  :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/pr1.png&quot; alt=&quot;pull request&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/pr2.png&quot; alt=&quot;pull request 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After creating the pull request, you will notice that Github (Github Actions) automatically runs the test (same like when you run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rspec&lt;/code&gt;) :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/ci1.png&quot; alt=&quot;CI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the test has passed, it will show this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/ci2.png&quot; alt=&quot;CI 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Or if there is failing test, it will show ‚Äúfail‚Äù.&lt;/p&gt;

&lt;p&gt;The idea is that when you submit a new pull request (containing new feature or fixes), an automated test suite will be run on some external service (Github Actions for this example, but there‚Äôs also other CI service provider like CircleCI, SemaphoreCI etc). And you can configure the repository such that only pull request with passing test can be merged.&lt;/p&gt;

&lt;p&gt;You can take a look at &lt;a href=&quot;https://github.com/rails/rails/pulls&quot;&gt;pull requests in the official Rails repository&lt;/a&gt;, each pull request will trigger an automated test run, to ensure they don‚Äôt break existing Rails feature, this inspires confidence on the overall code quality.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/ci3.png&quot; alt=&quot;ci3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In my understanding, &lt;strong&gt;Continuous Integration&lt;/strong&gt; (CI) is the process of&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create new branch to work on new feature or fixes&lt;/li&gt;
  &lt;li&gt;Create pull request from the new branch to the main / master branch&lt;/li&gt;
  &lt;li&gt;Running automated test suite (and also linting, security checks) on the branch to ensure everything works&lt;/li&gt;
  &lt;li&gt;A senior dev / team lead/ repository owner will code review the new branch, and request changes if required, else they can approve the new branch and merge it to master/ main branch&lt;/li&gt;
  &lt;li&gt;The new branch is merged to master/ main branch&lt;/li&gt;
  &lt;li&gt;The master / main branch is deployed (to Heroku or AWS or some other service) manually or automatically, or if it is a library , push to RubyGems.org&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are using Heroku, you can configure to automatic deploy new merge to master / main branch only if the CI (automated test suite) passes :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/cd1.png&quot; alt=&quot;cd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/22-unit-test-start/cd2.png&quot; alt=&quot;cd2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have already setup the automated test suite to run on Github actions for this repository, you can check the workflow file here if you are interested : &lt;a href=&quot;https://github.com/rubyyagi/cart/blob/master/.github/workflows/test.yml&quot;&gt;https://github.com/rubyyagi/cart/blob/master/.github/workflows/test.yml&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Different CI usually requires different configuration file on the repository, eg: for CircleCI, you need to write the configuration file in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/.circleci/config.yml&lt;/code&gt; in your repository, these config are vendor specific.&lt;/p&gt;

&lt;p&gt;Hope this article has made you understand the importance of automated testing, and how it can speed up development process and inspire confidence in code quality!&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further Reading&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rubyyagi.com/intro-rspec-capybara-testing/&quot;&gt;Introduction to Rails testing with RSpec and Capybara&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubyyagi.com/rspec-request-spec/&quot;&gt;Introduction to API testing using RSpec and Request Spec&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.codewithjason.com/rails-testing-guide/&quot;&gt;The beginner guide to Rails testing, written by Jason Swett&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;4776ba93ea&quot; src=&quot;https://rubyyagi.ck.page/4776ba93ea/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">If you have been writing Ruby / Rails code for a while, but still can‚Äôt grasp on the ‚Äòwhy‚Äô to write automated test, (eg. why do so many Ruby dev job posting requires automated test skill like Rspec, minitest etc? How does writing automated test makes me a better developer or help the company I work with? )</summary></entry><entry><title type="html">How to call methods dynamically using string of method name</title><link href="https://rubyyagi.com/call-dynamic-method-name/" rel="alternate" type="text/html" title="How to call methods dynamically using string of method name"><published>2021-02-15T14:40:00+00:00</published><updated>2021-02-15T14:40:00+00:00</updated><id>https://rubyyagi.com/call-dynamic-method-name</id><content type="html" xml:base="https://rubyyagi.com/call-dynamic-method-name/">&lt;p&gt;I was working on a feature for my Rails app, which allows merchant to set fulfillment times on each day like this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/20-call-dynamic-method-name/fulfillment_time.png&quot; alt=&quot;fulfillment_time&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The main feature is that once an order is placed, the customer can‚Äôt cancel the placed order after the fulfillment time starts on that day (or on tomorrow).&lt;/p&gt;

&lt;p&gt;The fulfillment start times are saved in different columns like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fulfillments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;force: :cascade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;monday_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2000-01-01 00:00:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tuesday_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2000-01-01 00:00:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wednesday_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2000-01-01 00:00:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;thursday_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2000-01-01 00:00:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;friday_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2000-01-01 00:00:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;saturday_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2000-01-01 00:00:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sunday_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2000-01-01 00:00:00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To check if the fulfillment time has started, my app will get the current day of week using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DateTime.current.strftime('%A').downcase&lt;/code&gt; . If today is wednesday, then it will return &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wednesday&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;The question now is that &lt;strong&gt;how do I access value of different column based on different day of week&lt;/strong&gt;? Say I want to get the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;thursday_start_time&lt;/code&gt; if today is &lt;strong&gt;thursday&lt;/strong&gt; ; or the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sunday_start_time&lt;/code&gt; is today is &lt;strong&gt;sunday&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;Fortunately, Ruby‚Äôs metaprogramming feature allows us to call methods dynamically by just passing the method name into &lt;strong&gt;public_send(method_name)&lt;/strong&gt;  or &lt;strong&gt;send(method_name)&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;Say we have a class like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Duck&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_noise&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;quack&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;jump&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;can't jump&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can call the &lt;strong&gt;make_noise&lt;/strong&gt; method by calling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Duck.new.public_send(&quot;make_noise&quot;)&lt;/code&gt;,  this is equivalent to calling Duck.new.make_noise .&lt;/p&gt;

&lt;p&gt;For the &lt;strong&gt;jump&lt;/strong&gt; method, we would need to use &lt;strong&gt;send&lt;/strong&gt; instead, as it is a private method, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Duck.new.send(&quot;jump&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For the fulfillment start time, we can then pass in the day dynamically like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# this will return 'monday' if today is monday, or 'tuesday' if today is tuesday etc..&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;day_of_week&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# if today is monday, it will call 'monday_start_time', etc..&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;start_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fulfillment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day_of_week&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;_start_time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sweet!&lt;/p&gt;

&lt;p&gt;Alternatively, you can also pass in symbol instead of string : &lt;strong&gt;public_send(:make_noise)&lt;/strong&gt; .&lt;/p&gt;

&lt;h2 id=&quot;passing-parameters-to-public_send--send&quot;&gt;Passing parameters to public_send / send&lt;/h2&gt;

&lt;p&gt;If you would like to send parameters to the method, you can pass them after the method name :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animal&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_noise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;noise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; 
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;noise&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Animal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;public_send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'make_noise'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'quack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# quack&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# quack&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# quack&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;script async=&quot;&quot; data-uid=&quot;d862c2871b&quot; src=&quot;https://rubyyagi.ck.page/d862c2871b/index.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;Ruby Doc‚Äôs &lt;a href=&quot;https://ruby-doc.org/core-3.0.0/Object.html#method-i-public_send&quot;&gt;public_send documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ruby Doc‚Äôs &lt;a href=&quot;https://ruby-doc.org/core-3.0.0/Object.html#method-i-send&quot;&gt;send documentation&lt;/a&gt;&lt;/p&gt;</content><author><name>Axel Kee</name></author><summary type="html">I was working on a feature for my Rails app, which allows merchant to set fulfillment times on each day like this :</summary></entry><entry><title type="html">How to run tests in parallel in Github Actions</title><link href="https://rubyyagi.com/how-to-run-tests-in-parallel-in-github-actions/" rel="alternate" type="text/html" title="How to run tests in parallel in Github Actions"><published>2021-01-25T17:22:00+00:00</published><updated>2021-01-25T17:22:00+00:00</updated><id>https://rubyyagi.com/how-to-run-tests-in-parallel-in-github-actions</id><content type="html" xml:base="https://rubyyagi.com/how-to-run-tests-in-parallel-in-github-actions/">&lt;h1 id=&quot;how-to-run-tests-in-parallel-in-github-actions&quot;&gt;How to run tests in parallel in Github Actions&lt;/h1&gt;

&lt;p&gt;The company I work for has recently switched to Github Actions for CI, as they offer 2000 minutes per month which is quite adequate for our volume. We have been running tests in parallel (2 instances) on the previous CI to save time, and we wanted to do the same on Github Actions.&lt;/p&gt;

&lt;p&gt;Github Actions provides &lt;a href=&quot;https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix&quot;&gt;strategy matrix&lt;/a&gt; which lets you run tests in parallel, with different configuration for each matrix.&lt;/p&gt;

&lt;p&gt;For example with a matrix strategy below :&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Test&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.5.x'&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.6.x'&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.7.x'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;activerecord&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5.0'&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;6.0'&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;6.1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It will run 9 tests in parallel, 3 versions of Ruby x 3 versions of ActiveRecord = 9 tests&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/19-parallel-test-github-actions/9tests.png&quot; alt=&quot;9 tests&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One downside of Github Actions is that they don‚Äôt have built-in split tests function to split test files across different CI instances, which many other CI have. For example CircleCI provides split testing command like this :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Run rspec in parallel, and split the tests by timings&lt;/span&gt;
- run:
    &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;: |
      &lt;span class=&quot;nv&quot;&gt;TESTFILES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;circleci tests glob &lt;span class=&quot;s2&quot;&gt;&quot;spec/**/*_spec.rb&quot;&lt;/span&gt; | circleci tests &lt;span class=&quot;nb&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--split-by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;timings&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
      bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;rspec &lt;span class=&quot;nv&quot;&gt;$TESTFILES&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With split testing, we can run different test files on different CI instances to reduce the test execution time on each instance.&lt;/p&gt;

&lt;p&gt;Fortunately, we can write our own script to split the test files in Ruby.&lt;/p&gt;

&lt;p&gt;Before we proceed to writing split test script, lets configure the Github Actions workflow to run our tests in parallel.&lt;/p&gt;

&lt;h1 id=&quot;configuring-github-actions-workflow-to-run-test-in-parallel&quot;&gt;Configuring Github Actions workflow to run test in parallel&lt;/h1&gt;

&lt;p&gt;Let‚Äôs configure our Github Actions workflow to run test in parallel :&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# .github/workflows/test.yml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;fail-fast&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Set N number of parallel jobs you want to run tests on.&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Use higher number if you have slow tests to split them on more parallel jobs.&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Remember to update ci_node_index below to 0..N-1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ci_node_total&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# set N-1 indexes for parallel jobs&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ci_node_index&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;BUNDLE_JOBS&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;BUNDLE_RETRY&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;BUNDLE_PATH&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vendor/bundle&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;PGHOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;127.0.0.1&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;PGUSER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;PGPASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;RAILS_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;postgres&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres:9.6-alpine&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5432:5432&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;-&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-cmd pg_isready&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-interval 10s&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-timeout 5s&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-retries 5&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
          &lt;span class=&quot;na&quot;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRES_DB&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bookmarker_test&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;ci_node_total&lt;/strong&gt; means the total number of parallel instances you want to spin up during the CI process. We are using 2 instances here so the value is [2]. If you would like to use more instances, say 4 instances, then you can change the value to [4] :&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;ci_node_total&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;ci_node_index&lt;/strong&gt; means the index of the parallel instances you spin up during the CI process, this should match the ci_node_total you have defined earlier.&lt;/p&gt;

&lt;p&gt;For example, if you have 2 total nodes, your &lt;strong&gt;ci_node_index&lt;/strong&gt; should be [0, 1]. If you have 4 total nodes, your &lt;strong&gt;ci_node_index&lt;/strong&gt; should be [0, 1, 2, 3]. This is useful for when we write the script to split the tests later.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;fail-fast: false&lt;/strong&gt; means that we want to continue running the test on other instances even if there is failing test on one of the instance. The default value for fail-fast is true if we didn‚Äôt set it, which will stop all instances if there is even one failing test on one instance. Setting fail-fast: false would allow all instances to finish run their tests, and we can see which test has failed later on.&lt;/p&gt;

&lt;p&gt;Next, we add the testing steps in the workflow :&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ... Ruby / Database setup...&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Make bin/ci executable&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod +x ./bin/ci&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Rspec test&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;rspec-test&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Specifies how many jobs you would like to run in parallel,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# used for partitioning&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;CI_NODE_TOTAL&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ matrix.ci_node_total }}&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Use the index from matrix as an environment variable&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;CI_NODE_INDEX&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ matrix.ci_node_index }}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;continue-on-error&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;./bin/ci&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We pass the &lt;strong&gt;ci_node_total&lt;/strong&gt; and &lt;strong&gt;ci_node_index&lt;/strong&gt; variables into the environment variables (&lt;strong&gt;env:&lt;/strong&gt; ) for the test step.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;continue-on-error: true&lt;/strong&gt; will instruct the workflow to continue to the next step even if there is error on the test step (ie. when any of the test fails).&lt;/p&gt;

&lt;p&gt;And lastly we want to run the custom test script that split the test files and run them  &lt;strong&gt;./bin/ci&lt;/strong&gt; , remember to make this file executable in the previous step.&lt;/p&gt;

&lt;p&gt;We will look into how to write the &lt;strong&gt;bin/ci&lt;/strong&gt; in the next section.&lt;/p&gt;

&lt;h2 id=&quot;preparing-the-ruby-script-to-split-test-files-and-run-them&quot;&gt;Preparing the ruby script to split test files and run them&lt;/h2&gt;

&lt;p&gt;In this section, we will write the &lt;strong&gt;bin/ci&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;First, create a file named ‚Äú&lt;strong&gt;ci&lt;/strong&gt;‚Äù (without file extension), and place it in the ‚Äú&lt;strong&gt;bin&lt;/strong&gt;‚Äù folder inside your Rails app like this :
&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/19-parallel-test-github-actions/ci_file.png&quot; alt=&quot;ci_file_location&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs the code for the &lt;strong&gt;ci&lt;/strong&gt; file :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tests&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;spec/**/*_spec.rb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Add randomization seed based on SHA of each commit&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;random: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'GITHUB_SHA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))).&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CI_NODE_TOTAL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CI_NODE_INDEX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bundle exec rspec &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dir[&quot;spec/**/*_spec.rb&quot;]&lt;/code&gt; will return an array of path of test files, which are located inside the &lt;strong&gt;spec&lt;/strong&gt; folder , and filename ends with &lt;strong&gt;_spec.rb&lt;/strong&gt; . (eg: &lt;em&gt;[‚Äúspec/system/bookmarks/create_spec.rb‚Äù, ‚Äúspec/system/bookmarks/update_spec.rb‚Äù]&lt;/em&gt;) .&lt;/p&gt;

&lt;p&gt;You can change this to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dir[&quot;test/**/*_test.rb&quot;]&lt;/code&gt; if you are using minitest instead of Rspec.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sort&lt;/strong&gt; will sort the array of path of test files in alphabetical order.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;shuffle&lt;/strong&gt; will then randomize the order of the array, using the seed provided in the &lt;strong&gt;random&lt;/strong&gt; parameter, so that the randomized order will differ based on the &lt;strong&gt;random&lt;/strong&gt; parameter we passed in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ENV[‚ÄòGITHUB_SHA‚Äô]&lt;/strong&gt; is the SHA hash of the commit that triggered the Github Actions workflow, which available as environment variables in Github Actions.&lt;/p&gt;

&lt;p&gt;As &lt;strong&gt;Random.new&lt;/strong&gt; only accept integer for the seed parameter, we have to convert the SHA hash (in hexadecimal string, eg: fe5300b3733d69f0a187a5f3237eb05bb134e341 ) into integer using hexadecimal as base (&lt;strong&gt;.to_i(16)&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Then we select the test files that will be run using &lt;strong&gt;select.with_index&lt;/strong&gt;. For each CI instance, we will select the  test files from the array, which the remainder of the index divided by total number of nodes equals to the CI instance index.&lt;/p&gt;

&lt;p&gt;For example, say CI_NODE_TOTAL = 2, CI_NODE_INDEX = 1, and we have four test files :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/19-parallel-test-github-actions/explanation.png&quot; alt=&quot;explanation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The test files will be split as shown above.&lt;/p&gt;

&lt;p&gt;The downside of this split is that the tests will not be splitted based on the duration of the test, which might make some instance running longer than the others. CircleCI does store historical data of each tests duration and can split the test files based on timing, hopefully Github Actions will implement this feature in the future.&lt;/p&gt;

&lt;h2 id=&quot;example-repository&quot;&gt;Example repository&lt;/h2&gt;

&lt;p&gt;I have created an example Rails repository with parallel tests for Github Actions here : &lt;a href=&quot;https://github.com/rubyyagi/bookmarker&quot;&gt;https://github.com/rubyyagi/bookmarker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check out the &lt;a href=&quot;https://github.com/rubyyagi/bookmarker/blob/main/.github/workflows/test.yml&quot;&gt;full workflow .yml file here&lt;/a&gt; , the &lt;a href=&quot;https://github.com/rubyyagi/bookmarker/blob/main/bin/ci&quot;&gt;bin/ci file here&lt;/a&gt; , and an &lt;a href=&quot;https://github.com/rubyyagi/bookmarker/actions/runs/507483357&quot;&gt;example test run here&lt;/a&gt;.&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;4776ba93ea&quot; src=&quot;https://rubyyagi.ck.page/4776ba93ea/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">How to run tests in parallel in Github Actions</summary></entry><entry><title type="html">Devise only allow one session per user at the same time</title><link href="https://rubyyagi.com/devise-only-allow-one-session-per-user-at-the-same-time/" rel="alternate" type="text/html" title="Devise only allow one session per user at the same time"><published>2021-01-16T15:42:00+00:00</published><updated>2021-01-16T15:42:00+00:00</updated><id>https://rubyyagi.com/devise-only-allow-one-session-per-user-at-the-same-time</id><content type="html" xml:base="https://rubyyagi.com/devise-only-allow-one-session-per-user-at-the-same-time/">&lt;p&gt;Sometimes for security purpose, or you just dont want users to share their accounts, it is useful to implement a check to ensure that only one login (session) is allowed per user at the same time.&lt;/p&gt;

&lt;p&gt;To check if there is only one login, we will need a column to store information of the current login information. We can use a string column to store a token, and this token will be randomly generated each time the user is logged in, and then we compare if the current session‚Äôs login token is equal to this token.&lt;/p&gt;

&lt;p&gt;Assuming your users info are stored in the &lt;strong&gt;users&lt;/strong&gt; table (you can change to other name for the command below), create a ‚Äúcurrent_login_token‚Äù column for the table :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g migration AddCurrentLoginTokenToUsers current_login_token:string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This would generate migration file below  :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddCurrentLoginTokenToUsers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_column&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:current_login_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now run &lt;strong&gt;rails db:migrate&lt;/strong&gt; to run this migration.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, we would need to override the &lt;strong&gt;create&lt;/strong&gt; method of SessionsController from Devise, so that we can generate a random string for the &lt;strong&gt;current_login_token&lt;/strong&gt; column each time the user signs in.&lt;/p&gt;

&lt;p&gt;If you don‚Äôt already have a custom SessionsController created already, you can generate one using this command :&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails g devise:controllers users -c=sessions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(Assuming the model name is &lt;strong&gt;user&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;The -c flag means the controller to generate, as we only need to generate SessionsController here. (You can read more about the &lt;a href=&quot;https://github.com/heartcombo/devise/wiki/Tool:-Generate-and-customize-controllers&quot;&gt;devise generator command here&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This will generate a controller in &lt;strong&gt;app/controllers/users/sessions_controller.rb&lt;/strong&gt; , and this will override the default Devise‚Äôs SessionsController.&lt;/p&gt;

&lt;p&gt;Next, we are going to override the ‚Äú&lt;strong&gt;create&lt;/strong&gt;‚Äù method (the method that will be called when user sign in successfully) inside &lt;strong&gt;app/controllers/users/sessions_controller.rb&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Users::SessionsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Devise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SessionsController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;skip_before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:check_concurrent_session&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# POST /resource/sign_in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# after the user signs in successfully, set the current login token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;set_login_token&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_login_token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Devise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;friendly_token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:login_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current_login_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We use &lt;a href=&quot;https://github.com/heartcombo/devise/blob/45b831c4ea5a35914037bd27fe88b76d7b3683a4/lib/devise.rb#L492&quot;&gt;Devise.friendly_token&lt;/a&gt; to generate a random string for the token, then store it into the current session (&lt;strong&gt;session[:login_token]&lt;/strong&gt;) and also save to the current user‚Äôs &lt;strong&gt;current_login_token&lt;/strong&gt; column.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;skip_before_action :check_concurrent_session&lt;/strong&gt; will be explained later, put it there for now.&lt;/p&gt;

&lt;p&gt;Next, we will edit the &lt;strong&gt;application_controller.rb&lt;/strong&gt; file (or whichever controller where most of the controllers that require authorization are inherited from).&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# perform the check before each controller action are executed&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:check_concurrent_session&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;check_concurrent_session&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;already_logged_in?&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# sign out the previously logged in user, only left the newly login user&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;sign_out_and_redirect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;already_logged_in?&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# if current user is logged in, but the user login token in session &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# doesn't match the login token in database,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# which means that there is a new login for this user&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:login_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;current_login_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we have wrote &lt;strong&gt;before_action :check_concurrent_session&lt;/strong&gt; in the application_controller.rb , all controllers inherited from this will run the &lt;strong&gt;check_concurrent_session&lt;/strong&gt; method before the controller action method are executed, this will check if there is any new login session initiated for the same user.&lt;/p&gt;

&lt;p&gt;We want to exempt this check when user is on the login part, ie. sessions#create , hence we put a &lt;strong&gt;skip_before_action :check_concurrent_session&lt;/strong&gt; to skip this check for the Users::SessionController class earlier.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a demo video of this code :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/18-devise-limit-one-user/single-login-demo.gif&quot; alt=&quot;demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Notice that after the second login attempt, the previously logged in user gets logged out after clicking a link (executing a controller action).&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;4776ba93ea&quot; src=&quot;https://rubyyagi.ck.page/4776ba93ea/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">Sometimes for security purpose, or you just dont want users to share their accounts, it is useful to implement a check to ensure that only one login (session) is allowed per user at the same time.</summary></entry><entry><title type="html">How to install TailwindCSS 2 on Rails 6</title><link href="https://rubyyagi.com/tailwindcss2-rails6/" rel="alternate" type="text/html" title="How to install TailwindCSS 2 on Rails 6"><published>2020-12-10T00:00:00+00:00</published><updated>2020-12-10T00:00:00+00:00</updated><id>https://rubyyagi.com/tailwindcss2-rails6</id><content type="html" xml:base="https://rubyyagi.com/tailwindcss2-rails6/">&lt;p&gt;&lt;a href=&quot;https://blog.tailwindcss.com/tailwindcss-v2&quot;&gt;TailwindCSS v2.0&lt;/a&gt; was released on 19 November 2020 üéâ, but it had a few changes that requires some tweak to install and use it on Rails 6, such as the requirement of PostCSS 8 and Webpack 5. As of current (10 December 2020), Rails 6 comes with webpack 4 and PostCSS 7, which doesn‚Äôt match the requirement of TailwindCSS v2.&lt;/p&gt;

&lt;p&gt;If we install TailwindCSS v2 directly on a Rails 6 app using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yarn add tailwindcss &lt;/code&gt;, we might get a error (PostCSS plugin tailwindcss requires PostCSS 8) like this when running the server :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/17-tailwindcss2-rails6/tailwind-postcss-error.png&quot; alt=&quot;postcss8 error&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This tutorial will guide you on &lt;strong&gt;how to install and use TailwindCSS 2 on Rails 6 using new Webpacker version(v5+)&lt;/strong&gt;. If webpack / webpacker v5+ breaks your current Rails app javascript stuff, I recommend using the compability build of Tailwind &lt;a href=&quot;https://rubyyagi.com/tailwind-css-on-rails-6-intro/#installing-tailwind-css-on-your-rails-app&quot;&gt;following this tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;update-webpacker-gem-and-npm-package&quot;&gt;Update webpacker gem and npm package&lt;/h2&gt;

&lt;p&gt;Currently the latest &lt;a href=&quot;https://www.npmjs.com/package/@rails/webpacker&quot;&gt;Webpacker NPM package&lt;/a&gt; is not up to date to the &lt;a href=&quot;https://github.com/rails/webpacker&quot;&gt;master branch of Webpacker repository&lt;/a&gt;, we need to use the Github master version until Rails team decide to push the new version of webpacker into NPM registry.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/17-tailwindcss2-rails6/webpacker_release.png&quot; alt=&quot;webpacker release&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To do this, we need to uninstall the current webpacker in our Rails app :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn remove @rails/webpacker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And install the latest webpacker directly from Github (&lt;strong&gt;notice without the ‚Äú@‚Äù&lt;/strong&gt;) :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn add rails/webpacker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here‚Äôs the difference in package.json :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/17-tailwindcss2-rails6/package_compare.png&quot; alt=&quot;package.json&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to do the same for the Webpacker gem as well, as they haven‚Äôt push the latest webpacker code in Github to RubyGems registry.&lt;/p&gt;

&lt;p&gt;In your &lt;strong&gt;Gemfile&lt;/strong&gt;, change the webpacker gem from :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'webpacker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 4.0'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;to:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;webpacker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;github: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rails/webpacker&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to install the gem from its Github repository. You should see the webpacker gem is version 5+ now :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/17-tailwindcss2-rails6/webpacker-master.png&quot; alt=&quot;webpacker master&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;install-tailwind-css-2&quot;&gt;Install Tailwind CSS 2&lt;/h2&gt;

&lt;p&gt;After updating the webpacker gem, we can install TailwindCSS (and its peer dependency) using yarn :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn add tailwindcss postcss autoprefixer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can use webpacker for handling Tailwind CSS in our Rails app, create a folder named &lt;strong&gt;stylesheets&lt;/strong&gt; inside &lt;strong&gt;app/javascript&lt;/strong&gt; (the full path would be &lt;strong&gt;app/javascript/stylesheets&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Inside the app/javascript/stylesheets folder, create a file and name it ‚Äú&lt;strong&gt;application.scss&lt;/strong&gt;‚Äù, then import Tailwind related CSS inside this file :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* application.scss */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;tailwindcss/base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;tailwindcss/components&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;tailwindcss/utilities&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The file structure looks like this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/6-tailwind-intro/tailwind_import.png&quot; alt=&quot;application scss file structure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then in &lt;strong&gt;app/javascript/packs/application.js&lt;/strong&gt; , require the application.scss :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// app/javascript/packs/application.js&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@rails/ujs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;turbolinks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;stylesheets/application.scss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, we have to add &lt;strong&gt;stylesheet_pack_tag&lt;/strong&gt; that reference the app/javascript/stylesheets/application.scss file in the layout file (app/views/layouts/application.html.erb). So the layout can import the stylesheet there.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- app/views/layouts/application.html.erb--&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Bootstraper&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;csrf_meta_tags&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;csp_meta_tag&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stylesheet_link_tag&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;',&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;',&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;data-turbolinks-track&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- This refers to app/javascript/stylesheets/application.scss--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;stylesheet_pack_tag&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;',&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;data-turbolinks-track&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%=&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;javascript_pack_tag&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;',&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;data-turbolinks-track&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;add-tailwindcss-to-postcss-config&quot;&gt;Add TailwindCSS to PostCSS config&lt;/h2&gt;

&lt;p&gt;Next, we will add TailwindCSS into the &lt;strong&gt;postcss.config.js&lt;/strong&gt; file (located in your Rails app root) :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// postcss.config.js&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwindcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-import&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-flexbugs-fixes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-preset-env&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;flexbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;no-2009&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you are not using the default file name for TailwindCSS configuration file (tailwind.config.js) , you need to specify it after the tailwindcss require :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// postcss.config.js&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// if you are using non default config filename&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwindcss&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;tailwind.config.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-import&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-flexbugs-fixes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;postcss-preset-env&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;flexbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;no-2009&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we can use the Tailwind CSS classes on our HTML elements!&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is static#index&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;bg-red-500 w-3/4 mx-auto p-4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text-white text-2xl&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Test test test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/6-tailwind-intro/tailwind_preview.png&quot; alt=&quot;demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can refer to &lt;a href=&quot;https://tailwindcss.com/docs&quot;&gt;Tailwind CSS documentation&lt;/a&gt; for the list of classes you can use.&lt;/p&gt;

&lt;p&gt;For further Tailwind CSS customization and configuring PurgeCSS, you can &lt;a href=&quot;https://rubyyagi.com/tailwind-css-on-rails-6-intro/#changing-tailwind-css-default-config&quot;&gt;refer this post&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;Thanks Kieran for writing the &lt;a href=&quot;https://www.kieranklaassen.com/upgrade-rails-to-tailwind-css-2/&quot;&gt;Tailwind CSS 2 upgrade guide&lt;/a&gt;.&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;d862c2871b&quot; src=&quot;https://rubyyagi.ck.page/d862c2871b/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">TailwindCSS v2.0 was released on 19 November 2020 üéâ, but it had a few changes that requires some tweak to install and use it on Rails 6, such as the requirement of PostCSS 8 and Webpack 5. As of current (10 December 2020), Rails 6 comes with webpack 4 and PostCSS 7, which doesn‚Äôt match the requirement of TailwindCSS v2.</summary></entry><entry><title type="html">How to implement Rails API authentication with Devise and Doorkeeper</title><link href="https://rubyyagi.com/rails-api-authentication-devise-doorkeeper/" rel="alternate" type="text/html" title="How to implement Rails API authentication with Devise and Doorkeeper"><published>2020-12-06T00:00:00+00:00</published><updated>2020-12-06T00:00:00+00:00</updated><id>https://rubyyagi.com/rails-api-authentication-devise-doorkeeper</id><content type="html" xml:base="https://rubyyagi.com/rails-api-authentication-devise-doorkeeper/">&lt;p&gt;Most of the time when we implement API endpoints on our Rails app, we want to limit access of these API to authorized users only, there‚Äôs a few strategy for authenticating user through API, ranging from a &lt;a href=&quot;https://github.com/gonzalo-bulnes/simple_token_authentication&quot;&gt;simple token authentication&lt;/a&gt; to a fullblown OAuth provider with JWT.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will implement an OAuth provider for API authentication on the same Rails app we serve the user, using Devise and &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper&quot;&gt;Doorkeeper&lt;/a&gt; gem.&lt;/p&gt;

&lt;p&gt;After this tutorial, you would be able to implement Devise sign in/sign up on Rails frontend, and Doorkeeper OAuth (login, register) on the API side for mobile app client, or a separate frontend client like React etc.&lt;/p&gt;

&lt;p&gt;This tutorial assume that you have some experience using Devise and your Rails app will both have a frontend UI and API for users to register and sign in. We can also use Doorkeeper to allow third party to create their own OAuth application on our own Rails app platform, but that is out of the scope of this article, as this article will focus on creating our own OAuth application for self consumption only.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#scaffold-a-model&quot;&gt;Scaffold a model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#setup-devise-gem&quot;&gt;Setup Devise gem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#setup-doorkeeper-gem&quot;&gt;Setup Doorkeeper gem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#customize-doorkeeper-configuration&quot;&gt;Customize Doorkeeper configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#create-your-own-oauth-application&quot;&gt;Create your own OAuth application&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-to-login--logout-and-refresh-token-using-api&quot;&gt;How to login , logout and refresh token using API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#create-api-controllers-that-require-authentication&quot;&gt;Create API controllers that require authentication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#create-an-endpoint-for-user-registration&quot;&gt;Create an endpoint for user registration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#revoke-user-token-manually&quot;&gt;Revoke user token manually&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;scaffold-a-model&quot;&gt;Scaffold a model&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start with some scaffolding so we can have a model, controller and view for CRUD, you can skip this section if you already have an existing Rails app.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scaffold&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bookmarks&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then in &lt;strong&gt;routes.rb&lt;/strong&gt; , set the root path to ‚Äòbookmarks#index‚Äô. Devise requires us to set a root path in routes to work.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/routes.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bookmarks#index'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we have a sample CRUD Rails app, we can move on to the next step.&lt;/p&gt;

&lt;h2 id=&quot;setup-devise-gem&quot;&gt;Setup Devise gem&lt;/h2&gt;

&lt;p&gt;Add devise gem in the &lt;strong&gt;Gemfile&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Gemfile&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'devise'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 4.7.3'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to install it.&lt;/p&gt;

&lt;p&gt;Next, run the Devise installation generator :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails g devise:install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then we create the user model (or any other model name you are using like admin, staff etc) using Devise :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails g devise User&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can customize the devise features you want in the generated migration file, and also in the User model file.&lt;/p&gt;

&lt;p&gt;Then run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake db:migrate&lt;/code&gt; to create the users table.&lt;/p&gt;

&lt;p&gt;Now we have the Devise user set up, we can add &lt;strong&gt;authenticate_user!&lt;/strong&gt; to &lt;strong&gt;bookmarks_controller.rb&lt;/strong&gt; so only logged in users can view the controller now.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/bookmarks_controller.rb&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookmarksController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:authenticate_user!&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# ....&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next we will move to the main part, which is setting up authentication for the API using Doorkeeper gem.&lt;/p&gt;

&lt;h2 id=&quot;setup-doorkeeper-gem&quot;&gt;Setup Doorkeeper gem&lt;/h2&gt;

&lt;p&gt;Add doorkeeper gem in the &lt;strong&gt;Gemfile&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Gemfile&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'doorkeeper'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'~&amp;gt; 5.4.0'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to install it.&lt;/p&gt;

&lt;p&gt;Next, run the Doorkeeper installation generator :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails g doorkeeper:install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will generate the configuration file for Doorkeeper in &lt;strong&gt;config/initializers/doorkeeper.rb&lt;/strong&gt;, which we will customize later.&lt;/p&gt;

&lt;p&gt;Next, run the Doorkeeper migration generator :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails g doorkeeper:migration&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will generate a migration file for Doorkeeper in &lt;strong&gt;db/migrate/‚Ä¶_create_doorkeeper_tables.rb&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;We will customize the migration file as we won‚Äôt need all the tables / attributes generated.&lt;/p&gt;

&lt;p&gt;Open the &lt;strong&gt;‚Ä¶._create_doorkeeper_tables.rb&lt;/strong&gt; migration file, then edit to make it look like below :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# frozen_string_literal: true&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CreateDoorkeeperTables&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_applications&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;    &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:uid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Remove `null: false` if you are planning to use grant flows&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# that doesn't require redirect URI to be used during authorization&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# like Client Credentials flow or Resource Owner Password.&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text&lt;/span&gt;    &lt;span class=&quot;ss&quot;&gt;:redirect_uri&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:scopes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:confidential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;timestamps&lt;/span&gt;             &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_applications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:uid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_access_tokens&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;references&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:resource_owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;index: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# Remove `null: false` if you are planning to use Password&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Credentials Grant flow that doesn't require an application.&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;references&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;    &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:refresh_token&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;integer&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;:expires_in&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:revoked_at&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:scopes&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;# The authorization server MAY issue a new refresh token, in which case&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# *the client MUST discard the old refresh token* and replace it with the&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# new refresh token. The authorization server MAY revoke the old&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# refresh token after issuing a new refresh token to the client.&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# @see https://tools.ietf.org/html/rfc6749#section-6&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Doorkeeper implementation: if there is a `previous_refresh_token` column,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# refresh tokens will be revoked after a related access token is used.&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# If there is no `previous_refresh_token` column, previous tokens are&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# revoked as soon as a new access token is created.&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Comment out this line if you want refresh tokens to be instantly&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# revoked after use.&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;string&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;:previous_refresh_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;null: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_access_tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:oauth_access_tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:refresh_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;add_foreign_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:oauth_access_tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:oauth_applications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;column: :application_id&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The modification I did on the migration file :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Remove &lt;strong&gt;null: false&lt;/strong&gt; on the &lt;strong&gt;redirect_uri&lt;/strong&gt; for oauth_applications table. As we are using the OAuth for API authentication, we won‚Äôt need to redirect the user to a callback page (like after you sign in with Google / Apple / Facebook on an app, they will redirect to  a page usually).&lt;/li&gt;
  &lt;li&gt;Remove the creation of table &lt;strong&gt;oauth_access_grants&lt;/strong&gt; , along with its related index and foreign key.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The OAuth application table is used to keep track of the application we created to use for authentication. For example, we can create three application, one for Android app client, one for iOS app client and one for React frontend, this way we can know which clients the users are using. If you only need one client (eg: web frontend), it is fine too.&lt;/p&gt;

&lt;p&gt;Here‚Äôs an example of Github OAuth applications :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/example_oauth.png&quot; alt=&quot;github oauth&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake db:migrate&lt;/code&gt; to add these tables into database.&lt;/p&gt;

&lt;p&gt;Next, we will customize the Doorkeeper configuration.&lt;/p&gt;

&lt;h2 id=&quot;customize-doorkeeper-configuration&quot;&gt;Customize Doorkeeper configuration&lt;/h2&gt;

&lt;p&gt;Open &lt;strong&gt;config/initializers/doorkeeper.rb&lt;/strong&gt; , and edit the following.&lt;/p&gt;

&lt;p&gt;Comment out or remove the block for &lt;strong&gt;resource_owner_authenticator&lt;/strong&gt;  at the top of the file.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#config/initializers/doorkeeper.rb&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Change the ORM that doorkeeper will use (requires ORM extensions installed).&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Check the list of supported ORMs here: https://github.com/doorkeeper-gem/doorkeeper#orms&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;orm&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# This block will be called to check whether the resource owner is authenticated or not.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# resource_owner_authenticator do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# raise &quot;Please configure doorkeeper resource_owner_authenticator block located in #{__FILE__}&quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Put your resource owner authentication logic here.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Example implementation:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#   User.find_by(id: session[:user_id]) || redirect_to(new_user_session_url)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;strong&gt;resouce_owner_authenticator&lt;/strong&gt; block is used to get the authenticated user information or redirect the user to login page from OAuth, for example like this Twitter OAuth page :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/example_oauth_redirect.png&quot; alt=&quot;twitter oauth example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we are going to exchange OAuth token by using user login credentials (email + password) on the API, we don‚Äôt need to implement this block, so we can comment it out.&lt;/p&gt;

&lt;p&gt;To tell Doorkeeper we are using user credentials to login, we need to implement the &lt;strong&gt;resource_owner_from_credentials&lt;/strong&gt; block like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#config/initializers/doorkeeper.rb&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Change the ORM that doorkeeper will use (requires ORM extensions installed).&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Check the list of supported ORMs here: https://github.com/doorkeeper-gem/doorkeeper#orms&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;orm&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# This block will be called to check whether the resource owner is authenticated or not.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# resource_owner_authenticator do&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# raise &quot;Please configure doorkeeper resource_owner_authenticator block located in #{__FILE__}&quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Put your resource owner authentication logic here.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Example implementation:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#   User.find_by(id: session[:user_id]) || redirect_to(new_user_session_url)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;resource_owner_from_credentials&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will allow us to send the user email and password to the /oauth/token endpoint to authenticate user.&lt;/p&gt;

&lt;p&gt;Then we need to implement the &lt;strong&gt;authenticate&lt;/strong&gt; class method on the &lt;strong&gt;app/models/user.rb&lt;/strong&gt; model file.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/user.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Include default devise modules. Others available are:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# :confirmable, :lockable, :timeoutable, :trackable and :omniauthable&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;devise&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:database_authenticatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:registerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;ss&quot;&gt;:recoverable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:rememberable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:validatable&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;format: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MailTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EMAIL_REGEXP&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# the authenticate method from devise documentation&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_for_authentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;valid_password?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can read more on the authenticate method on &lt;a href=&quot;https://github.com/heartcombo/devise/wiki/How-To:-Find-a-user-when-you-have-their-credentials&quot;&gt;Devise‚Äôs github Wiki page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, enable password grant flow in &lt;strong&gt;config/initializers/doorkeeper.rb&lt;/strong&gt; , this will allow us to send the user email and password to the /oauth/token endpoint and get OAuth token in return.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;orm&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;resource_owner_from_credentials&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# enable password grant&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;grant_flows&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[password]&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# ....&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can search for ‚Äúgrant_flows‚Äù in this file, and uncomment and edit it.&lt;/p&gt;

&lt;p&gt;Next, insert &lt;strong&gt;allow_blank_redirect_uri true&lt;/strong&gt; into the configuration, so that we can create OAuth application with blank redirect URL (user won‚Äôt get redirected after login, as we are using API).&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;orm&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;resource_owner_from_credentials&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;grant_flows&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[password]&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;allow_blank_redirect_uri&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ....&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As the OAuth application we create is for our own use (not third part), we can skip authorization.&lt;/p&gt;

&lt;p&gt;Insert &lt;strong&gt;skip_authorization&lt;/strong&gt; into the configuration like this :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;orm&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;resource_owner_from_credentials&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;grant_flows&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[password]&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;allow_blank_redirect_uri&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;skip_authorization&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ....&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The authorization we skipped is something like this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/oauth_authorization.png&quot; alt=&quot;authorization&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we skipped authorization, user won‚Äôt need to click the ‚Äúauthorize‚Äù button to interact with our API.&lt;/p&gt;

&lt;p&gt;Optionally, if you want to enable refresh token mechanism in OAuth, you can insert the &lt;strong&gt;use_refresh_token&lt;/strong&gt;  into the configuration. This would allow the client app to request a new access token using the refresh token when the current access token is expired.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;orm&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active_record&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;resource_owner_from_credentials&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_routes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;grant_flows&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[password]&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;allow_blank_redirect_uri&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;skip_authorization&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;use_refresh_token&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this, we have finished configuring Doorkeeper authentication for our API.&lt;/p&gt;

&lt;p&gt;Next, we will add the doorkeeper route in &lt;strong&gt;routes.rb&lt;/strong&gt; , this will add the /oauth/* routes.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;use_doorkeeper&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;skip_controllers&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:authorizations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:applications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:authorized_applications&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;# ...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we don‚Äôt need the app authorization, we can skip the authorizations and authorized_applications controller. We can also skip the applications controller, as users won‚Äôt be able to create or delete OAuth application.&lt;/p&gt;

&lt;p&gt;Next, we need to create our own OAuth application manually in the console so we can use it for authentication.&lt;/p&gt;

&lt;h2 id=&quot;create-your-own-oauth-application&quot;&gt;Create your own OAuth application&lt;/h2&gt;

&lt;p&gt;Open up rails console, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails console&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then create an OAuth application using this command :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Android client&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;redirect_uri: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scopes: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can change the name to any name you want, and leave redirect_uri and scopes blank.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/create_client.png&quot; alt=&quot;create_client&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will create a record in the &lt;strong&gt;oauth_applications&lt;/strong&gt; table. Keep note that the &lt;strong&gt;uid&lt;/strong&gt; attribute and &lt;strong&gt;secret&lt;/strong&gt; attribute, these are used for authentication on API later, uid = client_id and secret = client_secret.&lt;/p&gt;

&lt;p&gt;For production use, you can create a database seed for initial creation of the OAuth applications in &lt;strong&gt;db/seeds.rb&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# db/seeds.rb&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# if there is no OAuth application created, create them&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zero?&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;iOS client&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;redirect_uri: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scopes: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Android client&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;redirect_uri: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scopes: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;React&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;redirect_uri: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;scopes: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rake db:seed&lt;/code&gt; to create these applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Doorkeeper::Application&lt;/strong&gt; is just a namespaced model name for the &lt;strong&gt;oauth_applications&lt;/strong&gt; table, you can perform ActiveRecord query as usual :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# client_id of the application&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Android client&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uid&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# client_secret of the application&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Android client&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;secret&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we have Doorkeeper application set up, we can try to login user in the next section.&lt;/p&gt;

&lt;h2 id=&quot;how-to-login--logout-and-refresh-token-using-api&quot;&gt;How to login , logout and refresh token using API&lt;/h2&gt;

&lt;p&gt;We will need a user created to be able to login / logout them using the OAuth endpoints, you can register a dummy user on the devise web UI if you haven‚Äôt already (eg: localhost:3000/users/sign_up) or create one via the rails console.&lt;/p&gt;

&lt;p&gt;The HTTP requests below can either send attributes using JSON format or URL-Encoded form.&lt;/p&gt;

&lt;h3 id=&quot;login&quot;&gt;Login&lt;/h3&gt;

&lt;p&gt;To login the user on the OAuth endpoint, we need to send a HTTP POST request to &lt;strong&gt;/oauth/token&lt;/strong&gt;, with &lt;strong&gt;grant_type&lt;/strong&gt;, &lt;strong&gt;email&lt;/strong&gt;, &lt;strong&gt;password&lt;/strong&gt;, &lt;strong&gt;client_id&lt;/strong&gt; and &lt;strong&gt;client_secret&lt;/strong&gt; attributes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/login_oauth.png&quot; alt=&quot;login oauth&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As we are using password in exchange for OAuth access and refresh token, the &lt;strong&gt;grant_type&lt;/strong&gt; value should be &lt;strong&gt;password&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;email&lt;/strong&gt; and &lt;strong&gt;password&lt;/strong&gt; is the login credential of the user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;client_id&lt;/strong&gt; is the &lt;strong&gt;uid&lt;/strong&gt; of the Doorkeeper::Application (OAuth application) we created earlier, with this we can identify which client the user has used to log in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;client_secret&lt;/strong&gt; is the &lt;strong&gt;secret&lt;/strong&gt; of the Doorkeeper::Application (OAuth application) we created earlier.&lt;/p&gt;

&lt;p&gt;On successful login attempt, the API will return &lt;strong&gt;access_token&lt;/strong&gt;, &lt;strong&gt;refresh_token&lt;/strong&gt;, &lt;strong&gt;token_type&lt;/strong&gt;, &lt;strong&gt;expires_in&lt;/strong&gt; and &lt;strong&gt;created_at&lt;/strong&gt; attributes.&lt;/p&gt;

&lt;p&gt;We can then use &lt;strong&gt;access_token&lt;/strong&gt; to call protected API that requires user authentication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refresh_token&lt;/strong&gt; can be used to generate and retrieve a new access token after the current access_token has expired.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;expires_in&lt;/strong&gt; is the time until expiry for the access_token, starting from the UNIX timestamp of &lt;strong&gt;created_at&lt;/strong&gt;, the default value is 7200 (seconds), which is around 2 hours.&lt;/p&gt;

&lt;h3 id=&quot;logout&quot;&gt;Logout&lt;/h3&gt;

&lt;p&gt;To log out a user, we can revoke the access token, so that the same access token cannot be used anymore.&lt;/p&gt;

&lt;p&gt;To revoke an access token,  we need to send a HTTP POST request to &lt;strong&gt;/oauth/revoke&lt;/strong&gt;, with &lt;strong&gt;token&lt;/strong&gt;, &lt;strong&gt;client_id&lt;/strong&gt; and &lt;strong&gt;client_secret&lt;/strong&gt; attributes.&lt;/p&gt;

&lt;p&gt;Other than these attributes, we also need to set Authorization header for the HTTP request to use Basic Auth, using &lt;strong&gt;client_id&lt;/strong&gt; value for the &lt;strong&gt;username&lt;/strong&gt; and &lt;strong&gt;client_password&lt;/strong&gt; value for the &lt;strong&gt;password&lt;/strong&gt;. (According to &lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper/issues/1412#issuecomment-631938006&quot;&gt;this reply&lt;/a&gt; in Doorkeeper gem repository)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/logout_auth.png&quot; alt=&quot;logout auth&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/logout_body.png&quot; alt=&quot;logout body&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After revoking a token, the token record will have a &lt;strong&gt;revoked_at&lt;/strong&gt; column filled :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/revoked_token.png&quot; alt=&quot;revoked_at&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;refresh-token&quot;&gt;Refresh token&lt;/h3&gt;

&lt;p&gt;To retrieve a new access token when the current access token is (almost) expired, we can send a HTTP POST  to &lt;strong&gt;/oauth/token&lt;/strong&gt; , it is the same endpoint as login, but this time we are using ‚Äúrefresh_token‚Äù as the value for &lt;strong&gt;grant_type&lt;/strong&gt;, and is sending the value of refresh token instead of login credentials.&lt;/p&gt;

&lt;p&gt;To refresh a token, we need to send &lt;strong&gt;grant_type&lt;/strong&gt;, &lt;strong&gt;refresh_token&lt;/strong&gt;, &lt;strong&gt;client_id&lt;/strong&gt; and &lt;strong&gt;client_secret&lt;/strong&gt; attributes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;grant_type&lt;/strong&gt; needs to be equal to ‚Äú&lt;strong&gt;refresh_token&lt;/strong&gt;‚Äù here as we are using refresh token to authenticate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;refresh_token&lt;/strong&gt; should be the refresh token value you have retrieved during login.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;client_id&lt;/strong&gt; is the &lt;strong&gt;uid&lt;/strong&gt; of the Doorkeeper::Application (OAuth application) we created earlier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;client_secret&lt;/strong&gt; is the &lt;strong&gt;secret&lt;/strong&gt; of the Doorkeeper::Application (OAuth application) we created earlier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/refresh_token.png&quot; alt=&quot;refresh_token&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On successful refresh attempt, the API return a new access_token and refresh_token, which we can use to call protected API that requires user authentication.&lt;/p&gt;

&lt;h2 id=&quot;create-api-controllers-that-require-authentication&quot;&gt;Create API controllers that require authentication&lt;/h2&gt;

&lt;p&gt;Now that we have user authentication set up, we can now create API controllers that require authentication.&lt;/p&gt;

&lt;p&gt;For this, I recommend creating a base API application controller, then subclass this controller for controllers that require authentication.&lt;/p&gt;

&lt;p&gt;Create a base API application controller (&lt;strong&gt;application_controller.rb&lt;/strong&gt;) and place it in &lt;strong&gt;app/controllers/api/application_controller.rb&lt;/strong&gt; .&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/api/application_controller.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Api&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;API&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# equivalent of authenticate_user! on devise, but this one will check the oauth token&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:doorkeeper_authorize!&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# helper method to access the current user from the token&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doorkeeper_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:resource_owner_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The API application subclasses from &lt;a href=&quot;https://api.rubyonrails.org/classes/ActionController/API.html&quot;&gt;ActionController::API&lt;/a&gt;, which is a lightweight version of ActionController::Base, and does not contain HTML layout and templating functionality (we dont need it for API anyway), and it doesn‚Äôt have CORS protection.&lt;/p&gt;

&lt;p&gt;We add the &lt;strong&gt;doorkeeper_authorize!&lt;/strong&gt; method in the before_action callback, as this will check if the user is authenticated with a valid token before calling methods in the controller, this is similar to the authenticate_user! method on devise.&lt;/p&gt;

&lt;p&gt;We also add a &lt;strong&gt;current_user&lt;/strong&gt; method to get the current user object, then we can attach the current user on some model‚Äôs CRUD action.&lt;/p&gt;

&lt;p&gt;As example of a protected API controller, let‚Äôs create a bookmarks controller to retrieve all bookmarks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app/controllers/api/bookmarks_controller.rb&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/api/bookmarks_controller.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Api&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookmarksController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@bookmarks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Bookmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;json: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;bookmarks: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@bookmarks&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The bookmarks controller will inherit from the base API application controller we created earlier, and it will return all the bookmarks in JSON format.&lt;/p&gt;

&lt;p&gt;Don‚Äôt forget to add the route for it in &lt;strong&gt;routes.rb&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ....&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:api&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:bookmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%i[index]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then we can retrieve the bookmarks by sending a HTTP GET request to &lt;strong&gt;/api/bookmarks&lt;/strong&gt;, with the user‚Äôs access token in the Authorization Header (Authorization: Bearer [User Access Token])&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/get_bookmarks_authorized.png&quot; alt=&quot;get boomarks api authorization&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To access protected API controllers, we will need to include the Authorization HTTP header, with the values of ‚ÄúBearer [User Access Token]‚Äù.&lt;/p&gt;

&lt;h2 id=&quot;create-an-endpoint-for-user-registration&quot;&gt;Create an endpoint for user registration&lt;/h2&gt;

&lt;p&gt;It would be weird if we only allow user registration through website, we would also need to add an API endpoint for user to register an account .&lt;/p&gt;

&lt;p&gt;For this, let‚Äôs create a users controller and place it in &lt;strong&gt;app/controllers/api/users_controller.rb&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;create&lt;/strong&gt; action will create an user account from the supplied email and password.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Api&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UsersController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;skip_before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:doorkeeper_authorize!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%i[create]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;password: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;client_app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;uid: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;json: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;error: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Invalid client ID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;403&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client_app&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# create access token for the user, so the user won't need to login again after registration&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AccessToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;resource_owner_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;application_id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;refresh_token: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generate_refresh_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;expires_in: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;access_token_expires_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;scopes: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;# return json containing access token and refresh token&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# so that user won't need to call login API right after registration&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;json: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;user: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;access_token: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;token_type: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bearer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;expires_in: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;expires_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;refresh_token: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;refresh_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;ss&quot;&gt;created_at: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;json: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;error: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;full_messages&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;status: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;422&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user_params&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_refresh_token&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# generate a random token string and return it, &lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# unless there is already another token with the same string&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AccessToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exists?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;refresh_token: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As the user doesn‚Äôt have an account at this point, we want to exempt this action from requiring authentication information, so we added the line &lt;strong&gt;skip_before_action :doorkeeper_authorize!, only: %i[create]&lt;/strong&gt; at the top. This will make the &lt;strong&gt;create&lt;/strong&gt; method to skip running the &lt;strong&gt;doorkeeper_authorize!&lt;/strong&gt; before_action method we defined in the base API controller, and the client app can call the user account creation API endpoint without authentication information.&lt;/p&gt;

&lt;p&gt;We then create an AccessToken on successful user registration using &lt;strong&gt;Doorkeeper::AccessToken.create()&lt;/strong&gt; and return it in the HTTP response, so the user won‚Äôt need to login right after registration.&lt;/p&gt;

&lt;p&gt;Remember to add a route for ths user registration action in &lt;strong&gt;routes.rb&lt;/strong&gt; :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ....&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:api&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%i[create]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:bookmarks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%i[index]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then we can call create user API by sending a HTTP POST request containing the user‚Äôs &lt;strong&gt;email&lt;/strong&gt;, &lt;strong&gt;password&lt;/strong&gt; and &lt;strong&gt;client_id&lt;/strong&gt; to &lt;strong&gt;/api/users&lt;/strong&gt; like this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://rubyyagi.s3.amazonaws.com/16-rails-api-authentication-devise-doorkeeper/oauth_registration.png&quot; alt=&quot;create user API&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;client_id&lt;/strong&gt; is used to identify which client app the user is using for registration.&lt;/p&gt;

&lt;h1 id=&quot;revoke-user-token-manually&quot;&gt;Revoke user token manually&lt;/h1&gt;

&lt;p&gt;Say if you suspect a user‚Äôs access token has been misused or abused, you can revoke them manually using this function :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Doorkeeper::AccessToken.revoke_all_for(application_id, resource_owner)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;application_id is the &lt;strong&gt;id&lt;/strong&gt; of the Doorkeeper::Application (OAuth application) we want to revoke the user from.&lt;/p&gt;

&lt;p&gt;resource_owner is the &lt;strong&gt;user object&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Example usage:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;client_app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;name: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Android client'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Doorkeeper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AccessToken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;revoke_all_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/heartcombo/devise/wiki/How-To:-Find-a-user-when-you-have-their-credentials&quot;&gt;Devise wiki - How To: Find a user when you have their credentials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/doorkeeper-gem/doorkeeper/wiki/Using-Resource-Owner-Password-Credentials-flow&quot;&gt;Doorkeeper wiki - Using Resource Owner Password Credentials flow&lt;/a&gt;&lt;/p&gt;

&lt;script async=&quot;&quot; data-uid=&quot;d862c2871b&quot; src=&quot;https://rubyyagi.ck.page/d862c2871b/index.js&quot;&gt;&lt;/script&gt;</content><author><name>Axel Kee</name></author><summary type="html">Most of the time when we implement API endpoints on our Rails app, we want to limit access of these API to authorized users only, there‚Äôs a few strategy for authenticating user through API, ranging from a simple token authentication to a fullblown OAuth provider with JWT.</summary></entry></feed>