{
  "title":"dry-schema and dry-validation 1.5.0 released",
  "date":"2022-11-17T12:34:11.000000Z",
  "author":"solnic",
  "id":"http://dry-rb.org/news/2020/03/11/dry-schema-and-dry-validation-1-5-0-released/",
  "link":"http://dry-rb.org/news/2020/03/11/dry-schema-and-dry-validation-1-5-0-released/",
  "content":"<p>We're happy to announce the release of dry-schema 1.5.0! It comes with plenty of new features, fixes, and general improvements. Here are some of the highlights.</p>\n<h2 id=\"support-for-composing-schemas\" class=\"hd\"><a name=\"support-for-composing-schemas\" class=\"anchor\" href=\"#support-for-composing-schemas\">            \n</a>Support for composing schemas</h2>\n<p>You can now compose schemas using logical operators. The only limitation is that <code>xor</code> is not supported yet as it wasn't clear how error messages are supposed to work. This feature is experimental until we finalize it in version 2.0.0.</p>\n\n<p>In the meantime, please try it out! Here's a simple example:</p>\n<div class=\"highlight\"><pre class=\"syntax ruby\"><code><span class=\"no\">RoleSchema</span> <span class=\"o\">=</span> <span class=\"no\">Dry</span><span class=\"o\">::</span><span class=\"no\">Schema</span><span class=\"o\">.</span><span class=\"no\">JSON</span> <span class=\"k\">do</span>\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:id</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"no\">ExpirableSchema</span> <span class=\"o\">=</span> <span class=\"no\">Dry</span><span class=\"o\">::</span><span class=\"no\">Schema</span><span class=\"o\">.</span><span class=\"no\">JSON</span> <span class=\"k\">do</span>\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:expires_on</span><span class=\"p\">).</span><span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"ss\">:date</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"no\">UserSchema</span> <span class=\"o\">=</span> <span class=\"no\">Dry</span><span class=\"o\">::</span><span class=\"no\">Schema</span><span class=\"o\">.</span><span class=\"no\">JSON</span> <span class=\"k\">do</span>\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:name</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:role</span><span class=\"p\">).</span><span class=\"nf\">hash</span><span class=\"p\">(</span><span class=\"no\">RoleSchema</span> <span class=\"o\">&amp;</span> <span class=\"no\">ExpirableSchema</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n\n<span class=\"no\">UserSchema</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"ss\">name: </span><span class=\"s2\">&quot;Jane&quot;</span><span class=\"p\">,</span> <span class=\"ss\">role: </span><span class=\"p\">{</span> <span class=\"ss\">id: </span><span class=\"s2\">&quot;admin&quot;</span><span class=\"p\">,</span> <span class=\"ss\">expires_on: </span><span class=\"s2\">&quot;2020-05-01&quot;</span> <span class=\"p\">}).</span><span class=\"nf\">errors</span><span class=\"p\">.</span><span class=\"nf\">to_h</span>\n<span class=\"c1\"># {}</span>\n\n<span class=\"no\">UserSchema</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"ss\">name: </span><span class=\"s2\">&quot;Jane&quot;</span><span class=\"p\">,</span> <span class=\"ss\">role: </span><span class=\"p\">{</span> <span class=\"ss\">id: </span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"ss\">expires_on: </span><span class=\"s2\">&quot;2020-05-01&quot;</span> <span class=\"p\">}).</span><span class=\"nf\">errors</span><span class=\"p\">.</span><span class=\"nf\">to_h</span>\n<span class=\"c1\"># {role: {id: [&quot;must be filled&quot;]}}</span>\n\n<span class=\"no\">UserSchema</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"ss\">name: </span><span class=\"s2\">&quot;Jane&quot;</span><span class=\"p\">,</span> <span class=\"ss\">role: </span><span class=\"p\">{</span> <span class=\"ss\">id: </span><span class=\"s2\">&quot;admin&quot;</span><span class=\"p\">,</span> <span class=\"ss\">expires_on: </span><span class=\"s2\">&quot;oops&quot;</span> <span class=\"p\">}).</span><span class=\"nf\">errors</span><span class=\"p\">.</span><span class=\"nf\">to_h</span>\n<span class=\"c1\"># {role: {expires_on: [&quot;must be a date&quot;]}}</span>\n</code></pre></div>\n<p><a href=\"/gems/dry-schema/1.5/advanced/composing-schemas/\">Refer to the documentation</a> for more information.</p>\n<h2 id=\"errors-about-unexpected-keys\" class=\"hd\"><a name=\"errors-about-unexpected-keys\" class=\"anchor\" href=\"#errors-about-unexpected-keys\">            \n</a>Errors about unexpected keys</h2>\n<p>Back in the dry-validation 0.x era, many people asked about returning errors for unexpected keys. Four years later, this feature is finally here! You can enable it with a simple config flag:</p>\n<div class=\"highlight\"><pre class=\"syntax ruby\"><code><span class=\"no\">UserSchema</span> <span class=\"o\">=</span> <span class=\"no\">Dry</span><span class=\"o\">::</span><span class=\"no\">Schema</span><span class=\"o\">.</span><span class=\"no\">Params</span> <span class=\"k\">do</span>\n  <span class=\"c1\"># Enable key validation!</span>\n  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">validate_keys</span> <span class=\"o\">=</span> <span class=\"kp\">true</span>\n\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:name</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:address</span><span class=\"p\">).</span><span class=\"nf\">hash</span> <span class=\"k\">do</span>\n    <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:city</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n    <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:zipcode</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:roles</span><span class=\"p\">).</span><span class=\"nf\">array</span><span class=\"p\">(</span><span class=\"ss\">:hash</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:name</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">input</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"ss\">foo: </span><span class=\"s1\">'unexpected'</span><span class=\"p\">,</span>\n  <span class=\"ss\">name: </span><span class=\"s1\">'Jane'</span><span class=\"p\">,</span>\n  <span class=\"ss\">address: </span><span class=\"p\">{</span> <span class=\"ss\">bar: </span><span class=\"s1\">'unexpected'</span><span class=\"p\">,</span> <span class=\"ss\">city: </span><span class=\"s1\">'NYC'</span><span class=\"p\">,</span> <span class=\"ss\">zipcode: </span><span class=\"s1\">'1234'</span> <span class=\"p\">},</span>\n  <span class=\"ss\">roles: </span><span class=\"p\">[{</span> <span class=\"ss\">name: </span><span class=\"s1\">'admin'</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"ss\">name: </span><span class=\"s1\">'editor'</span><span class=\"p\">,</span> <span class=\"ss\">foo: </span><span class=\"s1\">'unexpected'</span> <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n\n<span class=\"no\">UserSchema</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"p\">).</span><span class=\"nf\">errors</span><span class=\"p\">.</span><span class=\"nf\">to_h</span>\n<span class=\"c1\"># {</span>\n<span class=\"c1\">#  :foo=&gt;[&quot;is not allowed&quot;],</span>\n<span class=\"c1\">#  :address=&gt;{:bar=&gt;[&quot;is not allowed&quot;]},</span>\n<span class=\"c1\">#  :roles=&gt;{1=&gt;{:foo=&gt;[&quot;is not allowed&quot;]}}</span>\n<span class=\"c1\"># }</span>\n</code></pre></div>\n<p>Notice that it works even for arrays with hashes as elements, which is <strong>really nice</strong>!</p>\n<h2 id=\"introspection-extension\" class=\"hd\"><a name=\"introspection-extension\" class=\"anchor\" href=\"#introspection-extension\">            \n</a>Introspection extension</h2>\n<p>Another feature request that goes way back is easily seeing which keys are required and which are optional. This is now provided by a new <code>:info</code> extension, which shows both the keys and their associated types.</p>\n\n<p>To enable it, you need to load the extension:</p>\n<div class=\"highlight\"><pre class=\"syntax ruby\"><code><span class=\"no\">Dry</span><span class=\"o\">::</span><span class=\"no\">Schema</span><span class=\"p\">.</span><span class=\"nf\">load_extensions</span><span class=\"p\">(</span><span class=\"ss\">:info</span><span class=\"p\">)</span>\n\n<span class=\"no\">UserSchema</span> <span class=\"o\">=</span> <span class=\"no\">Dry</span><span class=\"o\">::</span><span class=\"no\">Schema</span><span class=\"o\">.</span><span class=\"no\">JSON</span> <span class=\"k\">do</span>\n  <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:email</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n  <span class=\"n\">optional</span><span class=\"p\">(</span><span class=\"ss\">:age</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:integer</span><span class=\"p\">)</span>\n  <span class=\"n\">optional</span><span class=\"p\">(</span><span class=\"ss\">:address</span><span class=\"p\">).</span><span class=\"nf\">hash</span> <span class=\"k\">do</span>\n    <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:street</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n    <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:zipcode</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n    <span class=\"n\">required</span><span class=\"p\">(</span><span class=\"ss\">:city</span><span class=\"p\">).</span><span class=\"nf\">filled</span><span class=\"p\">(</span><span class=\"ss\">:string</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"no\">UserSchema</span><span class=\"p\">.</span><span class=\"nf\">info</span>\n<span class=\"c1\"># {</span>\n<span class=\"c1\">#   :keys=&gt; {</span>\n<span class=\"c1\">#     :email=&gt;{</span>\n<span class=\"c1\">#       :required=&gt;true,</span>\n<span class=\"c1\">#       :type=&gt;&quot;string&quot;</span>\n<span class=\"c1\">#     },</span>\n<span class=\"c1\">#     :age=&gt;{</span>\n<span class=\"c1\">#       :required=&gt;false,</span>\n<span class=\"c1\">#       :type=&gt;&quot;integer&quot;</span>\n<span class=\"c1\">#      },</span>\n<span class=\"c1\">#     :address=&gt;{</span>\n<span class=\"c1\">#       :type=&gt;&quot;hash&quot;,</span>\n<span class=\"c1\">#       :required=&gt;false,</span>\n<span class=\"c1\">#       :keys=&gt;{</span>\n<span class=\"c1\">#         :street=&gt;{</span>\n<span class=\"c1\">#           :required=&gt;true,</span>\n<span class=\"c1\">#           :type=&gt;&quot;string&quot;</span>\n<span class=\"c1\">#         },</span>\n<span class=\"c1\">#         :zipcode=&gt;{</span>\n<span class=\"c1\">#           :required=&gt;true,</span>\n<span class=\"c1\">#           :type=&gt;&quot;string&quot;</span>\n<span class=\"c1\">#         },</span>\n<span class=\"c1\">#         :city=&gt;{</span>\n<span class=\"c1\">#           :required=&gt;true,</span>\n<span class=\"c1\">#           :type=&gt;&quot;string&quot;</span>\n<span class=\"c1\">#         }</span>\n<span class=\"c1\">#       }</span>\n<span class=\"c1\">#     }</span>\n<span class=\"c1\">#   }</span>\n<span class=\"c1\"># }</span>\n</code></pre></div><h2 id=\"summary\" class=\"hd\"><a name=\"summary\" class=\"anchor\" href=\"#summary\">            \n</a>Summary</h2>\n<p>There's way more in the changelog so please <a href=\"https://github.com/dry-rb/dry-schema/releases/tag/v1.5.0\">check it out</a> and if you're having any issues when upgrading, please do <a href=\"https://github.com/dry-rb/dry-schema/issues/new?assignees=&amp;labels=bug&amp;template=---bug-report.md&amp;title=\">let us know</a>.</p>\n\n<p>Big thanks go to <a href=\"https://github.com/robhanlon22\">Rob Hanlon</a> and the rest of the contributors who helped with this release!</p>\n\n<p>Last but not least: dry-validation 1.5.0 was released too, which upgrades its own dependency on dry-schema to 1.5.0 and adds a couple of new features.</p>\n\n<p>Please upgrade and enjoy using dry-schema and dry-validation!</p>\n"
}